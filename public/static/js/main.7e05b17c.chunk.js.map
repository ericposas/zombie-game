{"version":3,"sources":["images/pistol-icon.png","images/smg-icon.png","images/shotgun-icon.png","images/GroundTexture_Optimized.png","images/wallTile.png","images/gradient-layer-mask.png","images/explosiveBarrier.png","images/head-sprite.png","sounds/bodyBulletImpact.wav","images/GameCover.png","sounds/9mm1.wav","sounds/9mm2.mp3","sounds/explosion1.wav","sounds/explosion_distant.wav","sounds/pistolReload.wav","sounds/grenadeClink.wav","sounds/throw.wav","sounds/coinCollect.wav","sounds/collectAmmo.wav","sounds/collectItem.wav","sounds/bloodSquash.flac","sounds/bloodSquish.wav","sounds/bloodSmack.wav","sounds/deathRipSound.wav","sounds/jumpLanding.wav","sounds/dirtImpact.wav","sounds/zombieHurt.wav","sounds/zombieDeath.wav","sounds/pain1.wav","sounds/pain2.wav","sounds/playerDeath.wav","sounds/buttonAdd.wav","sounds/buttonSubtract.wav","sounds/buttonClick.wav","sounds/buttonHover.wav","sounds/placeObject.flac","sounds/cancelSound.wav","sounds/moneySound.wav","sounds/purchase.wav","sounds/shellImpact.wav","sounds/health.wav","sounds/zombieGrowl.wav","sounds/smgFire.wav","sounds/magDrop.wav","sounds/shotShell.wav","sounds/shotgunBlast.wav","sounds/achievement1.wav","sounds/achievement2.mp3","sounds/achievement3.wav","sounds/jumpSound.wav","sounds/grenadeCharge.wav","features/game/constants/GameStates.js","features/game/gameSlice.js","features/game/constants/weapons.js","app/store.js","features/game/utils/Utils.js","features/game/constants/mouseStates.js","features/game/collisionOptions.js","features/game/ReactComponents/MenuComponents.js","features/game/utils/updateScore.js","features/game/ReactComponents/ShopMenu.js","features/game/ReactComponents/AchievementsView.js","features/game/ReactComponents/PauseMenu.js","features/game/createMessages.js","features/game/items/Gib.js","features/game/player/PlayerRagdoll.js","features/game/FX/BloodSpurt.js","features/game/constants/DeathTypes.js","features/game/items/Rock.js","features/game/items/WoodPlank.js","features/game/FX/ExplosionSprite.js","features/game/FX/GrenadeExplosion.js","features/game/BuildItems/WallBarrier.js","features/game/BuildItems/Landmine.js","features/game/items/Grenade.js","features/game/BuildItems/Clustermine.js","features/game/constants/buildTypes.js","features/game/BuildItems/RemoteMine.js","features/game/player/fireWeapons.js","features/game/FX/MuzzleFlashFX.js","features/game/BuildItems/MachineGunTurret.js","features/game/FX/Sparks.js","features/game/ReactComponents/ShopQuery.js","features/game/player/Player.js","features/game/player/crosshairs.js","features/game/FX/GroundEffect.js","features/game/engineHandlers.js","features/game/WallTile.js","features/game/ui/WeaponsUI.js","features/game/items/HealthDrop.js","features/game/items/AmmoDrop.js","features/game/enemies/Zombie.js","features/game/items/CurrencyCredit.js","features/game/items/ItemGenerators.js","features/game/ui/ScreenUI.js","features/game/buildGame.js","features/game/createGameObjects.js","features/game/waves/waveManager.js","features/game/ReactComponents/RespawnMenu.js","features/game/ReactComponents/BuildMenu.js","features/game/ReactComponents/DoneBarrierPlacementBanner.js","features/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SubStates","GameStates","MAIN_MENU","GAMEPLAY","PAUSE","IN_GAME_MENU","GAMEOVER","SHOP_MENU","BUILD_MENU","SCORES_VIEW","AchievementDefs","THIS_IS_SPARTA","FROM_DOWNTOWN","FIRE_IN_THE_HOLE","WEAPONS_COLLECTOR","PISTOL_MODDER","SMG_MODDER","SHOTGUN_MODDER","MOD_AFICIONADO","THE_JUMP_SHOT","PILEDRIVE","TRAPHOUSE","BARRICADE","MINER","GUNNA","StatsDefs","gameSlice","createSlice","name","reducers","loadLocalStorageState","state","localStorage","getItem","JSON","parse","console","log","setTrapTypePlaced","action","trapTypesPlaced","payload","setBarrierTypePlaced","barrierTypesPlaced","setLastMagDropped","lastMagDropped","increaseStats","stats","increaseStatsByAmount","reducer","type","amount","prepare","setLastGrenadeKill","lastGrenadeKill","consecutiveGrenadeKills","resetConsecutiveGrenadeKills","setZombieLastKilled","zombieLastKilled","flipScoreToggle","scoreToggle","increaseScore","score","decreaseScore","updatePrevScore","prevScore","addPurchase","purchases","lastPurchase","item","setZombiesOnLeft","enemies","zombies","onLeft","setZombiesOnRight","onRight","setRightMouseDown","rightMouseDown","attachMod","modType","wepType","player","modTiers","rof","current","weapons","shotLimiter","modAmounts","powder","damage","min","Math","round","max","sight","bulletVariance","mag","ammoCapacity","setPlayerCompositeId","compositeId","setKeyPress","keys","push","removeKeyPress","splice","indexOf","parseInt","setLastDirection","variables","lastDirection","setCurrentDirection","currentDirection","setJumping","jumping","setGroundId","groundId","setMousePosition","mousePosition","setMouseStateX","mouseState","x","setMouseStateY","y","setMouseButtonState","btn","setWeaponEquipped","equipped","setLastShot","lastShot","dateTimeObject","weapon","setMouseRelativeToPlayerPosition","mouseRelativeToPlayerPosition","setCompositeBodyIds","composite","setStaticGunAngle","staticGunAngle","setStaticGunAngleState","staticGun","setTexturePath","textures","textureName","texturePath","gameStateTransition","lastGameSubState","from","gameSubState","to","lastGameState","gameState","incrementWave","waveNum","decrementWave","setWaveCountToDefeat","waveCountToDefeat","incrementWaveCountToDefeat","decrementWaveCountToDefeat","zombiesOnStage","setWeaponsList","list","setShowingMessage","showingMessage","unsetAllKeys","resetPlayerVariables","Object","assign","decrementTotalAmmo","totalAmmo","addToTotalAmmo","updateAmmoCapacity","newCapacityAmount","setPlayerPosition","position","addToTotalCredits","credits","subtractFromTotalCredits","upgradeRunSpeed","upgradeTiers","run","acceleration","upgradeAmounts","upgradeReloadSpeed","reload","reloadSpeed","upgradeJumpForce","jump","jumpForce","upgradeDefense","defense","upgradeMelee","melee","meleeDamage","updatePlayerHealth","health","decrementGrenadeCount","incrementGrenadeCount","updateZombieWalkSpeed","walkSpeedDefault","incrementer","walkSpeedIncrementer","walkSpeed","updateZombieAttackDmg","attackDmg","attackIncrementer","attackDmgDefault","decrementZombieAttackTimeLimit","zombieAttackLimiter","zombieAttackDefaultLimiter","zombieAttackLimiterDecrementer","showLaserSight","laser","incrementZombieHealth","startingHealth","defaultHealth","healthIncrementer","setSelectedBarrierToBuild","barriers","selectedBarrier","setSelectedTrapToBuild","traps","selectedTrap","setLastWaveCountDefeated","lastWaveCountDefeated","incrementZombiesOnStage","setZombiesOnStage","updateWeaponsList","setPlayerMagnetism","magnetism","range","magnetismSpeed","speed","perks","owned","setPlayerMagDamage","magDmg","setPlayerLastBullet","lastBullet","setPlayerCreditDropper","creditDropper","setPlayerAmmoDropper","ammoDropper","setPlayerHealthDropper","healthDropper","setPlayerQuickTurret","quickTurret","turret","cooldown","fireDistance","setPlayerBarrierPlus","barrierPlus","setPlayerFusterCluck","cluck","toggleFilterEffects","filterEffects","toggleZombieHealthDisplay","displayZombieHealth","setAchievementOwned","achievements","lastAchievementEarned","actions","persistedState","game","bulletsFired","store","configureStore","preloadedState","subscribe","setItem","stringify","getState","window","TweenLite","makePixiSprite","stringIdentifier","PIXI","getBodyWidth","body","bounds","getBodyHeight","getPlayerPartByType","gameObjects","headId","bodyId","armId","gunId","world","getKeyValue","Composite","get","getPlayerBody","GREATER_THAN_PLAYER_X_POS","playerCollisionOptions","group","category","mask","enemyCollisionOptions","itemCollisionOptions","Container","styled","div","props","height","width","Backing","opacity","bgcolor","MenuTitle","MenuButtonContainer","MenuButton","cancelTransition","MenuButtonSpacer","updateScore","dispatch","delayedCall","subtractScore","MenuComponents","Inline","IncrementDecrement","AmmoCount","CustomMenuButton","bordercolor","hovercolor","hoverborder","style","onClick","play","onMouseOver","children","BackButton","borderRadius","arrowOnly","fontSize","CornerBackButton","top","right","marginTop","Modal","label","labelClr","clickConfirmHandler","clickCancelHandler","boxShadow","color","space-top","display","marginRight","AmmoSubMenu","toDefaultSubMenu","toAmmoSubMenu","toStandardMenu","useDispatch","ammoCostPerBox","useSelector","ammoCap","React","useReducer","ammo","ammoInCart","dispatchAmmoInCart","useState","dollarCost","setDollarCost","fontWeight","cost","left","weaponsUI","updateGrenadeIcons","select","PlayerAttributesMenuButton","subMenuType","setSubMenuType","upgradeCosts","upgradeTypes","getAttrName","length","ModSubMenu","modCosts","getWepText","wepTxt","getModDescription","mod","selectedMod","setSelectedMod","selectedType","setSelectedType","marginLeft","modPurchaseName","updateWeaponMagazines","map","i","Fragment","key","ShopMenu","menuType","setMenuType","w","h","screenUI","toAmmoMenu","backToStandardMenu","openAmmoSubMenu","getHealthkitCostStyle","kitType","consumables","healthkit","useEffect","WEAPONS_EXPERT","scoreAmounts","achievement","unpause","acceptHealth","data-tip","data-for","id","buyWeapons","batch","backBtnFn","achievementsKeys","description","resetWave","forEach","z","kill","setKeyValue","dead","respawn","gotoMainMenu","NoTransitionButton","Stat","stat","padding","PauseMenu","pauseMenuStates","showDefault","setPauseMenuState","pauseMenuState","effectFilters","margintop","hidebg","hidetitle","playbtn","togglePause","AchievementsView","zombie","checkFilters","ammos","concat","credit","displayHealth","timesReloaded","grenadesThrown","zombiesKilled","timesKilled","createGenericMessage","txt","fillColor","durationMotion","durationLinger","fill","Power1","container","gameWidth","gameHeight","text","font","pivot","addChild","alpha","onStart","onComplete","delay","ease","easeIn","removeChild","createTextMessage","set","texts","playerBody","msg","playerPosition","initialY","destroy","idx","Gib","timeToDisappear","position_x","position_y","force_x","force_y","gibs","Bodies","circle","collisionFilter","World","add","partsSheet","gfc","Sprite","floor","random","getTexturePNG","this","Body","applyForce","float","animate","renderFn","rot","rotation","remove","GibGenerator","count","force","gibCnt","PlayerRagdollDecap","partLastDamaged","bUpper","a","l","hnd","f1","f2","spine","bodyUpper","rectangle","head","maskBody","armUpperL","armUpperR","handL","armLowerL","armLowerR","handR","legUpperL","legUpperR","legLowerL","legLowerR","footL","footR","bodyToHead","Constraint","create","bodyA","bodyB","pointA","pointB","bodyUpperToArmUpperL","bodyUpperToArmUpperR","armUpperLToArmLowerL","armUpperRToArmLowerR","handToLowerL","handToLowerR","bodyLowerToLegUpperL","bodyLowerToLegUpperR","legUpperLToLegLowerL","legUpperRToLegLowerR","footLToLowerLegL","footRToLowerLegR","spineGfx","spineLinks","_si","spineLink","spineConstraints","makeSpine","upper_spineLinks","upper_spineConstraints","spineToUpper","gibForce","int","parts_spritesheet","spriteParts","foot2","_id","leg2","hand2","arm2","upperArm2","foot1","upperLeg2","skull","leg1","upperLeg1","link","spineGfc","torsoUpper","hand1","arm1","upperArm1","part","updateAnchor","sprite","animateRagParts","renderFnc","linkPos","maskPos","skullPos","torsoUpperPos","arm1Pos","upperArm1Pos","hand1Pos","upperLeg1Pos","leg1Pos","foot1Pos","arm2Pos","upperArm2Pos","hand2Pos","upperLeg2Pos","leg2Pos","foot2Pos","PlayerRagdollHalved","bLower","bodyLower","entrailGfx","lower_spineLinks","lower_spineConstraints","spineToLower","entrailGfc","torsoLower","torsoLowerPos","PlayerRagdollMaim","b","bodyUpperToLegUpperL","bodyUpperToLegUpperR","torso","torsoPos","PlayerRagdoll","BloodSpurt","scale","bodyToDelete","chosenSpurt","bloodSpurt1_sheet","bloodSpurt1","AnimatedSprite","animations","bloodSpurt2_sheet","bloodSpurt2","bloodSpurt3_sheet","bloodSpurt3","spurts","autoChosen","animationSpeed","loop","FELL_OFF","Rock","rocks","explosionAssetsSheet","rockPieceAssets","rockSprite","rockScale","rockBody","restitution","WoodPlank","pos","woodPlanksSheet","woodPlanks","plankRange","getPlank","gfcContainer","torque","ExplosionSprite","renderBody","explosionTexture1","explosionTexture2","explosion1","explosion2","explosions","ex","explosion","adjustment","AdjustmentFilter","brightness","saturation","blur","BlurFilter","glow","GlowFilter","outerStrength","filters","onUpdate","GrenadeExplosion","showRocksBool","options","explosionSound1","Howl","src","distantExplosion","distantExplosionSound","explosionsArray","smokeAssets","positionalBody","isStatic","calcRenderedPosition","calculatedPosition","randInt","s","smokeSprite","idx1","randScale","xyval","r","showWood","showExplosionSprite","explosionSprites","seek","WallBarrier","dimensions","barriersSprites","buildObjects","woodenBarrier","stoneBarrier","metalBarrier","explosiveBarrier","types","WOOD","STONE","METAL","EXPLOSIVE","barrierSprite","objBody","inertia","Infinity","ground","constraint","strength","main","destroyed","getBody","healthDisplay","sprites","takeDamage","dmg","displayBarrierStrength","removeSelf","_x","_y","explosionHitbox","Landmine","landmines","landmineSheet","hitbox","Grenade","fuseTime","grenadeDistance","start","end","grenades","grenadeBody","grenadeGfc","beginFill","drawCircle","bevel","BevelFilter","shadowAlpha","lightAlpha","thickness","shadowColor","lightColor","noise","NoiseFilter","seed","motionBlur","MotionBlurFilter","velocity","radians","grenadeFuseTime","default","exploded","explode","showRocks","explosionSize","grenadeExplosionSize","distance","Clustermine","num","xforce","yforce","nade","barrierTypes","trapTypes","LANDMINE","CLUSTER_BOMB","REMOTE_MINE","TURRET","RemoteMine","mineNumber","remoteMines","remoteMinesArr","Text","calcPistolDamage","BulletImpact","surfaceType","tint","alphaDuration","rand","duration","renderPosition","PistolShell","changeLabelString","overrideOptions","shells","shellEjectionForce","shellRemovalTimeout","undefined","setAngularVelocity","shellWd","shellHt","drawRect","endFill","setTimeout","bind","PistolBullet","extraDamageBool","arm","bullets","bulletWd","overrideBody","setAngle","overrideAngle","Vector","angle","overrideForce","position1","position2","bulletForce","cos","sin","calcBulletAngle","addImpactEffect","bulletImpacts","impact","bulletLastPos","bulletTrail","linePoints","fireEquippedWeapon","playerBodyWd","playerBodyHt","Date","now","checkEmpty","reloading","fireBullet","fireWeaponAnimation","extraDmg","lastBulletByWepType","split","shaking","changeTextForEmptyShake","emptyMagShake","MuzzleFlashFX","muzzleFlashesSheet","muzzleFlash001","muzzleFlash002","muzzleFlash003","muzzleFlash004","muzzleFlash005","muzzleFlashes","visible","muzzleScale","blurFilter","getRandomBlur","quality","glowFilter","innerStrength","adjustmentFilter","flashes","flash","tier","randFlash","getRandomFlash","_muzzleScale","MachineGunTurret","scanAnim","shootAnim","onFrameChange","gotoAndStop","child","direction","scanning","muzzleFlashFX","setMuzzleRotations","degrees","fireEffect","_ejectY","shooting","Spark","spark1","spark2","sparks","spark","adjFilter","sparkContainer","stop","adjust","BottomBanner","Back","nextWave","wave","lvlToWin","alert","ShopQuery","className","EnhancedMuzzleSpark","muzzleSpark","gotoAndPlay","getFilters","updateFilters","Player","engine","constants","wd","ht","friction","armAttach","headAttach","bodies","life","lifebarOutline","lineStyle","lifebar","initialLifebarWidth","charReloadPistolSpritesheet","charReloadPistolSprite","charReloadSMGSpritesheet","charReloadSMGSprite","charReloadShotgunSpritesheet","charReloadShotgunSprite","shotgunShellLoadIterations","gotoToEndOfShotgunReload","reloadAnimsByType","reloadAnims","kernelSize","meleePistolSpritesheet","meleePistolAnim","meleeAttackInProgress","removeMeleeHitbox","currentFrame","meleeUMPSpritesheet","meleeUMPAnim","meleeShotgunSpritesheet","meleeShotgunAnim","meleeSprites","grenadeThrowInProgress","grenadeForce","chargingGrenade","chargeGrenade","chargeGrenadeSound","meter","grenadeChargeRate","grenadeUpperForceThreshold","renderGrenadeChargeMeter","createGrenade","calculatedGrenadeForce","calcGrenadeAngle","throwGrenade","attacks","grenadeThrowPistolAnim","grenadeThrowUMPAnim","grenadeThrowShotgunAnim","grenadeThrowPistolSpritesheet","grenadeThrown","grenadeThrowUMPSpritesheet","grenadeThrowShotgunSpritesheet","grenadeSprites","grenadeSpritesByEquipped","ejectedMags","reloadMagazineActionsByType","magDmgOwned","mx","pistolReloadSound","fade","_d","magBody","pistolMag","magObj","gfx","unshift","pop","smgMag","reloadShell","updateEjectedMagPositions","reloadWeapon","reloadAnimationFrames","charRightArmFirePistolSpritesheet","charRightArmFirePistolSprite","charRightArmFireSMGSpritesheet","charRightArmFireSMGSprite","charArmsFireShotgunSpritesheet","charRightArmFireShotgunSprite","headSprite","positionHeadSprite","renderObj","_mx","my","fn","armsSpritesByType","charLeftArmFirePistolSprite","charRunSpritesheet","charRunSprite","charIdleSpritesheet","charIdleSprite","charJumpSpritesheet","charJumpSprite","stopJumpAnimation","resumeJumpAnimation","jumpMotionBlur","playJumpAnimation","charLeftArmFirePistolSpritesheet","charLeftArmFireSMGSpritesheet","charLeftArmFireSMGSprite","charLeftArmFireShotgunSprite","armsSprites","_9mm1","_9mm2","pistolSound1","pistolReloadSnd","_1","volume","jumpSound","pain1Snd","pain2Snd","deathRip","playerDeathSnd","hitImpact","smgFire","shotgunFire","mSpark","currentMuzzleSpark","bodySprites","shadow","drawEllipse","setBodySpritesPositions","obj","setArmsSpritePosition","fpos","_my","getFlashes","createMeleeHitbox","meleeHitbox","meleeAttack","collectHealth","collectCredits","collectCredit","collectAmmo","playerHit","resetPlayerHit","blinkAlpha","penalties","damageTaken","bloodSpurtPos","amt","addSpritesInOrder","timing","timeScale","playerRagdoll","lastDeathType","lastBodyPosition","translate","deathType","killed","parts","playerArm","getPlayerComposite","bh","keydownListenersAdded","addEventListener","e","keyCode","changeBack","toString","detonate","currentTurret","updateDirection","target","document","getElementsByTagName","getBoundingClientRect","armAngle","mouseX","mouseY","rect","clientX","clientY","mPosRel","buttons","costToBuild_trap","costToBuild","costToBuild_barrier","closestX","barrier","buildNewLocation","placeObjectSound","cancelSound","checkAllowArray","buildObjectPlacementComparison","reduce","prev","curr","abs","trap","buildTrap","trapPosition","mine","updateNumber","preventDefault","grenadesCount","deltaY","pause","Crosshairs","crosshair","cross","moveTo","lineTo","changed","_new","buildArrow","animationLoop","GroundEffect","bodyPart","groundFx","fxSheet","bulletTextures","groundBloodSpatters","render","groundTex","groundBody","pistolBullets","pistolBulletWd","pistolBulletHt","pistolShells","pistolShellWd","pistolShellHt","ammoDrops","pistolAmmoDrops","smgAmmoDrops","shotgunAmmoDrops","creditDrops","crosshairs","zombieRags","leftEnemyCount","rightEnemyCount","leftEnemyCountDisplay","rightEnemyCountDisplay","sparkSprites","healthdrops","wallTile","WallTile","texture","Texture","delta","tilePosition","TilingSprite","createCollision","body1_label","body2_label","callback","pairs","body1","body2","calculateDamageAmount","weapon_str","calcSMGDamage","calcShotgunDamage","calcTurretDamage","checkCollisionStart","snd","knockback","meleeConnect","ammo_type","grenadeClink","gameTickVarsDefined","getZombieRadarTextStyle","gameTickHandler","gradientAlpha","accelMax","deceleration","zombieAttackDistance","mouseButtonState","renderPositionFn","firePistol","fireSMG","fireShotgun","Render","lookAt","playerPosX","playerPosY","box","positionAmmoBox","coin","positionCreditGfx","creditBody","playerRag","grenade","rock","wood","gib","setPlayerVars","playerDirection","paused","walk","setSpritesPositions","timeSinceLastAttack","attack","shoot","updatePosition","rag","fx","WeaponsUI","mags","pistolIcon","smgIcon","shotgunIcon","icons","iconBG","DropShadowFilter","icon","keepOnTop","magazinesByWeaponType","g","emptyText","setInterval","bulletMask","bulletBevel","gbevel","gnoise","makeMagByType","bullet","bulletGfc","weaponIcons","updateMagazine","Array","swapSwap","wep","magazineIndexes","magEmptyBools","doTheWiggle","defaultPos","textForEmptyShake","str","removeEmptyText","forceReload","ammoCheck","limit","_i","onCompleteParams","forceWepEquipped","m","hasOwnProperty","lastMagIdx","makeGrenadeIcon","grenadeCount","gnade","HealthDrop","_amt","Graphics","healths","AmmoDrop","weaponType","colors","ammoBox","ammoGfc","boxGfc","blurGfc","bevelFilter","boxTxt","ZombieRagdoll","f","constraints","_body","z_parts_spritesheet","skulls","getSkullTex","c","getARandomConstraint","Zombie","Power2","zombieWalkSpeed","headToBody","zWalkSheet","zAttackSheet","idleSheet","idleAnim","zWalk","zAttack","zAttack2","slashFX","slashAnim","walkAnim","attackAnim","attackAnim2","anims","anim","playerBodyPosition","playSlashAnim","shouldDisplayHealth","moveLifeDisplay","zombieFarFromPlayer","playIdleAnim","playing","walkAnimPlaying","stopIdleAnim","playWalkAnim","stopWalkAnim","healthOffsetY","damageDisplayOptions","healthDisplayOptions","renderFnResult","alteredWalkSpeed","comparison","bool","dmgTxts","dmgIterator","tintAmounts","1","2","3","4","partDamaged","isCritical","isMelee","attackType","spurtPosLow","spurtPosHi","directionX","meleeKills","removeZombieFromMatterWorld","attackHitbox","removeZombieFromZombiesArray","skipZombieRag","killType","dropPos","GenerateRandomCreditDrops","scoreAmt","headShot","zombieStreakBonus","zombieKnockedOffStage","mineKills","turretKills","zombieGrowl","oneOfTwo","compareResult","makeAttackHitbox","CreditDrop","currencyDrops","creditContainer","creditBlur","creditGfc","yStartPos","amountLimits","randCount","RespawnButton","ScreenUI","pixiElt","Bounce","gameContainer","respawnButton","interactive","overrideCount","GenerateRandomAmmoDrops","on","showRespawnButton","easeOut","muzzle_flashes_spritesheet","zomb_idle_sheet","zomb_walk_sheet","zomb_attack1_sheet","zomb_attack2_sheet","zomb_parts_sheet","zomb_parts_gored_sheet","zomb_slash_fx_sheet","barriers_sheet","char_parts","char_idle_sheet","char_run_sheet","char_jump_sheet","char_reload_pistol_sheet","char_reload_smg_sheet","left_arm_pistol_fire_sheet","right_arm_pistol_fire_sheet","left_arm_smg_fire_sheet","right_arm_smg_fire_sheet","melee_pistol_sheet","melee_ump_sheet","melee_shotgun_sheet","grenade_pistol_sheet","grenade_ump_sheet","grenade_shotgun_sheet","arms_fire_shotgun","char_reload_shotgun_sheet","blood_spurt_1","blood_spurt_2","blood_spurt_3","landmine_sheet","wood_planks_sheet","sparks_sheet","elementId","mouseConstraintBool","Engine","element","getElementById","pixelRatio","runner","Runner","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","stiffness","worldWidth","setUpMatter","app","antialias","resolution","ROUND_PIXELS","appendChild","view","loader","setUpPixi","buildGame","explosiveBarrel","groundTexture","charHead","weaponUI_pistolIcon","weaponUI_smgIcon","weaponUI_shotgunIcon","load","value","getFullState","setFullState","coverArt","gradientAlphaImg","gameCover","distant_explosion","bulletImpact_body","throwSound","confirmSound","coinCollectSound","ammoCollectSound","itemCollectSound","bloodSquish","bloodSquash","bloodSmack","deathRipSound","jumpLandingSound","dirtImpactSound","zombieHurtSound","zombieDeathSound","pain1Sound","pain2Sound","playerDeathSound","buttonAddSound","buttonSubtractSound","buttonHoverSound","buttonClickSound","buttonCancelSound","purchaseSound","shellImpactSound","healthPickupSound","magDrop","shotShell","shotgunBlast","achievement1","achievement2","achievement3","chargingNade","resources","spritesheet","addGround","stage","mainMenu","menu","playBtn","playBtnGfc","playBtnTxt","fontFamily","positionPlayButton","buildMenu","Events","cursor","getElementsByClassName","pointerEvents","startWave","numOnStage","getAZombie","startZombieCreation","GenerateZombies","waveDefeated","chars","transitionToShopQuery","waveMsgOutro","waveMsgIntro","createWaveMessage","waveCompleted","respawnCost","respawnToShopCost","BuildMenuStates","buildMenuState","setBuildMenuState","barrierCosts","trapCosts","backToBuildMenu","gotoPlacementMode","replaceCursorWithObjectToPlace","chooseBarrier","filteredType","chooseTrap","filter","ScoresView","scores","overflow","sort","date","time","substr","year","dateNoYear","Game","weaponEquipped","waitInterval","useRef","cancelWaveStart","initial","useScores","setScores","animateScore","setAnimateScore","runUpgraded","setRunUpgraded","reloadUpgraded","setReloadUpgraded","jumpUpgraded","setJumpUpgraded","meleeUpgraded","setMeleeUpgraded","defenseUpgraded","setDefenseUpgraded","updateWeaponsUI","countdown","timeInt","clearInterval","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warning","isErr","Axios","catch","err","then","data","DoneBarrierPlacementBanner","shop-query-visibility","BuildMenu","RespawnMenu","backgroundColor","margin","lineHeight","textAlign","transition","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,iCCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.7e05b17c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pistol-icon.7f31cd11.png\";","module.exports = __webpack_public_path__ + \"static/media/smg-icon.3a3ac587.png\";","module.exports = __webpack_public_path__ + \"static/media/shotgun-icon.0cd5d683.png\";","module.exports = __webpack_public_path__ + \"static/media/GroundTexture_Optimized.b017db2f.png\";","module.exports = __webpack_public_path__ + \"static/media/wallTile.c21abdef.png\";","module.exports = __webpack_public_path__ + \"static/media/gradient-layer-mask.2be09341.png\";","module.exports = __webpack_public_path__ + \"static/media/explosiveBarrier.4f1da0f2.png\";","module.exports = __webpack_public_path__ + \"static/media/head-sprite.0a5881b1.png\";","module.exports = __webpack_public_path__ + \"static/media/bodyBulletImpact.94466266.wav\";","module.exports = __webpack_public_path__ + \"static/media/GameCover.82b711ae.png\";","module.exports = __webpack_public_path__ + \"static/media/9mm1.604f7da7.wav\";","module.exports = __webpack_public_path__ + \"static/media/9mm2.c11c6dad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/explosion1.9434e92f.wav\";","module.exports = __webpack_public_path__ + \"static/media/explosion_distant.d9a90524.wav\";","module.exports = __webpack_public_path__ + \"static/media/pistolReload.915ac0e1.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeClink.e7168e2c.wav\";","module.exports = __webpack_public_path__ + \"static/media/throw.e7ed00d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/coinCollect.b65cb627.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectAmmo.b05c1059.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectItem.a7bd5386.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquash.6c1046e0.flac\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquish.508e6483.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSmack.eb606367.wav\";","module.exports = __webpack_public_path__ + \"static/media/deathRipSound.733ed512.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpLanding.f703082d.wav\";","module.exports = __webpack_public_path__ + \"static/media/dirtImpact.de2bbd17.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieHurt.2e807e84.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieDeath.0ac25f1f.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain1.e6646ac7.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain2.defb4bdf.wav\";","module.exports = __webpack_public_path__ + \"static/media/playerDeath.e8c5712d.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonAdd.8db1c8cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonSubtract.b240a4d0.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonClick.10d30b9f.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonHover.e0064aca.wav\";","module.exports = __webpack_public_path__ + \"static/media/placeObject.fa092176.flac\";","module.exports = __webpack_public_path__ + \"static/media/cancelSound.0d1ffcde.wav\";","module.exports = __webpack_public_path__ + \"static/media/moneySound.1bae50c5.wav\";","module.exports = __webpack_public_path__ + \"static/media/purchase.4979dc37.wav\";","module.exports = __webpack_public_path__ + \"static/media/shellImpact.8075d182.wav\";","module.exports = __webpack_public_path__ + \"static/media/health.29ff687c.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieGrowl.4792280f.wav\";","module.exports = __webpack_public_path__ + \"static/media/smgFire.b1f03f38.wav\";","module.exports = __webpack_public_path__ + \"static/media/magDrop.1547e6a9.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotShell.f90e6de6.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotgunBlast.4118af72.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement1.dd62d37e.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement2.7a014c29.mp3\";","module.exports = __webpack_public_path__ + \"static/media/achievement3.23db76c0.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpSound.ccaa05f0.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeCharge.31709a11.wav\";","const GameStates = {\r\n  MAIN_MENU: 'main menu',\r\n  GAMEPLAY: 'gameplay',\r\n  PAUSE: 'pause',\r\n  IN_GAME_MENU: 'in-game menu',\r\n  GAMEOVER: 'gameover',\r\n  SHOP_MENU: 'in-game shop menu',\r\n  BUILD_MENU: 'build menu',\r\n  SCORES_VIEW: 'scores view',\r\n}\r\n\r\nexport const SubStates = {\r\n\tNEUTRAL: 'neutral',\r\n\tWAITING: 'waiting',\r\n\tWAVE_STARTED: 'wave started',\r\n\tWAVE_DEFEATED: 'wave defeated',\r\n\tWAVE_CHANGE: 'wave change',\r\n\tPLAYER_DEATH: 'player death',\r\n  PLAYER_RESPAWN: 'player respawn',\r\n  SHOP_QUERY_SUBMENU: 'shop query sub-menu',\r\n  BUILD_PLACEMENT_MODE: 'build trap placement mode'\r\n}\r\n\r\nexport default GameStates\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_GRENADE } from './constants/weapons'\r\n// import { original } from 'immer'\r\n\r\nexport const AchievementDefs = {\r\n  THIS_IS_SPARTA: 'SPARTA',\r\n  FROM_DOWNTOWN: 'Downtown',\r\n  FIRE_IN_THE_HOLE: 'Triplets',\r\n  WEAPONS_COLLECTOR: 'Collector',\r\n  PISTOL_MODDER: 'P.Modder',\r\n  SMG_MODDER: 'SMG Modder',\r\n  SHOTGUN_MODDER: 'S.Modder',\r\n  MOD_AFICIONADO: 'Aficionado',\r\n  THE_JUMP_SHOT: 'Jumpshot',\r\n  PILEDRIVE: 'Piledrive',\r\n  TRAPHOUSE: 'Traphouse',\r\n  BARRICADE: 'Barricade',\r\n  MINER: 'Miner',\r\n  GUNNA: 'Gunna',\r\n}\r\n\r\nexport const StatsDefs = {\r\n  zombiesKilled: 'zombiesKilled',\r\n  bulletsFired: 'bulletsFired',\r\n  timesReloaded: 'timesReloaded',\r\n  grenadesThrown: 'grenadesThrown',\r\n  timesKilled: 'timesKilled',\r\n  timesRespawned: 'timesRespawned',\r\n  itemsPickedUp: 'itemsPickedUp',\r\n  creditsEarned: 'creditsEarned',\r\n  storePurchases: 'storePurchases',\r\n  meleeKills: 'meleeKills',\r\n  mineKills: 'mineKills',\r\n  trapsPlaced: 'trapsPlaced',\r\n  barriersPlaced: 'barriersPlaced',\r\n  turretKills: 'turretKills',\r\n  damageTaken: 'damageTaken',\r\n  damageDealt: 'damageDealt',\r\n}\r\n\r\n// for flattened data game state\r\nexport const gameSlice = createSlice({\r\n\tname: 'game',\r\n\t// initialState: {},\r\n\treducers: {\r\n    loadLocalStorageState: state => {\r\n      if (localStorage && localStorage.getItem('ZombieChamber-GameSave')) {\r\n        let saved = JSON.parse(localStorage.getItem('ZombieChamber-GameSave'))\r\n        state = saved\r\n        console.log('should load our save')\r\n      } else {\r\n        state = state\r\n      }\r\n    },\r\n    setTrapTypePlaced: (state, action) => ({\r\n      ...state,\r\n      trapTypesPlaced: {\r\n        ...state.trapTypesPlaced,\r\n        [ action.payload ]: state.trapTypesPlaced[ action.payload ] ? state.trapTypesPlaced[ action.payload ] + 1 : 1\r\n      },\r\n    }),\r\n    setBarrierTypePlaced: (state, action) => ({\r\n      ...state,\r\n      barrierTypesPlaced: {\r\n        ...state.barrierTypesPlaced,\r\n        [ action.payload ]: state.barrierTypesPlaced[ action.payload ] ? state.barrierTypesPlaced[ action.payload ] + 1 : 1\r\n      }\r\n    }),\r\n    setLastMagDropped: (state, action) => {\r\n      state.lastMagDropped = action.payload\r\n    },\r\n    increaseStats: (state, action) => {\r\n      state.stats[ action.payload ] += 1\r\n    },\r\n    increaseStatsByAmount: {\r\n      reducer: (state, action) => {\r\n        state.stats[ action.payload.type ] += action.payload.amount\r\n      },\r\n      prepare: (type, amount) => ({ payload: { type, amount } })\r\n    },\r\n    setLastGrenadeKill: (state, action) => {\r\n      state.lastGrenadeKill = action.payload\r\n      state.consecutiveGrenadeKills += 1\r\n    },\r\n    resetConsecutiveGrenadeKills: state => { state.consecutiveGrenadeKills = 0 },\r\n    setZombieLastKilled: (state, action) => {\r\n      state.zombieLastKilled = action.payload\r\n    },\r\n    flipScoreToggle: state => { state.scoreToggle = !state.scoreToggle },\r\n    increaseScore: (state, action) => {\r\n      state.score += action.payload\r\n    },\r\n    decreaseScore: (state, action) => {\r\n      state.score -= action.payload\r\n    },\r\n    updatePrevScore: (state) => {\r\n      state.prevScore = state.score\r\n    },\r\n    addPurchase: {\r\n      reducer: (state, action) => {\r\n        state.purchases += 1\r\n        state.lastPurchase = action.payload\r\n      },\r\n      prepare: (item, amount) => ({ payload: { item, amount } })\r\n    },\r\n    setZombiesOnLeft: (state, action) => { state.enemies.zombies.onLeft = action.payload },\r\n    setZombiesOnRight: (state, action) => { state.enemies.zombies.onRight = action.payload },\r\n    setRightMouseDown: (state, action) => {\r\n      state.rightMouseDown = action.payload\r\n    },\r\n    attachMod: {\r\n      reducer: (state, action) => {\r\n        let { modType, wepType } = action.payload\r\n        switch (modType) {\r\n          case 'rof':\r\n          state.player.modTiers.rof[wepType].current += 1\r\n          state.player.weapons.shotLimiter[wepType] -= state.player.modAmounts.rof[wepType]\r\n          break;\r\n          case 'powder':\r\n          state.player.modTiers.powder[wepType].current += 1\r\n          state.player.weapons.damage[wepType].min += Math.round(state.player.modAmounts.powder[wepType] * .5)\r\n          state.player.weapons.damage[wepType].max += Math.round(state.player.modAmounts.powder[wepType])\r\n          break;\r\n          case 'sight':\r\n          state.player.modTiers.sight[wepType].current += 1\r\n          state.player.weapons.bulletVariance[wepType] -= state.player.modAmounts.sight[wepType]\r\n          break;\r\n          case 'mag':\r\n          state.player.modTiers.mag[wepType].current += 1\r\n          state.player.weapons.ammoCapacity[wepType] += state.player.modAmounts.mag[wepType]\r\n          break;\r\n          default:\r\n        }\r\n      },\r\n      prepare: (modType, wepType) => ({ payload: { modType, wepType } })\r\n    },\r\n    setPlayerCompositeId: (state, action) => { console.log(action.type); state.player.compositeId = action.payload },\r\n\t\tsetKeyPress: (state, action) => { state.keys.push(action.payload) },\r\n\t\tremoveKeyPress: (state, action) => { state.keys.splice(state.keys.indexOf(parseInt(action.payload)), 1) },\r\n\t\tsetLastDirection: (state, action) => { state.player.variables.lastDirection = action.payload },\r\n\t\tsetCurrentDirection: (state, action) => { state.player.variables.currentDirection = action.payload },\r\n\t\tsetJumping: (state, action) => { state.player.variables.jumping = action.payload },\r\n\t\tsetGroundId: (state, action) => { state.groundId = action.payload },\r\n\t\tsetMousePosition: (state, action) => { state.mousePosition = action.payload },\r\n\t\tsetMouseStateX: (state, action) => { state.mouseState.x = action.payload },\r\n\t\tsetMouseStateY: (state, action) => { state.mouseState.y = action.payload },\r\n\t\tsetMouseButtonState: (state, action) => { state.mouseState.btn = action.payload },\r\n\t\tsetWeaponEquipped: (state, action) => { state.player.weapons.equipped = action.payload },\r\n\t\tsetLastShot: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tlet { player: { weapons: { lastShot, equipped } } } = state\r\n\t\t\t\tlastShot[equipped] = action.payload.dateTimeObject\r\n\t\t\t},\r\n\t\t\tprepare: (weapon, dateTimeObject) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: { weapon, dateTimeObject }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetMouseRelativeToPlayerPosition: (state, action) => { state.mouseRelativeToPlayerPosition = action.payload },\r\n\t\tsetCompositeBodyIds: (state, action) => {\r\n\t\t\tstate.player.composite = action.payload\r\n\t\t},\r\n\t\tsetStaticGunAngle: (state, action) => { state.staticGunAngle = action.payload },\r\n\t\tsetStaticGunAngleState: (state, action) => { state.staticGun = action.payload },\r\n\t\tsetTexturePath: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tstate.textures[action.payload.textureName] = action.payload.texturePath\r\n\t\t\t},\r\n\t\t\tprepare: (textureName, texturePath) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttextureName,\r\n\t\t\t\t\t\ttexturePath\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgameStateTransition: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tswitch (action.payload.type) {\r\n\t\t\t\t\tcase 'sub':\r\n\t\t\t\t\tstate.lastGameSubState = action.payload.from\r\n\t\t\t\t\tstate.gameSubState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'main':\r\n\t\t\t\t\tstate.lastGameState = action.payload.from\r\n\t\t\t\t\tstate.gameState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare: (type, from, to) => ({ payload: { type, from, to } })\r\n\t\t},\r\n\t\tincrementWave: (state) => { state.waveNum += 1 },\r\n\t\tdecrementWave: (state) => { state.waveNum -= 1 },\r\n\t\tsetWaveCountToDefeat: (state, action) => { state.waveCountToDefeat = action.payload },\r\n\t\tincrementWaveCountToDefeat: (state, action) => { state.waveCountToDefeat += 1 },\r\n\t\tdecrementWaveCountToDefeat: (state, action) => {\r\n      state.waveCountToDefeat -= 1\r\n      state.zombiesOnStage -= 1\r\n    },\r\n\t\tsetWeaponsList: (state, action) => { state.player.weapons.list = action.payload },\r\n\t\tsetShowingMessage: (state, action) => { state.showingMessage = action.payload },\r\n\t\tunsetAllKeys: (state, action) => { state.keys = [] },\r\n\t\tresetPlayerVariables: state => {\r\n\t\t\tlet _state = Object.assign({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentDirection: '',\r\n\t\t\t\t\tlastDirection: '',\r\n\t\t\t\t\tjumping: false\r\n\t\t\t\t}\r\n      }, state)\r\n      state = _state\r\n\t\t},\r\n\t\tdecrementTotalAmmo: (state, action) => {\r\n\t\t\tlet { player: { weapons: { totalAmmo } } } = state\r\n\t\t\t// original() from the immer package helps us to see values in redux arrays/objects\r\n\t\t\ttotalAmmo[action.payload] -= 1\r\n    },\r\n    addToTotalAmmo: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { totalAmmo } } } = state\r\n        totalAmmo[action.payload.wepType] += action.payload.amount\r\n      },\r\n      prepare: (wepType, amount) => ({ payload: { wepType, amount } })\r\n    },\r\n    updateAmmoCapacity: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { ammoCapacity } } } = state\r\n        ammoCapacity[action.payload.wepType] = action.payload.newCapacityAmount\r\n      },\r\n      prepare: (wepType, newCapacityAmount) => ({ payload: { wepType, newCapacityAmount } })\r\n    },\r\n    setPlayerPosition: (state, action) => { state.player.position = action.payload },\r\n    addToTotalCredits: (state, action) => { state.player.credits += action.payload },\r\n    subtractFromTotalCredits: (state, action) => { state.player.credits -= action.payload },\r\n    upgradeRunSpeed: (state) => {\r\n      state.player.upgradeTiers.run.current += 1\r\n      state.player.variables.acceleration.max = state.player.variables.acceleration.max + state.player.upgradeAmounts.run\r\n    },\r\n    upgradeReloadSpeed: (state) => {\r\n      state.player.upgradeTiers.reload.current += 1\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] = state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] + state.player.upgradeAmounts.reload\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] = state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] + state.player.upgradeAmounts.reload\r\n    },\r\n    upgradeJumpForce: (state) => {\r\n      state.player.upgradeTiers.jump.current += 1\r\n      state.player.variables.jumpForce = state.player.variables.jumpForce + state.player.upgradeAmounts.jump\r\n    },\r\n    upgradeDefense: (state) => {\r\n      state.player.upgradeTiers.defense.current += 1\r\n      state.player.variables.defense = state.player.variables.defense + state.player.upgradeAmounts.defense\r\n    },\r\n    upgradeMelee: (state) => {\r\n      state.player.upgradeTiers.melee.current += 1\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_PISTOL] += state.player.upgradeAmounts.melee[WEAPON_TYPE_PISTOL]\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_SMG] += state.player.upgradeAmounts.melee[WEAPON_TYPE_SMG]\r\n    },\r\n    updatePlayerHealth: (state, action) => {\r\n      state.player.health = action.payload\r\n    },\r\n    decrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] -= 1 },\r\n    incrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] += 1 },\r\n    updateZombieWalkSpeed: (state, action) => {\r\n      let walkSpeedDefault = state.enemies.zombies.walkSpeedDefault\r\n      let incrementer = state.enemies.zombies.walkSpeedIncrementer\r\n      state.enemies.zombies.walkSpeed = walkSpeedDefault + (action.payload * incrementer)\r\n    },\r\n    updateZombieAttackDmg: (state, action) => {\r\n      state.enemies.zombies.attackDmg = Math.round(\r\n        (action.payload * state.enemies.zombies.attackIncrementer) +\r\n        state.enemies.zombies.attackDmgDefault\r\n      )\r\n    },\r\n    decrementZombieAttackTimeLimit: (state, action) => {\r\n      state.enemies.zombies.zombieAttackLimiter = state.enemies.zombies.zombieAttackDefaultLimiter - (action.payload * state.enemies.zombies.zombieAttackLimiterDecrementer)\r\n      console.log(\r\n        state.enemies.zombies.zombieAttackLimiter\r\n      )\r\n    },\r\n    showLaserSight: (state, action) => {\r\n      state.player.weapons.laser[action.payload] = true\r\n    },\r\n    incrementZombieHealth: (state, action) => {\r\n      state.enemies.zombies.startingHealth = Math.round(state.enemies.zombies.defaultHealth + (state.enemies.zombies.healthIncrementer * action.payload))\r\n    },\r\n    setSelectedBarrierToBuild: (state, action) => {\r\n      state.barriers.selectedBarrier = action.payload\r\n    },\r\n    setSelectedTrapToBuild: (state, action) => {\r\n      state.traps.selectedTrap = action.payload\r\n    },\r\n    setLastWaveCountDefeated: (state) => { state.lastWaveCountDefeated = state.waveCountToDefeat },\r\n    incrementZombiesOnStage: state => { state.zombiesOnStage += 1 },\r\n    setZombiesOnStage: (state, action) => { state.zombiesOnStage = action.payload },\r\n    updateWeaponsList: (state, action) => {\r\n      state.player.weapons.list.push(action.payload)\r\n    },\r\n    // Perks\r\n    setPlayerMagnetism: {\r\n      reducer: (state, action) => {\r\n        state.player.variables.magnetism = action.payload.range\r\n        state.player.variables.magnetismSpeed = action.payload.speed\r\n        state.player.perks.magnetism.owned = true\r\n      },\r\n      prepare: (range, speed) => ({ payload: { range, speed } })\r\n    },\r\n    setPlayerMagDamage: (state) => {\r\n      state.player.perks.magDmg.owned = true\r\n    },\r\n    setPlayerLastBullet: (state) => {\r\n      state.player.perks.lastBullet.owned = true\r\n    },\r\n    setPlayerCreditDropper: state => { state.player.perks.creditDropper.owned = true },\r\n    setPlayerAmmoDropper: state => { state.player.perks.ammoDropper.owned = true },\r\n    setPlayerHealthDropper: state => { state.player.perks.healthDropper.owned = true },\r\n    setPlayerQuickTurret: state => {\r\n      state.player.perks.quickTurret.owned = true\r\n      state.traps.turret.cooldown = .25\r\n      state.traps.turret.fireDistance = 600\r\n    },\r\n    setPlayerBarrierPlus: state => {\r\n      state.player.perks.barrierPlus.owned = true\r\n    },\r\n    setPlayerFusterCluck: state => {\r\n      state.player.perks.cluck.owned = true\r\n    },\r\n    toggleFilterEffects: (state, action) => {\r\n      state.filterEffects = action.payload\r\n    },\r\n    toggleZombieHealthDisplay: (state, action) => {\r\n      state.displayZombieHealth = action.payload\r\n    },\r\n    setAchievementOwned: (state, action) => {\r\n      state.achievements[action.payload].owned = true\r\n      state.lastAchievementEarned = action.payload\r\n    }\r\n\t},\r\n})\r\n\r\nexport const {\r\n  loadLocalStorageState,\r\n  increaseStatsByAmount,\r\n  setTrapTypePlaced,\r\n  setBarrierTypePlaced,\r\n  setLastMagDropped,\r\n  increaseStats,\r\n  setAchievementOwned,\r\n  resetConsecutiveGrenadeKills,\r\n  setLastGrenadeKill,\r\n  setZombieLastKilled,\r\n  flipScoreToggle,\r\n  updatePrevScore,\r\n  increaseScore,\r\n  decreaseScore,\r\n  toggleZombieHealthDisplay,\r\n  toggleFilterEffects,\r\n  setPlayerFusterCluck,\r\n  setPlayerBarrierPlus,\r\n  setPlayerQuickTurret,\r\n  setPlayerHealthDropper,\r\n  setPlayerAmmoDropper,\r\n  setPlayerCreditDropper,\r\n  setPlayerLastBullet,\r\n  setPlayerMagDamage,\r\n  setPlayerMagnetism,\r\n  addPurchase,\r\n  setZombiesOnLeft,\r\n  setZombiesOnRight,\r\n  setRightMouseDown,\r\n\tresetPlayerVariables,\r\n\tunsetAllKeys,\r\n\tsetPlayerCompositeId,\r\n\tsetKeyPress, removeKeyPress,\r\n\tsetLastDirection, setCurrentDirection,\r\n\tsetJumping, setGroundId, setMousePosition,\r\n\tsetMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot,\r\n\tsetWeaponEquipped,\r\n\tsetMouseRelativeToPlayerPosition,\r\n\tsetCompositeBodyIds,\r\n\tsetTexturePath,\r\n\tgameStateTransition,\r\n  incrementWave,\r\n  decrementWave,\r\n  incrementWaveCountToDefeat,\r\n\tsetWaveCountToDefeat,\r\n\tdecrementWaveCountToDefeat,\r\n\tsetWeaponsList,\r\n\tsetShowingMessage,\r\n  decrementTotalAmmo,\r\n  addToTotalAmmo,\r\n  updateAmmoCapacity,\r\n  addToTotalCredits,\r\n  subtractFromTotalCredits,\r\n  setPlayerPosition,\r\n  upgradeRunSpeed,\r\n  upgradeReloadSpeed,\r\n  upgradeJumpForce,\r\n  upgradeDefense,\r\n  upgradeMelee,\r\n  updatePlayerHealth,\r\n  attachMod,\r\n  incrementGrenadeCount,\r\n  decrementGrenadeCount,\r\n  updateZombieWalkSpeed,\r\n  updateZombieAttackDmg,\r\n  decrementZombieAttackTimeLimit,\r\n  showLaserSight,\r\n  incrementZombieHealth,\r\n  setSelectedBarrierToBuild,\r\n  setSelectedTrapToBuild,\r\n  lastWaveCountDefeated,\r\n  incrementZombiesOnStage,\r\n  setZombiesOnStage,\r\n  updateWeaponsList\r\n} = gameSlice.actions\r\n\r\nexport default gameSlice.reducer\r\n","export const WEAPON_TYPE_PISTOL = 'pistol weapon'\r\nexport const WEAPON_TYPE_GRENADE = 'grenades'\r\nexport const WEAPON_TYPE_SMG = 'smg weapon'\r\nexport const WEAPON_TYPE_TURRET = 'turret weapon'\r\nexport const WEAPON_TYPE_SHOTGUN = 'shotgun weapon'\r\n\r\nexport const PISTOL_BULLET_REMOVAL_TIMEOUT = 500\r\nexport const PISTOL_SHELL_REMOVAL_TIMEOUT = 2000\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MIN = 0.0003\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MAX = 0.0007\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN = 0.5\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX = 1.0\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport game from '../features/game/gameSlice'\r\n\r\nlet persistedState = (\r\n  localStorage && localStorage.getItem('ZombieChamber-GameSave') ?\r\n  JSON.parse(localStorage.getItem('ZombieChamber-GameSave')) : {}\r\n)\r\n\r\nconsole.log(\r\n  persistedState.game.stats.bulletsFired\r\n)\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    game\r\n  },\r\n  preloadedState: {\r\n    persistedState\r\n  }\r\n})\r\n\r\nstore.subscribe(() => {\r\n  if (localStorage) {\r\n    localStorage.setItem('ZombieChamber-GameSave', JSON.stringify(store.getState()))\r\n  }\r\n})\r\n\r\n\r\nexport default store\r\n","import * as PIXI from 'pixi.js'\r\nimport { Mouse, MouseConstraint, World, Engine, Render, Runner, Composite, Vector } from 'matter-js'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\n\r\nconst width = 1200, height = 550\r\nconst worldWidth = 6000\r\n\r\nconst { getState } = store\r\n\r\nconst { TweenLite: { to } } = window\r\n\r\nexport const applyGsapHover = pixiElt => {\r\n\tpixiElt.on('mouseover', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.05, y: 1.05 })\r\n\t})\r\n\tpixiElt.on('mouseout', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.00, y: 1.00 })\r\n\t})\r\n}\r\n\r\nexport const makePixiSprite = (stringIdentifier) => {\r\n\treturn (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\tPIXI.Texture.from(\r\n\t\t\t\tgetState().game.textures[stringIdentifier]\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport const calcBulletAngle = (position1, position2) => {\r\n  let { game: { player: { weapons: { bulletVariance, equipped, bulletForce } } } } = getState()\r\n\tlet angle = Vector.angle(position1, position2)\r\n\tlet bulletAngle = {\r\n\t\tx: Math.cos(angle) * bulletForce[equipped],\r\n\t\ty: (Math.sin(angle) * bulletForce[equipped]) + random.float(-bulletVariance[equipped], bulletVariance[equipped])\r\n\t}\r\n\treturn bulletAngle\r\n}\r\n\r\nexport const calcGrenadeAngle = (position1, position2, force) => {\r\n  let angle = Vector.angle(position1, position2)\r\n\tlet grenadeAngle = {\r\n\t\tx: Math.cos(angle) * force.x,\r\n\t\ty: Math.sin(angle) * force.y\r\n\t}\r\n\treturn grenadeAngle\r\n}\r\n\r\nexport const getBodyWidth = body => {\r\n\treturn (body.bounds.max.x - body.bounds.min.x)\r\n}\r\n\r\nexport const getBodyHeight = body => {\r\n\treturn (body.bounds.max.y - body.bounds.min.y)\r\n}\r\n\r\nexport const getPlayerPartByType = (type, gameObjects) => {\r\n\tlet {\r\n\t\tgame: {\r\n\t\t\tplayer: {\r\n\t\t\t\tcomposite: {\r\n\t\t\t\t\theadId,\r\n\t\t\t\t\tbodyId,\r\n\t\t\t\t\tarmId,\r\n\t\t\t\t\tgunId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} = getState()\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tif (type === 'head') {\r\n\t\treturn Composite.get(world, headId, 'body')\r\n\t}\r\n\tif (type === 'body') {\r\n\t\treturn Composite.get(world, bodyId, 'body')\r\n\t}\r\n\tif (type === 'arm') {\r\n\t\treturn Composite.get(world, armId, 'body')\r\n\t}\r\n\tif (type === 'gun') {\r\n\t\treturn Composite.get(world, gunId, 'body')\r\n\t}\r\n\r\n}\r\n\r\n// export const getGround = (gameObjects) => {\r\n// \tlet world = gameObjects.getKeyValue('world')\r\n// \tlet { game: { groundId } } = getState()\r\n// \treturn Composite.get(world, groundId, 'body')\r\n// }\r\n\r\nexport const getPlayerGun = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { gunId } } } } = getState()\r\n\treturn Composite.get(world, gunId, 'body')\r\n}\r\n\r\nexport const getPlayerBody = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { bodyId } } } } = getState()\r\n\treturn Composite.get(world, bodyId, 'body')\r\n}\r\n\r\nexport const getPlayerComposite = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { compositeId } } } = getState()\r\n\treturn Composite.get(world, compositeId, 'composite')\r\n}\r\n\r\nexport function setUpPixi(elementId) {\r\n\tlet app = new PIXI.Application({\r\n\t\twidth,\r\n\t\theight,\r\n\t\tantialias: false,\r\n    resolution: 1\r\n\t})\r\n\tPIXI.settings.ROUND_PIXELS = true;\r\n\tdocument.getElementById(elementId).appendChild(app.view)\r\n\t// app.view.style.opacity = .85\r\n\r\n\treturn {\r\n\t\tapp,\r\n\t\tloader: new PIXI.Loader()\r\n\t}\r\n\r\n}\r\n\r\nexport function setUpMatter(elementId, mouseConstraintBool) {\r\n\t// create engine\r\n\tlet engine = Engine.create()\r\n\tlet world = engine.world\r\n\tworld.bounds = {\r\n\t\tmin: { x: -worldWidth, y: height * -2 },\r\n\t\tmax: { x: worldWidth, y: height * 1.5 }\r\n\t}\r\n\r\n\t// create renderer\r\n\tlet render = Render.create({\r\n\t\t\telement: document.getElementById(elementId),\r\n\t\t\tengine: engine,\r\n\t\t\toptions: {\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tpixelRatio: .5\r\n\t\t\t}\r\n\t})\r\n\tRender.run(render)\r\n\r\n\t// Render.lookAt(render, {\r\n\t// \tmin: { x: 0, y: 0 },\r\n\t// \tmax: { x: width, y: height }\r\n\t// })\r\n\r\n\t// create runner\r\n\tlet runner = Runner.create()\r\n\tRunner.run(runner, engine)\r\n\r\n\tif (mouseConstraintBool) {\r\n\t\tlet mouse = Mouse.create(render.canvas)\r\n\t\tlet\tmouseConstraint = MouseConstraint.create(engine, {\r\n\t\t\tmouse: mouse,\r\n\t\t\tconstraint: {\r\n\t\t\t\tstiffness: 0.2,\r\n\t\t\t\trender: {\r\n\t\t\t\t\tvisible: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tWorld.add(world, mouseConstraint)\r\n\t\t// keep the mouse in sync with rendering\r\n\t\trender.mouse = mouse\r\n\t}\r\n\r\n\t// World.add(world, Bodies.rectangle(0,0,20,20))\r\n\r\n\treturn {\r\n\t\tengine,\r\n\t\trender,\r\n\t\trunner,\r\n\t\tworld,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tworldWidth\r\n\t\t// mouse,\r\n\t\t// mouseConstraint\r\n\t}\r\n\r\n}\r\n","export const GREATER_THAN_PLAYER_X_POS = 'greater than player x position'\r\nexport const GREATER_THAN_PLAYER_Y_POS = 'greater than player y position'\r\nexport const LESS_THAN_PLAYER_X_POS = 'less than player x position'\r\nexport const LESS_THAN_PLAYER_Y_POS = 'less than player y position'\r\nexport const MOUSE_UP = 'mouse up'\r\nexport const MOUSE_DOWN = 'mouse down'\r\n","export const playerCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const enemyCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n\r\nexport const itemCollisionOptions = {\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const gibCollisionOptions = {\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbottom: 0;\r\nmargin: auto;\r\ndisplay: block;\r\nposition: absolute;\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : 'none' };\r\n`\r\n\r\nconst Backing = styled.div`\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nopacity: ${ props => props.opacity ? props.opacity : .5 };\r\nbackground-color: ${ props => props.bgcolor ? props.bgcolor : '#222' };\r\n`\r\n\r\nconst MenuTitle = styled.div`\r\nleft: 0;\r\nright: 0;\r\ntop: 20px;\r\nwidth: 300px;\r\nmargin: auto;\r\ndisplay: block;\r\nfont-size: 2em;\r\ntext-align: center;\r\nposition: absolute;\r\n`\r\n\r\nconst MenuButtonContainer = styled.div`\r\ntop: ${ props => props['space-top'] ? props['space-top'] : 80 }px;\r\nfont-size: 1.5em;\r\ntext-align: center;\r\nposition: absolute;\r\nwidth: 100%;\r\n`\r\n\r\nconst MenuButton = styled.div`\r\nopacity: ${ props => props['opacity'] ? props['opacity'] : 1 }\r\ncolor: #fff;\r\nposition: relative;\r\nwidth: ${ props => props['width'] ? props['width'] : 200}px;\r\nheight: ${ props => props['height'] ? props['height'] : 60 }px;\r\nline-height: ${ props => props['height'] ? props['height'] : 60 }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : '#00589b' };\r\nleft: 0; right: 0;\r\ncursor: pointer;\r\nmargin: auto;\r\nborder: 2px solid ${ props => props['bordercolor'] ? props['bordercolor'] : 'rgba(0,0,0,0)' };\r\ntransform: scale(1.00);\r\n&:hover {\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transition: all .35s' };\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transform: scale(1.05)' };\r\n  background-color: ${ props => props['hovercolor'] };\r\n  border: 2px solid ${ props => props['hoverborder'] ? props['hoverborder'] : 'rgba(0,0,0,0)' };\r\n}\r\n`\r\n\r\nconst MenuButtonSpacer = styled.div`\r\npadding: ${ props => props['padding'] ? props['padding'] : 10 }px;\r\n`\r\n\r\nexport default {\r\n  Container,\r\n  Backing, \r\n  MenuTitle,\r\n  MenuButtonContainer,\r\n  MenuButton,\r\n  MenuButtonSpacer\r\n}\r\n","import { increaseScore, decreaseScore, updatePrevScore, flipScoreToggle } from '../gameSlice'\r\nimport store from '../../../app/store'\r\n\r\n\r\nexport const updateScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( increaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n\r\nexport const subtractScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( decreaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n","import React, { Children } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { showLaserSight, gameStateTransition, incrementWave, subtractFromTotalCredits, addPurchase, addToTotalAmmo,\r\n  upgradeRunSpeed, upgradeReloadSpeed, upgradeJumpForce, upgradeDefense, upgradeMelee, attachMod, setWeaponEquipped,\r\n  updateWeaponsList, setPlayerMagnetism, setPlayerMagDamage, setPlayerLastBullet, setPlayerCreditDropper,\r\n  setPlayerAmmoDropper, \r\n  setPlayerHealthDropper,\r\n  setPlayerQuickTurret,\r\n  setPlayerBarrierPlus,\r\n  setPlayerFusterCluck,\r\n  setAchievementOwned,\r\n  AchievementDefs} from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_GRENADE, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButton, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const Inline = styled.div`\r\ndisplay: inline-block;\r\nvertical-align: top;\r\nmargin-right: 4px;\r\n`\r\n\r\nconst IncrementDecrement = styled.div`\r\ntop: 0;\r\nwidth: 30px;\r\nheight: 30px;\r\ncolor: darkgreen;\r\nline-height: 30px;\r\ntext-align: center;\r\nposition: absolute;\r\nbackground-color: #ccc;\r\nleft: ${ props => props['left'] ? 0 : 'auto' };\r\nright: ${ props => props['right'] ? 0 : 'auto' };\r\ntransform: scale(1.0);\r\n&:hover {\r\n  transition: all;\r\n  transform: scale(1.05);\r\n  background-color: #fff;\r\n}\r\n`\r\n\r\nconst AmmoCount = styled.div`\r\ncolor: #FFF;\r\ntext-align: center;\r\n`\r\n\r\nconst UPGRADE_SUB_MENU = ' upgrade sub menu'\r\nconst PERKS_MENU = 'perks menu'\r\nconst STANDARD_MENU = 'standard menu'\r\nconst AMMO_MENU = 'ammo menu'\r\nconst HEALTHKIT_MENU = 'healthkit menu'\r\nconst BUY_NEW_WEAPONS_MENU = 'buy weapons menu'\r\nconst WEAPON_MODS_MENU = 'weapon mods menu'\r\nconst PISTOL_MODS_SUBMENU = 'pistol mods submenu'\r\nconst SMG_MODS_SUBMENU = 'smg mods submenu'\r\nconst SHOTGUN_MODS_SUBMENU = 'shotgun mods submenu'\r\nconst PLAYER_ATTRIBUTES_MENU = 'player attributes menu'\r\nconst DEFAULT_SUBMENU = 'none - default'\r\nconst PISTOL_AMMO_SUBMENU = 'pistol ammunition submenu'\r\nconst SMG_AMMO_SUBMENU = 'smg ammunition submenu'\r\nconst SHOTGUN_AMMO_SUBMENU = 'shotgun ammunition submenu'\r\nconst GRENADES_AMMO_SUBMENU = 'grenades submenu'\r\nconst ATTR_RUN_SPEED = 'run'\r\nconst ATTR_RELOAD_SPEED = 'reload'\r\nconst ATTR_JUMP_FORCE = 'jump'\r\nconst ATTR_DEFENSE = 'defense'\r\nconst ATTR_MELEE = 'melee'\r\n\r\nexport const CustomMenuButton = (props) => (\r\n  <MenuButton\r\n  opacity={ props && props.opacity ? props.opacity : 1 }\r\n  bgcolor={ props && props.bgcolor ? props.bgcolor : '#222' }\r\n  bordercolor={ props && props.bordercolor ? props.bordercolor : '#333' }\r\n  hovercolor={ props && props.hovercolor ? props.hovercolor : '#333' }\r\n  hoverborder={ props && props.hoverborder ? props.hoverborder : '#fff' }\r\n  width={ props.width }\r\n  height={ props.height }\r\n  style={ props.style }\r\n  cancelTransition={ props && props.cancelTransition ? props.cancelTransition : false }\r\n  onClick={ () => {\r\n    if (props.onClick) {\r\n      props.onClick()\r\n      let snd = window.gameObjects.getKeyValue('button-click-sound')\r\n      snd.play()\r\n    }\r\n  }}\r\n  onMouseOver={() => {\r\n    if (!props.cancelTransition) {\r\n      // let snd = window.gameObjects.getKeyValue('button-hover-sound')\r\n      // snd.play()\r\n    }\r\n  }}\r\n  >\r\n    { props.children }\r\n  </MenuButton>\r\n)\r\n\r\nexport const BackButton = props => (\r\n  <CustomMenuButton\r\n  width={ props.width ? props.width : 120 }\r\n  height={ 40 }\r\n  style={{ borderRadius: '10px' }}\r\n  bgcolor={ '#444' }\r\n  hovercolor={ '#189969' }\r\n  onClick={ props.onClick }\r\n  >\r\n    {\r\n      props.arrowOnly ?\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0;\r\n        </span>\r\n      :\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0; Back\r\n        </span>\r\n    }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const CornerBackButton = (props) => (\r\n  <div\r\n  style={{\r\n    top: 0,\r\n    right: props.right ? props.right : '20px',\r\n    marginTop: props.marginTop ? props.marginTop : '-40px',\r\n    position: 'absolute'\r\n  }}>\r\n      <BackButton\r\n      onClick={ props.onClick }\r\n      width={ props.width ? props.width : 120 }\r\n      arrowOnly={ props.arrowOnly ? props.arrowOnly : false }\r\n      />\r\n  </div>\r\n)\r\n\r\nfunction Modal ({ label, labelClr, width, height, clickConfirmHandler, clickCancelHandler }) {\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ top: '150px' }} width={ width ? width : 500 } height={ height ? height : 300 }>\r\n        <Backing\r\n        width={ width ? width : 500 }\r\n        height={ height ? height : 300 }\r\n        bgcolor={ '#222' }\r\n        opacity={ 1.0 }\r\n        style={{\r\n          borderRadius: '2px',\r\n          boxShadow: '5px 5px rgba(0, 0, 0, 0.2)'\r\n        }}\r\n        />\r\n        <MenuTitle style={{ fontSize: '1.2em' }}>\r\n          <span\r\n          style={{\r\n            color: labelClr\r\n          }}>\r\n          {\r\n            label\r\n          }\r\n          </span>\r\n        </MenuTitle>\r\n        <MenuButtonContainer space-top={ 200 }>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ 'red' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              marginRight: '12px',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickCancelHandler}>\r\n            Nope.\r\n          </MenuButton>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ '#189969' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickConfirmHandler}>\r\n            Confirm\r\n          </MenuButton>\r\n        </MenuButtonContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction AmmoSubMenu ({ type, toDefaultSubMenu, toAmmoSubMenu, toStandardMenu }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const ammoCostPerBox = useSelector(state => state.game.player.weapons.ammoCostPerBox)\r\n  const ammoCap = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const ammoReducer = (ammo, action) => {\r\n    switch (action.type) {\r\n      case 'INCREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] + action.amount\r\n        }\r\n      case 'DECREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] - action.amount\r\n        }\r\n      case 'SET':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: action.amount\r\n        }\r\n      default:\r\n        return ammo\r\n    }\r\n  }\r\n  const [ammoInCart, dispatchAmmoInCart] = React.useReducer(ammoReducer, {\r\n    'pistol weapon': 0,\r\n    'smg weapon': 0,\r\n    'grenades': 0,\r\n    'shotgun weapon': 0\r\n  })\r\n  const [dollarCost, setDollarCost] = React.useState(0)\r\n\r\n  return (\r\n    <>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={ '#28934C' }\r\n        width={100}\r\n        height={30}\r\n        style={{\r\n          borderRadius: '4px',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        { `$${ dollarCost }` }\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        width={150}\r\n        height={ 30 }\r\n        bgcolor={ '#444' }\r\n      >\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] - ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (ammoInCart[type] > 0) {\r\n              dispatchAmmoInCart({ type: 'DECREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-subtract-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          left={true}>\r\n            <span style={{ fontWeight: 'bold' }}>-</span>\r\n        </IncrementDecrement>\r\n        <AmmoCount>{ ammoInCart[type] }</AmmoCount>\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] + ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (credits >= cost) {\r\n              dispatchAmmoInCart({ type: 'INCREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-add-sound')\r\n              snd.play()\r\n            } else {\r\n              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          right={true}>\r\n            <span style={{ fontWeight: 'bold' }}>+</span>\r\n         </IncrementDecrement>\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={'rgba(0,0,0,0)'}\r\n        height={30}\r\n        >\r\n          <div style={{ display: 'inline-block', marginRight: '4px' }}>\r\n            <CustomMenuButton\r\n              onClick={ () => {\r\n                toDefaultSubMenu()\r\n                dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                setDollarCost(0)\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }}\r\n              width={80}\r\n              height={30}\r\n              hoverborder={'#B00000'}\r\n              >\r\n              Cancel\r\n            </CustomMenuButton>\r\n          </div>\r\n          <div style={{ display: 'inline-block' }}>\r\n            {\r\n              dollarCost > 0 ?\r\n              <CustomMenuButton\r\n                onClick={ () => {\r\n                  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n                  dispatch( subtractFromTotalCredits( dollarCost ) )\r\n                  dispatch( addPurchase(type !== WEAPON_TYPE_GRENADE ? `${type} ammo` : dollarCost > ammoCostPerBox[type] ? type : 'a grenade', dollarCost) )\r\n                  dispatch( addToTotalAmmo( type, ammoInCart[type] ) )\r\n                  dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                  if (type === WEAPON_TYPE_GRENADE) {\r\n                    weaponsUI.updateGrenadeIcons()\r\n                  } else {\r\n                    weaponsUI.select(type)\r\n                    dispatch( setWeaponEquipped(type) )\r\n                    weaponsUI.reload(true)\r\n                  }\r\n                  setDollarCost(0)\r\n                  toDefaultSubMenu()\r\n                }}\r\n                width={100}\r\n                height={30}\r\n                hoverborder={'#189969'}\r\n                >\r\n                Buy\r\n              </CustomMenuButton>\r\n              : null\r\n            }\r\n          </div>\r\n      </MenuButton>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PlayerAttributesMenuButton = ({ type, toDefaultSubMenu, subMenuType, setSubMenuType, toStandardMenu }) => {\r\n\r\n  const upgradeTiers = useSelector(state => state.game.player.upgradeTiers)\r\n  const upgradeCosts = useSelector(state => state.game.player.upgradeCosts)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const dispatch = useDispatch()\r\n  const upgradeTypes = {\r\n    'run': upgradeRunSpeed,\r\n    'jump': upgradeJumpForce,\r\n    'reload': upgradeReloadSpeed,\r\n    'defense': upgradeDefense,\r\n    'melee': upgradeMelee\r\n  }\r\n  const getAttrName = type => {\r\n    switch (type) {\r\n      case 'run':\r\n        return 'Run Speed'\r\n        break;\r\n      case 'jump':\r\n        return 'Jump Height'\r\n        break;\r\n      case 'reload':\r\n        return 'Reload Speed'\r\n        break;\r\n      case 'defense':\r\n        return 'Defense'\r\n        break;\r\n      case 'melee':\r\n        return 'Melee Attack Power'\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n      {\r\n        subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1\r\n        ?\r\n          subMenuType === type + UPGRADE_SUB_MENU\r\n          ?\r\n            <Modal\r\n              label={`Upgrade ${ getAttrName(type) } to lvl. ${ upgradeTiers[type].current + 1 }?`}\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( upgradeCosts[type] ) )\r\n                dispatch( addPurchase(`${getAttrName(type)} Boost`, upgradeCosts[type]) )\r\n                dispatch( upgradeTypes[type]() )\r\n                toDefaultSubMenu()\r\n              }}\r\n              clickCancelHandler={() => {\r\n                toDefaultSubMenu()\r\n              }}\r\n              />\r\n          : null\r\n        :\r\n        <>\r\n          <CustomMenuButton\r\n            width={getAttrName(type).length > 14 ? 340 : 240 }\r\n            onClick={() => {\r\n              if (credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max) {\r\n                setSubMenuType( type + UPGRADE_SUB_MENU )\r\n              } else {\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }\r\n            }}>\r\n            { getAttrName(type) } { upgradeTiers[type].current !== upgradeTiers[type].max ? 'Lvl.' : '' }{ upgradeTiers[type].current !== upgradeTiers[type].max ? upgradeTiers[type].current + 1 : '' } - <span style={{ color: credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max ? '#189969' : 'red' }}>\r\n            {\r\n              upgradeTiers[type].current < upgradeTiers[type].max\r\n              ? `$${upgradeCosts[type]}`\r\n              : 'MAXED'\r\n            }</span>\r\n          </CustomMenuButton>\r\n          <br/>\r\n        </>\r\n      }\r\n  </>\r\n  )\r\n}\r\n\r\nfunction ModSubMenu ({ type, setSubMenuType }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const modTiers = useSelector(state => state.game.player.modTiers)\r\n  const modCosts = useSelector(state => state.game.player.modCosts)\r\n  const ammoCapacity = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const getWepText = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        return 'Pistol'\r\n      case WEAPON_TYPE_SMG:\r\n        return 'SMG'\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        return 'SHOTGUN'\r\n      default:\r\n    }\r\n  }\r\n  let wepTxt = getWepText(type)\r\n  const getModDescription = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'RATE OF FIRE MAXED!' : 'Upgrade Rate-of-Fire'\r\n      case 'powder':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'FIREPOWER MAXED!' : 'Increase Firepower'\r\n      case 'sight':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'ACCURACY MAXED!' : 'Upgrade Accuracy'\r\n      case 'mag':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'AMMO CAP MAXED!' : 'Increase Ammo Capacity'\r\n      default:\r\n    }\r\n  }\r\n  const mods = ['rof', 'powder', 'sight', 'mag']\r\n  const [selectedMod, setSelectedMod] = React.useState(null)\r\n  const [selectedType, setSelectedType] = React.useState(null)\r\n  const modPurchaseName = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return `Rate of fire boost for the ${type}`\r\n      case 'powder':\r\n        return `Firepower boost for the ${type}`\r\n      case 'sight':\r\n        return `Accuracy boost for the ${type}`\r\n      case 'mag':\r\n        return `Magazine ammo capacity boost for the ${type}`\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Inline style={{ marginLeft: '40px' }}>\r\n        {\r\n          selectedMod && selectedType ?\r\n          <>\r\n            <Modal\r\n              label={`${getWepText(selectedType)} ${ getModDescription(selectedMod, selectedType) } lvl.${ modTiers[selectedMod][selectedType].current + 1 }?`}\r\n              labelClr={ modTiers[selectedMod][selectedType].current === modTiers[selectedMod][selectedType].max ? 'red' : 'white' }\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( modCosts[selectedMod][selectedType] ) )\r\n                dispatch( addPurchase(modPurchaseName(selectedMod, selectedType), modCosts[selectedMod][selectedType]) )\r\n                dispatch( attachMod(selectedMod, selectedType) )\r\n                if (selectedMod === 'mag') {\r\n                  dispatch( addToTotalAmmo(selectedType, ammoCapacity[selectedType]) )\r\n                  let wepUI = gameObjects.getKeyValue('weapons-ui')\r\n                  wepUI.updateWeaponMagazines(selectedType)\r\n                }\r\n                if (selectedMod === 'sight') {\r\n                  dispatch( showLaserSight(selectedType) )\r\n                }\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n              clickCancelHandler={() => {\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n            />\r\n          </>\r\n          :\r\n          mods.map((mod, i) => (\r\n            <React.Fragment key={i}>\r\n              <CustomMenuButton onClick={() => {\r\n                if (credits >= modCosts[mod][type] && modTiers[mod][type].current < modTiers[mod][type].max) {\r\n                  setSelectedMod(mod)\r\n                  setSelectedType(type)\r\n                } else {\r\n                  let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                  snd.play()\r\n                }\r\n              }} width={520}>{wepTxt}: {getModDescription(mod, type)} { modTiers[mod][type].current === modTiers[mod][type].max ? '' : ' - lvl.' } { modTiers[mod][type].current < modTiers[mod][type].max ? modTiers[mod][type].current + 1 : '' }{ modTiers[mod][type].current < modTiers[mod][type].max ? '-' : '' }<span style={{ color: credits >= modCosts[mod][type] && modTiers[mod][type].current !== modTiers[mod][type].max ? '#189969' : 'red' }}>\r\n                {`\r\n                  ${\r\n                    modTiers[mod][type].current === modTiers[mod][type].max ?\r\n                    '' : `$${ modCosts[mod][type] }`\r\n                  }`\r\n                }\r\n                </span>\r\n              </CustomMenuButton>\r\n              <br/>\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </Inline>\r\n      {\r\n        !selectedMod && !selectedType ?\r\n        <Inline>\r\n          <CustomMenuButton\r\n          onClick={ () => { setSubMenuType(DEFAULT_SUBMENU) }}\r\n          width={80}\r\n          height={30}\r\n          hoverborder={'red'}\r\n          style={{\r\n            marginLeft: '10px'\r\n          }}\r\n          >\r\n            close\r\n          </CustomMenuButton>\r\n        </Inline>\r\n        : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ShopMenu () {\r\n\r\n  const [menuType, setMenuType] = React.useState(STANDARD_MENU)\r\n  const [subMenuType, setSubMenuType] = React.useState(DEFAULT_SUBMENU)\r\n\r\n  const dispatch = useDispatch()\r\n  const game = useSelector(state => state.game)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const { gameObjects } = window\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const player = gameObjects.getKeyValue('player')\r\n\r\n  const continueToNextWave = () => {\r\n    screenUI.unpause()\r\n    dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  }\r\n\r\n  const toDefaultSubMenu = () => {\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const toAmmoMenu = () => {\r\n    setMenuType( AMMO_MENU )\r\n  }\r\n  \r\n  const toHealthkitMenu = () => {\r\n    setMenuType( HEALTHKIT_MENU )\r\n  }\r\n\r\n  const toPlayerAttrMenu = () => {\r\n    setMenuType( PLAYER_ATTRIBUTES_MENU )\r\n  }\r\n\r\n  const backToStandardMenu = () => {\r\n    setMenuType( STANDARD_MENU )\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const openAmmoSubMenu = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        setSubMenuType( PISTOL_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SMG:\r\n        setSubMenuType( SMG_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        setSubMenuType( SHOTGUN_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_GRENADE:\r\n        setSubMenuType( GRENADES_AMMO_SUBMENU )\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  const toWeaponModsMenu = () => {\r\n    setMenuType( WEAPON_MODS_MENU )\r\n  }\r\n\r\n  const toNewWeaponsMenu = () => {\r\n    setMenuType( BUY_NEW_WEAPONS_MENU )\r\n  }\r\n\r\n  const getHealthkitCostStyle = (kitType) => {\r\n    let condition = (\r\n      game.player.credits > game.consumables.healthkit[kitType].cost &&\r\n      game.player.health < 100\r\n    )\r\n    return {\r\n      color: condition ? '#189969' : 'red',\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (menuType === BUY_NEW_WEAPONS_MENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1) {\r\n      dispatch(\r\n        setAchievementOwned( AchievementDefs.WEAPONS_EXPERT )\r\n      )\r\n      updateScore( game.scoreAmounts.achievement )\r\n      backToStandardMenu()\r\n    }\r\n\r\n  }, [ game.player.weapons.list, menuType ])\r\n\r\n  React.useEffect(() => {\r\n\r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.PISTOL_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SMG].current === game.player.modTiers['rof'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SMG].current === game.player.modTiers['powder'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SMG].current === game.player.modTiers['sight'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SMG].current === game.player.modTiers['mag'][WEAPON_TYPE_SMG].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SMG_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SHOTGUN_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n      if (\r\n        game.achievements[ AchievementDefs.PISTOL_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SMG_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SHOTGUN_MODDER ].owned\r\n        ) {\r\n          dispatch(\r\n            setAchievementOwned( AchievementDefs.MOD_AFICIONADO )\r\n          )\r\n          updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n  }, [ game.player.modTiers ])\r\n\r\n  return (\r\n    <>\r\n      <Container width={ w * .75 } height={ h * .75 }>\r\n          <Backing width={ w * .75 } height={ h * .75 }/>\r\n          <MenuTitle>Shop</MenuTitle>\r\n          <MenuButtonContainer width={ w }>\r\n            {\r\n              menuType === STANDARD_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton width={350} onClick={ () => { toAmmoMenu() } }>Buy Ammo &amp; Grenades</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toHealthkitMenu() } }>Buy Health Kits</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { setMenuType(PERKS_MENU) } }>Perks</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toPlayerAttrMenu() } }>Upgrade Player</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toWeaponModsMenu() } }>Weapon Mods</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    null\r\n                    :\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={ () => { toNewWeaponsMenu() } }>Buy New Weapons</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ backToShopQuery }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === AMMO_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === PISTOL_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_PISTOL }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_PISTOL) } }>\r\n                          Buy Pistol Ammo\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SMG_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SMG }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SMG) } }>\r\n                            Buy SMG Ammo\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === GRENADES_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_GRENADE }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_GRENADE) } }>\r\n                          Buy Grenades\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SHOTGUN_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SHOTGUN }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SHOTGUN) } }>\r\n                            Buy Shotgun Shells\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton\r\n                    onClick={ () => { backToStandardMenu() } }>\r\n                  </BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === HEALTHKIT_MENU ?\r\n              <>\r\n              <MenuButtonSpacer>\r\n                <Inline>\r\n                  <MenuButtonSpacer>\r\n                    <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={() => {\r\n                        let amount\r\n                        if (game.player.health < 100) {\r\n                          if (game.player.health + 20 > 100) { amount = 100 }\r\n                          else { amount = game.player.health + 20 }\r\n                          player.acceptHealth( amount )\r\n                          dispatch( subtractFromTotalCredits(game.consumables.healthkit['20'].cost) )\r\n                          dispatch( addPurchase('+20 Healthkit', game.consumables.healthkit['20'].cost) )\r\n                          let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                          snd.play()\r\n                        } else {\r\n                          let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                          snd.play()\r\n                        }\r\n                      }}>+20 Healthkit - <span\r\n                      style={ getHealthkitCostStyle('20') }\r\n                      >\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['20'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                        width={ 300 }\r\n                        onClick={() => {\r\n                          let amount\r\n                          if (game.player.health < 100) {\r\n                            if (game.player.health + 50 > 100) { amount = 100 }\r\n                            else { amount = game.player.health + 50 }\r\n                            player.acceptHealth( amount )\r\n                            dispatch( subtractFromTotalCredits(game.consumables.healthkit['50'].cost) )\r\n                            dispatch( addPurchase('+50 Healthkit', game.consumables.healthkit['50'].cost) )\r\n                            let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                            snd.play()\r\n                          } else {\r\n                            let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>+50 Healthkit - <span\r\n                        style={ getHealthkitCostStyle('50') }>\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['50'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <CustomMenuButton\r\n                    width={ 300 }\r\n                    onClick={() => {\r\n                      if (game.player.health < 100) {\r\n                        player.acceptHealth( 100 )\r\n                        dispatch( subtractFromTotalCredits(game.consumables.healthkit['full'].cost) )\r\n                        dispatch( addPurchase('Full Healthkit', game.consumables.healthkit['full'].cost) )\r\n                      let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                        snd.play()\r\n                      } else {\r\n                        let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                        snd.play()\r\n                      }\r\n                    }}>Full Healthkit - <span\r\n                    style={ getHealthkitCostStyle('full') }>\r\n                    { game.player.health < 100 ? `${game.consumables.healthkit['full'].cost}` : 'Health Full' }\r\n                    </span>\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ () => { backToStandardMenu() } }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PLAYER_ATTRIBUTES_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RUN_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_JUMP_FORCE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RELOAD_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_DEFENSE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_MELEE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1 ? null                  \r\n                    :\r\n                    <MenuButtonSpacer>\r\n                      <BackButton\r\n                        onClick={ () => {\r\n                          backToStandardMenu()\r\n                        }}>\r\n                          Back\r\n                      </BackButton>\r\n                    </MenuButtonSpacer>\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PERKS_MENU ?\r\n              <>\r\n                <div\r\n                onClick={() => {\r\n                  setMenuType(STANDARD_MENU)\r\n                }}\r\n                style={{\r\n                  top: 0,\r\n                  right: '20px',\r\n                  marginTop: '-40px',\r\n                  position: 'absolute'\r\n                }}>\r\n                  <BackButton\r\n                  width={50}\r\n                  arrowOnly={true}\r\n                  />\r\n                </div>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['magnetism'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='increase-magnetism'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magnetism'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magnetism'].cost) )\r\n                            dispatch( setPlayerMagnetism(1200, 4) )\r\n                            dispatch( addPurchase('Magnetism perk', game.player.perks['magnetism'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Increase Magnetism\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magnetism'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magnetism'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='increase-magnetism' type='dark'>\r\n                        <span>\r\n                          Will increase the effect of items being drawn to you for easy pick up\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['magDmg'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='mag-damage'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magDmg'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magDmg'].cost) )\r\n                            dispatch( setPlayerMagDamage() )\r\n                            dispatch( addPurchase('Mag Damage perk', game.player.perks['magDmg'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Magazine Damage\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magDmg'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magDmg'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='mag-damage' type='dark'>\r\n                        <span>\r\n                          Ejected magazines will damage enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['lastBullet'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='last-bullet'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['lastBullet'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['lastBullet'].cost) )\r\n                            dispatch( setPlayerLastBullet() )\r\n                            dispatch( addPurchase('Last Bullet Extra Damage perk', game.player.perks['lastBullet'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Last Round\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['lastBullet'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['lastBullet'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='last-bullet' type='dark'>\r\n                        <span>\r\n                          Last bullet fired will cause greater damage to enemies \r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['creditDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='credit-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['creditDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['creditDropper'].cost) )\r\n                            dispatch( setPlayerCreditDropper() )\r\n                            dispatch( addPurchase('Credit Dropper perk', game.player.perks['creditDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Credit Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['creditDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['creditDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='credit-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will drop more credits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['ammoDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='ammo-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['ammoDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['ammoDropper'].cost) )\r\n                            dispatch( setPlayerAmmoDropper() )\r\n                            dispatch( addPurchase('Ammo Dropper perk', game.player.perks['ammoDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Ammo Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['ammoDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['ammoDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='ammo-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop ammunition\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['healthDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='health-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['healthDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['healthDropper'].cost) )\r\n                            dispatch( setPlayerHealthDropper() )\r\n                            dispatch( addPurchase('Health Dropper perk', game.player.perks['healthDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Health Dropper\r\n                          <span\r\n                              style={{\r\n                                color: (\r\n                                  credits >= game.player.perks['healthDropper'].cost ? 'green' : 'red'\r\n                                )\r\n                              }}>\r\n                                &nbsp;${game.player.perks['healthDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='health-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop small health kits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['quickTurret'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='quick-turret'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['quickTurret'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['quickTurret'].cost) )\r\n                            dispatch( setPlayerQuickTurret() )\r\n                            dispatch( addPurchase('Turret Upgrade perk', game.player.perks['quickTurret'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Quick Turrets\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['quickTurret'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['quickTurret'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='quick-turret' type='dark'>\r\n                        <span>\r\n                          Any placed machine gun turrets will now have less delay between fired shots and slightly more range\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['barrierPlus'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='barrier-plus'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['barrierPlus'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['barrierPlus'].cost) )\r\n                            dispatch( setPlayerBarrierPlus() )\r\n                            dispatch( addPurchase('Barrier Plus+ perk', game.player.perks['barrierPlus'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Barrier Plus\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['barrierPlus'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['barrierPlus'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='barrier-plus' type='dark'>\r\n                        <span>\r\n                          Placed barriers will now have increased strength to ward of oncoming enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['cluck'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='big-cluster'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['cluck'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['cluck'].cost) )\r\n                            dispatch( setPlayerFusterCluck() )\r\n                            dispatch( addPurchase('Fuster Cluck perk', game.player.perks['cluck'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Fuster Cluck\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['cluck'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['cluck'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='big-cluster' type='dark'>\r\n                        <span>\r\n                          Cluster bombs will now expel more explosives\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === BUY_NEW_WEAPONS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                            if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) {\r\n                              batch(() => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) )\r\n                                dispatch(\r\n                                  addPurchase('Submachine Gun', game.player.weapons.buyWeapons[WEAPON_TYPE_SMG])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SMG) )\r\n                              })\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                         Buy Submachine Gun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                          if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) {\r\n                            batch(\r\n                              () => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) )\r\n                                dispatch(\r\n                                  addPurchase('Shotgun', game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SHOTGUN) )\r\n                              }\r\n                              )\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                        Buy Shotgun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={() => { backToStandardMenu() }} />\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === WEAPON_MODS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer style={{ marginTop: '-15px' }}>\r\n                  {\r\n                    subMenuType === PISTOL_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_PISTOL} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SMG_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SMG} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SHOTGUN_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SHOTGUN} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === DEFAULT_SUBMENU ?\r\n                    <>\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={() => { setSubMenuType(PISTOL_MODS_SUBMENU) }}>Pistol Mods</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                      {\r\n                         game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SMG_MODS_SUBMENU) }}>SMG Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null \r\n                      }\r\n                      {\r\n                        game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SHOTGUN_MODS_SUBMENU) }}>Shotgun Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null\r\n                      }\r\n                      <MenuButtonSpacer style={{ marginTop: '40px' }}>\r\n                        <BackButton onClick={ backToStandardMenu }>Back</BackButton>\r\n                      </MenuButtonSpacer>\r\n                    </>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n          </MenuButtonContainer>\r\n        </Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport MenuComponents from './MenuComponents'\r\nimport { BackButton, CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\n\r\nexport default ({ backBtnFn }) => {\r\n\r\n  const { gameObjects } = window\r\n  const state = useSelector(state => state)\r\n  let achievementsKeys = Object.keys(state.game.achievements)\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container\r\n      width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n      height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n      >\r\n        <MenuComponents.Backing\r\n        width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n        height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n        ></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>Achievements</MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n            {\r\n              achievementsKeys.map(key => {\r\n                if (state.game.achievements[key].owned) {\r\n                  return (\r\n                    <React.Fragment key={key}>\r\n                    <Inline>\r\n                      <MenuComponents.MenuButtonSpacer data-tip data-for={key+'-description'}>\r\n                        <CustomMenuButton>\r\n                          {key}\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                    <ReactTooltip id={key+'-description'}>\r\n                      <span>\r\n                        Earned by: {state.game.achievements[key].description}\r\n                      </span>\r\n                    </ReactTooltip>\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n          <CornerBackButton marginTop={'-60px'} onClick={ backBtnFn } />\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport { decrementWave, gameStateTransition, setWaveCountToDefeat, toggleZombieHealthDisplay, toggleFilterEffects, setZombiesOnStage, StatsDefs } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport store from '../../../app/store'\r\nimport { CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { Children } from 'react'\r\nimport { batch, useDispatch, useSelector } from 'react-redux'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport updateScore from '../utils/updateScore'\r\nimport AchievementsView from './AchievementsView'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const resetWave = () => {\r\n  const screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  const player = window.gameObjects.getKeyValue('player')\r\n  // remove existing zombies, if any\r\n  let zombies = window.gameObjects.getKeyValue('zombies')\r\n  while(zombies.length > 0) {\r\n    zombies.forEach(z => { z.kill(null, true) })\r\n  }\r\n  window.gameObjects.setKeyValue('zombies', [])\r\n  screenUI.unpause()\r\n  if (player.dead) {\r\n    screenUI.respawn()\r\n  }\r\n}\r\n\r\nexport const gotoMainMenu = () => {\r\n  const dispatch = store.dispatch\r\n  resetWave()\r\n  batch(() => {\r\n    dispatch( setZombiesOnStage(0) )\r\n    dispatch( setWaveCountToDefeat(null) )\r\n    dispatch(gameStateTransition('sub', store.getState().game.gameSubState, SubStates.NEUTRAL))\r\n    dispatch( gameStateTransition('main', store.getState().game.gameState, GameStates.MAIN_MENU))\r\n  })\r\n}\r\n\r\nexport const NoTransitionButton = ({ bgcolor, bordercolor, hoverborder, hovercolor, width, height, children }) => (\r\n  <CustomMenuButton\r\n  onMouseOver={ null }\r\n  width={ width ? width : '200px' }\r\n  height={ height ? height : '60px' }\r\n  hovercolor={ hovercolor ? hovercolor : '#222' }\r\n  hoverborder={ hoverborder ? hoverborder : '#333' }\r\n  bordercolor={ bordercolor ? bordercolor : '#333' }\r\n  bgcolor={ bgcolor ? bgcolor : '#222' }\r\n  cancelTransition={true}\r\n  >\r\n    { children }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const Stat = ({ label, stat }) => {\r\n  return (\r\n    <MenuButtonSpacer padding={ 1 }>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 200 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { label }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 400 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.4)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.5)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { stat }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n    </MenuButtonSpacer>\r\n  )\r\n}\r\n\r\nexport default function PauseMenu (props) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const stats = useSelector(state => state.game.stats)\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const pauseMenuStates = {\r\n    DEFAULT: 'Default',\r\n    ACHIEVEMENTS: 'achievements',\r\n    CONTROLS: 'Controls',\r\n    OPTIONS: 'Options',\r\n    STATS: 'Stats',\r\n  }\r\n\r\n  const showControls = () => {\r\n    setPauseMenuState(pauseMenuStates.CONTROLS)\r\n  }\r\n\r\n  const showOptions = () => {\r\n    setPauseMenuState(pauseMenuStates.OPTIONS)\r\n  }\r\n\r\n  const showDefault = () => {\r\n    setPauseMenuState(pauseMenuStates.DEFAULT)\r\n  }\r\n\r\n  const seeScoreboard = () => {\r\n    dispatch(\r\n      gameStateTransition('main', GameStates.MAIN_MENU, GameStates.SCORES_VIEW)\r\n    )\r\n  }\r\n\r\n  const showStats = () => {\r\n    setPauseMenuState(pauseMenuStates.STATS)\r\n  }\r\n\r\n  const [pauseMenuState, setPauseMenuState] = React.useState(pauseMenuStates.DEFAULT)\r\n\r\n  const resumeGame = () => { window.gameObjects.getKeyValue('screen-ui').togglePause() }\r\n\r\n  const playGame = () => {\r\n    dispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n    dispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n  }\r\n\r\n  const showAchievements = () => {\r\n    setPauseMenuState(pauseMenuStates.ACHIEVEMENTS)\r\n  }\r\n\r\n  const effectFilters = useSelector(state => state.game.filterEffects)\r\n\r\n  const toggleFilters = () => {\r\n    dispatch( toggleFilterEffects(!effectFilters) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => zombie.checkFilters())\r\n    let ammos = window.gameObjects.getKeyValue('ammo-drops-by-type')\r\n    ammos[WEAPON_TYPE_SMG]\r\n    .concat(ammos[WEAPON_TYPE_PISTOL])\r\n    .concat(ammos[WEAPON_TYPE_SHOTGUN])\r\n    .forEach(ammo => ammo.checkFilters())\r\n    let credits = window.gameObjects.getKeyValue('currency-drops')\r\n    credits.forEach(credit => credit.checkFilters())\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    healths.forEach(health => health.checkFilters())\r\n    let player = window.gameObjects.getKeyValue('player')\r\n    player.checkFilters()\r\n    let weaponsUI = window.gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.checkFilters()\r\n  }\r\n\r\n  const displayZombieHealth = useSelector(state => state.game.displayZombieHealth)\r\n\r\n  const toggleZombieHealth = () => {\r\n    dispatch( toggleZombieHealthDisplay(!displayZombieHealth) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => {\r\n      zombie.displayHealth(!displayZombieHealth)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {\r\n      gameObjects ?\r\n        <Container style={{ top: props.margintop ? '100px' : 0 }} width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }>\r\n          { \r\n            props.hidebg ? null :\r\n            <>\r\n              <Backing bgcolor={ '#222' } opacity={ gameState === GameStates.MAIN_MENU ? .35 : .5 } width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }/>\r\n            </>\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.DEFAULT ?\r\n            <>\r\n              {\r\n                props.hidetitle ? null\r\n                : <MenuTitle>Pause Menu</MenuTitle>\r\n              }\r\n              <MenuButtonContainer width={ w ? w : 0 }>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 6 }>\r\n                  {\r\n                    props.playbtn ?\r\n                      <CustomMenuButton\r\n                      height={ 40 }\r\n                      onClick={ playGame }>\r\n                        Play Game\r\n                      </CustomMenuButton>\r\n                    :\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ resumeGame }>\r\n                        Resume Game\r\n                      </CustomMenuButton>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                {\r\n                  gameState !== GameStates.MAIN_MENU ?\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ gotoMainMenu }>\r\n                        Main Menu\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  :\r\n                    <MenuButtonSpacer padding={2}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ seeScoreboard }>\r\n                        Scoreboard\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                }\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showControls }>\r\n                    View Controls\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showOptions }>\r\n                    Options\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showStats }>\r\n                    Stats\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showAchievements }>\r\n                    Achievements\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.ACHIEVEMENTS ?\r\n            <AchievementsView backBtnFn={ showDefault } /> : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.CONTROLS ?\r\n            <>\r\n              <MenuTitle>Controls</MenuTitle>\r\n              <MenuButtonContainer width={ w }>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Jump: W</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Left: A</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Right: D</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Melee Weapon Bash: F</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Aim: Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Shoot: Left Mouse</CustomMenuButton>\r\n                </Inline>\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Charge Grenade Throw: Hold G / Right Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Change Weapon: Space / Mouse Wheel</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Turn Turret: L/R Arrow (while placing)</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Detonate remote mines: Numpad  1 - 9</CustomMenuButton>\r\n                </Inline>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.OPTIONS ?\r\n            <>\r\n              <MenuTitle>Options</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Effect Filters?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='effects-filter'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ effectFilters ? 'white' : 'red' }\r\n                      onClick={ toggleFilters }>\r\n                        <span\r\n                        style={{ color: effectFilters ? 'white' : 'red' }}>\r\n                        { effectFilters ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='effects-filter'>\r\n                      <span >\r\n                        Adds filter effects like glow and motion blur to animations. Turning off could improve performance.\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Display Zombie Health?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='display-zombie-health'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ displayZombieHealth ? 'white' : 'red' }\r\n                      onClick={ toggleZombieHealth }>\r\n                        <span\r\n                        style={{ color: displayZombieHealth ? 'white' : 'red' }}>\r\n                        { displayZombieHealth ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='display-zombie-health'>\r\n                      <span >\r\n                        Displays a yellow text box above each enemy zombie\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.STATS ?\r\n            <>\r\n              <MenuTitle>Stats</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Stat label={ 'Shots Fired' } stat={ stats.bulletsFired } />\r\n                <Stat label={ 'Mags Changed' } stat={ stats.timesReloaded } />\r\n                <Stat label={ 'Grenades Thrown' } stat={ stats.grenadesThrown } />\r\n                <Stat label={ 'Zombies Killed' } stat={ stats.zombiesKilled } />\r\n                <Stat label={ 'Deaths' } stat={ stats.timesKilled } />\r\n                {/* <Stat label={ 'Respawns' } stat={ stats.timesRespawned } /> */}\r\n                \r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n        </Container>\r\n      : null\r\n    }\r\n    </>\r\n  )\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { gameStateTransition, setShowingMessage } from './gameSlice'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { getBodyHeight } from './utils/Utils'\r\nimport { resetWave } from './ReactComponents/PauseMenu'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const createWaveMessage = txt => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: '#FFFFFF',\r\n\t\tfontSize: 40,\r\n    fontWeight: 'bold'\r\n  }, {\r\n    chars: [\r\n      ['a', 'z'],\r\n      ['0', '9'],\r\n      ['A', 'Z'],\r\n      ' .!?'\r\n    ]\r\n  })\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n  } = window\r\n  // let screenUI = gameObjects.getKeyValue('screen-ui')\r\n  let player = gameObjects.getKeyValue('player')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/5\r\n\r\n  container.addChild(text)\r\n  \r\n  const transitionToShopQuery = () => {\r\n    resetWave() // in case any zombies are roaming\r\n    if (getState().game.gameState === GameStates.MAIN_MENU || getState().game.gameState === GameStates.PAUSE) {\r\n      if (getState().game.gameSubState === SubStates.WAVE_DEFEATED || getState().game.gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.NEUTRAL))\r\n      }\r\n    } else {\r\n      if (!player.dead) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n        container.removeChild(text)\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const waveMsgOutro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgOutro, 2000)\r\n    } else {\r\n      to(text, .75, {\r\n        delay: 2,\r\n        x: gameWidth * 1.5,\r\n        ease: Power1.easeIn,\r\n        onComplete: transitionToShopQuery\r\n      })\r\n    }\r\n  }\r\n\r\n  const waveMsgIntro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgIntro, 2000)\r\n    } else {\r\n      from(text, .75, {\r\n        x: -100,\r\n        alpha: 0,\r\n        onComplete: waveMsgOutro\r\n      })\r\n    }\r\n  }\r\n\r\n  waveMsgIntro()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createGenericMessage = (txt, fillColor, durationMotion, durationLinger) => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: fillColor,\r\n\t\tfontSize: 40,\r\n\t\tfontWeight: 'bold'\r\n\t})\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n\t} = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/2\r\n\r\n\tcontainer.addChild(text)\r\n\r\n\tfrom(text, durationMotion, {\r\n\t\tx: -100,\r\n\t\talpha: 0,\r\n\t\tonStart: () => {\r\n\t\t\tdispatch( setShowingMessage(true) )\r\n\t\t},\r\n\t\tonComplete: () => {\r\n\t\t\tto(text, durationMotion, {\r\n\t\t\t\tdelay: durationLinger,\r\n\t\t\t\tx: gameWidth * 1.5,\r\n\t\t\t\tease: Power1.easeIn,\r\n\t\t\t\tonComplete: () => {\r\n\t\t\t\t\tdispatch( setShowingMessage(false) )\r\n\t\t\t\t\tcontainer.removeChild(text)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createTextMessage = (txt, fill, durationMotion, durationLinger, fontSize) => {\r\n\r\n  let {\r\n    gameObjects,\r\n    TweenLite: { to, set }\r\n  } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let texts = gameObjects.getKeyValue('text-messages')\r\n  let playerBody = gameObjects.getKeyValue('player').body\r\n  let msg = new PIXI.Text(txt, { fill, fontSize: fontSize ? fontSize : 13, fontWeight: 'bold' })\r\n  msg.pivot.x = msg.width * .5\r\n  msg.pivot.y = msg.height * .5\r\n  container.addChild(msg)\r\n\r\n  let { game: { player: { position: playerPosition } } } = getState()\r\n  let initialY = playerPosition.y - (getBodyHeight(playerBody) * .65)\r\n\r\n  texts.push(msg)\r\n\r\n  set(msg, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20)\r\n  })\r\n\r\n  to(msg, durationMotion, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20) - 20,\r\n    onComplete: () => {\r\n      to(msg, durationMotion, {\r\n        delay: durationLinger,\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          msg.destroy()\r\n          let idx = texts.indexOf(msg)\r\n          if (idx > -1) {\r\n            texts.splice(idx, 1)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n}\r\n","import { Bodies, Body, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport random from 'random'\r\n\r\nlet { TweenLite: { delayedCall, to } } = window\r\n\r\nexport default function Gib ({ position_x, position_y }, { force_x, force_y }, timeToDisappear) {\r\n  let { gameObjects } = window\r\n  let gibs = gameObjects.getKeyValue('gibs')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let body = Bodies.circle(position_x, position_y, 5, {\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  body.label = 'gib'\r\n  World.add(world, body)\r\n\r\n  let getTexturePNG = () => {\r\n    let gibs = [ 'gib.png', 'gib2.png', 'gib3.png', 'gib4.png' ]\r\n    return gibs[ Math.floor( Math.random() * gibs.length ) ]\r\n  }\r\n  \r\n  let partsSheet = gameObjects.getKeyValue('player-parts-sheet')\r\n  let gfc = new Sprite(\r\n    partsSheet.textures[ getTexturePNG() ]\r\n  )\r\n  container.addChild( gfc )\r\n  \r\n  gibs.push( this )\r\n\r\n  gfc.pivot.x = gfc.width * .5\r\n  gfc.pivot.y = gfc.height * .475\r\n\r\n  Body.applyForce(body, { x: position_x, y: position_y }, { x: random.float(force_x * .25, force_x), y: random.float(force_y * .25, force_y) })\r\n  \r\n  this.animate = renderFn => {\r\n    let { x, y, rotation: rot } = renderFn(body)\r\n    gfc.position = { x, y }\r\n    gfc.rotation = rot\r\n  }\r\n\r\n  this.destroy = () => {\r\n    if (gfc) {\r\n      gfc.destroy()\r\n    }\r\n    if (body) {\r\n      World.remove(world, body)\r\n    }\r\n    let idx = gibs.indexOf(this)\r\n    if ( idx > -1 ) {\r\n      gibs.splice( idx, 1 )\r\n    }\r\n    world = null\r\n    body = null\r\n    container = null\r\n    gibs = null\r\n    gameObjects = null\r\n  }\r\n\r\n  delayedCall(timeToDisappear, () => {\r\n    to(gfc, 2, { alpha: 0, onComplete: () => { this.destroy() }})\r\n  })\r\n\r\n  return this\r\n\r\n}\r\n\r\nexport function GibGenerator (count, position, force, timeToDisappear) {\r\n  let { x: position_x, y: position_y } = position\r\n  force = force || { force_x: 0, force_y: 0 }\r\n  let { x: force_x, y: force_y } = force\r\n  // add some gibs for effect!\r\n\tfor (let gibCnt = 0; gibCnt < count; ++gibCnt) {\r\n\t\tnew Gib({ position_x, position_y }, { force_x, force_y }, timeToDisappear)\r\n\t}\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { GibGenerator } from '../items/Gib'\r\n\r\nexport function PlayerRagdollDecap ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 60 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet maskBody = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  // let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n\t// spineToHead really\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  // let spineToLower = Constraint.create({\r\n  //   bodyA: bodyLower,\r\n  //   bodyB: lower_spineLinks[0],\r\n  //   pointA: { x: 0, y: -bLower.h/2 },\r\n  //   pointB: { x: 0, y: -spine.h/2 },\r\n  //   length: 10\r\n  // })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, maskBody, bodyUpper, //bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['head_gore.png'] )\r\n\tskull._id = 'skull'\r\n\tspriteParts.push( skull )\r\n\t\r\n  let mask = new PIXI.Sprite( parts_spritesheet.textures['mask.png'] )\r\n\tmask._id = 'mask'\r\n  spriteParts.push( mask )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\t// lower_spineLinks.forEach(link => {\r\n  //   let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n  //   entrailGfx.push( entrailGfc )\r\n  //   spriteParts.push( entrailGfc )\r\n  // })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_headless.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  // let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\t// torsoLower._id = 'torso lower'\r\n  // spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.mask = maskBody\r\n  this.bodyUpper = bodyUpper\r\n  // this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => {\r\n\t\t\tsprite.destroy()\r\n\t\t\tsprite = null\r\n\t\t})\r\n\t\tWorld.remove(world, this.composite)\r\n\t\tthis.composite = null\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet maskPos = renderFnc(this.mask)\r\n\t\tmask.position = maskPos\r\n\t\tmask.rotation = maskPos.rotation\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a head constraint\r\n\tComposite.remove(this.composite, bodyToHead)\r\n\tBody.applyForce(this.head, this.head.position, { x: 0, y: -0.1 })\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollHalved ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 35 }\r\n\tlet bLower = { w: 45, h: 5 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n  let bodyLower = Bodies.rectangle(x, y, bLower.w, bLower.h)\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = [], entrailGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: bodyUpper,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: bUpper.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  let spineToLower = Constraint.create({\r\n    bodyA: bodyLower,\r\n    bodyB: lower_spineLinks[0],\r\n    pointA: { x: 0, y: -bLower.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper, bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n  Composite.add(this.composite, lower_spineLinks)\r\n  Composite.add(this.composite, lower_spineConstraints)\r\n  Composite.add(this.composite, spineToLower)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\tlower_spineLinks.forEach(link => {\r\n    let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n    entrailGfx.push( entrailGfc )\r\n    spriteParts.push( entrailGfc )\r\n  })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_upper_gore.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\ttorsoLower._id = 'torso lower'\r\n  spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n  this.bodyUpper = bodyUpper\r\n  this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlower_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      entrailGfx[i].position = linkPos\r\n      entrailGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n\r\n    let torsoLowerPos = renderFnc(this.bodyLower)\r\n\t\ttorsoLower.position = torsoLowerPos\r\n\t\ttorsoLower.rotation = torsoLowerPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollMaim ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')  //gameObjects.getKeyValue('zombie-parts-sheet') //gameObjects.getKeyValue('z-parts-spritesheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull_gore.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach arm constraints\r\n\tComposite.remove(this.composite, [ bodyUpperToArmUpperL, bodyUpperToArmUpperR ])\r\n\tBody.applyForce(this.armLowerL, this.armLowerL.position, { x: -0.01, y: -0.1 })\r\n\tBody.applyForce(this.armLowerR, this.armUpperR.position, { x: 0.01, y: -0.1 })\r\n\r\n\t// auto removal\r\n\t// delayedCall(3, this.destroy)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function PlayerRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}","import { World } from 'matter-js'\r\nimport { AnimatedSprite } from 'pixi.js'\r\n\r\nexport const BLOOD_SPURT_TYPE_1 = 'blood spurt type 1'\r\nexport const BLOOD_SPURT_TYPE_2 = 'blood spurt type 2'\r\nexport const BLOOD_SPURT_TYPE_3 = 'blood spurt type 3'\r\n\r\nlet { TweenLite: { set } } = window\r\n\r\nexport default function BloodSpurt (type, position, scale, bodyToDelete) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n\r\n  let chosenSpurt = null\r\n  \r\n  let bloodSpurt1_sheet = gameObjects.getKeyValue('blood-spurt-1')\r\n  let bloodSpurt1 = new AnimatedSprite( bloodSpurt1_sheet.animations['blood_spurt_1'] )\r\n  \r\n  let bloodSpurt2_sheet = gameObjects.getKeyValue('blood-spurt-2')\r\n  let bloodSpurt2 = new AnimatedSprite( bloodSpurt2_sheet.animations['blood_spurt_2'] )\r\n  \r\n  let bloodSpurt3_sheet = gameObjects.getKeyValue('blood-spurt-3')\r\n  let bloodSpurt3 = new AnimatedSprite( bloodSpurt3_sheet.animations['blood_spurt_3'] )\r\n  \r\n  // randomize the returned spurt\r\n  let spurts = [ BLOOD_SPURT_TYPE_1, BLOOD_SPURT_TYPE_2, BLOOD_SPURT_TYPE_3 ]\r\n  let autoChosen = spurts[ Math.floor( Math.random() * spurts.length ) ]\r\n  \r\n  if (!type) {\r\n    type = autoChosen\r\n  }\r\n  \r\n  if (type === BLOOD_SPURT_TYPE_1) {\r\n    chosenSpurt = bloodSpurt1\r\n  } else if (type === BLOOD_SPURT_TYPE_2) {\r\n    chosenSpurt = bloodSpurt2\r\n  } else {\r\n    chosenSpurt = bloodSpurt3\r\n  }\r\n\r\n  chosenSpurt.onComplete = () => {\r\n    chosenSpurt.destroy()\r\n    if (bodyToDelete) {\r\n      World.remove(world, bodyToDelete)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    chosenSpurt = null\r\n    bloodSpurt1 = null\r\n    bloodSpurt1_sheet = null \r\n    bloodSpurt2 = null\r\n    bloodSpurt2_sheet = null \r\n    bloodSpurt3 = null\r\n    bloodSpurt3_sheet = null \r\n    spurts = null\r\n    autoChosen = null\r\n  }\r\n\r\n  chosenSpurt.animationSpeed = .5\r\n  chosenSpurt.pivot.x = chosenSpurt.width * .5\r\n  chosenSpurt.pivot.y = chosenSpurt.height * .5\r\n  if (scale) {\r\n    set(chosenSpurt.scale, { x: scale, y: scale })\r\n  } else {\r\n    set(chosenSpurt.scale, { x: .5, y: .5 })\r\n  }\r\n  chosenSpurt.position = position\r\n  chosenSpurt.loop = false\r\n  chosenSpurt.updateAnchor = true\r\n  chosenSpurt.play()\r\n  container.addChild( chosenSpurt )\r\n\r\n  return chosenSpurt\r\n\r\n}","export const FELL_OFF = 'fell off of ledge'\r\nexport const KILLED_BY_ZOMBIE = 'killed by zombie'","import { Body, World, Bodies } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nlet { getState } = store\r\n\r\nexport default function Rock(position) {\r\n  let { gameObjects, TweenLite: { to, delayedCall } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let rockPieceAssets = [ 'rock-piece1.png', 'rock-piece2.png', 'rock-piece3.png' ]\r\n  const getRandomRockSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        rockPieceAssets[ Math.floor( Math.random() * rockPieceAssets.length ) ]\r\n      ]\r\n  ))\r\n  let rockSprite = getRandomRockSprite()\r\n  const rockScale = () => random.float(.45, .65)\r\n  rockSprite.pivot.x = rockSprite.width * .48\r\n  rockSprite.pivot.y = rockSprite.height * .48\r\n  rockSprite.scale.x = rockScale()\r\n  rockSprite.scale.y = rockScale()\r\n  container.addChild(rockSprite)\r\n  let rockBody = Bodies.rectangle(position.x, position.y - 50, 10, 10, {\r\n    restitution: .25,\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  Body.applyForce(rockBody, rockBody.position, {\r\n    x: random.float(-0.005, 0.005),\r\n    y: random.float(-0.001, -0.0025),\r\n  })\r\n  World.add(world, rockBody)\r\n  this.animate = renderFn => {\r\n    let { x, y } = renderFn(rockBody)\r\n    rockSprite.position = { x, y }\r\n  }\r\n  this.destroy = () => {\r\n    let idx = rocks.indexOf(this)\r\n    World.remove(world, rockBody)\r\n    container.removeChild(rockSprite)\r\n    if (idx > -1) {\r\n      rocks.splice(idx, 1)\r\n    }\r\n    world = null\r\n    rocks = null\r\n    container = null\r\n    rockBody = null\r\n    rockSprite = null\r\n    gameObjects = null\r\n  }\r\n  delayedCall(\r\n    getState().game.lastWaveCountDefeated &&\r\n    getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n    () => {\r\n      to(rockSprite, .5, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    }\r\n  )\r\n  return this\r\n}\r\n","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class WoodPlank {\r\n\r\n  constructor(pos) {\r\n    this.gameObjects = window.gameObjects\r\n    const { to, delayedCall } = window.TweenLite\r\n    let container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let world = this.gameObjects.getKeyValue('world')\r\n    this.woodPlanksSheet = this.gameObjects.getKeyValue('wood-planks-sheet')\r\n    this.woodPlanks = this.gameObjects.getKeyValue('wood-planks')\r\n    this.plankRange = [ '000.png', '001.png', '002.png' ]\r\n    // this.planks = new Array(random.int(4, 8)).fill(1)\r\n    // this.planks.map(plank => this.getPlank())\r\n    let {x,y} = pos\r\n    this.gfc = this.getPlank()\r\n    this.gfc.width = 50\r\n    this.gfc.height = 15\r\n    this.gfcContainer = new PIXI.Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = this.gfcContainer.width * .5\r\n    this.gfcContainer.pivot.y = this.gfcContainer.height * .5\r\n    this.body = new Bodies.rectangle(x,y,50,15,{collisionFilter:playerCollisionOptions})\r\n    this.body.torque = random.float(-0.5, 0.5)\r\n    Body.applyForce(this.body, this.body.position, {\r\n      x: random.float(-0.02, 0.02),\r\n      y: random.float(-0.01, -0.02)\r\n    })\r\n    World.add(world, this.body)\r\n    container.addChild(this.gfcContainer)\r\n    this.destroy = () => {\r\n      let idx = this.woodPlanks.indexOf(this)\r\n      World.remove(world, this.body)\r\n      container.removeChild(this.gfcContainer)\r\n      if (idx > -1) {\r\n        this.woodPlanks.splice(idx, 1)\r\n      }\r\n      world = null\r\n      container = null\r\n      this.gameObjects = null\r\n      this.woodPlanks = null\r\n      this.gfc = null\r\n    }\r\n    delayedCall(4, () => {\r\n      to(this.gfcContainer, 2, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    })\r\n    return this\r\n  }\r\n\r\n  animate(renderFn) {\r\n    let {x,y,rotation:rot} = renderFn(this.body)\r\n    this.gfcContainer.position = {x,y}\r\n    this.gfcContainer.rotation = rot\r\n  }\r\n\r\n  getPlank() {\r\n    return (\r\n      new PIXI.Sprite(\r\n        this.woodPlanksSheet.textures[\r\n          this.plankRange[Math.floor(Math.random() * this.plankRange.length)]\r\n        ]\r\n      )\r\n    )\r\n  }\r\n\r\n}","import { contains } from 'jquery'\r\nimport { AnimatedSprite } from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport { BlurFilter } from '@pixi/filter-blur'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport store from '../../../app/store'\r\n\r\nexport default class ExplosionSprite {\r\n\r\n  constructor(type, renderBody) {\r\n    this.gameObjects = window.gameObjects\r\n    let { to } = window.TweenLite\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let explosionTexture1 = this.gameObjects.getKeyValue('explosion3d1-sheet')\r\n    let explosionTexture2 = this.gameObjects.getKeyValue('explosion3d2-sheet')\r\n    this.explosion1 = new AnimatedSprite( explosionTexture1.animations['explosion3d'] )\r\n    this.explosion2 = new AnimatedSprite( explosionTexture2.animations['explosion3d'] )\r\n    this.explosions = [ this.explosion1, this.explosion2 ]\r\n    this.explosions.forEach(ex => {\r\n      ex.pivot.x = ex.width * .5\r\n      ex.pivot.y = ex.height * .5\r\n      ex.loop = false\r\n      ex.onComplete = () => {\r\n        this.container.removeChild(ex)\r\n        this.container = null\r\n        this.gameObjects = null\r\n        explosionTexture1 = null\r\n        explosionTexture2 = null\r\n        this.explosions = null\r\n      }\r\n    })\r\n    if (type === 1) {\r\n      this.explosion = this.explosion1\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    if (type === 2) {\r\n      this.explosion = this.explosion2\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    // this.container.addChild(this.explosion)\r\n    this.renderBody = renderBody\r\n    let adjustment = new AdjustmentFilter()\r\n    adjustment.brightness = 20.0\r\n    adjustment.saturation = 3.0\r\n    let blur = new BlurFilter()\r\n    blur.blur = .5\r\n    let glow = new GlowFilter({\r\n      outerStrength: 3.0\r\n    })\r\n    this.filters = store.getState().game.filterEffects ? [\r\n      adjustment,\r\n      blur,\r\n      glow\r\n    ] : []\r\n    this.explosion.filters = this.filters\r\n    to(this.explosion, .35, { alpha: 0 })\r\n    to(adjustment, .5, { brightness: 1.0, saturation: 1.5, onUpdate: () => {\r\n      if (store.getState().game.filterEffects) {\r\n        this.explosion.filters = this.filters\r\n      }\r\n    }})\r\n    this.explosion.play()\r\n  }\r\n\r\n  // checkFilters() {\r\n  //   if (store.getState().game.filterEffects) {\r\n  //     this.explosion.filters = this.filters\r\n  //   } else {\r\n  //     this.explosion.filters = []\r\n  //   }\r\n  // }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.explosion.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.explosion) === -1) {\r\n        this.container.addChild(this.explosion)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport WoodPlank from '../items/WoodPlank'\r\nimport ExplosionSprite from './ExplosionSprite'\r\nimport { Howl, Howler } from 'howler'\r\n\r\nexport default function GrenadeExplosion (position, showRocksBool, options) {\r\n  let { gameObjects, TweenLite: { to } } = window\r\n  let explosion1 = window.gameObjects.getKeyValue('explosion1')\r\n  let explosionSound1 = new Howl({\r\n    src: [ explosion1 ]\r\n  })\r\n  let distantExplosion = window.gameObjects.getKeyValue('distant-explosion')\r\n  let distantExplosionSound = new Howl({\r\n    src: [ distantExplosion ]\r\n  })\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionsArray = gameObjects.getKeyValue('explosions')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\r\n  const getRandomSmokeSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        smokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n      ]\r\n  ))\r\n  let positionalBody = Bodies.rectangle(position.x, position.y, 20, 20, {\r\n    restitution: 0,\r\n    collisionFilter: playerCollisionOptions,\r\n    isStatic: true\r\n  })\r\n  World.add(world, positionalBody)\r\n  this.calcRenderedPosition = renderFn => {\r\n    let { x, y } = renderFn(positionalBody)\r\n    this.calculatedPosition = { x, y }\r\n    // if (container && container.children.indexOf(smokeSprite) === -1) {\r\n    //   container.addChild(smokeSprite)\r\n    // }\r\n  }\r\n  explosionsArray.push( this )\r\n  // put it together\r\n  // smoke animation \r\n  let randInt = random.int(5, 10) // reduced from (10, 20)\r\n  for (let s = 0; s < randInt; ++s) {\r\n    let smokeSprite = getRandomSmokeSprite()\r\n    smokeSprite.pivot.x = smokeSprite.width * .5\r\n    smokeSprite.pivot.y = smokeSprite.height * .5\r\n    let duration = 2 // smoke tween duration \r\n    to(smokeSprite, duration, {\r\n      onStart: () => { container.addChild(smokeSprite) },\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        if (s === randInt - 1) {\r\n          World.remove(world, positionalBody)\r\n          let idx1 = explosionsArray.indexOf(this)\r\n          if (idx1 > -1) { explosionsArray.splice(idx1, 1) }\r\n          world = null\r\n          explosionsArray = null\r\n          explosionAssetsSheet = null\r\n          smokeAssets = null\r\n        }\r\n      }\r\n    })\r\n    let randScale = random.int(1, 2)\r\n    to(smokeSprite.scale, .5, { x: randScale, y: randScale })\r\n    let xyval = { x: 0, y: 0 }\r\n    to(xyval, .5, { x: random.int(-100, 100), y: random.int(-50, 50) })\r\n    to(smokeSprite.position, duration, {\r\n      onUpdate: () => {\r\n        if (this.calculatedPosition) {\r\n          smokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n          smokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        smokeSprite.destroy()\r\n        container = null\r\n        gameObjects = null\r\n      }\r\n    })\r\n  }\r\n  let woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n  // rocks \r\n  if (position.y > 300 || showRocksBool) {\r\n    for (let r = 0; r < random.int(4, 7); ++r) {\r\n      if (options && options.showWood) {\r\n        woodPlanks.push(new WoodPlank(position))\r\n      } else {\r\n        rocks.push(new Rock(position))\r\n      }\r\n    }\r\n    woodPlanks = null\r\n    rocks = null\r\n  }\r\n  if (!options || options.showExplosionSprite) {\r\n    // blender explosion sprite\r\n    let explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    explosionSound1.seek(.5)\r\n    explosionSound1.play()\r\n    distantExplosionSound.play()\r\n    explosionSprites.push(\r\n      new ExplosionSprite(random.int(1, 2), positionalBody)\r\n    )\r\n    explosionSprites = null\r\n  }\r\n}","import { Bodies, Constraint, World } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { getBodyHeight, getBodyWidth, makePixiSprite } from '../utils/Utils'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport store from '../../../app/store'\r\n\r\nexport default function WallBarrier (pos, dimensions, type) {\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite:{ delayedCall } } = window\r\n  let barriersSprites = gameObjects.getKeyValue('barriers-sheet')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let buildObjects = gameObjects.getKeyValue('build-objects')\r\n  let {width:w,height:h} = dimensions\r\n  let woodenBarrier = new PIXI.Sprite(barriersSprites.textures['woodenBarrier.png'])\r\n  let stoneBarrier = new PIXI.Sprite(barriersSprites.textures['stoneBarrier.png'])\r\n  let metalBarrier = new PIXI.Sprite(barriersSprites.textures['metalBarrier.png'])\r\n  let explosiveBarrier = makePixiSprite('explosive-barrel')\r\n  this.types = {\r\n    WOOD: 'Wooden',\r\n    STONE: 'Stone',\r\n    METAL: 'Metal',\r\n    EXPLOSIVE: 'Explosive Barrel'\r\n  }\r\n  let {x,y} = pos\r\n  let objBody = Bodies.rectangle(x, y, w, h, {\r\n    inertia: Infinity,\r\n    label: type === this.types.EXPLOSIVE ? 'explosive barrier' : 'barrier'\r\n  })\r\n  // try to attach barrier to the ground\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  let constraint = Constraint.create({\r\n    bodyA: ground,\r\n    bodyB: objBody,\r\n    pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n    pointB: { x: 0, y: getBodyHeight(objBody)/2 },\r\n    length: 0\r\n  })\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n        break;\r\n      case this.types.STONE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 500 : 250\r\n        break;\r\n      case this.types.METAL:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 800 : 400\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 200 : 100\r\n        break;\r\n      default:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n    }\r\n  }\r\n\r\n  objBody.main = this\r\n  this.destroyed = false\r\n\r\n  this.getBody = () => objBody\r\n\r\n  // World.add(world, objBody)\r\n  World.add(world, [constraint, objBody])\r\n\r\n  let barrierSprite\r\n  let txtStyle = { fill: '#ffffff', fontSize: 12 }\r\n  let healthDisplay = new PIXI.Text(objBody.strength, txtStyle)\r\n  healthDisplay.pivot.x = healthDisplay.width * .5\r\n  healthDisplay.pivot.y = healthDisplay.height * .5\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        barrierSprite = woodenBarrier\r\n        break;\r\n      case this.types.STONE:\r\n        barrierSprite = stoneBarrier\r\n        break;\r\n      case this.types.METAL:\r\n        barrierSprite = metalBarrier\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        barrierSprite = explosiveBarrier\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  barrierSprite.width = w\r\n  barrierSprite.height = h\r\n  let sprite = new PIXI.Container()\r\n  sprite.addChild(barrierSprite)\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * .5\r\n  container.addChild(sprite)\r\n  container.addChild(healthDisplay)\r\n\r\n  let player = gameObjects.getKeyValue('player')\r\n  player.sprites.forEach(sprite => { container.addChild(sprite) })\r\n\r\n  this.takeDamage = (dmg) => {\r\n    objBody.strength -= dmg\r\n    healthDisplay.text = objBody.strength\r\n  }\r\n\r\n  this.displayBarrierStrength = (renderFn) => {\r\n    healthDisplay.position = renderFn(objBody)\r\n    barrierSprite.position = renderFn(objBody)\r\n  }\r\n\r\n  objBody.removeSelf = () => {\r\n    this.destroyed = true\r\n    new GrenadeExplosion(objBody.position, true, {\r\n      showWood: type === this.types.WOOD ? true : false,\r\n      showExplosionSprite: type === this.types.EXPLOSIVE ? true : false\r\n    })\r\n    if (type === this.types.EXPLOSIVE) {\r\n      let {x:_x,y:_y} = objBody.position\r\n      let explosionHitbox = Bodies.rectangle(_x, _y, 400, 300)\r\n      explosionHitbox.label = 'barrel explosion'\r\n      World.add(world, explosionHitbox)\r\n      delayedCall(2, () => {\r\n        if (explosionHitbox) {\r\n          World.remove(world, explosionHitbox)\r\n        }\r\n      })\r\n      explosionHitbox.removeSelf = () => {\r\n        World.remove(world, explosionHitbox)\r\n      }\r\n    }\r\n    World.remove(world, [constraint, objBody])\r\n    container.removeChild(healthDisplay)\r\n    container.removeChild(sprite)\r\n    let idx = buildObjects.indexOf(this)\r\n    if (idx > -1) { buildObjects.splice(idx, 1) }\r\n  }\r\n\r\n  return this\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class Landmine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('landmine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'landmine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['landmine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    new GrenadeExplosion(this.body.position, true)\r\n    let { TweenLite: { delayedCall } } = window\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { Bodies, World, Body, Vector } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { radians } from 'radians'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\n\r\nexport default function Grenade (x, y, r, force, fuseTime) {\r\n  this.grenadeDistance = {\r\n    start: x,\r\n    end: null\r\n  }\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite: { delayedCall, from } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let grenades = gameObjects.getKeyValue('grenades')\r\n  let grenadeBody = Bodies.circle(x, y, r, {\r\n    restitution: .8,\r\n    collisionFilter: { category: 3 }\r\n  })\r\n  grenadeBody.label = 'grenade'\r\n  grenadeBody.main = this\r\n  World.add(world, grenadeBody)\r\n  Body.applyForce(grenadeBody, grenadeBody.position, force)\r\n  grenadeBody.torque = .01\r\n  let grenadeGfc = new PIXI.Graphics()\r\n  grenadeGfc.beginFill(0x1F472C)\r\n  grenadeGfc.drawCircle(0, 0, r)\r\n  this.grenadeBody = grenadeBody\r\n  let bevel = new BevelFilter()\r\n  bevel.shadowAlpha = .45\r\n  bevel.lightAlpha = .35\r\n  bevel.thickness = 5\r\n  bevel.shadowColor = 0x0\r\n  bevel.lightColor = 0x208C44\r\n  let noise = new NoiseFilter()\r\n  noise.noise = .1\r\n  noise.seed = .5\r\n  grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise ] : []\r\n  let motionBlur = new MotionBlurFilter({ velocity: { x: 0, y: 0 } })\r\n  from(motionBlur.velocity, .75, { x: 100, y: 10 })\r\n  container.addChild(grenadeGfc)\r\n  this.animate = renderFn => {\r\n    if (grenadeBody && grenadeGfc) {\r\n      let { x, y, rotation: rot } = renderFn(grenadeBody)\r\n      grenadeGfc.position.x = x\r\n      grenadeGfc.position.y = y\r\n      grenadeGfc.rotation = rot\r\n      bevel.rotation = radians(rot)\r\n      grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise, motionBlur ] : []\r\n    }\r\n  }\r\n\r\n  delayedCall(fuseTime ? fuseTime : getState().game.player.weapons.grenadeFuseTime.default, () => {\r\n    if (!this.exploded) {\r\n      this.explode()\r\n    }\r\n  })\r\n  this.exploded = false\r\n  this.explode = (showRocks) => {\r\n    this.grenadeDistance.end = this.grenadeBody.position.x\r\n    this.exploded = true\r\n    new GrenadeExplosion(grenadeBody.position, showRocks ? showRocks : null)\r\n    let explosionSize = getState().game.player.weapons.grenadeExplosionSize\r\n    this.explosionHitbox = Bodies.rectangle(grenadeBody.position.x, grenadeBody.position.y, explosionSize, explosionSize, {\r\n      // isStatic: true\r\n    })\r\n    grenadeBody.distance = this.grenadeDistance\r\n    this.explosionHitbox.label = 'grenade explosion'\r\n    World.remove(world, grenadeBody)\r\n    World.add(world, this.explosionHitbox)\r\n    container.removeChild(grenadeGfc)\r\n    delayedCall(.01, () => {\r\n      this.destroy()\r\n    })\r\n  }\r\n  this.destroy = () => {\r\n    World.remove(world, this.explosionHitbox)\r\n    let idx = grenades.indexOf(this)\r\n    if (idx > -1) {\r\n      grenades.splice(idx, 1)\r\n    }\r\n    // world = null\r\n    // container = null\r\n    // gameObjects = null\r\n    // this.explosionHitbox = null\r\n    // grenadeBody = null\r\n    // grenadeGfc = null\r\n  }\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\nimport Grenade from '../items/Grenade'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Clustermine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('clustermine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'clustermine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['clustermine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    let r = 10, fuseTime = 4\r\n    let { gameObjects } = window\r\n    let grenades = gameObjects.getKeyValue('grenades') // can replace with different red or blue \"cluster bomb\" graphics\r\n    delayedCall(.25, () => {\r\n      let { getState } = store\r\n      let num = getState().game.player.perks['cluck'].owned ? 8 : 4\r\n      let xforce = getState().game.player.perks['cluck'].owned ? random.float(-0.02, 0.02) : random.float(-0.01, 0.01)\r\n      let yforce = getState().game.player.perks['cluck'] ? random.float(-0.025, -0.075) : random.float(-0.01, -0.05)\r\n      for (let i = 0; i < num; ++i) {\r\n        delayedCall(.1 * i, () => {\r\n          let nade = new Grenade(\r\n            this.body.position.x,\r\n            this.body.position.y - 50,\r\n            r,\r\n            {\r\n              x: xforce,\r\n              y: yforce\r\n            },\r\n            fuseTime\r\n          )\r\n          grenades.push( nade )\r\n        })\r\n      }\r\n    })\r\n    // above code expels additional cluster grenades \r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'clustermine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","export const barrierTypes = {\r\n  WOOD: 'Wooden',\r\n  STONE: 'Stone',\r\n  METAL: 'Metal',\r\n  EXPLOSIVE: 'Explosive Barrel'\r\n}\r\n\r\nexport const trapTypes = {\r\n  LANDMINE: 'Landmine',\r\n  CLUSTER_BOMB: 'Cluster Bomb',\r\n  REMOTE_MINE: 'Remote Mine',\r\n  TURRET: 'Machine Gun Turret'\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class RemoteMine {\r\n\r\n  constructor(pos, mineNumber) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.buildObjects = gameObjects.getKeyValue('build-objects')\r\n    this.remoteMines = gameObjects.getKeyValue('remote-mines')\r\n    this.remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n    let landmineSheet = gameObjects.getKeyValue('remote-mine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5, { collisionFilter: playerCollisionOptions })\r\n    this.body.label = 'remote mine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['remote-mine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n\r\n    // attach a number to the mine to know which key to press to detonate it\r\n    let txtStyle = { fill: '#00FFFF', fontSize: 12 }\r\n    this.num = new Text(`[ ${mineNumber} ]: detonate`, txtStyle)\r\n    this.num.pivot.x = this.num.width * .5\r\n    this.num.pivot.y = this.num.height * .5\r\n    this.container.addChild(this.num)\r\n    \r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n    this.num.position = { x, y: y - 50 }\r\n  }\r\n\r\n  detonate() {\r\n    this.destroy()\r\n  }\r\n\r\n  updateNumber(num) {\r\n    this.num.text = `[ ${num} ]: detonate`\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      this.container.removeChild(this.num)\r\n      let idx = this.buildObjects.indexOf(this)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n      let ridx = this.remoteMinesArr.indexOf(this)\r\n      if (ridx > -1) {\r\n        this.remoteMinesArr.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { World, Body, Bodies, Vector } from 'matter-js'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS, LESS_THAN_PLAYER_Y_POS } from '../constants/mouseStates'\r\nimport { PISTOL_BULLET_REMOVAL_TIMEOUT, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX,\r\n  WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET, WEAPON_TYPE_SHOTGUN\r\n } from '../constants/weapons'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport { calcBulletAngle, getBodyWidth, getBodyHeight, getPlayerBody, getPlayerPartByType } from '../utils/Utils'\r\nimport { createGenericMessage, createTextMessage } from '../createMessages'\r\nimport { setLastShot, StatsDefs } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { increaseStats } from '../gameSlice'\r\nimport { radians } from 'radians'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const calcPistolDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_PISTOL]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcTurretDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_TURRET]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcSMGDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SMG]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcShotgunDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SHOTGUN]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\n// bullet impact\r\nexport function BulletImpact (surfaceType, position, scale) {\r\n\tlet {x,y} = position\r\n\tlet { gameObjects, TweenLite: { to, set, from } } = window\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n\tWorld.add(world, positionalBody)\r\n\r\n\tlet explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n\tlet smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\tconst getRandomSmokeSprite = () => (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\texplosionAssetsSheet.textures[\r\n\t\t\t\tsmokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n\t\t\t]\r\n\t))\r\n\tlet randInt = 2 //random.int(2, 4)\r\n\tfor (let i = 0; i < randInt; ++i) {\r\n\t\tlet smokeSprite = getRandomSmokeSprite()\r\n\t\tif (surfaceType === 'enemy') {\r\n\t\t\tsmokeSprite.tint = 0xFF0000\r\n\t\t}\r\n\t\tsmokeSprite.pivot.x = smokeSprite.width * .5\r\n\t\tsmokeSprite.pivot.y = smokeSprite.height * .5\r\n\t\tto(smokeSprite, scale && scale.alphaDuration ? scale.alphaDuration : .5, {\r\n\t\t\talpha: 0,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tif (i === randInt - 1) {\r\n\t\t\t\t\tWorld.remove(world, positionalBody)\r\n\t\t\t\t\tworld = null \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet randScale\r\n\t\tif (scale && scale.rand && scale.rand.min && scale.rand.max) {\r\n\t\t\trandScale = random.float(scale.rand.min, scale.rand.max)\r\n\t\t} else {\r\n\t\t\trandScale = random.float(.25, .5)\r\n\t\t}\r\n\t\tset(smokeSprite.scale, {\r\n\t\t\tx: scale && scale.set ? scale.set : .1,\r\n\t\t\ty: scale && scale.set ? scale.set : .1\r\n\t\t})\r\n\t\tto(smokeSprite.scale, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: randScale,\r\n\t\t\ty: randScale\r\n\t\t})\r\n\t\tlet xyval = { x: 0, y: 0 }\r\n\t\tto(xyval, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-10, 10),\r\n\t\t\ty: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-50, 0)\r\n\t\t})\r\n\t\tto(smokeSprite.position, 3, {\r\n\t\t\tonUpdate: () => {\r\n\t\t\t\tif (this.calculatedPosition) {\r\n\t\t\t\t\tsmokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n\t\t\t\t\tsmokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n\t\t\t\t\tif (container && container.children.indexOf(smokeSprite) < 0) {\r\n\t\t\t\t\t\tcontainer.addChild(smokeSprite)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tsmokeSprite.destroy()\r\n\t\t\t\tcontainer = null\r\n\t\t\t\tgameObjects = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tthis.renderPosition = (renderFn) => {\r\n\t\tthis.calculatedPosition = renderFn(positionalBody)\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\n// bullet shell\r\nexport function PistolShell(x, y, gameObjects, changeLabelString, overrideOptions) {\r\n\tlet world, container, shells\r\n\tlet { game: { mouseState, player: { weapons: { equipped, shellEjectionForce, shellRemovalTimeout } } } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!shells) { shells = gameObjects.getKeyValue('pistol-shells') }\r\n\t// matter\r\n\tthis.body = overrideOptions && overrideOptions.body\r\n\t? overrideOptions.body\r\n\t: Bodies.rectangle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 30\r\n      : x - 30\r\n    ,\r\n    mouseState.y === LESS_THAN_PLAYER_Y_POS ? y - 40 : y - 20\r\n    , 7, 4, {\r\n\t\trestitution: 0.75,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.body.label = changeLabelString !== undefined ? `player ${changeLabelString} shell` : 'player pistol shell'\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.body.label = 'shotgun shell'\r\n\t}\r\n\tWorld.add(world, this.body)\r\n\tBody.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.force ? overrideOptions.force : {\r\n\t\tx: mouseState.x === GREATER_THAN_PLAYER_X_POS ? random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max) : random.float(shellEjectionForce[equipped].min, shellEjectionForce[equipped].max),\r\n\t\ty: random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max)\r\n\t})\r\n\tBody.setAngularVelocity(this.body, random.float(-PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, -PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX))\r\n\t// pixi\r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(equipped === WEAPON_TYPE_SHOTGUN ? 0xB00000 : 0xAB931E)\r\n\t// if (!shellWd) {\r\n\t// }\r\n\tlet shellWd = getBodyWidth(this.body)\r\n\tlet shellHt = getBodyHeight(this.body)\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 1)\r\n\t} else {\r\n\t\tif (equipped === WEAPON_TYPE_SMG) {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 2)\r\n\t\t} else {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellWd, shellHt)\r\n\t\t}\r\n\t}\r\n\tthis.gfc.endFill()\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.beginFill(0xCCB64D)\r\n\t\tthis.gfc.drawRect(0, shellWd + 1, shellHt, 3)\r\n\t\t// this.gfc.rotation = radians(45)\r\n\t}\r\n\tif (!window.gameObjects.getKeyValue('bullet-shell-bevel')) {\r\n\t\twindow.gameObjects.setKeyValue('bullet-shell-bevel', new BevelFilter({ lightAlpha: 0.5, shadowAlpha: 0.5 }))\r\n\t}\r\n\tlet filters = [ window.gameObjects.getKeyValue('bullet-shell-bevel') ]\r\n\tthis.gfc.filters = getState().game.filterEffects ? filters : []\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tshells.push(this)\r\n\t// methods\r\n\tthis.destroy = function () {\r\n\t\tcontainer.removeChild(this.gfc)\r\n\t\tWorld.remove(world, this.body)\r\n\t\tthis.body = null\r\n\t\tthis.gfc = null\r\n\t\tshells.splice(shells.indexOf(this), 1)\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t\tshells = null\r\n\t}\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), shellRemovalTimeout[equipped])\r\n\treturn this\r\n}\r\n\r\nexport function PistolBullet(x, y, gameObjects, changeLabelString, overrideOptions, extraDamageBool) {\r\n\tlet world, container\r\n\tlet arm, bullets, bulletWd\r\n\tarm = getPlayerPartByType('arm', gameObjects) \r\n  let { game: { mouseRelativeToPlayerPosition, mouseState } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!bullets) { bullets = gameObjects.getKeyValue('pistol-bullets') }\r\n  this.body = overrideOptions && overrideOptions.overrideBody ? overrideOptions.overrideBody : Bodies.circle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 50\r\n      : x - 50\r\n    ,\r\n    y, 4, {\r\n\t\trestitution: 0.3\r\n  })\r\n\r\n\tthis.body.label = (\r\n\t\textraDamageBool ? 'extra damage bullet'\r\n\t\t:\r\n\t\t\tchangeLabelString !== undefined && changeLabelString !== null ?\r\n\t\t\t`player ${changeLabelString} bullet`\r\n\t\t\t:  'player pistol bullet'\r\n\t)\r\n\tthis.body.main = this\r\n  World.add(world, this.body)\r\n\tBody.setAngle(this.body, overrideOptions && overrideOptions.overrideAngle ? overrideOptions.overrideAngle : Vector.angle(this.body.position, mouseRelativeToPlayerPosition))\r\n  Body.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.overrideForce ? overrideOptions.overrideForce : calcBulletAngle(arm.position, mouseRelativeToPlayerPosition))\r\n\r\n\t// pixi \r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(0xFFFFFF)\r\n\tif (!bulletWd) { bulletWd = getBodyWidth(this.body) }\r\n\tthis.gfc.drawRect(0, 0, bulletWd, (bulletWd/3))\r\n\tthis.gfc.endFill()\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tbullets.push(this)\r\n\t// // add bullet trail\r\n  // let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n\t// this.bulletTrail = new PIXI.Graphics()\r\n\t// this.bulletTrail.lineStyle(\r\n\t// \t2,\r\n\t// \t(\r\n\t// \t\toverrideOptions ? 0xFFFFFF\r\n\t// \t\t:\r\n\t// \t\t\ttier === 1 ? 0xFFFFFF\r\n\t// \t\t\t:\r\n\t// \t\t\t\ttier === 2 ? 0xFFD100\r\n\t// \t\t\t\t:\r\n\t// \t\t\t\t\ttier === 3 ? 0xFF6D00\r\n\t// \t\t\t\t\t:\r\n\t// \t\t\t\t\t\ttier === 4 ? 0xFF0000\r\n\t// \t\t\t\t\t\t: 0xFFFFFF\r\n\t// \t),\r\n\t// \t0.8\r\n\t// )\r\n\t// this.linePoints = []\r\n\t// this.lineDrawn = false\r\n\t// this.drawLine = () => {\r\n\t// \tif (this.lineDrawn === false && getState().game.player.weapons.equipped !== WEAPON_TYPE_SHOTGUN) {\r\n\t// \t\tsetTimeout(() => {\r\n\t// \t\t\tif (this.linePoints) {\r\n\t// \t\t\t\tthis.linePoints.forEach((p, i) => {\r\n\t// \t\t\t\t\tif (this.linePoints[i+1]) {\r\n\t// \t\t\t\t\t\tthis.bulletTrail.moveTo(p.x, p.y)\r\n\t// \t\t\t\t\t\tthis.bulletTrail.lineTo(this.linePoints[i+1].x, this.linePoints[i+1].y)\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t}\r\n\t// \t\t}, 200)\r\n\t// \t\tthis.lineDrawn = true\r\n\t// \t}\r\n\t// }\r\n\t// container.addChild(this.bulletTrail)\r\n\r\n\t// methods\r\n\tthis.addImpactEffect = (surfaceType, pos) => {\r\n\t\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\t\tlet impact = new BulletImpact(surfaceType, pos)\r\n\t\tbulletImpacts.push(impact)\r\n\t}\r\n\r\n\tthis.destroyed = false\r\n\tthis.destroy = function (surfaceType) {\r\n\t\tif (!this.destroyed) {\r\n\t\t\tlet bulletLastPos = this.body.position\r\n\t\t\tthis.destroyed = true\r\n\t\t\tcontainer.removeChild(this.gfc)\r\n\t\t\tcontainer.removeChild(this.bulletTrail)\r\n\t\t\tWorld.remove(world, this.body)\r\n\t\t\tthis.linePoints = null\r\n\t\t\tthis.body = null\r\n\t\t\tthis.gfc = null\r\n\t\t\tif (bullets.indexOf(this) > -1) {\r\n\t\t\t\tbullets.splice(bullets.indexOf(this), 1)\r\n\t\t\t}\r\n\t\t\tif (surfaceType) {\r\n\t\t\t\t// add bullet collision impact effect depending on the surface hit\r\n\t\t\t\tthis.addImpactEffect(surfaceType, bulletLastPos)\r\n\t\t\t}\r\n\t\t\tworld = null\r\n\t\t\tcontainer = null\r\n\t\t\tgameObjects = null \r\n\t\t}\r\n\t}\r\n\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), PISTOL_BULLET_REMOVAL_TIMEOUT)\r\n\treturn this\r\n}\r\n\r\nconst fireEquippedWeapon = (gameObjects) => {\r\n\tlet world, weaponsUI, player, playerBody, playerBodyWd, playerBodyHt, arm\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n  if (!weaponsUI) { weaponsUI = gameObjects.getKeyValue('weapons-ui') }\r\n  if (!player) { player = gameObjects.getKeyValue('player') }\r\n\tlet { game: { player: { weapons: { lastShot, totalAmmo, equipped, shotLimiter } } } } = getState()\r\n\tif (JSON.parse(lastShot[equipped]) + shotLimiter[equipped] < Date.now() && !weaponsUI.checkEmpty(equipped) && !weaponsUI.reloading && totalAmmo[equipped] > 0) {\r\n\t\tdispatch( setLastShot(equipped, JSON.stringify(Date.now())) )\r\n\t\tdispatch( increaseStats( StatsDefs.bulletsFired ) )\r\n    weaponsUI.fireBullet(equipped)\r\n    player.fireWeaponAnimation()\r\n\t\tif (!playerBody) { playerBody = getPlayerBody(gameObjects) }\r\n\t\tif (!playerBodyWd) { playerBodyWd = getBodyWidth(playerBody) }\r\n\t\tif (!playerBodyHt) { playerBodyHt = getBodyHeight(playerBody) }\r\n\t\tif (!arm) { arm = getPlayerPartByType('arm', gameObjects) }\r\n\t\tlet extraDmg = (\r\n\t\t\tweaponsUI.lastBulletByWepType[equipped] && getState().game.player.perks['lastBullet'].owned ? true : false\r\n\t\t)\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tnew PistolShell(0, 0, gameObjects, null, {\r\n\t\t\t\tbody: Bodies.rectangle(playerBody.position.x, arm.position.y, 10, 4, { collisionFilter: playerCollisionOptions })\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tnew PistolShell(playerBody.position.x, arm.position.y, gameObjects, (\r\n\t\t\t\tequipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined\r\n\t\t\t))\r\n\t\t}\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\t\tnew PistolBullet(arm.position.x, arm.position.y, gameObjects, 'shotgun', extraDmg)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnew PistolBullet(\r\n\t\t\t\tarm.position.x,\r\n\t\t\t\tarm.position.y,\r\n\t\t\t\tgameObjects,\r\n\t\t\t\t(equipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined),\r\n\t\t\t\tnull,\r\n\t\t\t\textraDmg\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tworld = null \r\n\t\tweaponsUI = null\r\n\t\tplayer = null\r\n\t\tplayerBody = null\r\n\t\tplayerBodyWd = null\r\n\t\tplayerBodyHt = null\r\n\t\tarm = null \r\n\r\n\t} else if (totalAmmo[equipped] === 0 && getState().game.showingMessage === false) {\r\n\t\t// createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n\t\t// make click noise or some other indicator\r\n\t\tif (!weaponsUI.shaking) {\r\n\t\t\tweaponsUI.changeTextForEmptyShake('EMPTY')\r\n\t\t\tweaponsUI.emptyMagShake()\r\n\t\t}\r\n\t} else if (weaponsUI.checkEmpty(equipped) && getState().game.showingMessage === false) {\r\n\t\tif (!weaponsUI.reloading) {\r\n\t\t\t// createGenericMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// createTextMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// make empty mag sound or shake weapon UI\r\n\t\t\tif (!weaponsUI.shaking) {\r\n\t\t\t\tweaponsUI.changeTextForEmptyShake('RELOAD')\r\n\t\t\t\tweaponsUI.emptyMagShake()\r\n\t\t\t}\r\n    }\r\n\t}\r\n}\r\n\r\nexport const firePistol = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireSMG = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireShotgun = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n","import random from 'random'\r\nimport * as PIXI from 'pixi.js'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport store from '../../../app/store'\r\n\r\nexport default class MuzzleFlashFX {\r\n\r\n  constructor() {\r\n    let { gameObjects } = window\r\n    this.to = window.TweenLite.to\r\n    this.set = window.TweenLite.set\r\n    let container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.container = container\r\n    let muzzleFlashesSheet = gameObjects.getKeyValue('muzzle-flashes-sheet')\r\n    let muzzleFlash001 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash1.png']\r\n    )\r\n    let muzzleFlash002 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash2.png']\r\n    )\r\n    let muzzleFlash003 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash3.png']\r\n    )\r\n    let muzzleFlash004 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash4.png']\r\n    )\r\n    let muzzleFlash005 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash5.png']\r\n\t\t)\r\n\t\tlet muzzleFlashes = [\r\n\t\t\tmuzzleFlash001,\r\n\t\t\tmuzzleFlash002,\r\n\t\t\tmuzzleFlash003,\r\n\t\t\tmuzzleFlash004,\r\n\t\t\tmuzzleFlash005\r\n\t\t]\r\n    container.addChild(muzzleFlash001)\r\n    container.addChild(muzzleFlash002)\r\n    container.addChild(muzzleFlash003)\r\n    container.addChild(muzzleFlash004)\r\n    container.addChild(muzzleFlash005)\r\n    muzzleFlash001.visible = false\r\n    muzzleFlash002.visible = false\r\n    muzzleFlash003.visible = false\r\n    muzzleFlash004.visible = false\r\n    muzzleFlash005.visible = false\r\n    // muzzle fire FX \r\n    this.muzzleScale = .65\r\n    this.blurFilter = new PIXI.filters.BlurFilter()\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n    this.blurFilter.quality = 5\r\n    this.glowFilter = new GlowFilter()\r\n    this.glowFilter.innerStrength = 0.1\r\n    this.glowFilter.outerStrength = random.float(1.0, 1.5)\r\n    // this.glowFilter.color = 0xFFFFFF\r\n    this.adjustmentFilter = new AdjustmentFilter()\r\n    this.adjustmentFilter.brightness = 2.0\r\n    this.adjustmentFilter.saturation = 2.0\r\n    this.flashes = []\r\n    muzzleFlashes.forEach(flash => {\r\n      flash.updateAnchor = true\r\n      flash.scale = { x: this.muzzleScale, y: this.muzzleScale }\r\n      flash.filters = store.getState().game.filterEffects ? [\r\n        this.blurFilter,\r\n        this.adjustmentFilter,\r\n        this.glowFilter\r\n      ] : []\r\n      this.flashes.push( flash )\r\n    })\r\n  }\r\n\r\n  get muzzleScale () {\r\n    return this._muzzleScale\r\n  }\r\n\r\n  set muzzleScale (scale) {\r\n    this._muzzleScale = scale\r\n  }\r\n\r\n  fireEffect(pos) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let randFlash = this.getRandomFlash()\r\n    randFlash.visible = true\r\n    if (pos) {\r\n      randFlash.position = pos\r\n    }\r\n    if (store.getState().game.filterEffects) {\r\n      this.adjustmentFilter.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      this.glowFilter.color = (\r\n        tier === 1 ? 0xFFF500\r\n          :\r\n            tier === 2 ? 0xFFD100\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF3800\r\n                : 0xFFFFFF\r\n      )\r\n    }\r\n    randFlash.filters = store.getState().game.filterEffects ? [\r\n      this.glowFilter,\r\n      this.adjustmentFilter,\r\n      this.blurFilter\r\n    ] : []\r\n    this.container.addChild( randFlash )\r\n    this.set(randFlash, { alpha: 1 })\r\n    this.set(randFlash.scale, { x: this.muzzleScale })\r\n    this.to(randFlash, .1, { alpha: 0 })\r\n    this.to(randFlash.scale, .1, { x: this.muzzleScale * 2, onComplete: () => {\r\n      randFlash.visible = false\r\n    }})\r\n  }\r\n\r\n  setMuzzleRotations(rotation) {\r\n    this.flashes.forEach(flash => {\r\n      flash.rotation = rotation\r\n    })\r\n    this.rotation = rotation\r\n  }\r\n\r\n  getRandomBlur() {\r\n    return random.float(0.5, 4.0)\r\n  }\r\n\r\n  changeBlurAmount() {\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n  }\r\n\r\n  getFlashes() {\r\n    return this.flashes\r\n  }\r\n\r\n  getRandomFlash() {\r\n    return this.flashes[ Math.floor( Math.random() * this.flashes.length) ]\r\n  }\r\n\r\n}","import { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { Bodies, World, Constraint } from 'matter-js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { PistolShell, PistolBullet } from '../player/fireWeapons'\r\nimport { radians, degrees } from 'radians'\r\nimport { getBodyHeight, getBodyWidth } from '../utils/Utils'\r\nimport store from '../../../app/store'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport random from 'random'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class MachineGunTurret {\r\n\r\n  constructor(position) {\r\n    let {x,y} = position\r\n    this.delayedCall = window.TweenLite.delayedCall\r\n    this.gameObjects = window.gameObjects\r\n    this.world = this.gameObjects.getKeyValue('world')\r\n    this.buildObjects = this.gameObjects.getKeyValue('build-objects')\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    this.scanAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-scan-sheet').animations['turretScan']\r\n    )\r\n    this.scanAnim.visible = true\r\n    this.scanAnim.loop = true\r\n    this.scanAnim.play()\r\n    this.shootAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-shoot-sheet').animations['turretShoot']\r\n    )\r\n    this.shootAnim.loop = false\r\n    this.shootAnim.onFrameChange = () => {\r\n      // if (this.shootAnim.currentFrame === 2) {\r\n      //   this.fireBullet()\r\n      // }\r\n    }\r\n    this.shootAnim.onComplete = () => {\r\n      this.shootAnim.gotoAndStop(0)\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n    this.shootAnim.visible = false\r\n    this.scanAnim.width = 150\r\n    this.scanAnim.height = 150\r\n    this.scanAnim.pivot.x = this.scanAnim.width * .5\r\n    this.scanAnim.pivot.y = this.scanAnim.height\r\n    this.shootAnim.width = 150\r\n    this.shootAnim.height = 150\r\n    this.shootAnim.pivot.x = this.shootAnim.width * .5\r\n    this.shootAnim.pivot.y = this.shootAnim.height\r\n    this.turret = new Container()\r\n    this.turret.addChild(this.scanAnim, this.shootAnim)\r\n    this.container.addChild(this.turret)\r\n\r\n    this.turret.children.forEach(child => {\r\n    })\r\n\r\n    this.body = Bodies.rectangle(x, y, 50, 50, {\r\n      label: 'turret barrier',\r\n      main: this\r\n    })\r\n    this.body.removeSelf = () => {\r\n      this.destroy()\r\n    }\r\n    let ground = this.gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + position.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n    \r\n    this.body.strength = 250\r\n    this.healthDisplay = new Text(`health: ${this.body.strength}`, { fontSize: 12, fill: 0xFFFFFF })\r\n    this.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n    this.container.addChild(this.healthDisplay)\r\n\r\n    this.direction = 'right'\r\n\r\n    // re-add player sprites on-top\r\n    let player = this.gameObjects.getKeyValue('player')\r\n    if (!player.dead) {\r\n      player.sprites.forEach(s => { this.container.addChild(s) })\r\n    }\r\n\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  takeDamage(dmg) {\r\n    this.body.strength -= dmg\r\n    this.healthDisplay.text = `health: ${this.body.strength}`\r\n  }\r\n\r\n  displayBarrierStrength(renderFn) {\r\n    let {x,y} = renderFn(this.body)\r\n    this.healthDisplay.position = { x, y: y - 100 }\r\n    this.turret.position = { x, y }\r\n  }\r\n\r\n  updateDirection(direction) {\r\n    this.turret.scale.x = direction === 'left' ? -1 : 1\r\n    this.direction = direction\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  resumeScan() {\r\n    if (!this.scanning) {\r\n      this.scanning = true\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n  }\r\n\r\n  fireBullet() {\r\n    if (!this.destroyed) {\r\n      if (!this.muzzleFlashFX) {\r\n        this.muzzleFlashFX = new MuzzleFlashFX()\r\n        this.muzzleFlashFX.setMuzzleRotations(this.direction === 'left' ? degrees(-92) : degrees(92))\r\n      }\r\n      // fire bullet\r\n      let { game: { player: { weapons: { bulletForce } } } } = store.getState()\r\n      let { x, y } = this.body.position\r\n      this.muzzleFlashFX.fireEffect(\r\n        this.direction == 'left'\r\n        ? { x: this.turret.position.x - 100, y: this.turret.position.y - 25 }\r\n        : { x: this.turret.position.x + 100, y: this.turret.position.y - 25  }\r\n      )\r\n      let overrideBody = Bodies.circle(x, y - 25, 5)\r\n      let _ejectY = random.float(-0.0005, -0.00075)\r\n      new PistolShell(0, 0, this.gameObjects, null, {\r\n        body: Bodies.rectangle(x, y - 50, 7, 4, { collisionFilter: playerCollisionOptions }),\r\n        force: this.direction === 'right' ?\r\n        {\r\n          \"x\": random.float(-0.00035, -0.00075),\r\n          \"y\": _ejectY\r\n        } : {\r\n          \"x\": random.float(0.00035, 0.00075),\r\n          \"y\": _ejectY\r\n        },\r\n      })\r\n      new PistolBullet(0, 0, this.gameObjects, 'turret', {\r\n        overrideBody,\r\n        overrideForce: this.direction === 'left' ?\r\n        {\r\n          \"x\": -0.01,\r\n          \"y\": -0.00075\r\n        } : {\r\n          \"x\": 0.01,\r\n          \"y\": -0.00075\r\n        },\r\n        overrideAngle: this.direction === 'left' ? -3.0 : 0.1\r\n      })\r\n    }\r\n  }\r\n\r\n  shoot() {\r\n    if (!this.shooting && !this.destroyed) {\r\n      let { game: { traps: { turret: { cooldown } } } } = store.getState()\r\n      this.fireBullet()\r\n      this.shooting = true\r\n      this.scanAnim.visible = false\r\n      this.shootAnim.visible = true\r\n      this.shootAnim.play()\r\n      this.delayedCall(cooldown, () => {\r\n        this.shooting = false\r\n      })\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      new GrenadeExplosion(this.body.position, true)\r\n      this.container.removeChild(this.turret, this.healthDisplay)\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      let idx = this.buildObjects.indexOf(this, 1)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { AnimatedSprite } from 'pixi.js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Spark {\r\n\r\n  constructor (type, renderBody, options) {\r\n    let spark1 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('sparks-sheet').animations['spark-particle']\r\n    )\r\n    let spark2 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('muzzle-sparks-sheet').animations['muzzleSparks']\r\n    )\r\n    let sparks = [ spark1, spark2 ]\r\n    sparks.forEach(spark => {\r\n      let scale = options && options.scale ? options.scale : 1.0\r\n      if (scale !== 1.0) {\r\n        spark.scale.x = scale\r\n        spark.scale.y = scale\r\n      }\r\n      spark.pivot.x = spark.width  * .5\r\n      spark.pivot.y = spark.height * .5\r\n      spark.loop = false\r\n      spark.animationSpeed = options && options.animationSpeed ? options.animationSpeed : 1.0\r\n      spark.onComplete = () => {\r\n        this.container.removeChild(spark)\r\n        this.container = null\r\n        spark = null\r\n        spark1 = null\r\n        spark2 = null\r\n        sparks = null\r\n      }\r\n    })\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    switch (type) {\r\n      case 1:\r\n        this.spark = spark1\r\n        if (options && options.tint) {\r\n          this.spark.tint = options.tint\r\n        }\r\n        break;\r\n      case 2:\r\n        this.spark = spark2\r\n        this.blurFilter = new PIXI.filters.BlurFilter(random.float(0.5, 0.75), 5)\r\n        this.adjFilter = new AdjustmentFilter()\r\n        this.glowFilter = new GlowFilter()\r\n        this.adjFilter.saturation = 2.0\r\n        this.adjFilter.brightness = 1.5\r\n        // glowFilter.outerStrength = 1.0\r\n        this.glowFilter.color = 0xFFFFFF //0xFFD100 //0xFF9C00 //0xFFFFFF\r\n        this.filters = store.getState().game.filterEffects ? [\r\n          this.blurFilter,\r\n          this.adjFilter,\r\n          this.glowFilter\r\n        ] : []\r\n        this.spark.filters = this.filters\r\n        break;\r\n        default:\r\n    }\r\n    if (options && options.scale) {\r\n      let sparkContainer = new PIXI.Container()\r\n      this.spark.scale.x = options.scale\r\n      this.spark.scale.y = options.scale\r\n      sparkContainer.addChild(this.spark)\r\n      sparkContainer.pivot.x = sparkContainer.width * (options.scale * .5)\r\n      sparkContainer.pivot.y = sparkContainer.height * (options.scale * .5)\r\n      this.spark = sparkContainer\r\n    }\r\n\r\n    this.renderBody = renderBody\r\n    if (!options || (options && !options.stop)) {\r\n      if (this.spark.play) {\r\n        this.spark.play()\r\n      }\r\n      if (this.spark.children && this.spark.children[0]) {\r\n        this.spark.children[0].play()\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  getFilters() {\r\n    return {\r\n      glow: this.glowFilter,\r\n      adjust: this.adjFilter,\r\n      blur: this.blurFilter\r\n    }\r\n  }\r\n\r\n  updateFilters(filters) {\r\n    this.filters = filters\r\n    this.spark.filters = this.filters\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.spark.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.spark) === -1) {\r\n        this.container.addChild(this.spark)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { CustomMenuButton, Inline } from './ShopMenu'\r\nimport { gameStateTransition, incrementWave } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nposition: absolute;\r\nmargin: auto;\r\ntop: 40px;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nbackground-color: #222;\r\nopacity: .5;\r\n`\r\n\r\nexport const nextWave = () => {\r\n  let { dispatch, getState } = store\r\n  let { waveNum:wave, lvlToWin, gameState, gameSubState } = getState().game\r\n  let screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  if (wave < lvlToWin) {\r\n    screenUI.unpause()\r\n    dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  } else {\r\n    alert('You win!')\r\n  }\r\n}\r\n\r\nexport default function ShopQuery () {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const wave = useSelector(state => state.game.waveNum)\r\n  const lvlToWin = useSelector(state => state.game.lvlToWin)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  \r\n  const gotoShop = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.SHOP_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n  \r\n  const gotoBuildMenu = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoShop }>Shop</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoBuildMenu }>Build Barriers/Traps</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n          <MenuButtonSpacer padding={2}>\r\n            <CustomMenuButton width={400} height={40} onClick={ nextWave }>\r\n              {\r\n                wave < lvlToWin ? 'Next Wave' : 'Submit your score!'\r\n              }\r\n            </CustomMenuButton>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { degrees } from 'radians'\r\nimport { World, Body, Bodies, Constraint, Composite, Vector } from 'matter-js'\r\nimport { setMousePosition, setPlayerCompositeId, setKeyPress,\r\n\tremoveKeyPress, setJumping, setMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot, setWeaponEquipped, setCompositeBodyIds, decrementGrenadeCount,\r\n   gameStateTransition, unsetAllKeys, resetPlayerVariables, addToTotalAmmo, addToTotalCredits,\r\n   updatePlayerHealth, subtractFromTotalCredits, setRightMouseDown, setLastMagDropped, increaseStats, StatsDefs, setAchievementOwned, AchievementDefs, setBarrierTypePlaced, setTrapTypePlaced, increaseStatsByAmount } from '../gameSlice'\r\nimport { getPlayerBody, getPlayerComposite, getBodyWidth, getBodyHeight, makePixiSprite } from '../utils/Utils'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS,\r\n\tLESS_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_Y_POS,\r\n\tMOUSE_DOWN, MOUSE_UP } from '../constants/mouseStates'\r\nimport { WEAPON_TYPE_GRENADE, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { batch } from 'react-redux'\r\nimport { createTextMessage } from '../createMessages'\r\nimport PlayerRagdoll, { PlayerRagdollHalved, PlayerRagdollDecap, PlayerRagdollMaim } from './PlayerRagdoll'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { KILLED_BY_ZOMBIE, FELL_OFF } from '../constants/DeathTypes'\r\nimport { calcGrenadeAngle } from '../utils/Utils'\r\nimport WallBarrier from '../BuildItems/WallBarrier'\r\nimport random from 'random'\r\nimport Landmine from '../BuildItems/Landmine'\r\nimport Grenade from '../items/Grenade'\r\nimport Clustermine from '../BuildItems/Clustermine'\r\nimport { trapTypes } from '../constants/buildTypes'\r\nimport RemoteMine from '../BuildItems/RemoteMine'\r\nimport MachineGunTurret from '../BuildItems/MachineGunTurret'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport Spark from '../FX/Sparks'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { Howl, Howler } from 'howler'\r\nimport { updateScore, subtractScore } from '../utils/updateScore'\r\nimport { nextWave } from '../ReactComponents/ShopQuery'\r\n\r\nexport class EnhancedMuzzleSpark {\r\n  constructor(renderBody) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let to = window.TweenLite.to\r\n    let gameObjects = window.gameObjects\r\n    let muzzleSpark = new Spark(2, renderBody)\r\n    let sparks = gameObjects.getKeyValue('spark-sprites')\r\n    muzzleSpark.spark.scale.x = .5 //random.float(.5, 1.0)\r\n    muzzleSpark.spark.scale.y = .5\r\n    sparks.push( muzzleSpark )\r\n    muzzleSpark.spark.gotoAndPlay( random.int(10, 15) )\r\n    if (store.getState().game.filterEffects) {\r\n      let { adjust, glow, blur } = muzzleSpark.getFilters()\r\n      adjust.brightness = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          : \r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 3.5\r\n              : 1.0\r\n      )\r\n      adjust.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      glow.color = (\r\n        tier === 1 ? 0xFFFFFF\r\n          :\r\n            tier === 2 ? 0xFFF500\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF6D00\r\n                : 0xFFFFFF\r\n      )\r\n      muzzleSpark.updateFilters([ glow, blur, adjust ])\r\n    }\r\n\r\n    to(muzzleSpark.spark.scale, .1, { x: 0.55, y: 0.55 })\r\n    return muzzleSpark\r\n  }\r\n}\r\n\r\nexport default function Player() {\r\n\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet { getState, dispatch } = store\r\n\tlet { game: { width: gameWidth, height: gameHeight, player: { constants: { width: wd, height: ht } } } } = getState()\r\n\tlet { TweenLite } = window\r\n\tlet { delayedCall, to, from, set } = TweenLite\r\n\r\n\tthis.body = Bodies.rectangle(400, 200, wd, ht, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.arm = Bodies.rectangle(400, 200, 30, 15, {\r\n\t\tfriction: 0,\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n  })\r\n  // this.armPointBody = Bodies.rectangle(400, 200, 10, 10, {\r\n  //   friction: 0,\r\n  //   inertia: Infinity,\r\n  //   collisionFilter: playerCollisionOptions\r\n  // })\r\n  // this.armPoint = Constraint.create({\r\n  //   bodyA: this.arm,\r\n  //   bodyB: this.armPointBody,\r\n  //   pointA: { x: -60, y: 0 },\r\n  //   pointB: { x: 0, y: 0 },\r\n  //   length: 0,\r\n  //   // stiffness: 1\r\n  // })\r\n\tthis.armAttach = Constraint.create({\r\n\t\tbodyA: this.arm,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 12, y: 0 },\r\n\t\tpointB: { x: 0, y: -80 },\r\n\t\tlength: 0\r\n\t})\r\n\t// head\r\n\tthis.head = Bodies.rectangle(400, 200, 20, 24, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.headAttach = Constraint.create({\r\n\t\tbodyA: this.head,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 0, y: 10 },\r\n\t\tpointB: { x: 0, y: -((ht/2) + 5) },\r\n\t\tlength: 0\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n\t\t// bodies\r\n\t\tthis.body,\r\n\t\tthis.arm,\r\n\t\tthis.head,\r\n\t\t// constraints\r\n\t\t// this.armPoint,\r\n\t\tthis.armAttach,\r\n\t\tthis.headAttach\r\n\t])\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.label = 'player character'\r\n\t\tbody.main = this\r\n\t})\r\n\tdispatch(setPlayerCompositeId(this.composite.id))\r\n\tdispatch(setCompositeBodyIds({\r\n\t\tbodyId: this.body.id,\r\n\t\theadId: this.head.id,\r\n\t\tarmId: this.arm.id\r\n  }))\r\n  dispatch(\r\n    setLastMagDropped( JSON.stringify(Date.now()) )\r\n  )\r\n\r\n\tthis.composite.body = this.body\r\n\tthis.composite.arm = this.arm\r\n\r\n\tWorld.add(world, this.composite)\r\n\r\n\tdispatch( setLastShot(WEAPON_TYPE_PISTOL, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SMG, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SHOTGUN, JSON.stringify(Date.now())) )\r\n\r\n\t// create player lifebar UI\r\n\tthis.life = 100\r\n  \r\n\tlet lifebarOutline = new PIXI.Graphics()\r\n\tlifebarOutline.lineStyle(1.0, 0x202D0A)\r\n\tlifebarOutline.drawRect(0, 0, gameWidth * .75, 12)\r\n  container.addChild(lifebarOutline)\r\n\r\n  let lifebarGreen = 0x00FA9A\r\n  let damageRed = 0xDD0E0E\r\n\tlet lifebar = new PIXI.Graphics()\r\n  lifebar.beginFill(0xFFFFFF)\r\n  lifebar.tint = lifebarGreen\r\n  lifebar.drawRect(0, 0, (gameWidth * .75) - 2, 10)\r\n  let bevel = new BevelFilter({ thickness: 5, lightAlpha: .5, lightColor: 0xffffff, shadowAlpha: .4, shadowColor: 0x0 })\r\n  lifebar.filters = getState().game.filterEffects ? [ bevel ] : []\r\n\tcontainer.addChild(lifebar)\r\n\tthis.initialLifebarWidth = lifebar.width\r\n\r\n\tlifebarOutline.position.x = 50\r\n\tlifebarOutline.position.y = gameHeight - 60\r\n\tlifebar.position.x = lifebarOutline.position.x + 1\r\n  lifebar.position.y = lifebarOutline.position.y + 1\r\n  let lifebarDefaultPosition = lifebar.position\r\n\r\n  //-- Reloading weapons\r\n  // this.reloading = false\r\n  // reload pistol anim\r\n  let charReloadPistolSpritesheet = gameObjects.getKeyValue('char-reload-pistol-sheet')\r\n  let charReloadPistolSprite = new PIXI.AnimatedSprite(charReloadPistolSpritesheet.animations['char_reload_pistol'])\r\n  charReloadPistolSprite.loop = false\r\n  charReloadPistolSprite.animationSpeed = .5\r\n  charReloadPistolSprite.updateAnchor = true\r\n  charReloadPistolSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadPistolSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadPistolSprite.visible = false\r\n  charReloadPistolSprite.onComplete = () => {\r\n    charReloadPistolSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadPistolSprite)\r\n\r\n  // reload smg anim\r\n  let charReloadSMGSpritesheet = gameObjects.getKeyValue('char-reload-smg-sheet')\r\n  let charReloadSMGSprite = new PIXI.AnimatedSprite(charReloadSMGSpritesheet.animations['char_reload_smg'])\r\n  charReloadSMGSprite.loop = false\r\n  charReloadSMGSprite.animationSpeed = .5\r\n  charReloadSMGSprite.updateAnchor = true\r\n  charReloadSMGSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadSMGSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadSMGSprite.visible = false\r\n  charReloadSMGSprite.onComplete = () => {\r\n    charReloadSMGSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadSMGSprite)\r\n  \r\n  // reload shotgun anim\r\n  let charReloadShotgunSpritesheet = gameObjects.getKeyValue('char-reload-shotgun-sheet')\r\n  let charReloadShotgunSprite = new PIXI.AnimatedSprite(charReloadShotgunSpritesheet.animations['shotgunReload'])\r\n  charReloadShotgunSprite.loop = false\r\n  charReloadShotgunSprite.animationSpeed = .5\r\n  charReloadShotgunSprite.updateAnchor = true\r\n  charReloadShotgunSprite.pivot.x = charReloadShotgunSprite.width * .725\r\n  charReloadShotgunSprite.pivot.y = charReloadShotgunSprite.height * .5\r\n  charReloadShotgunSprite.visible = false\r\n  this.shotgunShellLoadIterations = 0\r\n  this.gotoToEndOfShotgunReload = true\r\n  charReloadShotgunSprite.onComplete = () => {\r\n    charReloadShotgunSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n    this.shotgunShellLoadIterations = 0\r\n    this.gotoToEndOfShotgunReload = true\r\n  }\r\n  container.addChild(charReloadShotgunSprite)\r\n\r\n  this.reloadAnimsByType = {\r\n    'pistol weapon': charReloadPistolSprite,\r\n    'smg weapon': charReloadSMGSprite,\r\n    'shotgun weapon': charReloadShotgunSprite\r\n  }\r\n\r\n  this.reloadAnims = [\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite\r\n  ]\r\n\r\n  //-- Melee anims\r\n  let motionBlur = new MotionBlurFilter()\r\n  motionBlur.kernelSize = 5\r\n  motionBlur.velocity.x = 30\r\n  motionBlur.velocity.y = 40\r\n  // pistol melee\r\n  let meleePistolSpritesheet = gameObjects.getKeyValue('melee-pistol-sheet')\r\n  let meleePistolAnim = new PIXI.AnimatedSprite(meleePistolSpritesheet.animations['melee_pistol'])\r\n  meleePistolAnim.loop = false\r\n  meleePistolAnim.animationSpeed = .75\r\n  meleePistolAnim.updateAnchor = true\r\n  meleePistolAnim.pivot.x = meleePistolAnim.width * .5\r\n  meleePistolAnim.pivot.y = meleePistolAnim.height * .5\r\n  meleePistolAnim.visible = false\r\n  meleePistolAnim.onComplete = () => {\r\n    meleePistolAnim.gotoAndStop(0)\r\n    meleePistolAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleePistolAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleePistolAnim.currentFrame > 12 && meleePistolAnim.currentFrame < 15) {\r\n      meleePistolAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleePistolAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleePistolAnim)\r\n  \r\n  // ump melee\r\n  let meleeUMPSpritesheet = gameObjects.getKeyValue('melee-ump-sheet')\r\n  let meleeUMPAnim = new PIXI.AnimatedSprite(meleeUMPSpritesheet.animations['melee_ump'])\r\n  meleeUMPAnim.loop = false\r\n  meleeUMPAnim.animationSpeed = .75\r\n  meleeUMPAnim.updateAnchor = true\r\n  meleeUMPAnim.pivot.x = meleeUMPAnim.width * .5\r\n  meleeUMPAnim.pivot.y = meleeUMPAnim.height * .5\r\n  meleeUMPAnim.visible = false\r\n  meleeUMPAnim.onComplete = () => {\r\n    meleeUMPAnim.gotoAndStop(0)\r\n    meleeUMPAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeUMPAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeUMPAnim.currentFrame > 11 && meleeUMPAnim.currentFrame < 14) {\r\n      meleeUMPAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeUMPAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeUMPAnim)\r\n\r\n  // shotgun melee\r\n  let meleeShotgunSpritesheet = gameObjects.getKeyValue('melee-shotgun-sheet')\r\n  let meleeShotgunAnim = new PIXI.AnimatedSprite(meleeShotgunSpritesheet.animations['meleeShotgun'])\r\n  meleeShotgunAnim.loop = false\r\n  meleeShotgunAnim.animationSpeed = .5\r\n  meleeShotgunAnim.updateAnchor = true\r\n  meleeShotgunAnim.pivot.x = meleeShotgunAnim.width * .75\r\n  meleeShotgunAnim.pivot.y = meleeShotgunAnim.height * .5\r\n  meleeShotgunAnim.visible = false\r\n  meleeShotgunAnim.onComplete = () => {\r\n    meleeShotgunAnim.gotoAndStop(0)\r\n    meleeShotgunAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeShotgunAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeShotgunAnim.currentFrame > 6 && meleeShotgunAnim.currentFrame < 9) {\r\n      meleeShotgunAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeShotgunAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeShotgunAnim)\r\n\r\n  this.meleeSprites = [\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim\r\n  ]\r\n\r\n  //-- Grenade throws \r\n  this.grenadeThrowInProgress = false\r\n  this.grenadeForce = { x: 0.001, y: 0.001 }\r\n  this.chargingGrenade = false\r\n  this.chargeGrenade = () => {\r\n    this.chargeGrenadeSound = gameObjects.getKeyValue('charging-grenade-sound')\r\n    if (this.chargeGrenadeSound && !this.chargingGrenade) {\r\n      this.chargeGrenadeSound.play()\r\n    }\r\n    container.addChild(this.meter)\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.chargingGrenade = true\r\n    if (this.grenadeForce.x <= this.grenadeUpperForceThreshold) {\r\n      this.grenadeForce.x += this.grenadeChargeRate\r\n      this.grenadeForce.y += this.grenadeChargeRate\r\n    }\r\n  }\r\n\r\n  const createGrenadeChargeMeter = () => {\r\n    this.meter = new PIXI.Graphics()\r\n    this.meter.beginFill(0xffa23f)\r\n    this.meter.drawRect(0, 0, 100, 10)\r\n    container.addChild(this.meter)\r\n  }\r\n  createGrenadeChargeMeter()\r\n\r\n  this.renderGrenadeChargeMeter = renderFn => {\r\n    let { x, y } = renderFn(this.body)\r\n    this.grenadeUpperForceThreshold = getState().game.player.weapons.grenadeUpperForceThreshold\r\n    if (this.meter && this.chargingGrenade) {\r\n      this.meter.position.x = x - this.meter.width/2\r\n      this.meter.position.y = y - getBodyHeight(this.body) * .75\r\n      this.meter.width = this.grenadeForce.x/this.grenadeUpperForceThreshold * 100\r\n    } else {\r\n      this.meter.width = 0\r\n    }\r\n  }\r\n  \r\n  this.createGrenade = () => {\r\n    let r = 8\r\n    let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.updateGrenadeIcons()\r\n    let grenades = gameObjects.getKeyValue('grenades')\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.calculatedGrenadeForce = calcGrenadeAngle(this.arm.position, getState().game.mouseRelativeToPlayerPosition, this.grenadeForce)\r\n    grenades.push(\r\n      new Grenade(\r\n        getState().game.mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) : this.body.position.x - getBodyWidth(this.body),\r\n        this.body.position.y - (getBodyHeight(this.body)/2),\r\n        r,\r\n        this.calculatedGrenadeForce\r\n      )\r\n    )\r\n    this.grenadeForce = { x: 0.001, y: 0.001 }\r\n    this.chargingGrenade = false\r\n  }\r\n\r\n  this.throwGrenade = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (grenadeThrowPistolAnim.currentFrame < 1) {\r\n          grenadeThrowPistolAnim.visible = true\r\n          grenadeThrowPistolAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (grenadeThrowUMPAnim.currentFrame < 1) {\r\n          grenadeThrowUMPAnim.visible = true\r\n          grenadeThrowUMPAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (grenadeThrowShotgunAnim.currentFrame < 1) {\r\n          grenadeThrowShotgunAnim.visible = true\r\n          grenadeThrowShotgunAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n    }\r\n    if (!this.grenadeThrowInProgress) {\r\n      if (this.chargeGrenadeSound) {\r\n        this.chargeGrenadeSound.stop()\r\n      }\r\n      delayedCall(.2, () => {\r\n        let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n        _throw.play()\r\n        this.createGrenade()\r\n      })\r\n      this.chargingGrenade = false\r\n      this.grenadeThrowInProgress = true\r\n      if (attacks[equipped]) {\r\n        attacks[equipped]()\r\n        batch(() => {\r\n          dispatch( decrementGrenadeCount() )\r\n          dispatch( increaseStats( StatsDefs.grenadesThrown ) )\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // pistol equpped - 'nade throw\r\n  let grenadeThrowPistolSpritesheet = gameObjects.getKeyValue('grenade-pistol-sheet')\r\n  let grenadeThrowPistolAnim = new PIXI.AnimatedSprite(grenadeThrowPistolSpritesheet.animations['grenade_throw_pistol'])\r\n  grenadeThrowPistolAnim.loop = false\r\n  grenadeThrowPistolAnim.animationSpeed = 1.00\r\n  grenadeThrowPistolAnim.updateAnchor = true\r\n  grenadeThrowPistolAnim.pivot.x = grenadeThrowPistolAnim.width * .5\r\n  grenadeThrowPistolAnim.pivot.y = grenadeThrowPistolAnim.height * .5\r\n  grenadeThrowPistolAnim.visible = false\r\n  grenadeThrowPistolAnim.onComplete = () => {\r\n    grenadeThrowPistolAnim.gotoAndStop(0)\r\n    grenadeThrowPistolAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowPistolAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowPistolAnim.currentFrame > 22) {\r\n      if (!this.grenadeThrown) {\r\n        // this.createGrenade()\r\n        this.grenadeThrown = true\r\n        delayedCall(.5, () => { this.grenadeThrown = false })\r\n      }\r\n    }\r\n    if (grenadeThrowPistolAnim.currentFrame > 27) {\r\n      grenadeThrowPistolAnim.gotoAndStop(0)\r\n      grenadeThrowPistolAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowPistolAnim)\r\n  // ump equipped - 'nade throw\r\n  let grenadeThrowUMPSpritesheet = gameObjects.getKeyValue('grenade-ump-sheet')\r\n  let grenadeThrowUMPAnim = new PIXI.AnimatedSprite(grenadeThrowUMPSpritesheet.animations['grenade_throw_ump'])\r\n  grenadeThrowUMPAnim.loop = false\r\n  grenadeThrowUMPAnim.animationSpeed = 1.00\r\n  grenadeThrowUMPAnim.updateAnchor = true\r\n  grenadeThrowUMPAnim.pivot.x = grenadeThrowUMPAnim.width * .5\r\n  grenadeThrowUMPAnim.pivot.y = grenadeThrowUMPAnim.height * .5\r\n  grenadeThrowUMPAnim.visible = false\r\n  grenadeThrowUMPAnim.onComplete = () => {\r\n    grenadeThrowUMPAnim.gotoAndStop(0)\r\n    grenadeThrowUMPAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowUMPAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowUMPAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowUMPAnim.currentFrame > 27) {\r\n      grenadeThrowUMPAnim.gotoAndStop(0)\r\n      grenadeThrowUMPAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowUMPAnim)\r\n  // shotgun equipped - 'nade throw\r\n  let grenadeThrowShotgunSpritesheet = gameObjects.getKeyValue('grenade-shotgun-sheet')\r\n  let grenadeThrowShotgunAnim = new PIXI.AnimatedSprite(grenadeThrowShotgunSpritesheet.animations['shotgunGrenadeThrow'])\r\n  grenadeThrowShotgunAnim.loop = false\r\n  grenadeThrowShotgunAnim.animationSpeed = 1.00\r\n  grenadeThrowShotgunAnim.updateAnchor = true\r\n  grenadeThrowShotgunAnim.pivot.x = grenadeThrowShotgunAnim.width * .5\r\n  grenadeThrowShotgunAnim.pivot.y = grenadeThrowShotgunAnim.height * .5\r\n  grenadeThrowShotgunAnim.visible = false\r\n  grenadeThrowShotgunAnim.onComplete = () => {\r\n    grenadeThrowShotgunAnim.gotoAndStop(0)\r\n    grenadeThrowShotgunAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowShotgunAnim.onFrameChange = () => {\r\n    if (grenadeThrowShotgunAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowShotgunAnim.currentFrame > 27) {\r\n      grenadeThrowShotgunAnim.gotoAndStop(0)\r\n      grenadeThrowShotgunAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowShotgunAnim)\r\n\r\n  this.grenadeSprites = [\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n\r\n  this.grenadeSpritesByEquipped = {\r\n    'pistol weapon': grenadeThrowPistolAnim,\r\n    'smg weapon': grenadeThrowUMPAnim,\r\n    'shotgun weapon': grenadeThrowShotgunAnim\r\n  }\r\n  \r\n  this.ejectedMags = []\r\n\r\n  this.reloadMagazineActionsByType = {\r\n    'pistol weapon': () => {\r\n      let { game: { player: { weapons: { equipped, reloadSpeed }, perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y, 7, 20, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n        })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.0025, 0.005) : random.float(-0.0025, -0.005)),\r\n          y: random.float(-0.0025, -0.005)\r\n        })\r\n      // make some simple magazing gfx\r\n      let pistolMag = new PIXI.Graphics()\r\n      pistolMag.beginFill(0x333333)\r\n      pistolMag.drawRect(0, 0, 7, 20)\r\n      pistolMag.pivot.x = pistolMag.width/2\r\n      pistolMag.pivot.y = pistolMag.height/2\r\n      let magObj = {\r\n        gfx: pistolMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(pistolMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        pistolMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'smg weapon': () => {\r\n      let { game: { player: { perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y - (getBodyHeight(this.body)/2), 7, 42, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n      })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.004, 0.01) : random.float(-0.004, -0.01)),\r\n          y: random.float(-0.0015, -0.01)\r\n        })\r\n      // make some simple magazing gfx\r\n      let smgMag = new PIXI.Graphics()\r\n      smgMag.beginFill(0x333333)\r\n      smgMag.drawRect(0, 0, 7, 42)\r\n      smgMag.pivot.x = smgMag.width/2\r\n      smgMag.pivot.y = smgMag.height/2\r\n      let magObj = {\r\n        gfx: smgMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(smgMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        smgMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'shotgun weapon': () => {\r\n      const reloadShell = () => {\r\n        delayedCall(.3, () => {\r\n          if (this.shotgunShellLoadIterations > 5) {\r\n            charReloadShotgunSprite.gotoAndPlay(21)\r\n          } else {\r\n            charReloadShotgunSprite.gotoAndPlay(10)\r\n            this.shotgunShellLoadIterations++\r\n            reloadShell()\r\n          }\r\n        })\r\n      }\r\n      reloadShell()\r\n    }\r\n  }\r\n\r\n  this.updateEjectedMagPositions = (renderFn) => {\r\n    this.ejectedMags.forEach(mag => {\r\n      let { x, y, rotation: rot } = renderFn(mag.body)\r\n      mag.gfx.position = { x, y }\r\n      mag.gfx.rotation = rot\r\n    })\r\n  }\r\n\r\n  this.reloadWeapon = () => {\r\n    // this.reloading = true\r\n    let { game: { player: { weapons: { reloadSpeed, reloadAnimationFrames, equipped } } } } = getState()\r\n    this.reloadAnimsByType[equipped].animationSpeed = reloadSpeed[equipped]\r\n    this.reloadAnimsByType[equipped].gotoAndPlay(1)\r\n    delayedCall(\r\n      equipped === WEAPON_TYPE_PISTOL ? reloadSpeed[equipped]/4 //1\r\n      : equipped === WEAPON_TYPE_SMG ? (reloadSpeed[equipped] * 2) + (reloadSpeed[equipped]/2) //1.00\r\n      : equipped === WEAPON_TYPE_SHOTGUN ? reloadSpeed[equipped] + (reloadSpeed[equipped]/4) //.5\r\n      : 0\r\n    , () => {\r\n      if (this.reloadAnimsByType[equipped].visible === true) {\r\n        dispatch( increaseStats( StatsDefs.timesReloaded ) )\r\n        this.reloadMagazineActionsByType[equipped]()\r\n      }\r\n    })\r\n  }\r\n  \r\n  // fire pistol right arm\r\n  let charRightArmFirePistolSpritesheet = gameObjects.getKeyValue('right-arm-pistol-fire-sheet')\r\n  let charRightArmFirePistolSprite = new PIXI.AnimatedSprite(charRightArmFirePistolSpritesheet.animations['right_char_arm_pistol_fire'])\r\n  charRightArmFirePistolSprite.play()\r\n  charRightArmFirePistolSprite.loop = false\r\n  charRightArmFirePistolSprite.animationSpeed = .35\r\n  charRightArmFirePistolSprite.updateAnchor = true\r\n  charRightArmFirePistolSprite.pivot.x = charRightArmFirePistolSprite.width * .6\r\n  charRightArmFirePistolSprite.pivot.y = charRightArmFirePistolSprite.height * .4\r\n  charRightArmFirePistolSprite.onComplete = () => {\r\n    charRightArmFirePistolSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFirePistolSprite)\r\n\r\n  // fire smg right arm\r\n  let charRightArmFireSMGSpritesheet = gameObjects.getKeyValue('right-arm-smg-fire-sheet')\r\n  let charRightArmFireSMGSprite = new PIXI.AnimatedSprite(charRightArmFireSMGSpritesheet.animations['char_right_arm_smg_fire'])\r\n  charRightArmFireSMGSprite.play()\r\n  charRightArmFireSMGSprite.loop = false\r\n  charRightArmFireSMGSprite.animationSpeed = .35\r\n  charRightArmFireSMGSprite.updateAnchor = true\r\n  charRightArmFireSMGSprite.pivot.x = charRightArmFireSMGSprite.width * .6\r\n  charRightArmFireSMGSprite.pivot.y = charRightArmFireSMGSprite.height * .4\r\n  charRightArmFireSMGSprite.onComplete = () => {\r\n    charRightArmFireSMGSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireSMGSprite)\r\n\r\n  // fire shotgun right arm\r\n  let charArmsFireShotgunSpritesheet = gameObjects.getKeyValue('arms-fire-shotgun-sheet')\r\n  let charRightArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['rightArmFireShotgun'])\r\n  charRightArmFireShotgunSprite.play()\r\n  charRightArmFireShotgunSprite.loop = false\r\n  charRightArmFireShotgunSprite.animationSpeed = .5\r\n  charRightArmFireShotgunSprite.updateAnchor = true\r\n  charRightArmFireShotgunSprite.pivot.x = charRightArmFireShotgunSprite.width * .6\r\n  charRightArmFireShotgunSprite.pivot.y = charRightArmFireShotgunSprite.height * .4\r\n  charRightArmFireShotgunSprite.onComplete = () => {\r\n    charRightArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireShotgunSprite)\r\n\r\n  // head sprite\r\n  let headSprite = makePixiSprite('char-head')\r\n  container.addChild(headSprite)\r\n  this.positionHeadSprite = renderObj => {\r\n    let { game: { keys, mouseState: { x: _mx }, mousePosition, player: { variables: { jumping, currentDirection }, weapons: { equipped } } } } = getState()\r\n    let { mx, my, fn: renderFn } = renderObj\r\n    let { x, y } = renderFn(this.head)\r\n    if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n      if (currentDirection === 'right') {\r\n        if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x + 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      } else if (currentDirection === 'left') {\r\n        if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x - 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      }\r\n    } else {\r\n      headSprite.position.x = x\r\n    }\r\n    \r\n    headSprite.position.y = y + 12\r\n\r\n    if (!jumping) {\r\n      if (my === LESS_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => { sprite.pivot.y = sprite.height * .45 })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = 2.5\r\n        }\r\n        else {\r\n          headSprite.rotation = 0.9570\r\n        }\r\n      } else if (my === GREATER_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .65\r\n          sprite.pivot.y = sprite.height * .45\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x > 550 && mousePosition.x < 650) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x < 750 && mousePosition.y > 250 && mx === GREATER_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -2.7230\r\n      } else if (mousePosition.x > 450 && mousePosition.y > 250 && mx === LESS_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -0.5532\r\n      } else {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .6\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = charLeftArmFirePistolSprite.rotation\r\n      }\r\n    } else {\r\n      this.armsSpritesByType[equipped].forEach(sprite => {\r\n        sprite.pivot.x = sprite.width * .6\r\n        sprite.pivot.y = sprite.height * .47\r\n      })\r\n    }\r\n  }\r\n  headSprite.pivot.x = headSprite.width * .52\r\n  headSprite.pivot.y = headSprite.height * .17\r\n  this.headSprite = headSprite\r\n \r\n  // run anim\r\n  let charRunSpritesheet = gameObjects.getKeyValue('char-run-sheet')\r\n  let charRunSprite = new PIXI.AnimatedSprite(charRunSpritesheet.animations['char_run'])\r\n  charRunSprite.loop = true\r\n  charRunSprite.animationSpeed = 1.0\r\n  charRunSprite.updateAnchor = true\r\n  charRunSprite.pivot.x = charRunSprite.width * .52\r\n  charRunSprite.pivot.y = charRunSprite.height * .5\r\n  container.addChild(charRunSprite)\r\n \r\n  // idle anim\r\n  let charIdleSpritesheet = gameObjects.getKeyValue('char-idle-sheet')\r\n  let charIdleSprite = new PIXI.AnimatedSprite(charIdleSpritesheet.animations['char_idle'])\r\n  charIdleSprite.play()\r\n  charIdleSprite.loop = true\r\n  charIdleSprite.animationSpeed = .1\r\n  charIdleSprite.updateAnchor = true\r\n  charIdleSprite.pivot.x = charIdleSprite.width * .52\r\n  charIdleSprite.pivot.y = charIdleSprite.height * .5\r\n  container.addChild(charIdleSprite)\r\n  \r\n  // jump anim\r\n  let charJumpSpritesheet = gameObjects.getKeyValue('char-jump-sheet')\r\n  let charJumpSprite = new PIXI.AnimatedSprite(charJumpSpritesheet.animations['char_jump'])\r\n  charJumpSprite.loop = false\r\n  charJumpSprite.animationSpeed = .35\r\n  charJumpSprite.updateAnchor = true\r\n  charJumpSprite.pivot.x = charJumpSprite.width * .52\r\n  charJumpSprite.pivot.y = charJumpSprite.height * .5\r\n  //  set(charJumpSprite.scale, { x: .5, y: 1.0 })\r\n  charJumpSprite.visible = false\r\n  container.addChild(charJumpSprite)\r\n \r\n  this.stopJumpAnimation = () => {\r\n    charJumpSprite.gotoAndStop(0)\r\n    charJumpSprite.visible = false\r\n  }\r\n\r\n  charJumpSprite.onComplete = () => {\r\n    let { jumping } = getState().game.player.variables\r\n    if (!jumping) {\r\n      this.stopJumpAnimation()\r\n    } else {\r\n      this.resumeJumpAnimation()\r\n    }\r\n  }\r\n\r\n  let jumpMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.resumeJumpAnimation = () => {\r\n  charJumpSprite.gotoAndPlay(3)\r\n  charJumpSprite.visible = true\r\n  charRunSprite.visible = false\r\n  charIdleSprite.visible = false\r\n  // charJumpSprite.animationSpeed = .1\r\n  }\r\n\r\n  this.playJumpAnimation = () => {\r\n    if (getState().game.filterEffects) {\r\n      charJumpSprite.filters = [ jumpMotionBlur ]\r\n      from(jumpMotionBlur.velocity, .35, {\r\n        y: 50,\r\n        onUpdate: () => {\r\n          charJumpSprite.filters = [ jumpMotionBlur ]\r\n        }\r\n      })\r\n    }\r\n    charJumpSprite.gotoAndPlay(0)\r\n    charJumpSprite.visible = true\r\n    charRunSprite.visible = false\r\n    charIdleSprite.visible = false\r\n  }\r\n\r\n  // motion blur\r\n  let charLeftArmFirePistolSpritesheet = gameObjects.getKeyValue('left-arm-pistol-fire-sheet')\r\n  let charLeftArmFirePistolSprite = new PIXI.AnimatedSprite(charLeftArmFirePistolSpritesheet.animations['left_char_arm_pistol_fire'])\r\n  charLeftArmFirePistolSprite.play()\r\n  charLeftArmFirePistolSprite.loop = false\r\n  charLeftArmFirePistolSprite.animationSpeed = .35\r\n  charLeftArmFirePistolSprite.updateAnchor = true\r\n  charLeftArmFirePistolSprite.pivot.x = charLeftArmFirePistolSprite.width * .6\r\n  charLeftArmFirePistolSprite.pivot.y = charLeftArmFirePistolSprite.height * .4\r\n  charLeftArmFirePistolSprite.onComplete = () => {\r\n    charLeftArmFirePistolSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFirePistolSprite)\r\n   \r\n  // fire smg left arm (front)\r\n  let charLeftArmFireSMGSpritesheet = gameObjects.getKeyValue('left-arm-smg-fire-sheet')\r\n  let charLeftArmFireSMGSprite = new PIXI.AnimatedSprite(charLeftArmFireSMGSpritesheet.animations['char_left_arm_smg_fire'])\r\n  charLeftArmFireSMGSprite.play()\r\n  charLeftArmFireSMGSprite.loop = false\r\n  charLeftArmFireSMGSprite.animationSpeed = .35\r\n  charLeftArmFireSMGSprite.updateAnchor = true\r\n  charLeftArmFireSMGSprite.pivot.x = charLeftArmFireSMGSprite.width * .6\r\n  charLeftArmFireSMGSprite.pivot.y = charLeftArmFireSMGSprite.height * .4\r\n  charLeftArmFireSMGSprite.onComplete = () => {\r\n    charLeftArmFireSMGSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFireSMGSprite)\r\n\r\n  // fire shotgun left arm (front)\r\n  let charLeftArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['leftArmFireShotgun'])\r\n  charLeftArmFireShotgunSprite.play()\r\n  charLeftArmFireShotgunSprite.loop = false\r\n  charLeftArmFireShotgunSprite.animationSpeed = .5\r\n  charLeftArmFireShotgunSprite.updateAnchor = true\r\n  charLeftArmFireShotgunSprite.pivot.x = charLeftArmFireShotgunSprite.width * .6\r\n  charLeftArmFireShotgunSprite.pivot.y = charLeftArmFireShotgunSprite.height * .4\r\n  charLeftArmFireShotgunSprite.onComplete = () => {\r\n    charLeftArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charLeftArmFireShotgunSprite)\r\n\r\n  let weaponSwapMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.armsSprites = [\r\n    charLeftArmFirePistolSprite,\r\n    charRightArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charRightArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite,\r\n    charRightArmFireShotgunSprite\r\n  ]\r\n\r\n  this.armsSpritesByType = {\r\n    'pistol weapon': [ charLeftArmFirePistolSprite, charRightArmFirePistolSprite ],\r\n    'smg weapon': [ charLeftArmFireSMGSprite, charRightArmFireSMGSprite ],\r\n    'shotgun weapon': [ charLeftArmFireShotgunSprite, charRightArmFireShotgunSprite ]\r\n  }\r\n\r\n  let muzzleFlashFX = new MuzzleFlashFX()\r\n\r\n  let _9mm1 = window.gameObjects.getKeyValue('9mm-sound1')\r\n  let _9mm2 = window.gameObjects.getKeyValue('9mm-sound2')\r\n  let pistolSound1 = new Howl({\r\n    src: [ _9mm1 ],\r\n  })\r\n  let pistolSound2 = new Howl({\r\n    src: [ _9mm2 ],\r\n    sprite: {\r\n      _1: [ 500, 1000 ]\r\n    }\r\n  })\r\n  let pistolReloadSnd = window.gameObjects.getKeyValue('pistol-reload-sound')\r\n  let pistolReloadSound = new Howl({ src: [ pistolReloadSnd ], volume: .25 })\r\n  let jumpSound = gameObjects.getKeyValue('jump-sound')\r\n  let pain1Snd = gameObjects.getKeyValue('pain1-sound')\r\n  let pain2Snd = gameObjects.getKeyValue('pain2-sound')\r\n  let deathRip = gameObjects.getKeyValue('death-rip-sound')\r\n  let playerDeathSnd = gameObjects.getKeyValue('player-death-sound')\r\n  let hitImpact = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n  let smgFire = gameObjects.getKeyValue('smg-fire-sound')\r\n  let shotgunFire = gameObjects.getKeyValue('shotgun-blast-sound')\r\n\r\n  this.fireWeaponAnimation = () => {\r\n    let { game: { mouseState, player: { weapons: { equipped } } } } = getState()\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.visible = true })\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.gotoAndPlay(0) })\r\n    muzzleFlashFX.fireEffect()\r\n    // position muzzle spark particles sprite \r\n    let mSpark = new EnhancedMuzzleSpark(this.arm)\r\n    this.currentMuzzleSpark = mSpark\r\n    // sound\r\n    if (equipped === WEAPON_TYPE_PISTOL) {\r\n      pistolSound1.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SMG) {\r\n      smgFire.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SHOTGUN) {\r\n      shotgunFire.play()\r\n    }\r\n  }\r\n\r\n  this.charRunSprite = charRunSprite\r\n  this.charIdleSprite = charIdleSprite\r\n  this.charJumpSprite = charJumpSprite\r\n  // weapons specific\r\n  this.charReloadPistolSprite = charReloadPistolSprite\r\n  this.charReloadSMGSprite = charReloadSMGSprite\r\n  this.charReloadShotgunSprite = charReloadShotgunSprite\r\n\r\n  this.bodySprites = [\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n  \r\n  this.sprites = [\r\n    charRightArmFirePistolSprite,\r\n    charRightArmFireSMGSprite,\r\n    charRightArmFireShotgunSprite,\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n    charLeftArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite\r\n  ]\r\n\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 60, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n  blur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      this.shadow.alpha = .85\r\n      this.shadow.filters = [blur]\r\n      lifebar.filters = [bevel]\r\n    } else {\r\n      this.shadow.alpha = .45\r\n      this.shadow.filters = []\r\n      lifebar.filters = []\r\n    }\r\n  }\r\n\r\n  this.setBodySpritesPositions = obj => {\r\n    let { fn } = obj\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.bodySprites.forEach(sprite => {\r\n      sprite.position.x = x\r\n      sprite.position.y = y - 15\r\n    })\r\n    if (container && container.children.indexOf(this.shadow) === -1) {\r\n      container.addChild(this.shadow)\r\n    }\r\n    this.shadow.position.x = x\r\n    this.shadow.position.y = this.bodySprites[0].position.y + this.bodySprites[0].height/2 - 5\r\n  }\r\n\r\n  this.setArmsSpritePosition = obj => {\r\n    // .125 is a rotation adjustment so that the arms sprite lines up more accurately with where the bullet is coming from\r\n    let { game: { keys, mouseState: { x: _mx, y: _my }, player: { variables: { jumping, currentDirection } } } } = getState()\r\n    let { fn } = obj\r\n    let { x, y, rotation: rot } = fn(this.arm)\r\n    this.armsSprites.forEach(sprite => {\r\n      // sprite.x = x\r\n      if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n        if (currentDirection === 'right') {\r\n          if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n            sprite.x = x + 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        } else if (currentDirection === 'left') {\r\n          if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n            sprite.x = x - 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        }\r\n      } else {\r\n        sprite.x = x\r\n      }\r\n\r\n      if (jumping) {\r\n        if (_my === LESS_THAN_PLAYER_Y_POS) {\r\n          sprite.y = y - 10\r\n        } else {\r\n          sprite.y = y\r\n        }\r\n      } else {\r\n        sprite.y = y\r\n      }\r\n\r\n      sprite.rotation = rot\r\n    })\r\n    // keep muzzle flashes aligned with gun arm\r\n    let fpos, frot\r\n    muzzleFlashFX.getFlashes().forEach(flash => {\r\n      flash.position = charRightArmFirePistolSprite.position\r\n      flash.rotation = rot - degrees(90)\r\n      flash.pivot.x = -flash.width * .05\r\n      flash.pivot.y = getState().game.player.weapons.equipped === WEAPON_TYPE_SHOTGUN ? flash.height * 3.25 : flash.height * 2.25\r\n      fpos = flash.position\r\n      frot = flash.rotation\r\n    })\r\n    if (this.currentMuzzleSpark) {\r\n      this.currentMuzzleSpark.spark.pivot.x = -this.currentMuzzleSpark.spark.width\r\n      this.currentMuzzleSpark.spark.position = fpos\r\n      this.currentMuzzleSpark.spark.rotation = rot - degrees(180)\r\n    }\r\n  }\r\n\r\n  this.meleeAttackInProgress = false\r\n\r\n  this.createMeleeHitbox = () => {\r\n    let { mouseState, player: { weapons: {equipped} } } = getState().game\r\n    let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n    _throw.play()\r\n    this.meleeHitbox = Bodies.rectangle(\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) * 1.75 : this.body.position.x - getBodyWidth(this.body) * 1.75,\r\n      this.body.position.y - getBodyHeight(this.body)/2,\r\n      getBodyWidth(this.body) * 2,\r\n      getBodyHeight(this.body), {\r\n        isStatic: true\r\n      })\r\n    this.meleeHitbox.main = this\r\n    this.meleeHitbox.label = `melee hitbox ${equipped}`\r\n    World.add(world, this.meleeHitbox)\r\n  }\r\n  this.removeMeleeHitbox = () => {\r\n    if (this.meleeHitbox) {\r\n      World.remove(world, this.meleeHitbox)\r\n    }\r\n  }\r\n\r\n  this.meleeAttack = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (meleePistolAnim.currentFrame < 1) {\r\n          meleePistolAnim.visible = true\r\n          meleePistolAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (meleeUMPAnim.currentFrame < 1) {\r\n          meleeUMPAnim.visible = true\r\n          meleeUMPAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (meleeShotgunAnim.currentFrame < 1) {\r\n          meleeShotgunAnim.visible = true\r\n          meleeShotgunAnim.gotoAndPlay(1)\r\n        }\r\n      }\r\n    }\r\n    if (!this.meleeAttackInProgress) {\r\n      this.meleeAttackInProgress = true\r\n      delayedCall(.35, () => {\r\n        if (!this.dead) {\r\n          this.createMeleeHitbox()\r\n        }\r\n        delayedCall(.1, () => {\r\n          this.removeMeleeHitbox()\r\n        })\r\n      })\r\n      attacks[equipped]()\r\n    }\r\n  }\r\n\r\n  this.collectHealth = (amount) => {\r\n    this.life += amount\r\n    if (this.life > 100) {\r\n      this.life = 100\r\n    }\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    updateScore( getState().game.scoreAmounts.collectHealth )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.collectCredits = (amount) => {\r\n    dispatch(\r\n      addToTotalCredits(amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectCredit )\r\n  }\r\n\r\n  this.collectAmmo = (wepType, amount) => {\r\n    createTextMessage(`+${amount} ${wepType} ammo`, '#32BD6A', .35, 1)\r\n    dispatch(\r\n      addToTotalAmmo(wepType, amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectAmmo )\r\n  }\r\n\r\n\tthis.playerHit = false\r\n\tthis.resetPlayerHit = () => {\r\n\t\tthis.playerHit = true\r\n\t\tdelayedCall(1, () => {\r\n\t\t\tthis.playerHit = false\r\n\t\t})\r\n  }\r\n  \r\n  this.blinkAlpha = () => {\r\n    this.headSprite.alpha = .25\r\n    this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n    this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    delayedCall(.1, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.2, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.3, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.35, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.4, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.45, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.5, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n  }\r\n\r\n\tthis.takeDamage = dmg => {\r\n    let { game: { player: { variables: { defense } } } } = getState()\r\n    this.life -= (dmg - defense)\r\n    subtractScore( getState().game.scoreAmounts.penalties.damageTaken )\r\n    batch(() => {\r\n      dispatch( updatePlayerHealth(this.life) )\r\n      dispatch( increaseStatsByAmount( StatsDefs.damageTaken, dmg ) )\r\n    })\r\n    let randomNum = [ 1, 2 ][Math.floor( Math.random() * 2 )]\r\n    if (randomNum === 1) {\r\n      pain1Snd.play()\r\n    } else {\r\n      pain2Snd.play()\r\n    }\r\n    hitImpact.play()\r\n    lifebar.tint = damageRed\r\n    to(lifebar, .2, { width: (this.life/100 * this.initialLifebarWidth) })\r\n    to(lifebar, .1, {\r\n      y: lifebar.position.y + 2,\r\n      onComplete: () => {\r\n        to(lifebar, .1, {\r\n          y: lifebar.position.y - 3,\r\n          onComplete: () => {\r\n            to(lifebar, .1, {\r\n              y: lifebar.position.y + 1,\r\n              onComplete: () => {\r\n                lifebar.tint = lifebarGreen\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n    let bloodSpurtPos = {\r\n      x: random.float(this.bodySprites[0].position.x - 5, this.bodySprites[0].position.x + 20),\r\n      y: random.float(this.bodySprites[0].position.y, this.bodySprites[0].position.y - 60)\r\n    }\r\n    createTextMessage(`-${dmg}`, '#FF0000', .35, 1, 12)\r\n    new BloodSpurt(null, bloodSpurtPos, .75)\r\n    this.blinkAlpha()\r\n\t\tthis.resetPlayerHit()\r\n\t\tif (this.life <= 0) {\r\n\t\t\tthis.kill()\r\n\t\t}\r\n  }\r\n  \r\n  this.acceptHealth = amt => {\r\n    this.life = amt\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.addSpritesInOrder = () => {\r\n    container.addChild(this.headSprite)\r\n    this.armsSprites.forEach(sprite => container.addChild(sprite))\r\n    this.bodySprites.forEach(sprite => container.addChild(sprite))\r\n    // move front arms back on top\r\n    container.addChild(charLeftArmFirePistolSprite)\r\n    container.addChild(charLeftArmFireSMGSprite)\r\n    container.addChild(charLeftArmFireShotgunSprite)\r\n    container.addChild(lifebar)\r\n  }\r\n\r\n\tthis.respawn = () => {\r\n    engine.timing.timeScale = 1.0\r\n    if (this.playerRagdoll) {\r\n      this.playerRagdoll.destroy()\r\n      this.playerRagdoll = null\r\n    }\r\n    dispatch( increaseStats( StatsDefs.timesRespawned ) )\r\n    subtractScore( getState().game.scoreAmounts.penalties.respawn )\r\n    this.addSpritesInOrder()\r\n\t\tthis.life = 100\r\n\t\tlifebar.width = this.initialLifebarWidth\r\n\t\tthis.dead = false\r\n    lifebar.visible = lifebarOutline.visible = true\r\n    if (this.lastDeathType === FELL_OFF) {\r\n      // place our character back on-stage if he's fallen off\r\n      if (this.lastBodyPosition.x < 0) {\r\n        while (this.body.position.x < 200 && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: 100, y: -100 })\r\n        }\r\n      } else {\r\n        while (this.body.position.x > getState().game.width && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: -100, y: -100 })\r\n        }\r\n      }\r\n    }\r\n    World.add(world, this.composite)\r\n    if (getState().game.lastGameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n      )\r\n    } else {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_RESPAWN)\r\n      )\r\n    }\r\n  }\r\n\r\n\tthis.dead = false\r\n\tthis.kill = (deathType) => {\r\n    if (this.dead === false) {\r\n      if (deathType) {\r\n        this.lastDeathType = deathType\r\n      } else {\r\n        deathRip.play()\r\n        this.lastDeathType = KILLED_BY_ZOMBIE\r\n      }\r\n      dispatch( increaseStats( StatsDefs.timesKilled ) )\r\n      subtractScore( getState().game.scoreAmounts.penalties.killed )\r\n      playerDeathSnd.play()\r\n      engine.timing.timeScale = .5\r\n      lifebar.visible = lifebarOutline.visible = false\r\n      this.life = 0\r\n      this.dead = true\r\n      this.removeMeleeHitbox()\r\n      this.lastBodyPosition = this.body.position\r\n      World.remove(world, this.composite)\r\n      if (this.bodySprites && this.armsSprites) {\r\n        container.removeChild(this.headSprite)\r\n        this.bodySprites.forEach(sprite => container.removeChild(sprite))\r\n        this.armsSprites.forEach(sprite => container.removeChild(sprite))\r\n      }\r\n      let force = {\r\n        x: engine.timing.timeScale === 1\r\n        ? charIdleSprite.scale.x === 1 ? 0.1 : -0.1\r\n        : charIdleSprite.scale.x === 1 ? 0.25 : -0.25\r\n        ,\r\n        y: engine.timing.timeScale === 1\r\n        ? -0.25\r\n        : -0.75\r\n      }\r\n      let parts = [ 'head', 'body', 'limb', 'none' ]\r\n      let partLastDamaged = parts[ Math.floor( Math.random() * parts.length ) ]\r\n      \r\n      if (partLastDamaged === 'head') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollDecap({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'body') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollHalved({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'limb') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollMaim({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdoll({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      }\r\n  \r\n      batch(() => {\r\n        dispatch(unsetAllKeys())\r\n        dispatch(resetPlayerVariables())\r\n        dispatch(setMouseButtonState(MOUSE_UP))\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      })\r\n    }\r\n\t}\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumpForce, jumping } } } } = getState()\r\n\r\n    // jump\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        \r\n        if (e.keyCode === 87 && !jumping && !this.chargingGrenade) {\r\n            dispatch(setJumping(true))\r\n            jumpSound.play()\r\n            this.playJumpAnimation()\r\n            Body.applyForce(this.body, this.body.position, { x: 0, y: jumpForce })\r\n        } else {\r\n            if (keys.indexOf(e.keyCode) < 0) {\r\n              dispatch(setKeyPress(e.keyCode))\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    // melee \r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !jumping && !this.grenadeThrowInProgress) {\r\n        if (e.key === 'f' || e.key === 'F') {\r\n          this.meleeAttack()\r\n        }\r\n      }\r\n    }\r\n\r\n    // Shop / Continue / Build \r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (e.key === 'Enter') {\r\n        nextWave()\r\n      }\r\n    }\r\n    // done with build placement\r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (e.key === 'b' || e.key === 'B') {\r\n        let arrow = gameObjects.getKeyValue('object-placement-arrow')\r\n        arrow.changeBack = true\r\n        dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n        dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n      }\r\n    }\r\n\r\n    // cycle weapon [spacebar]\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if (e.keyCode === 32) {\r\n        if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n          let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // remote mine detonation [numbers 1 thru 9]\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      let numKeys = [ '1', '2', '3', '4', '5', '6', '7', '8', '9' ]\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let idx = numKeys.indexOf(e.key.toString())\r\n      console.log(e.key)\r\n      if (idx > -1) {\r\n        if (remoteMines[e.key.toString()]) {\r\n          remoteMines[e.key.toString()].detonate()\r\n          delete remoteMines[e.key.toString()]\r\n        }\r\n      }\r\n    }\r\n    \r\n    // turret placement direction\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (getState().game.traps.selectedTrap === trapTypes.TURRET) {\r\n        let currentTurret = gameObjects.getKeyValue('current-turret')\r\n        if (currentTurret) {\r\n          if (e.key === 'ArrowLeft') {\r\n            currentTurret.updateDirection('left')\r\n          }\r\n          if (e.key === 'ArrowRight') {\r\n            currentTurret.updateDirection('right')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    // reload weapon [R]\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (e.keyCode === 82 && !this.meleeAttackInProgress) {\r\n        let { game: { showingMessage, player: { weapons: { equipped, totalAmmo } } } } = getState()\r\n        if (totalAmmo[equipped] === 0 && showingMessage === false) {\r\n          createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n        } else if (!weaponsUI.reloading && !jumping && !this.dead) {  //&& !this.reloading) {\r\n          this.reloadWeapon()\r\n          weaponsUI.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n\t}\r\n\r\n\tconst handleKeyUp = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumping } } } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tlet idx = keys.indexOf(e.keyCode)\r\n\t\t\t\tif (idx > -1) {\r\n\t\t\t\t\tdispatch(removeKeyPress(e.keyCode))\r\n        }\r\n        // grenade [G]\r\n        if ((e.key === 'g' || e.key === 'G') && getState().game.player.weapons.totalAmmo[WEAPON_TYPE_GRENADE] > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n          if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n            this.throwGrenade()\r\n          }\r\n        }\r\n      }\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMouseDown = e => {\r\n    console.log(e)\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (!this.dead && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        if (e.buttons === 1) {\r\n          dispatch(setMouseButtonState(MOUSE_DOWN))\r\n        } else if (e.buttons === 2) {\r\n          dispatch(setRightMouseDown(true))\r\n          console.log('should charge')\r\n        }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n  \r\n\tconst handleMouseUp = e => {\r\n    let { game: { gameState } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      console.log(e)\r\n      dispatch(setMouseButtonState(MOUSE_UP))\r\n      if (getState().game.rightMouseDown) {\r\n        dispatch(setRightMouseDown(false))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const handleMouseWheel = e => {\r\n    // console.log(e)\r\n    let { gameState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU || gameState !== GameStates.SCORES_VIEW) {\r\n      e.preventDefault()\r\n    }\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n        if (e.deltaY < 0) {\r\n          if (list[list.indexOf(equipped) - 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx - 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[list.length - 1]))\r\n          }\r\n        } else if (e.deltaY > 0) {\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tlet playerBody = getPlayerBody(gameObjects)\r\n\tlet playerArm = getPlayerComposite(gameObjects).bodies[1]\r\n\tlet bh = getBodyHeight(this.body)\r\n\r\n\tconst handleMouseMove = e => {\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (e.target && e.target === document.getElementsByTagName('canvas')[1] && e.target.getBoundingClientRect) {\r\n\t\t\t\tlet armAngle\r\n\t\t\t\tlet mouseX, mouseY\r\n        let rect = e.target.getBoundingClientRect()\r\n        // console.log(e.target)\r\n\t\t\t\tlet x = e.clientX - rect.left\r\n\t\t\t\tlet y = e.clientY - rect.top\r\n\t\t\t\tlet { game: { mouseRelativeToPlayerPosition: mPosRel } } = getState()\r\n\t\t\t\tdispatch(setMousePosition({ x, y }))\r\n\r\n\t\t\t\tif (mPosRel.x > playerBody.position.x) {\r\n\t\t\t\t\tmouseX = GREATER_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.x < playerBody.position.x) {\r\n\t\t\t\t\tmouseX = LESS_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y > playerBody.position.y + bh/2) {\r\n\t\t\t\t\tmouseY = GREATER_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y < playerBody.position.y - bh) {\r\n\t\t\t\t\tmouseY = LESS_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarmAngle = Vector.angle(mPosRel, playerArm.position)\r\n\t\t\t\tBody.setAngle(playerArm, armAngle)\r\n\r\n\t\t\t\tdispatch(setMouseStateX(mouseX))\r\n\t\t\t\tdispatch(setMouseStateY(mouseY))\r\n\t\t\t}\r\n    }\r\n\r\n  }\r\n  \r\n  const handleMouseClick = e => {\r\n    let {game:{player:{credits},mouseRelativeToPlayerPosition,gameSubState,traps:{selectedTrap, costToBuild:costToBuild_trap},barriers:{selectedBarrier,costToBuild:costToBuild_barrier}}} = getState()\r\n    if (gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      let _y = 360\r\n      let position = {\r\n        x: mouseRelativeToPlayerPosition.x,\r\n        y: _y\r\n      }\r\n      let width = 50\r\n      let height = 100\r\n      let buildNewLocation = true\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let buildObjects = gameObjects.getKeyValue('build-objects')\r\n      let placeObjectSound = gameObjects.getKeyValue('place-object-sound')\r\n      let cancelSound = gameObjects.getKeyValue('button-cancel-sound')\r\n      const buildObjectPlacementComparison = (obj) => (position.x + (width/2) < obj.getBody().position.x - getBodyWidth(obj.getBody())/2) ||\r\n      (obj.getBody().position.x + getBodyWidth(obj.getBody())/2 < position.x - (width/2))\r\n      let checkAllowArray = buildObjects.map(obj => {\r\n        if (buildObjectPlacementComparison(obj)) {\r\n          return 'allow placement'\r\n        } else {\r\n          return 'place next to'\r\n        }\r\n      })\r\n\r\n      // find closest build object\r\n      let closestX\r\n      if (buildObjects.length > 0) {\r\n        let buildObjectXPositions = buildObjects.map(obj => obj.getBody().position.x)\r\n        closestX = buildObjectXPositions.reduce((prev, curr) => (\r\n          (Math.abs(curr - position.x) < Math.abs(prev - position.x) ? curr : prev)\r\n        ))\r\n        console.log( closestX )\r\n      }\r\n      \r\n      let idx = checkAllowArray.indexOf('place next to')  //.indexOf('deny')\r\n      if (idx > -1) {\r\n        buildNewLocation = false\r\n      }\r\n      \r\n      if (selectedBarrier) {\r\n        let barrier\r\n        if (credits >= costToBuild_barrier[selectedBarrier]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            barrier = new WallBarrier(position, { width, height }, selectedBarrier)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              barrier = new WallBarrier({ x: closestX - width, y: position.y}, { width, height }, selectedBarrier)\r\n            } else {\r\n              barrier = new WallBarrier({ x: closestX + width, y: position.y}, { width, height }, selectedBarrier)\r\n            }\r\n          }\r\n          if (barrier) {\r\n            batch(() => {\r\n              dispatch( setBarrierTypePlaced( selectedBarrier ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_barrier[selectedBarrier]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.barrierTypesPlaced) {\r\n                // console.log( getState().game.barrierTypesPlaced )\r\n                if (Object.keys(getState().game.barrierTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.BARRICADE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.BARRICADE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_barrier[selectedBarrier]}`, 0xFF0000, .5, .75)\r\n            buildObjects.push(barrier)\r\n            placeObjectSound.play()\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n\r\n      const buildTrap = (trapPosition) => {\r\n        switch (selectedTrap) {\r\n          case trapTypes.LANDMINE:\r\n            return new Landmine(trapPosition)\r\n          case trapTypes.CLUSTER_BOMB:\r\n            return new Clustermine(trapPosition)\r\n          case trapTypes.REMOTE_MINE:\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            return new RemoteMine(trapPosition, remoteMinesArr.length + 1)\r\n          case trapTypes.TURRET:\r\n            return new MachineGunTurret(trapPosition)\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (selectedTrap) {\r\n        let trap\r\n        if (credits >= costToBuild_trap[selectedTrap]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            trap = buildTrap(position)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              trap = buildTrap({ x: closestX - width, y: position.y })\r\n            } else {\r\n              trap = buildTrap({ x: closestX + width, y: position.y })\r\n            }\r\n          }\r\n          if (trap) {\r\n            batch(() => {\r\n              dispatch( setTrapTypePlaced( selectedTrap ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_trap[selectedTrap]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.trapTypesPlaced) {\r\n                // console.log( getState().game.trapTypesPlaced )\r\n                if (Object.keys(getState().game.trapTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.TRAPHOUSE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.TRAPHOUSE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_trap[selectedTrap]}`, 0xFF0000, .5, .75)\r\n            placeObjectSound.play()\r\n            buildObjects.push(trap)\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            if (selectedTrap === trapTypes.REMOTE_MINE) {\r\n              if (remoteMinesArr.length < 10) {\r\n                let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n                remoteMinesArr.push( trap )\r\n                remoteMinesArr.forEach((mine, i) => {\r\n                  remoteMines[i + 1] = mine\r\n                  mine.updateNumber(i + 1)\r\n                })\r\n              } else {\r\n                cancelSound.play()\r\n                createTextMessage('can hold up to 9 remote mines at a time', 0xFF0000, .5, .75)\r\n              }\r\n            }\r\n            if (selectedTrap === trapTypes.TURRET) {\r\n              createTextMessage('Press Left or Right arrow to change turret direction', 0xFFFFFF, .75, 2)\r\n              gameObjects.setKeyValue('current-turret', trap)\r\n            }\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleRightClick = e => {\r\n    // console.log(e)\r\n    e.preventDefault()\r\n    let { game: { gameState, gameSubState, player: { variables: {jumping}, weapons:{ totalAmmo:{ grenades:grenadesCount } }} } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (grenadesCount > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n          this.throwGrenade()\r\n          console.log('throw!')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tif (!window.keydownListenersAdded) {\r\n\t\twindow.addEventListener('keydown', handleKeyDown)\r\n\t\twindow.addEventListener('keyup', handleKeyUp)\r\n\t\twindow.addEventListener('mousemove', handleMouseMove)\r\n\t\twindow.addEventListener('mousedown', handleMouseDown)\r\n    window.addEventListener('mouseup', handleMouseUp)\r\n    window.addEventListener('click', handleMouseClick)\r\n    window.addEventListener('contextmenu', handleRightClick)\r\n    window.addEventListener('wheel', handleMouseWheel)\r\n\t\twindow.keydownListenersAdded = true\r\n  }\r\n  \r\n  this.pause = () => {\r\n    if (this.charRunSprite.currentFrame !== 0) {\r\n      this.charRunSprite.play()\r\n    }\r\n    if (this.charReloadPistolSprite.currentFrame !== 0) {\r\n      this.charReloadPistolSprite.play()\r\n    }\r\n    if (this.charReloadSMGSprite.currentFrame !== 0) {\r\n      this.charReloadSMGSprite.play()\r\n    }\r\n    if (charJumpSprite.currentFrame !== 0) {\r\n      charJumpSprite.play()\r\n    }\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.charRunSprite.stop()\r\n    this.charReloadPistolSprite.stop()\r\n    this.charReloadSMGSprite.stop()\r\n    charJumpSprite.stop()\r\n    dispatch( setJumping(false) )\r\n    // charJumpSprite.animationSpeed = .35\r\n  }\r\n\r\n\treturn this\r\n\r\n}\r\n","import * as PIXI from 'pixi.js'\r\n\r\nconst { TweenLite: { to, from, kill } } = window\r\n\r\nexport default function Crosshairs(gameObjects) {\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tthis.crosshair = new PIXI.Container()\r\n\tthis.cross = new PIXI.Graphics()\r\n\tthis.cross.lineStyle(2, 0xB00000, 0.75)\r\n\tthis.cross.moveTo(0, -15)\r\n\tthis.cross.lineTo(0, 15)\r\n\tthis.cross.moveTo(-15, 0)\r\n\tthis.cross.lineTo(15, 0)\r\n\tthis.crosshair.addChild(this.cross)\r\n\tthis.circle = new PIXI.Graphics()\r\n\tthis.circle.lineStyle(1, 0xB00000, 0.75)\r\n\tthis.circle.drawCircle(0, 0, 10)\r\n\tthis.crosshair.addChild(this.circle)\r\n  this.changed = false\r\n  this.changeBack = false\r\n\tthis._new = null\r\n  container.addChild(this.crosshair)\r\n\r\n\tthis.crosshair.buildArrow = (color) => {\r\n\t\tlet crosshair = gameObjects.getKeyValue('crosshair')\r\n    container.removeChild(crosshair)\r\n    let _new = new PIXI.Graphics()\r\n    _new.lineStyle(2, color, 1.0)\r\n    _new.beginFill(0x777777, 0.0)\r\n    _new.moveTo(0,0)\r\n    _new.lineTo(20, 0)\r\n    _new.lineTo(20, 30)\r\n    _new.lineTo(30, 30)\r\n    _new.lineTo(10, 45)\r\n    _new.lineTo(-10, 30)\r\n    _new.lineTo(0, 30)\r\n    _new.lineTo(0, 0)\r\n    _new.endFill()\r\n    _new.pivot.x = _new.width * .5\r\n    _new.pivot.y = _new.height * .5\r\n    container.addChild(_new)\r\n    this._new = _new\r\n    crosshair._new = _new\r\n    crosshair.changed = true\r\n    gameObjects.setKeyValue('object-placement-arrow', _new)\r\n    // animated arrow loop\r\n    this.animationLoop = () => {\r\n      to(_new.scale, .5, {\r\n        x: 1.2,\r\n        y: .75,\r\n        onComplete: () => {\r\n          to(_new.scale, .5, {\r\n            x: .9,\r\n            y: 1.2,\r\n            onComplete: this.animationLoop\r\n          })\r\n        }\r\n      })\r\n    }\r\n    this.animationLoop()\r\n\r\n\t\treturn _new\r\n\t}\r\n\r\n\treturn this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport random from 'random'\r\n\r\nexport default function GroundEffect (pos, type, bodyPart) {\r\n  let {x,y} = pos\r\n  let {gameObjects,TweenLite:{to,delayedCall}} = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n  let fxSheet = gameObjects.getKeyValue('ground-fx-sheet')\r\n  let bulletTextures = [\r\n    'bullet-impact1.png',\r\n    'bullet-impact2.png'\r\n  ]\r\n  let groundBloodSpatters = [\r\n    'ground-blood-spatter1.png',\r\n    'ground-blood-spatter2.png',\r\n    'ground-blood-spatter3.png',\r\n  ]\r\n  const getRandomRoundBulletImpact = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        bulletTextures[ Math.floor( Math.random() * bulletTextures.length ) ]\r\n      ]\r\n  ))\r\n  const getRandomBloodSpatter = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        groundBloodSpatters[ Math.floor( Math.random() * groundBloodSpatters.length ) ]\r\n      ]\r\n  ))\r\n  \r\n  let sprite\r\n  if (type === 'bullet impact') {\r\n    sprite = getRandomRoundBulletImpact()\r\n  }\r\n  if (type === 'blood spatter') {\r\n    sprite = getRandomBloodSpatter()\r\n  }\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * (bodyPart ? .2 : .5)\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  if (\r\n    sprite.position.x - sprite.width > ground.bounds.min.x ||\r\n    sprite.position.x + (sprite.width/2) < ground.bounds.max.x\r\n    ) {\r\n  }\r\n  // re-add player sprites on-top\r\n  let player = gameObjects.getKeyValue('player')\r\n  if (!player.dead) {\r\n    player.sprites.forEach(s => { container.addChild(s) })\r\n  }\r\n\r\n  let positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n  World.add(world, positionalBody)\r\n\r\n  this.renderPosition = renderFn => {\r\n    sprite.position = renderFn(positionalBody)\r\n    if (container && container.children.indexOf(sprite) === -1) {\r\n      container.addChild(sprite)\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    World.remove(world, positionalBody)\r\n    container.removeChild(sprite)\r\n    let idx = groundFx.indexOf(this)\r\n    if (idx > -1) {\r\n      groundFx.splice(idx, 1)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    groundFx = null\r\n    fxSheet = null\r\n    bulletTextures = null\r\n    groundBloodSpatters = null\r\n    positionalBody = null\r\n  }\r\n\r\n  const tweenOut = () => {\r\n    to(sprite, .5, {\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        this.destroy()\r\n      }\r\n    })\r\n  }\r\n  delayedCall(1, tweenOut)\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { Body, Render, World } from 'matter-js'\r\nimport { getBodyWidth, getBodyHeight, getPlayerPartByType, makePixiSprite } from './utils/Utils'\r\nimport { setLastDirection, setCurrentDirection, setJumping, setLastMagDropped, setMouseRelativeToPlayerPosition, setPlayerPosition, setZombiesOnLeft, setZombiesOnRight, setAchievementOwned, AchievementDefs } from './gameSlice'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET } from './constants/weapons'\r\nimport { MOUSE_DOWN, GREATER_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_X_POS } from './constants/mouseStates'\r\nimport { firePistol, fireSMG, fireShotgun, calcPistolDamage, calcShotgunDamage, calcSMGDamage, calcTurretDamage } from './player/fireWeapons'\r\nimport Crosshairs from './player/crosshairs'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { FELL_OFF } from './constants/DeathTypes'\r\nimport store from '../../app/store'\r\nimport GroundEffect from './FX/GroundEffect'\r\nimport Spark from './FX/Sparks'\r\nimport { degrees } from 'radians'\r\nimport WallTile from './WallTile'\r\nimport { updateScore } from './utils/updateScore'\r\n\r\nconst { getState, dispatch } = store\r\nlet { width, height } = getState().game\r\nconst { TweenLite: { delayedCall } } = window\r\n\r\nconst createCollision = (e, i, { body1_label, body2_label, callback }) => {\r\n  let bodies = {}\r\n  if (e.pairs[i].bodyA.label.indexOf(body1_label) > -1 && e.pairs[i].bodyB.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyA\r\n    bodies.body2 = e.pairs[i].bodyB\r\n    callback(bodies)\r\n  } else if (e.pairs[i].bodyB.label.indexOf(body1_label) > -1 && e.pairs[i].bodyA.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyB\r\n    bodies.body2 = e.pairs[i].bodyA\r\n    callback(bodies)\r\n  }\r\n}\r\n\r\nconst calculateDamageAmount = (weapon_str, body) => {\r\n  if (weapon_str === WEAPON_TYPE_PISTOL) { return calcPistolDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SMG) { return calcSMGDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SHOTGUN) { return calcShotgunDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_TURRET) { return calcTurretDamage(body) }\r\n  return calcPistolDamage(body)\r\n}\r\n\r\nexport const checkCollisionStart = (e, i, gameObjects) => {\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ground',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'barrier',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'gib',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter'))\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'zombie body part',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let zombieBodyPartBool = true\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter', zombieBodyPartBool))      \r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'player character',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let world = gameObjects.getKeyValue('world')\r\n      World.remove(world, bodies.body1)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'turret bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_TURRET, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part, null, null, 'turret')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_PISTOL, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SMG, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SHOTGUN, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'extra damage bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { max } = getState().game.player.weapons.damage[\r\n          getState().game.player.weapons.equipped\r\n        ]\r\n        bodies.body2.main.takeDamage(max * 3, 'head', 'critical')\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (getState().game.lastMagDropped && JSON.parse(getState().game.lastMagDropped) + 200 < Date.now()) {\r\n        let snd = gameObjects.getKeyValue('mag-drop-sound')\r\n        snd.play()\r\n      }\r\n      dispatch(\r\n        setLastMagDropped( JSON.stringify(Date.now()) )\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.takeDamage(20, 'head')\r\n      }\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF7500 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox',\r\n    body2_label: 'enemy zombie body',\r\n    callback: bodies => {\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF0000 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n      // apply extra knockback\r\n      let direction = getState().game.player.variables.currentDirection \r\n      let x = 0\r\n      let knockback = getState().game.player.upgradeTiers.melee.current * 3\r\n      while(x < 10) {\r\n        x++\r\n        Body.translate(bodies.body2, {\r\n          x: direction === 'right' ? -knockback : knockback,\r\n          y: -0.25\r\n        })\r\n      }\r\n      // increase score\r\n      updateScore( getState().game.scoreAmounts.meleeConnect )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox pistol',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_PISTOL]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox smg',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SMG]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox shotgun',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SHOTGUN]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'clustermine explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrel explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'barrel explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'grenade explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'enemy',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        delayedCall(.1, () => {\r\n          bodies.body2.main.explode()\r\n          if (\r\n            bodies.body2.distance.start - bodies.body2.distance.end > 2000 ||\r\n            bodies.body2.distance.end - bodies.body2.distance.start > 2000\r\n            ) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.FROM_DOWNTOWN )\r\n            )\r\n            updateScore( getState().game.scoreAmounts.achievement )\r\n          }\r\n        })\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.takeDamage) {\r\n        let dmg = getState().game.enemies.zombies.attackDmg, player = bodies.body1.main\r\n        if (!player.playerHit) {\r\n          player.takeDamage(dmg)\r\n        }\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'explosive barrier',\r\n    body2_label: 'bullet',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n      gameObjects.getKeyValue('spark-sprites').push(\r\n        new Spark(1, bodies.body2, { scale: .5, animationSpeed: 2.0 })\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrier',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'health drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectHealth) {\r\n        player.collectHealth(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ammo drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectAmmo) {\r\n        player.collectAmmo(bodies.body2.ammo_type, bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('ammo-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'currency drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectCredits) {\r\n        player.collectCredits(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('coin-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'shotgun shell',\r\n    callback: bodies => {\r\n      let snd = gameObjects.getKeyValue('shot-shell-sound')\r\n      snd.play()\r\n      snd.fade(1, 0, 200)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      let grenadeClink = gameObjects.getKeyValue('grenade-clink-sound')\r\n      grenadeClink.play()\r\n      grenadeClink.fade(1, 0, 500)\r\n    }\r\n  })\r\n}\r\n\r\nlet gameTickVarsDefined = false\r\nlet weaponsUI, render, groundTex, groundBody, groundFx, player, playerBody, acceleration ,pistolBullets, pistolBulletWd, pistolBulletHt, bulletImpacts,\r\npistolShells, pistolShellWd, pistolShellHt, ammoDrops, pistolAmmoDrops, smgAmmoDrops, shotgunAmmoDrops, creditDrops, crosshair, crosshairs, zombies, zombieRags,\r\nbuildObjects, gibs, grenades, explosions, rocks, woodPlanks, container, gameWidth, leftEnemyCount, rightEnemyCount, leftEnemyCountDisplay, rightEnemyCountDisplay,\r\nexplosionSprites, sparkSprites, healthdrops, wallTile\r\n\r\nconst getZombieRadarTextStyle = (count) => ({\r\n  fill: count === 0  ? '#00e595' : '#FF0000',\r\n  fontSize: 12\r\n})\r\n\r\nexport const gameTickHandler = (e, gameObjects) => {\r\n\r\n  if (!gameTickVarsDefined) {\r\n    render = gameObjects.getKeyValue('render')\r\n    container = gameObjects.getKeyValue('container')\r\n    gameWidth = gameObjects.getKeyValue('game-width')\r\n    weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    groundTex = gameObjects.getKeyValue('ground-texture')\r\n    groundBody = gameObjects.getKeyValue('ground')\r\n    groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n    acceleration = getState().game.player.variables.acceleration.min\r\n    // zombies left / right counters\r\n    leftEnemyCountDisplay = new PIXI.Text('')\r\n    leftEnemyCountDisplay.position = { x: 10, y: 5 }\r\n    rightEnemyCountDisplay = new PIXI.Text('zombies on right: 0')\r\n    rightEnemyCountDisplay.pivot.x = rightEnemyCountDisplay.width * .075\r\n    rightEnemyCountDisplay.position = { x: gameWidth, y: 5 }\r\n    // player \r\n    player = gameObjects.getKeyValue('player')\r\n    playerBody = getPlayerPartByType('body', gameObjects)\r\n    crosshairs = new Crosshairs(gameObjects)\r\n    crosshair = crosshairs.crosshair\r\n    gameObjects.setKeyValue('crosshair-shape', crosshairs.crosshair)\r\n    gameObjects.setKeyValue('crosshair', crosshair)\r\n    // items\r\n    gibs = gameObjects.getKeyValue('gibs')\r\n    grenades = gameObjects.getKeyValue('grenades')\r\n    explosions = gameObjects.getKeyValue('explosions')\r\n    rocks = gameObjects.getKeyValue('rocks')\r\n    woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n    buildObjects = gameObjects.getKeyValue('build-objects')\r\n    explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n    // container\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n    wallTile = new WallTile()\r\n    let gradientAlpha = gameObjects.getKeyValue('gradient-alpha')\r\n    gradientAlpha.alpha = .75\r\n    container.addChild( wallTile, gradientAlpha, groundTex )\r\n    player.addSpritesInOrder()\r\n    container.addChild( leftEnemyCountDisplay )\r\n    container.addChild( rightEnemyCountDisplay )\r\n    // vars declared?\r\n    gameTickVarsDefined = true\r\n  }\r\n\r\n  // enemies\r\n  zombies = gameObjects.getKeyValue('zombies')\r\n  zombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n  // items \r\n  pistolShells = gameObjects.getKeyValue('pistol-shells')\r\n  pistolBullets = gameObjects.getKeyValue('pistol-bullets')\r\n  bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n  ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n  creditDrops = gameObjects.getKeyValue('currency-drops')\r\n  healthdrops = gameObjects.getKeyValue('health-drops')\r\n  pistolAmmoDrops = ammoDrops[WEAPON_TYPE_PISTOL]\r\n  smgAmmoDrops = ammoDrops[WEAPON_TYPE_SMG]\r\n  shotgunAmmoDrops = ammoDrops[WEAPON_TYPE_SHOTGUN]\r\n\r\n  let {\r\n    game: {\r\n      keys,\r\n      // width: gameWidth,\r\n      // height: gameHeight,\r\n      gameState,\r\n      gameSubState,\r\n      mouseState,\r\n      mousePosition,\r\n      player: {\r\n        variables: { magnetism, magnetismSpeed, currentDirection, jumping, acceleration: { max: accelMax }, deceleration },\r\n        weapons: { laser: laserSight, equipped, totalAmmo: { grenades: grenadesCount } }\r\n      },\r\n      enemies: {\r\n        zombies: {\r\n          zombieAttackLimiter,\r\n          zombieAttackDistance\r\n        }\r\n      },\r\n      traps: {\r\n        turret: { fireDistance }\r\n      },\r\n      mouseState: { x: mx, y: my, btn: mouseButtonState }\r\n    }\r\n  } = getState()\r\n  let mPosRel = {\r\n    x: mousePosition.x + playerBody.position.x - (width / 2),\r\n    y: mousePosition.y + playerBody.position.y - (height / 2)\r\n  }\r\n  dispatch(setMouseRelativeToPlayerPosition({ x: mPosRel.x, y: mPosRel.y }))\r\n\r\n  // Render pixi graphics in-line with matter objects\r\n  const renderPositionFn = part => {\r\n    return {\r\n      x: part.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration),\r\n      y: part.position.y - playerBody.position.y + (height / 2),\r\n      rotation: part.angle\r\n    }\r\n  }\r\n\r\n  if (gameState === GameStates.GAMEPLAY) {\r\n\r\n    // render tile bg\r\n    wallTile.renderPosition(renderPositionFn, playerBody, acceleration)\r\n    // wallTile.onUpdate()\r\n\r\n    // Player weapons\r\n    // check if firing\r\n    if (mouseButtonState === MOUSE_DOWN && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // check weapon type\r\n      if (equipped === WEAPON_TYPE_PISTOL) { firePistol(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SMG) { fireSMG(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SHOTGUN) { fireShotgun(gameObjects) }\r\n    }\r\n\r\n    // console.log(width, height)\r\n\r\n    // Set render view to follow player\r\n    Render.lookAt(render, {\r\n      min: { x: playerBody.position.x + (width / 2), y: playerBody.position.y - (height / 2) },\r\n      max: { x: playerBody.position.x - (width / 2), y: playerBody.position.y + (height / 2) }\r\n    })\r\n\r\n    // Player movement / controls\r\n    Body.setAngle(playerBody, 0)\r\n\r\n    if (!weaponsUI.reloading && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // movement\r\n      if (keys.indexOf(68) > -1 || keys.indexOf(65) > -1) {\r\n        if (acceleration < accelMax) {\r\n          acceleration += .25\r\n        }\r\n      } else {\r\n        dispatch(setLastDirection(currentDirection))\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1 && keys.indexOf(65) > -1) {\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1) {\r\n        dispatch(setCurrentDirection('right'))\r\n        Body.translate(playerBody, { x: acceleration, y: 0 })\r\n      }\r\n      if (keys.indexOf(65) > -1) {\r\n        dispatch(setCurrentDirection('left'))\r\n        Body.translate(playerBody, { x: -acceleration, y: 0 })\r\n      }\r\n\r\n      // grenades\r\n      if (keys.indexOf(71) > -1 && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n        }\r\n      }\r\n      if (getState().game.rightMouseDown && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n          console.log('should charge grenade from engineHandlers')\r\n        }\r\n      }\r\n    }\r\n\r\n    let { x: playerPosX, y: playerPosY } = renderPositionFn(playerBody)\r\n    dispatch(setPlayerPosition({ x: playerPosX, y: playerPosY }))\r\n\r\n    // render health drops\r\n    healthdrops.forEach(health => {\r\n      health.renderPosition(renderPositionFn)\r\n    })\r\n\r\n    // render ammo boxes\r\n    pistolAmmoDrops.concat(\r\n      smgAmmoDrops\r\n    ).concat(\r\n      shotgunAmmoDrops\r\n    ).forEach(box => {\r\n      box.positionAmmoBox(renderPositionFn)\r\n      if (box.body && box.body.position.y > 500) {\r\n        box.destroy()\r\n      }\r\n      if (box.body) {\r\n        if (playerBody.position.x > box.body.position.x && ((playerBody.position.x - box.body.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: magnetismSpeed, y: 0 })\r\n        }\r\n        if (playerBody.position.x < box.body.position.x && ((box.body.position.x - playerBody.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: -magnetismSpeed, y: 0 })\r\n        }\r\n      }\r\n    })\r\n\r\n    // render currency drops\r\n    creditDrops.forEach(coin => {\r\n      coin.positionCreditGfx(renderPositionFn)\r\n      if (coin.creditBody && coin.creditBody.position.y > 500) {\r\n        coin.destroy()\r\n      }\r\n      if (coin.creditBody) {\r\n        if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: (magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n        if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: -(magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: -magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // render player graphics\r\n    player.setBodySpritesPositions({ mx, fn: renderPositionFn })\r\n    player.setArmsSpritePosition({ mx, my, fn: renderPositionFn })\r\n    player.positionHeadSprite({ mx, my, fn: renderPositionFn })\r\n    player.renderGrenadeChargeMeter(renderPositionFn)\r\n\r\n    if (player.charRunSprite && player.charIdleSprite && player.charJumpSprite) {\r\n\r\n      if (keys.indexOf(65) > -1 || keys.indexOf(68) > -1) {\r\n        if (!jumping) {\r\n          player.charRunSprite.play()\r\n          player.charRunSprite.visible = true\r\n          player.charIdleSprite.visible = false\r\n          player.stopJumpAnimation()\r\n        }\r\n      } else {\r\n        player.charRunSprite.stop()\r\n        player.charRunSprite.visible = false\r\n        player.charIdleSprite.visible = true\r\n        // added below lines to stop sprites overlapping\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnims.forEach(sprite => { sprite.visible = false })\r\n      }\r\n\r\n      if (\r\n        (keys.indexOf(65) > -1 && mouseState.x === GREATER_THAN_PLAYER_X_POS) ||\r\n        (keys.indexOf(68) > -1 && mouseState.x === LESS_THAN_PLAYER_X_POS)\r\n      ) {\r\n        player.charRunSprite.animationSpeed = -1\r\n      } else {\r\n        player.charRunSprite.animationSpeed = 1\r\n      }\r\n\r\n      if (mouseState.x === GREATER_THAN_PLAYER_X_POS) {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = -1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = -1 })\r\n        player.headSprite.scale.y = -1\r\n      } else {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = 1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = 1 })\r\n        player.headSprite.scale.y = 1\r\n      }\r\n\r\n      if (weaponsUI.reloading) {\r\n        player.bodySprites.forEach(sprite => { sprite.visible = false })\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnimsByType[equipped].visible = true\r\n        player.charIdleSprite.visible = false\r\n      } else {\r\n        if (player.armsSpritesByType[equipped]) {\r\n          player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.visible = true\r\n          })\r\n          player.reloadAnimsByType[equipped].visible = false\r\n        }\r\n      }\r\n\r\n      if (jumping || weaponsUI.reloading || player.meleeAttackInProgress || player.grenadeThrowInProgress) {\r\n        player.headSprite.visible = false\r\n      } else {\r\n        player.headSprite.visible = true\r\n      }\r\n\r\n      if (!jumping) {\r\n        player.stopJumpAnimation()\r\n      } else {\r\n        player.charIdleSprite.visible = false\r\n        if (player.charJumpSprite.currentFrame < 2) {\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.y += 80\r\n          })\r\n        }\r\n      }\r\n\r\n      if (player.meleeAttackInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.meleeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n      if (player.grenadeThrowInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.grenadeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    // render player ragdoll\r\n    if (gameObjects.getKeyValue('player-ragdoll') !== null) {\r\n      let playerRag = gameObjects.getKeyValue('player-ragdoll')\r\n      if (playerRag && playerRag.animateRagParts) {\r\n        playerRag.animateRagParts(renderPositionFn)\r\n      }\r\n    }\r\n\r\n  } // -- end if gameState === GameState.GAMEPLAY\r\n\r\n  if (player.body.position.y > 500) {\r\n    player.kill(FELL_OFF)\r\n  }\r\n\r\n  // render pistol shells\r\n  for (let i = 0; i < pistolShells.length; ++i) {\r\n    if (!pistolShellWd) { pistolShellWd = getBodyWidth(pistolShells[i].body) }\r\n    if (!pistolShellHt) { pistolShellHt = getBodyHeight(pistolShells[i].body) }\r\n    pistolShells[i].gfc.position.x = pistolShells[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolShells[i].gfc.position.y = pistolShells[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolShells[i].gfc.rotation = equipped === WEAPON_TYPE_SHOTGUN ? pistolShells[i].body.angle + degrees(90) : pistolShells[i].body.angle\r\n  }\r\n  // render pistol bullets\r\n  for (let i = 0; i < pistolBullets.length; ++i) {\r\n    if (!pistolBulletWd) { pistolBulletWd = getBodyWidth(pistolBullets[i].body) }\r\n    if (!pistolBulletHt) { pistolBulletHt = getBodyHeight(pistolBullets[i].body) }\r\n    pistolBullets[i].gfc.position.x = pistolBullets[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolBullets[i].gfc.position.y = pistolBullets[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolBullets[i].gfc.rotation = pistolBullets[i].body.angle\r\n  }\r\n\r\n  // render grenades\r\n  grenades.forEach(grenade => {\r\n    grenade.animate(renderPositionFn)\r\n  })\r\n\r\n  // explosions tracking\r\n  explosions.forEach(explosion => {\r\n    explosion.calcRenderedPosition(renderPositionFn)\r\n  })\r\n  rocks.forEach(rock => { rock.animate(renderPositionFn) })\r\n  woodPlanks.forEach(wood => { wood.animate(renderPositionFn) })\r\n\r\n  // update ejected mags\r\n  player.updateEjectedMagPositions(renderPositionFn)\r\n\r\n  // render gibs / guts \r\n  gibs.forEach(gib => {\r\n    gib.animate(renderPositionFn)\r\n  })\r\n\r\n  // for zombie count radar\r\n  leftEnemyCount = 0\r\n  rightEnemyCount = 0\r\n\r\n  // keep zombie arm angle inline with player position\r\n  zombies.forEach(zombie => {\r\n    zombie.setPlayerVars({ player, playerDirection: currentDirection, playerBody })\r\n    if (!zombie.paused) {\r\n      zombie.walk()\r\n    }\r\n    Body.setAngle(zombie.body, 0)\r\n    zombie.setSpritesPositions(renderPositionFn)\r\n    // kill zombies who fall off the ledge\r\n    if (zombie.body.position.y > 500) {\r\n      let killType = 'fell off'\r\n      zombie.kill(null, null, killType)\r\n    }\r\n    // trigger zombie attack\r\n    if (\r\n      (playerBody.position.x > zombie.body.position.x && ((playerBody.position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n      (playerBody.position.x < zombie.body.position.x && ((zombie.body.position.x - playerBody.position.x) < zombieAttackDistance))) {\r\n      if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n        zombie.attack()\r\n      }\r\n    }\r\n    // trigger attack if next to a wall\r\n    buildObjects.forEach(obj => {\r\n      if (obj && !obj.destroyed && obj.getBody().label !== 'remote mine trap') {\r\n        // zombie attack barrier control \r\n        if (\r\n          (obj.getBody().position.x > zombie.body.position.x && ((obj.getBody().position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n          (obj.getBody().position.x < zombie.body.position.x && ((zombie.body.position.x - obj.getBody().position.x) < zombieAttackDistance))) {\r\n          if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n            if (obj.getBody().label !== 'landmine trap') {\r\n              zombie.attack()\r\n            }\r\n          }\r\n        }\r\n        // turret fire control\r\n        if (\r\n          obj.direction && obj.direction === 'right' && zombie.body.position.x > obj.getBody().position.x - 10 && zombie.body.position.x - obj.getBody().position.x < fireDistance ||\r\n          obj.direction && obj.direction === 'left' && zombie.body.position.x < obj.getBody().position.x - 10 && obj.getBody().position.x - zombie.body.position.x < fireDistance\r\n          ) {\r\n            obj.shoot()\r\n        }\r\n      }\r\n    })\r\n    // count zombies on left and right side of player\r\n    if (!zombie.dead) {\r\n      if (zombie.body.position.x < playerBody.position.x) {\r\n        leftEnemyCount += 1\r\n      }\r\n      if (zombie.body.position.x > playerBody.position.x) {\r\n        rightEnemyCount += 1\r\n      }\r\n    }\r\n  })\r\n  \r\n  // build traps and barriers\r\n  buildObjects.forEach(obj => {\r\n    if (obj && !obj.destroyed && obj.displayBarrierStrength) {\r\n      obj.displayBarrierStrength(renderPositionFn)\r\n    }\r\n    if (obj.updatePosition) {\r\n      obj.updatePosition(renderPositionFn)\r\n    }\r\n  })\r\n\r\n  // double-check in case radar counts are inaccurate\r\n  if (getState().game.waveCountToDefeat === 0 || getState().game.waveCountToDefeat === null) {\r\n    // for zombie count radar\r\n    leftEnemyCount = 0\r\n    rightEnemyCount = 0\r\n  }\r\n\r\n  // update zombie count on sides of player\r\n  leftEnemyCountDisplay.text = `${leftEnemyCount}`\r\n  leftEnemyCountDisplay.style = getZombieRadarTextStyle(leftEnemyCount)\r\n  rightEnemyCountDisplay.text = `${rightEnemyCount}`\r\n  rightEnemyCountDisplay.style = getZombieRadarTextStyle(rightEnemyCount)\r\n\r\n  zombieRags.forEach(rag => {\r\n    rag.animateRagParts(renderPositionFn)\r\n  })\r\n\r\n  // render crosshair\r\n  if (gameSubState !== SubStates.PLAYER_DEATH) {\r\n    crosshair.position = mousePosition\r\n  }\r\n\r\n  if (crosshair.changed) {\r\n    crosshair = crosshair._new\r\n    crosshair.changed = false\r\n  }\r\n\r\n  // if crosshair is an arrow..\r\n  if (crosshair.changeBack) {\r\n    container.removeChild(crosshair)\r\n    crosshair = crosshairs.crosshair\r\n    container.addChild(crosshairs.crosshair)\r\n    crosshair.changeBack = false\r\n  }\r\n\r\n  // ground\r\n  groundTex.position = renderPositionFn(groundBody)\r\n\r\n  // bullet impacts\r\n  bulletImpacts.forEach(impact => { impact.renderPosition(renderPositionFn) })\r\n  groundFx.forEach(fx => { fx.renderPosition(renderPositionFn) })\r\n\r\n  // fx\r\n  explosionSprites.forEach(ex => { ex.renderPosition(renderPositionFn) })\r\n  sparkSprites.forEach(spark => { spark.renderPosition(renderPositionFn) })\r\n\r\n  // keep cursor on top\r\n  container.addChild(crosshairs.crosshair)\r\n\r\n}\r\n","import { Texture } from '@pixi/core'\r\nimport { TilingSprite } from '@pixi/sprite-tiling'\r\nimport store from '../../app/store'\r\n\r\nexport default class WallTile extends TilingSprite {\r\n    constructor() {\r\n        // console.log(gameObjects)\r\n        const texture = Texture.from(\r\n          window.gameObjects.getKeyValue('wall-tile')\r\n        )\r\n        super(texture, 1, texture.height) //width 1 because we will call onResize from App anyway\r\n        this.width = window.gameObjects.getKeyValue('game-width')\r\n        this.height = window.gameObjects.getKeyValue('game-height')\r\n        this.alpha = .2\r\n    }\r\n\r\n    onResize(width, height) {\r\n        // this.width = width\r\n    }\r\n\r\n    onUpdate(delta) {\r\n    \tthis.tilePosition.x -= delta * 4\r\n    }\r\n\r\n    renderPosition(renderFn, body, acceleration) {\r\n      let { x, y } = renderFn(body)\r\n      let { getState } = store\r\n      let { game: { keys, player: { variables: { currentDirection, jumping } } } } = getState()\r\n      if (currentDirection === 'right' && keys.indexOf(68) > -1) {\r\n        this.tilePosition.x -= .35 //(acceleration * .25)\r\n      }\r\n      if (currentDirection === 'left' && keys.indexOf(65) > -1) {\r\n        this.tilePosition.x += .35 //(acceleration * .25)\r\n      }\r\n      if (jumping) {\r\n        this.tilePosition.y += .25\r\n      }\r\n      // let player = window.gameObjects.getKeyValue('player')\r\n      // console.log( player.body )\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { makePixiSprite } from '../utils/Utils'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { decrementTotalAmmo, setWeaponEquipped } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport GameStates from '../constants/GameStates'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow'\r\n \r\nconst { getState, dispatch } = store\r\n\r\nconst { TweenLite: { to, from } } = window\r\n\r\nexport default function WeaponsUI () {\r\n\tlet { gameObjects } = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tlet pistolIcon = makePixiSprite('weapon-ui-icon-pistol')\r\n\tlet smgIcon = makePixiSprite('weapon-ui-icon-smg')\r\n\tlet shotgunIcon = makePixiSprite('weapon-ui-icon-shotgun')\r\n  let icons = []\r\n\r\n  let mags\r\n  \r\n  let weaponShadow = new DropShadowFilter({ distance: 3.0, alpha: 1.0 })\r\n  let bulletShadow = new DropShadowFilter({ distance: 1.0, alpha: 2.0 })\r\n\r\n  let iconBG = new PIXI.Graphics()\r\n  iconBG.beginFill(0x425041)\r\n  iconBG.drawRect(0, 0, 120, 90)\r\n  iconBG.alpha = .65\r\n  iconBG.position.x = gameWidth - iconBG.width - 20\r\n  iconBG.position.y = gameHeight - iconBG.height - 20\r\n  // iconBG.filters = [ bulletShadow ]\r\n  container.addChild(iconBG)\r\n\r\n\tpistolIcon.width = pistolIcon.width/2\r\n\tpistolIcon.height = pistolIcon.height/2\r\n\ticons.push(pistolIcon)\r\n\r\n\tsmgIcon.width = smgIcon.width/2\r\n\tsmgIcon.height = smgIcon.height/2\r\n  icons.push(smgIcon)\r\n  \r\n  shotgunIcon.width = shotgunIcon.width/2\r\n\tshotgunIcon.height = shotgunIcon.height/2\r\n  icons.push(shotgunIcon)\r\n\r\n\ticons.forEach(icon => {\r\n\t\ticon.position.x = gameWidth - (icon.width + 20)\r\n\t\ticon.position.y = gameHeight - (icon.height + 10)\r\n    icon.alpha = 0\r\n    // icon.filters = [ weaponShadow ]\r\n\t\tcontainer.addChild(icon)\r\n  })\r\n\r\n  this.keepOnTop = () => {\r\n    container.addChild(iconBG)\r\n    icons.forEach(icon => { container.addChild(icon) })\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL]\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG]\r\n    )\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    )\r\n    .forEach(b => { container.addChild(b) })\r\n    this.grenades.forEach(g => { container.addChild(g) })\r\n    if (this.shaking && !this.reloading) {\r\n      container.addChild(this.emptyText)\r\n    }\r\n  }\r\n  setInterval(this.keepOnTop, 1000)\r\n\r\n  let magazinesByWeaponType = {\r\n\t\t'pistol weapon': null,\r\n\t\t'smg weapon': null,\r\n\t\t'shotgun weapon': null,\r\n  }\r\n\r\n  let bulletMask = new PIXI.Graphics()\r\n  bulletMask.beginFill(0xffffff)\r\n  bulletMask.drawRect(pistolIcon.position.x, pistolIcon.position.y, pistolIcon.width, pistolIcon.height)\r\n  container.addChild(bulletMask)\r\n\r\n  if (!window.gameObjects.getKeyValue('bullet-shell-bevel-ui')) {\r\n    window.gameObjects.setKeyValue('bullet-shell-bevel-ui', new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 }))\r\n  }\r\n  let bulletBevel = window.gameObjects.getKeyValue('bullet-shell-bevel-ui')\r\n\r\n  let makePistolMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL] = magazinesByWeaponType[WEAPON_TYPE_PISTOL].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xBFA522)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 27 - pistolIcon.width/magazinesByWeaponType[WEAPON_TYPE_PISTOL].length * i\r\n      bulletGfc.position.y = pistolIcon.position.y + pistolIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeSMGMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG] = magazinesByWeaponType[WEAPON_TYPE_SMG].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xCEC182)\r\n      bulletGfc.drawRect(0, 0, 2, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5 })\r\n      // bulletGfc.filters = [ bevel ]\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 24 - smgIcon.width/magazinesByWeaponType[WEAPON_TYPE_SMG].length * i\r\n      bulletGfc.position.y = smgIcon.position.y + smgIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeShotgunMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN] = magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x3E1313)\r\n      bulletGfc.beginFill(0xB00000)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      bulletGfc.beginFill(0xBCA845)\r\n      bulletGfc.drawRect(0, 8, 4, 3)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .25 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 32 - shotgunIcon.width/magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].length * i\r\n      bulletGfc.position.y = shotgunIcon.position.y + shotgunIcon.height - 26\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      // SMG bullets too small for bevel filter\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [ bulletBevel ] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [ bulletBevel ] })\r\n      if (this.grenades && this.gbevel && this.gnoise) {\r\n        this.grenades.forEach(g => { g.filters = [ this.gbevel, this.gnoise ] })\r\n      }\r\n    } else {\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [] })\r\n      if (this.grenades) {\r\n        this.grenades.forEach(g => { g.filters = [] })\r\n      }\r\n    }\r\n  }\r\n  \r\n  let makeMagByType = {\r\n    'pistol weapon': makePistolMag,\r\n    'smg weapon': makeSMGMag,\r\n    'shotgun weapon': makeShotgunMag,\r\n  }\r\n\r\n\tlet weaponIcons = {\r\n\t\t'pistol weapon': pistolIcon,\r\n\t\t'smg weapon': smgIcon,\r\n\t\t'shotgun weapon': shotgunIcon,\r\n  }\r\n\r\n  this.updateMagazine = type => {\r\n    let { game: { player: { weapons: { ammoCapacity } } } } = getState()\r\n    if (magazinesByWeaponType[type]) {\r\n      magazinesByWeaponType[type].forEach(b => { b.destroy() })\r\n      magazinesByWeaponType[type] = null\r\n    }\r\n    magazinesByWeaponType[type] = new Array(ammoCapacity[type]).fill(1)\r\n    makeMagByType[type]()\r\n  }\r\n\r\n  // initialize magazines\r\n  this.updateMagazine(WEAPON_TYPE_PISTOL)\r\n  this.updateMagazine(WEAPON_TYPE_SMG)\r\n  this.updateMagazine(WEAPON_TYPE_SHOTGUN)\r\n  mags = [\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n  ]\r\n\r\n  this.swapSwap = (wep) => {\r\n    let { list, equipped } = getState().game.player.weapons\r\n    magazineIndexes[wep] = 0\r\n    let idx = list.indexOf(wep)\r\n    if (idx > -1) {\r\n      this.select(\r\n        list[idx + 1] ?\r\n        list[idx + 1] :\r\n        list[0]\r\n      )\r\n    }\r\n    window.TweenLite.delayedCall(.05, () => {\r\n      this.select(equipped)\r\n    })\r\n  }\r\n\r\n  this.updateWeaponMagazines = wep => {\r\n    let { list } = getState().game.player.weapons\r\n    mags.forEach(mag => { mag.forEach(b => { container.removeChild(b) }) })\r\n    list.forEach(wep => { this.updateMagazine(wep) })\r\n    mags = [\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    ]\r\n    this.reload(true)\r\n    dispatch( setWeaponEquipped(wep) )\r\n    this.swapSwap(wep) // switch to another weapon, the switch back to correct the ammo display\r\n  }\r\n\r\n\tlet magazineIndexes = {\r\n\t\t'pistol weapon': 0,\r\n\t\t'smg weapon': 0,\r\n\t\t'shotgun weapon': 0,\r\n\t}\r\n\r\n\tlet magEmptyBools = {\r\n\t\t'pistol weapon': false,\r\n\t\t'smg weapon': false,\r\n\t\t'shotgun weapon': false,\r\n  }\r\n\r\n  this.checkEmpty = weapon_str => magEmptyBools[weapon_str]\r\n  \r\n  const doTheWiggle = (icon, defaultPos, callback) => {\r\n    to(icon, .1, {\r\n      x: defaultPos + 10,\r\n      onComplete: () => {\r\n        to(icon, .1, {\r\n          x: defaultPos - 10,\r\n          onComplete: () => {\r\n            to(icon, .1, {\r\n              x: defaultPos + 5,\r\n              onComplete: () => {\r\n                to(icon, .1, {\r\n                  x: defaultPos - 5,\r\n                  onComplete: () => {\r\n                    to(icon, .1, {\r\n                      x: defaultPos + 3,\r\n                      onComplete: () => {\r\n                        to(icon, .1, {\r\n                          x: defaultPos - 2,\r\n                          onComplete: () => {\r\n                            to(icon, .1, {\r\n                              x: defaultPos + 1,\r\n                              onComplete: () => {\r\n                                to(icon, .1, {\r\n                                  x: defaultPos,\r\n                                  onComplete: () => {\r\n                                    this.shaking = false\r\n                                    callback()\r\n                                  }\r\n                                })\r\n                              }\r\n                            })\r\n                          }\r\n                        })\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  this.textForEmptyShake = 'RELOAD'\r\n  this.changeTextForEmptyShake = str => {\r\n    this.textForEmptyShake = str\r\n    this.emptyText.text = str\r\n  }\r\n\r\n  this.emptyText = new PIXI.Text(this.textForEmptyShake, { fill: 0xB00000, fontSize: '15px', fontWeight: 'bold' })\r\n  this.emptyText.pivot.x = this.emptyText.width * .5\r\n  this.emptyText.pivot.y = this.emptyText.height * .5\r\n  this.emptyText.position.x = iconBG.position.x + iconBG.width * .5\r\n  this.emptyText.position.y = iconBG.position.y + iconBG.height * .8\r\n  this.removeEmptyText = () => {\r\n    container.removeChild(this.emptyText)\r\n  }\r\n\r\n  this.shaking = false\r\n  this.emptyMagShake = () => {\r\n    container.addChild(this.emptyText)\r\n    if (!this.shaking) {\r\n      this.shaking = true\r\n      icons.forEach(icon => {\r\n        let defaultPos = icon.position.x\r\n        doTheWiggle(icon, defaultPos, this.removeEmptyText)\r\n      })\r\n      doTheWiggle(iconBG, iconBG.position.x, this.removeEmptyText)\r\n    }\r\n  }\r\n\r\n\tthis.reloading = false\r\n\tthis.reload = (forceReload) => {\r\n\t\tif (!this.reloading || forceReload) {\r\n\t\t\tlet { game: { player: { weapons: { reloadAnimationFrames, equipped, totalAmmo } } } } = getState()\r\n      this.removeEmptyText()\r\n      if (magazineIndexes[equipped] !== 0 && totalAmmo[equipped] !== 0 || forceReload) {\r\n        if (forceReload) { magazineIndexes[equipped] = 0 }\r\n        this.reloading = true\r\n\t\t\t\tlet ammoCheck = totalAmmo[equipped] < magazinesByWeaponType[equipped].length\r\n\t\t\t\tmagazinesByWeaponType[equipped].forEach((b, i) => { b.alpha = 0 })\r\n\t\t\t\tfor (let i = 0, limit = (ammoCheck ? totalAmmo[equipped] : magazinesByWeaponType[equipped].length); i < limit; ++i) {\r\n\t\t\t\t\tlet b = magazinesByWeaponType[equipped][i]\r\n\t\t\t\t\tb.alpha = 1\r\n\t\t\t\t\tfrom(b, reloadAnimationFrames[equipped]/60, {\r\n\t\t\t\t\t\tx: gameWidth - (b.width * i),\r\n\t\t\t\t\t\tonComplete: (_i) => {\r\n\t\t\t\t\t\t\tif (_i === limit-1) {\r\n\t\t\t\t\t\t\t\tmagazineIndexes[equipped] = 0\r\n                magEmptyBools[equipped] = false\r\n                this.lastBulletByWepType[equipped] = false\r\n                if (forceReload) {\r\n                  this.reloading = false\r\n                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (totalAmmo[equipped] === 0) {\r\n\t\t\t\t\t\t\t\tthis.reloading = false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonCompleteParams: [i]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  // forceWepEquipped is a weapon type string\r\n\tthis.select = (forceWepEquipped) => {\r\n    let { game: { player: { weapons: { totalAmmo, equipped } } } } = getState()\r\n    icons.forEach(icon => { icon.alpha = 0 })\r\n\t\tmags.forEach(m => {\r\n      m.forEach(b => {\r\n        if (b && b.hasOwnProperty('alpha')) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    })\r\n\t\tweaponIcons[forceWepEquipped ? forceWepEquipped : equipped].alpha = 1\r\n\t\tlet ammoCheck = totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] < magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length\r\n\t\tif (totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] !== 0) {\r\n\t\t\tlet limit = (ammoCheck\r\n\t\t\t\t? totalAmmo[forceWepEquipped ? forceWepEquipped : equipped]\r\n\t\t\t\t: magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped])\r\n\t\t\tlet lastMagIdx = ammoCheck ? magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] : 0\r\n\t\t\tif (ammoCheck) { magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped] = lastMagIdx }\r\n\t\t\tfor (let i = 0; i < limit; ++i) {\r\n\t\t\t\tmagazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped][magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length-1 - i].alpha = 1\r\n\t\t\t}\r\n    }\r\n    // added this code to hide bullets when last mag is less than ammo cap. \r\n    if (magEmptyBools[equipped]) {\r\n      magazinesByWeaponType[equipped].forEach(b => {\r\n        if (!forceWepEquipped) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    }\r\n\t}\r\n\r\n  this.lastBulletByWepType = {\r\n    'pistol weapon': false,\r\n    'smg weapon': false,\r\n    'shotgun weapon': false,\r\n  }\r\n\r\n\tthis.fireBullet = weapon_str => {\r\n\t\tif (magazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]]) {\r\n\t\t\tmagazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]].alpha = 0\r\n\t\t\tmagazineIndexes[weapon_str]++\r\n\t\t\tdispatch( decrementTotalAmmo(weapon_str) )\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n        this.lastBulletByWepType[weapon_str] = true\r\n      }\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n\t\t\t\tmagEmptyBools[weapon_str] = true\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n  \r\n  const makeGrenadeIcon = () => {\r\n    this.gbevel = new BevelFilter()\r\n    this.gnoise = new NoiseFilter()\r\n    this.gbevel.shadowAlpha = .45\r\n    this.gbevel.lightAlpha = .35\r\n    this.gbevel.thickness = 5\r\n    this.gbevel.shadowColor = 0x0\r\n    this.gbevel.lightColor = 0x208C44\r\n    this.gnoise.noise = .1\r\n    this.gnoise.seed = .5\r\n    let grenadeGfc = new PIXI.Graphics()\r\n    grenadeGfc.lineStyle(1, 0x0)\r\n    grenadeGfc.beginFill(0x1F472C)\r\n    grenadeGfc.drawCircle(0, 0, 6)\r\n    grenadeGfc.filters = getState().game.filterEffects ? [ this.gbevel, this.gnoise ] : []\r\n    container.addChild(grenadeGfc)\r\n    \r\n    return grenadeGfc\r\n  }\r\n\r\n  this.grenades = []\r\n\r\n  this.updateGrenadeIcons = () => {\r\n    if (this.grenades) { this.grenades.forEach(g => { g.destroy() }) }\r\n    this.grenades = []\r\n    let grenadeCount = getState().game.player.weapons.totalAmmo['grenades']\r\n    for (let i = 0; i < grenadeCount; ++i) {\r\n      let gnade = makeGrenadeIcon()\r\n      this.grenades.push( gnade )\r\n    }\r\n    this.grenades.forEach((g, i) => {\r\n      g.position.x = getState().game.width - 25 - ((g.width * 1.5) * i)\r\n      g.position.y = getState().game.height - 110 - g.height\r\n      from(g, (.1 * i), { y: g.position.y - 10, alpha: 0 })\r\n    })\r\n  }\r\n\r\n  this.updateGrenadeIcons()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const updateWeaponsUI = () => {\r\n  let { gameObjects } = window\r\n  let { game: { gameState } } = getState()\r\n\tif (gameObjects) {\r\n\t\tlet weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\t\tif (weaponsUI && (!weaponsUI.reloading || gameState === GameStates.SHOP_MENU)) {\r\n      weaponsUI.select()\r\n      gameObjects = null\r\n\t\t}\r\n\t}\r\n}\r\n","import { Graphics } from 'pixi.js'\r\nimport { Bodies, Body, World } from 'matter-js'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport store from '../../../app/store'\r\n\r\nexport default class HealthDrop {\r\n\r\n  constructor(amt, pos) {\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    let _amt = amt * 3\r\n    this.gfc = new Graphics()\r\n    this.gfc.lineStyle(2, 0x0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.gfc.lineStyle(0, 0x0, 0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.bevel = new BevelFilter({ thickness: 3, lightAlpha: .5, shadowAlpha: .5, shadowColor: 0x247F4D })\r\n    this.glow = new GlowFilter({ outerStrength: .5 })\r\n    this.gfc.filters = store.getState().game.filterEffects ? [\r\n      this.glow, this.bevel,\r\n    ] : []\r\n\r\n    this.body = Bodies.rectangle(pos.x, pos.y, _amt, _amt, {\r\n      restitution: .65,\r\n      collisionFilter: itemCollisionOptions\r\n    })\r\n    this.body.main = this\r\n    this.body.amount = amt\r\n    this.body.label = 'health drop'\r\n    World.add(window.gameObjects.getKeyValue('world'), this.body)\r\n    window.gameObjects.getKeyValue('health-drops').push( this )\r\n    \r\n    return this\r\n  }\r\n\r\n  checkFilters() {\r\n    if (this.gfc && store.getState().game.filterEffects) {\r\n      this.gfc.filters = [ this.bevel, this.glow ]\r\n    } else {\r\n      if (this.gfc) {\r\n        this.gfc.filters = []\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    let idx = healths.indexOf(this)\r\n    if (idx > -1) { healths.splice(idx, 1) }\r\n    this.gfc.destroy()\r\n    this.gfc = null\r\n    World.remove(window.gameObjects.getKeyValue('world'), this.body)\r\n    this.body = null\r\n    healths = null\r\n    idx = null\r\n    this.container = null\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.container && this.container.children.indexOf(this.gfc) === -1) {\r\n      this.container.addChild(this.gfc)\r\n    }\r\n    this.gfc.position = renderFn(this.body)\r\n  }\r\n\r\n}","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Text, Container, filters } from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\n\r\nexport default function AmmoDrop (position, weaponType, amount) {\r\n  let { BlurFilter } = filters  \r\n  let { gameObjects } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n\r\n  let colors = {\r\n    'pistol weapon': 0x0254FF,\r\n    'smg weapon': 0xFF9D02,\r\n    'shotgun weapon': 0xA52121,\r\n  }\r\n\r\n  let text = {\r\n    'pistol weapon': 'PISTOL',\r\n    'smg weapon': 'SMG',\r\n    'shotgun weapon': 'SHOTGUN',\r\n  }\r\n  \r\n  let props = {\r\n    x: position.x, y: position.y,\r\n    w: 50, h: 20\r\n  }\r\n\r\n  let ammoBox = Bodies.rectangle(props.x, props.y, props.w, props.h, {\r\n    collisionFilter: itemCollisionOptions\r\n  })\r\n  ammoBox.label = 'ammo drop'\r\n  ammoBox.ammo_type = weaponType\r\n  ammoBox.amount = amount\r\n  let world = gameObjects.getKeyValue('world')\r\n  World.add(world, ammoBox)\r\n\r\n  ammoBox.main = this\r\n\r\n  let ammoGfc = new Container()\r\n\r\n  let boxGfc = new Graphics()\r\n  boxGfc.beginFill(colors[weaponType])\r\n  boxGfc.drawRect(0, 0, props.w, props.h)\r\n  boxGfc.pivot.x = boxGfc.width * .5\r\n  boxGfc.pivot.y = boxGfc.height * .5\r\n  let bevelFilter = new BevelFilter()\r\n  bevelFilter.thickness = 5\r\n  bevelFilter.lightColor = 0xffffff\r\n  bevelFilter.lightAlpha = 0.25\r\n  bevelFilter.shadowColor = 0x0\r\n  bevelFilter.shadowAlpha = 0.25\r\n  boxGfc.filters = store.getState().game.filterEffects ? [\r\n    bevelFilter\r\n  ] : []\r\n\r\n  let blurGfc, blurFilter\r\n  blurGfc = new Graphics()\r\n  blurGfc.beginFill(0x000000)\r\n  blurGfc.drawRect(0, props.h/2, props.w, props.h/2)\r\n  blurGfc.pivot.x = blurGfc.width * .5\r\n  blurGfc.pivot.y = blurGfc.height * .5\r\n  blurFilter = new BlurFilter(5, 3)\r\n  blurGfc.alpha = .85\r\n  blurGfc.filters = store.getState().game.filterEffects ? [\r\n    blurFilter\r\n  ] : []\r\n  // if (store.getState().game.filterEffects) {\r\n  // }\r\n\r\n  let mask = new Graphics()\r\n  mask.beginFill(colors[weaponType])\r\n  mask.drawRect(0, 0, props.w, props.h)\r\n  mask.pivot.x = mask.width * .5\r\n  mask.pivot.y = mask.height * .5\r\n  blurGfc.mask = mask\r\n\r\n  if (store.getState().game.filterEffects) {\r\n    ammoGfc.addChild(boxGfc, blurGfc, mask)\r\n  } else {\r\n    ammoGfc.addChild(boxGfc, mask)\r\n  }\r\n\r\n  let boxTxt = new Text(text[weaponType], { fontSize: '9px', fill: '#FFF', fontWeight: 'bold' })\r\n  boxTxt.pivot.x = boxTxt.width * .5\r\n  boxTxt.pivot.y = boxTxt.height * .5\r\n  let glow = new GlowFilter()\r\n  glow.color = 0x0\r\n  glow.outerStrength = 1.0\r\n  boxTxt.filters = store.getState().game.filterEffects ? [ glow ] : []\r\n  ammoGfc.addChild(boxTxt)\r\n\r\n  // container.addChild(ammoGfc)\r\n\r\n  this.gfc = ammoGfc\r\n  this.body = ammoBox\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      ammoGfc.addChild(blurGfc, boxTxt)\r\n      boxGfc.filters = [ bevelFilter ]\r\n      blurGfc.filters = [ blurFilter ]\r\n      boxTxt.filters = [ glow ]\r\n    } else {\r\n      if (ammoGfc.children.indexOf(blurGfc) > -1) {\r\n        ammoGfc.removeChild(blurGfc)\r\n      }\r\n      boxGfc.filters = []\r\n      blurGfc.filters = []\r\n      boxTxt.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    const idx = ammoDrops[weaponType].indexOf(this)\r\n    if (idx > -1) {\r\n      ammoDrops[weaponType].splice(idx, 1)\r\n      ammoGfc.destroy()\r\n      World.remove(world, ammoBox)\r\n    }\r\n  }\r\n  \r\n  // auto time-out to destroy self \r\n  setTimeout(() => {\r\n    this.destroy()\r\n  }, 20000)\r\n\r\n  ammoDrops[weaponType].push(this)\r\n\r\n  this.positionAmmoBox = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(ammoBox)\r\n    ammoGfc.position = { x, y }\r\n    ammoGfc.rotation = rot\r\n    if (container && container.children.indexOf(this.gfc) === -1) {\r\n      container.addChild(ammoGfc)\r\n    }\r\n  }\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { getBodyHeight } from '../utils/Utils'\r\nimport { decrementWaveCountToDefeat, increaseScore, incrementZombiesOnStage,\r\n\tupdatePrevScore, setZombieLastKilled, setLastGrenadeKill, resetConsecutiveGrenadeKills, setAchievementOwned, increaseStats, StatsDefs } from '../gameSlice'\r\nimport { GibGenerator } from '../items/Gib'\r\nimport store from '../../../app/store'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { BulletImpact } from '../player/fireWeapons'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport HealthDrop from '../items/HealthDrop'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { degrees } from 'radians'\r\nimport { createTextMessage } from '../createMessages'\r\nimport { AchievementDefs } from '../gameSlice'\r\nimport AchievementsView from '../ReactComponents/AchievementsView'\r\n\r\nexport function ZombieRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { TweenLite: { delayedCall, to } } = window\r\n\tlet world, container, zombieRags\r\n\tlet { gameObjects } = window\r\n\tif (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n\tif (!container) {\r\n\t\tcontainer = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tif (!zombieRags) {\r\n\t\tzombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n\t}\r\n\tlet bloodSmack = gameObjects.getKeyValue('death-rip-sound')\r\n\tbloodSmack.play()\r\n\tlet deathSnd = gameObjects.getKeyValue('zombie-death-sound')\r\n\tdeathSnd.play()\r\n\r\n\tlet b = { w: 40, h: 90 }\r\n  let h = { w: 20, h: 30 }\r\n\tlet a = { w: 15, h: 40 }\r\n\tlet l = { w: 15, h: 40 }\r\n\tlet hnd = { w: 15, h: 35 }\r\n\tlet f = { w: 15, h: 35 }\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: -b.w/4, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n  this.composite = Composite.create()\r\n  this.bodies = [\r\n    head,\r\n    armUpperL, armUpperR,\r\n    armLowerL, armLowerR,\r\n    legUpperL, legUpperR,\r\n    legLowerL, legLowerR,\r\n    footL, footR\r\n\t]\r\n\tthis.bodies.forEach(body => { body.label = 'zombie body part' })\r\n\tbodyUpper.label = 'torso'\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\tthis.constraints = [\r\n\t\tbodyToHead,\r\n\t\thandToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t]\r\n\r\n\tWorld.add(world, this.composite)\r\n  Body.applyForce(bodyUpper, bodyUpper.position, force)\r\n  this.bodies.forEach(_body => {\r\n    Body.applyForce(_body, _body.position, { x: random.float(-0.01, -0.05), y: random.float(-0.01, -0.05) })\r\n  })\r\n\tzombieRags.push(this)\r\n\r\n\t// add sprites\r\n\tlet z_parts_spritesheet = gameObjects.getKeyValue('zombie-parts-gored-sheet')\r\n\r\n  const getSkullTex = () => {\r\n    let skulls = [ 'skull_gored.png', 'skull_gored2.png', 'skull_gored3.png' ]\r\n    return skulls[Math.floor(Math.random() * skulls.length)]\r\n  }\r\n\tlet skull = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[ getSkullTex() ]\r\n  )\r\n\tskull._id = 'skull'\r\n\tlet torso = new PIXI.Sprite( z_parts_spritesheet.textures['torso_whole_gored.png'] )\r\n\ttorso._id = 'torso'\r\n\t\r\n\tlet spriteParts = []\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_leg_lower_gored.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_arm_hand_gored.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_arm_forearm_gored.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n  \r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_leg_upper_gored.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n\tlet foot2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_leg_foot_gored.png']\r\n\t)\r\n\tfoot2._id = 'foot 2'\r\n\tspriteParts.push( foot2 )\r\n  \r\n  spriteParts.push( torso, skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_leg_lower_gored.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\t\r\n\tlet hand1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_arm_hand_gored.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n\tlet arm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_forearm_gored.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tlet foot1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_leg_foot_gored.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n\t\tpart.updateAnchor = true\r\n\t\tpart.pivot.x = part.width * .5\r\n\t\tpart.pivot.y = part.height * .5\r\n\t\tcontainer.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = (\r\n    force ? \r\n      force.x < 0 ?\r\n      { x: -0.002 }\r\n      : { x: 0.002 }\r\n    : { x: random.float(-0.002, 0.002) }\r\n  )\r\n\tgibForce.y = -0.005\r\n\t\r\n\tnew GibGenerator(\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? random.int(5, 10) : 3,  //random.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 2 : 1\r\n  )\r\n\r\n\tthis.destroy = () => {\r\n\t\tspriteParts.forEach((sprite, i) => {\r\n      to(sprite, getState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 1 : .5, {\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          container.removeChild(sprite)\r\n          if (i === spriteParts.length - 1) {\r\n            World.remove(world, this.composite)\r\n\t\t\t\t\t\tzombieRags.splice(zombieRags.indexOf(this), 1)\r\n\t\t\t\t\t\tzombieRags = null\r\n\t\t\t\t\t\tworld = null\r\n\t\t\t\t\t\t// container = null\r\n\t\t\t\t\t\tthis.bodies.forEach(b => { b = null })\r\n\t\t\t\t\t\tthis.constraints.forEach(c => { c = null })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\t}\r\n  \r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n\t\tskull.rotation = skullPos.rotation\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a random constraint\r\n\tconst randomConstraintToRemove = () => this.constraints[ Math.floor( Math.random() * this.constraints.length ) ]\r\n\tlet parts = new Array(random.int(1, 10)).fill(1)\r\n  parts = parts.map((item, i) => {\r\n    let rand\r\n    const getARandomConstraint = () => {\r\n      rand = randomConstraintToRemove()\r\n      if (parts.indexOf(rand) > -1) {\r\n        getARandomConstraint()\r\n      } else {\r\n        return rand\r\n      }\r\n    }\r\n    return getARandomConstraint()\r\n  })\r\n  parts.forEach(part => { Composite.remove(this.composite, part) })\r\n\r\n\t// auto removal\r\n\tdelayedCall(\r\n\t\t!getState().game.lastWaveCountDefeated || getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n\t\tthis.destroy\r\n\t)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function Zombie(x, y) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { Power2, TweenLite: { delayedCall, to, set } } = window\r\n\tlet world, zombies, container\r\n\tlet { gameObjects } = window\r\n  if (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n  if (!zombies) {\r\n    zombies = gameObjects.getKeyValue('zombies')\r\n  }\r\n  if (!container) {\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\r\n  dispatch( incrementZombiesOnStage() )\r\n\t\r\n  let b = { w: 60, h: 125 }\r\n\tlet h = { w: 40, h: 60 }\r\n\t// let zombieWalkSpeed = .65\r\n\tlet zombieWalkSpeed = getState().game.enemies.zombies.walkSpeed\r\n\r\n  let body = Bodies.rectangle(x, y, b.w, b.h, { collisionFilter: enemyCollisionOptions })\r\n  let head = Bodies.rectangle(x, y, h.w, h.h, { collisionFilter: enemyCollisionOptions, inertia: Infinity })\r\n  \r\n\tbody.label = 'enemy zombie body'\r\n\thead.label = 'enemy zombie head'\r\n\r\n  let headToBody = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: body,\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -b.h/2 },\r\n    length: 0,\r\n  })\r\n\r\n  let zombie = Composite.create()\r\n\r\n  this.composite = zombie\r\n  this.body = body\r\n  this.head = head\r\n\r\n  Composite.add(zombie, [\r\n    body, head,\r\n    headToBody\r\n  ])\r\n  World.add(world, zombie)\r\n\r\n  // pixi stuff\r\n  let zWalkSheet = gameObjects.getKeyValue('zombie-walk-sheet') //gameObjects.getKeyValue('z-walk-spritesheet')\r\n\tlet zAttackSheet = gameObjects.getKeyValue('zombie-attack1-sheet')  // gameObjects.getKeyValue('z-attack-spritesheet')\r\n\tlet idleSheet = gameObjects.getKeyValue('zombie-idle-sheet')\r\n\tlet idleAnim = new PIXI.AnimatedSprite( idleSheet.animations['idle'] )\r\n\tlet zWalk = new PIXI.AnimatedSprite(zWalkSheet.animations['walkcycle'])\r\n\tlet zAttack = new PIXI.AnimatedSprite(zAttackSheet.animations['attack1'])\r\n\tlet zAttack2 = new PIXI.AnimatedSprite(gameObjects.getKeyValue('zombie-attack2-sheet').animations['attackTwo'])\r\n\t\r\n\t// slash fx \r\n\tlet slashFX = gameObjects.getKeyValue('zombie-slash-fx-sheet')\r\n  let slashAnim = new PIXI.AnimatedSprite( slashFX.animations['slash'] )\r\n\t\r\n\tslashAnim.loop = false\r\n\tslashAnim.animationSpeed = .5\r\n\tslashAnim.updateAnchor = true\r\n\tslashAnim.pivot.x = slashAnim.width * .5\r\n\tslashAnim.pivot.y = slashAnim.height * .5\r\n\tslashAnim.visible = false\r\n\tslashAnim.onComplete = () => {\r\n\t\tslashAnim.visible = false\r\n\t}\r\n  container.addChild(slashAnim)\r\n  \r\n  // shadow\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 80, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n\tblur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n  if (container && container.children.indexOf(this.shadow) === -1) {\r\n    container.addChild(this.shadow)\r\n  }\r\n\r\n\tidleAnim.loop = true\r\n\tidleAnim.animationSpeed = .5\r\n\tidleAnim.updateAnchor = true\r\n\tidleAnim.pivot.x = idleAnim.width * .5\r\n\tidleAnim.pivot.y = idleAnim.height * .6\r\n\tcontainer.addChild(idleAnim)\r\n\r\n  zWalk.loop = true\r\n  zWalk.animationSpeed = 0.5\r\n  zWalk.updateAnchor = true\r\n  zWalk.pivot.x = zWalk.width * .5\r\n  zWalk.pivot.y = zWalk.height * .6\r\n  container.addChild(zWalk)\r\n\r\n\tzAttack.loop = false\r\n  zAttack.animationSpeed = 0.65\r\n  zAttack.updateAnchor = true\r\n  zAttack.pivot.x = zAttack.width * .5\r\n  zAttack.pivot.y = zAttack.height * .6\r\n  container.addChild(zAttack)\r\n\tzAttack.visible = false\r\n\t\r\n\tzAttack2.loop = false\r\n  zAttack2.animationSpeed = 0.65\r\n  zAttack2.updateAnchor = true\r\n  zAttack2.pivot.x = zAttack2.width * .5\r\n  zAttack2.pivot.y = zAttack2.height * .6\r\n  container.addChild(zAttack2)\r\n\tzAttack2.visible = false\r\n\r\n\tthis.walkAnim = zWalk\r\n\tthis.attackAnim = zAttack\r\n\tthis.attackAnim2 = zAttack2\r\n\tthis.idleAnim = idleAnim\r\n\r\n\tthis.anims = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim\r\n\t]\r\n\tthis.anims.forEach(anim => {\r\n\t\twindow.TweenLite.from(\r\n\t\t\tanim, 1, { alpha: 0 }\r\n\t\t)\r\n\t})\r\n\r\n\tthis.playerBodyPosition = null\r\n\r\n\tthis.playSlashAnim = () => {\r\n\t\tif (this.attackAnim.visible) {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = 1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x\r\n\t\t\tslashAnim.rotation = degrees(0)\r\n\t\t} else {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = -1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x * -1\r\n\t\t\tslashAnim.rotation = degrees(180)\r\n\t\t}\r\n\t\tslashAnim.visible = true\r\n\t\tslashAnim.gotoAndPlay(0)\r\n\t}\r\n\r\n\tthis.setSpritesPositions = fn => {\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.shadow.position.x = x\r\n\t\tthis.shadow.position.y = y + this.walkAnim.height/4 + 10\r\n\t\tthis.walkAnim.position.x = x\r\n\t\tthis.walkAnim.position.y = y\r\n\t\tthis.attackAnim.position.x = x\r\n\t\tthis.attackAnim.position.y = y\r\n\t\tthis.attackAnim2.position.x = x\r\n\t\tthis.attackAnim2.position.y = y\r\n\t\tthis.idleAnim.position.x = x\r\n\t\tthis.idleAnim.position.y = y\t\r\n\t\t// set timescale according to whether player is alive\r\n\t\tif (this.player.dead) {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.2\r\n\t\t\tthis.idleAnim.animationSpeed = 0.2\r\n\t\t\tslashAnim.animationSpeed = 0.2\r\n\t\t} else {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.5\r\n\t\t\tthis.attackAnim.animationSpeed = 0.65\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.65\r\n\t\t\tthis.idleAnim.animationSpeed = 0.5\r\n\t\t\tslashAnim.animationSpeed = 0.5\r\n\t\t}\r\n\t\tif (this.shouldDisplayHealth && this.healthDisplay !== undefined) {\r\n\t\t\tthis.moveLifeDisplay( fn(this.body) )\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setPlayerVars = ({ player, playerDirection, playerBody }) => {\r\n\t\tthis.player = player\r\n\t\tthis.playerBodyPosition = playerBody.position\r\n\t\tthis.playerBody = playerBody\r\n\t\tthis.playerDirection = playerDirection\r\n\t}\r\n\t\r\n\tconst zombieFarFromPlayer = (distance) => {\r\n\t\treturn (this.playerBody.position.x - (distance ? distance : 120) > this.body.position.x || this.playerBody.position.x + (distance ? distance : 120) < this.body.position.x)\r\n\t}\r\n\r\n\tthis.playIdleAnim = () => {\r\n\t\tif (!zAttack.playing && !zAttack2.playing && !this.walkAnimPlaying) {\r\n\t\t\tidleAnim.play()\r\n\t\t\tidleAnim.visible = true\r\n\t\t}\r\n\t}\r\n\r\n\tthis.stopIdleAnim = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\r\n\tthis.walkAnimPlaying = false\r\n\tthis.playWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === false) {\r\n\t\t\tthis.stopIdleAnim()\r\n\t\t\tthis.walkAnim.visible = true\r\n\t\t\tthis.walkAnim.play()\r\n\t\t\tthis.walkAnimPlaying = true\r\n\t\t} else {\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n\tthis.stopWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === true) {\r\n\t\t\tthis.walkAnim.stop()\r\n\t\t\tthis.walkAnim.gotoAndStop(0)\r\n\t\t\tthis.walkAnimPlaying = false\r\n\t\t\tthis.walkAnim.visible = false\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n  this.playWalkAnim()\r\n  \r\n  this.healthOffsetY = 160\r\n  this.damageDisplayOptions = {\r\n    fill: '#FF0000',\r\n    fontSize: 11\r\n  }\r\n  this.healthDisplayOptions = {\r\n    fill: '#FFFF00',\r\n    fontSize: 11\r\n  }\r\n\tthis.healthDisplay = new PIXI.Text(this.health, this.healthDisplayOptions)\r\n\tthis.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n\tif (getState().game.displayZombieHealth) {\r\n\t\tthis.shouldDisplayHealth = true\r\n\t\tcontainer.addChild(this.healthDisplay)\r\n\t}\r\n\r\n  this.moveLifeDisplay = (renderFnResult) => {\r\n\t\tif (this.shouldDisplayHealth) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tthis.healthDisplay.text = this.health\r\n\t\t\t} else {\r\n\t\t\t\tthis.healthDisplay.text = 0\r\n\t\t\t}\r\n\t\t\tthis.healthDisplay.position = {\r\n\t\t\t\tx: renderFnResult.x,\r\n\t\t\t\ty: renderFnResult.y - this.healthOffsetY\r\n\t\t\t}\r\n\t\t} else if (container.children.indexOf(this.healthDisplay) > -1) {\r\n\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t}\r\n  }\r\n\r\n  // runs via the engine loop, so will repeat 30-60 times a second\r\n  this.walk = () => {\r\n\t\tlet comparison = (this.playerBody.position.x < this.body.position.x)\r\n\t\tif (zombieFarFromPlayer() && !zAttack.playing && !zAttack2.playing && !this.player.dead) {\r\n\t\t\tthis.playWalkAnim()\r\n      if (comparison) {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = 1 })\r\n      } else {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = -1 })\r\n      }\r\n      let alteredWalkSpeed\r\n      if (zombieFarFromPlayer(800)) {\r\n        zWalk.animationSpeed = 1.00\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(2.8, 3.2)\r\n      } else if (zombieFarFromPlayer(400)) {\r\n        zWalk.animationSpeed = .75\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(1.8, 2.2)\r\n      } else {\r\n        zWalk.animationSpeed = 0.5\r\n        alteredWalkSpeed = zombieWalkSpeed\r\n      }\r\n      Body.translate(this.body, { x: comparison ? -alteredWalkSpeed : alteredWalkSpeed, y: 0 })\r\n\t\t} else {\r\n\t\t\tthis.stopWalkAnim()\r\n\t\t}\r\n  }\r\n\r\n\tthis.health = getState().game.enemies.zombies.startingHealth\r\n\r\n\tthis.checkFilters = () => {\r\n\t\t// if (getState().game.filterEffects) {\r\n\t\t// \tthis.shadow.filters = [ blur ]\r\n\t\t// \tthis.shadow.alpha = 1.0\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = [ this.criticalGlow ]\r\n\t\t// \t}\r\n\t\t// } else {\r\n\t\t// \tthis.shadow.filters = []\r\n\t\t// \tthis.shadow.alpha = .5\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = []\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\t// this.shouldDisplayHealth = true\r\n\tthis.displayHealth = bool => {\r\n\t\tthis.shouldDisplayHealth = bool\r\n\t\tif (bool) {\r\n\t\t\tcontainer.addChild(this.healthDisplay)\r\n\t\t} else {\r\n\t\t\tif (container.children.indexOf(this.healthDisplay)) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.sprites = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim,\r\n    slashAnim\r\n\t]\r\n\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.main = this\r\n\t})\r\n\r\n\tthis.dead = false\r\n\r\n  this.dmgTxts = []\r\n\tthis.dmgIterator = 0\r\n\tthis.tintAmounts = {\r\n\t\t1: 0xFF9C00,\r\n\t\t2: 0xFF2E00,\r\n\t\t3: 0xFF0000,\r\n\t\t4: 0xB7000F\r\n\t}\r\n\tthis.takeDamage = (dmg, partDamaged, isCritical, isMelee, attackType) => {\r\n\t\t// randomize relative position of blood spurt \r\n\t\tlet spurtPos\r\n\t\tlet spurtPosLow = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y, this.walkAnim.position.y + 50)\r\n\t\t}\r\n\t\tlet spurtPosHi = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y - 100, this.walkAnim.position.y - 50)\r\n\t\t}\r\n\t\tif (!partDamaged || partDamaged === 'head') {\r\n\t\t\tspurtPos = spurtPosHi\r\n\t\t} else {\r\n\t\t\tspurtPos = spurtPosLow\r\n\t\t}\r\n\t\tnew BloodSpurt( null, spurtPos )\r\n\t\tthis.health -= dmg\r\n\t\tthis.directionX = this.playerBodyPosition ? this.playerBodyPosition.x > this.body.position.x : false\r\n\t\tif (this.health <= 0 && !this.dead) {\r\n\t\t\tif (attackType === 'turret') {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tthis.kill(partDamaged, null, attackType ? attackType : null)\r\n      if (isMelee) {\r\n        dispatch(\r\n          increaseStats( StatsDefs.meleeKills )\r\n        )\r\n        setTimeout(() => {\r\n          if (getState().game.stats.meleeKills === 5 && !getState().game.achievements[ AchievementDefs.PILEDRIVE ].owned) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.PILEDRIVE )\r\n            )\r\n          }\r\n        }, 0)\r\n      }\r\n\t\t}\r\n\t\tthis.sprites.forEach(sprite => {\r\n\t\t\tif (sprite !== slashAnim) {\r\n\t\t\t\tif (this.health < 25) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[3]\r\n\t\t\t\t}\r\n\t\t\t\tif (this.health < 10) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[4]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n  }\r\n  \r\n  this.removeZombieFromMatterWorld = () => {\r\n    this.dead = true\r\n    // remove attack hit box in case the zombie was killed on that exact frame and\r\n\t\t// attack box didn't get removed \r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (this.healthDisplay) {\r\n      container.removeChild(this.healthDisplay)\r\n    }\r\n\t\t// if health is depleted, remove all enemy sprites and bodies\r\n\t\tthis.sprites.forEach(sprite => { container.removeChild(sprite) })\r\n    if (this.attackHitbox) { World.remove(world, this.attackHitbox) }\r\n\t\tWorld.remove(world, this.composite)\r\n    return 'zombie removed'\r\n  }\r\n\r\n  this.removeZombieFromZombiesArray = () => {\r\n    let idx = zombies.indexOf(this)\r\n    if (idx > -1) {\r\n      zombies.splice(idx, 1)\r\n    }\r\n  }\r\n  \r\n\tthis.kill = (partLastDamaged, skipZombieRag, killType) => {\r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (!this.dead) {\r\n      this.dead = true\r\n\t\t\tthis.health = 0\r\n\t\t\tif (this.healthDisplay) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n      }\r\n      // if (this.criticalText) {\r\n      //   container.removeChild(this.criticalText)\r\n      // }\r\n      if (this.shadow) {\r\n        container.removeChild(this.shadow)\r\n      }\r\n\t\t\tcontainer.removeChild(this.shadow)\r\n      this.removeZombieFromMatterWorld()\r\n      this.removeZombieFromZombiesArray()\r\n      let force = { x: this.directionX ? -0.2 : 0.2, y: -0.25 }\r\n\t\t\tlet dropPos = {\r\n\t\t\t\tx: this.directionX ? this.body.position.x - 20 : this.body.position.x + 20,\r\n\t\t\t\ty: this.body.position.y - 60\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n\t\t\t\tGenerateRandomCreditDrops(dropPos)\r\n\t\t\t\tif (getState().game.player.perks['ammoDropper'].owned) {\r\n\t\t\t\t\tlet { list } = getState().game.player.weapons\r\n\t\t\t\t\tnew AmmoDrop(dropPos, list[Math.floor(Math.random() * list.length)], random.int(4, 16))\r\n\t\t\t\t}\r\n\t\t\t\tif (getState().game.player.perks['healthDropper'].owned) {\r\n\t\t\t\t\tnew HealthDrop(random.int(2, 6), dropPos)\r\n\t\t\t\t}\r\n\t\t\t\tbulletImpacts.push(\r\n\t\t\t\t\tnew BulletImpact('enemy', this.body.position, {\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\talphaDuration: 3,\r\n\t\t\t\t\t\tset: 1,\r\n\t\t\t\t\t\trand: {\r\n\t\t\t\t\t\t\tmin: 1, max: 4\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n        dispatch(decrementWaveCountToDefeat())\r\n\t\t\t\tlet scoreAmt = getState().game.scoreAmounts.zombie\r\n\t\t\t\tif (partLastDamaged === 'head') {\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.headShot\r\n\t\t\t\t}\r\n\t\t\t\tif (Date.now() - JSON.parse(getState().game.zombieLastKilled) < 1000) {\r\n\t\t\t\t\tcreateTextMessage('kill streak bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieStreakBonus\r\n\t\t\t\t}\r\n\t\t\t\tif (killType && killType === 'fell off') {\r\n\t\t\t\t\tif (!getState().game.achievements[AchievementDefs.THIS_IS_SPARTA].owned) {\r\n\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.THIS_IS_SPARTA ))\r\n\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcreateTextMessage('knockoff bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieKnockedOffStage\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tsetZombieLastKilled( JSON.stringify(Date.now()) )\r\n\t\t\t\t)\r\n\t\t\t\tif (killType === 'grenade explosion') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tsetLastGrenadeKill( JSON.stringify(Date.now()) )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (Date.now() - JSON.parse(getState().game.lastGrenadeKill < 100)) {\r\n\t\t\t\t\t\t\tif (getState().game.consecutiveGrenadeKills > 2) {\r\n\t\t\t\t\t\t\t\tif (!getState().game.achievements[ AchievementDefs.FIRE_IN_THE_HOLE ].owned) {\r\n\t\t\t\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.FIRE_IN_THE_HOLE ))\r\n\t\t\t\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdispatch( resetConsecutiveGrenadeKills() )\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'landmine') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.mineKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.mineKills > 2 && !getState().game.achievements[ AchievementDefs.MINER ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.MINER))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'turret') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.turretKills > 9 && !getState().game.achievements[ AchievementDefs.GUNNA ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.GUNNA))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\t\tgetState().game.player.variables.jumping &&\r\n\t\t\t\t\t\t!getState().game.achievements[ AchievementDefs.THE_JUMP_SHOT ].owned &&\r\n\t\t\t\t\t\tkillType !== 'grenade explosion' &&\r\n\t\t\t\t\t\tkillType !== 'landmine' &&\r\n\t\t\t\t\t\tkillType !== 'landmine explosion' &&\r\n\t\t\t\t\t\tkillType !== 'clustermine explosion'\r\n\t\t\t\t\t) {\r\n          \tdispatch(\r\n            \tsetAchievementOwned( AchievementDefs.THE_JUMP_SHOT )\r\n          \t)\r\n        }\r\n\t\t\t\tupdateScore( scoreAmt )\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.zombiesKilled )\r\n\t\t\t\t)\r\n\t\t\t\tnew ZombieRagdoll({\r\n\t\t\t\t\tx: this.body.position.x,\r\n\t\t\t\t\ty: this.body.position.y - getBodyHeight(this.body)\r\n\t\t\t\t}, force, partLastDamaged)\r\n\t\t\t}\r\n      if (this.attackHitbox) {\r\n        World.remove(world, this.attackHitbox)\r\n      }\r\n\t\t\tzombies = 1\r\n\t\t\tzombies = null\r\n      // container = 1\r\n\t\t\t// container = null\r\n    }\r\n\t}\r\n\r\n\t// const getRandomInt = () => random.int(2, 5)\r\n\r\n\tconst makeAttackHitbox = (num) => {\r\n\t\tif (this.playerBodyPosition) {\r\n\t\t\tlet comparison = (this.playerBodyPosition.x > this.body.position.x)\r\n\t\t\tlet compareResult = comparison ? 80 : -80\r\n\t\t\treturn Bodies.rectangle(this.body.position.x + compareResult, this.body.position.y - getBodyHeight(this.body)/2, num === 2 ? 120 : 100, 150, {\r\n\t\t\t\tlabel: 'enemy zombie attack',\r\n\t\t\t\tisStatic: true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// zAttack.onFrameChange = () => {\r\n\t// \tif (zAttack.currentFrame === 6) {\r\n\t// \t\tthis.playSlashAnim()\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 8) {\r\n\t// \t\tWorld.add(world, this.attackHitbox)\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 9) {\r\n\t// \t\tWorld.remove(world, this.attackHitbox)\r\n\t// \t\t// this.attackHitbox = null\r\n\t// \t}\r\n\t// }\r\n\tzAttack.onFrameChange = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\tzAttack.onComplete = () => {\r\n\t\tzAttack.gotoAndStop(0)\r\n\t\tzAttack.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\tzAttack2.onComplete = () => {\r\n\t\tzAttack2.gotoAndStop(0)\r\n\t\tzAttack2.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\t//hitbox will be a matter body that appears for a few frames\r\n\tthis.timeSinceLastAttack = Date.now() + 500\r\n\tlet zombieGrowl = gameObjects.getKeyValue('zombie-growl-sound')\r\n\tthis.attack = () => {\r\n\t\tif (!this.paused && zombies.indexOf(this) > -1 && !this.player.dead && !this.dead) {\r\n\t\t\tthis.timeSinceLastAttack = Date.now()\r\n\t\t\tlet oneOfTwo = [ 1, 2 ][ Math.floor( Math.random() * 2 ) ]\r\n\t\t\tthis.attackHitbox = makeAttackHitbox(oneOfTwo)\r\n\t\t\tzombieGrowl.play()\r\n\t\t\t// change frames to an attack animation here\r\n\t\t\tzWalk.visible = false\r\n\t\t\tif (oneOfTwo === 1) {\r\n\t\t\t\tzAttack.visible = true\r\n\t\t\t\tzAttack.play()\r\n\t\t\t} else {\r\n\t\t\t\tzAttack2.visible = true\r\n\t\t\t\tzAttack2.play()\r\n\t\t\t}\r\n\t\t\tidleAnim.visible = false\r\n\t\t\tdelayedCall(.15, () => {\r\n\t\t\t\tthis.playSlashAnim()\r\n\t\t\t})\r\n\t\t\tdelayedCall(.2, () => {\r\n\t\t\t\tWorld.add(world, this.attackHitbox)\r\n\t\t\t\tdelayedCall(.1, () => {\r\n\t\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tif (this.attackHitbox) {\r\n\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t// this.attackHitbox = null\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  this.pause = () => {\r\n    this.paused = true\r\n    // this.stopWalkAnim()\r\n    idleAnim.stop()\r\n    this.walkAnim.stop()\r\n    this.attackAnim.stop()\r\n    this.attackAnim2.stop()\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.paused = false\r\n    this.walkAnim.play()\r\n    if (zAttack.currentFrame !== 0) {\r\n      zAttack.play()\r\n    }\r\n  }\r\n\r\n  zombies.push(this)\r\n\r\n  return this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Container, filters} from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport store from '../../../app/store'\r\n\r\nexport default function CreditDrop (position, amount) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let currencyDrops = gameObjects.getKeyValue('currency-drops')\r\n  let { x: _x, y: _y } = position\r\n\r\n  // init\r\n  // matter body \r\n  let creditBody = Bodies.circle(_x, _y, amount * .25, { restitution: .5, collisionFilter: itemCollisionOptions })\r\n  creditBody.label = 'currency drop'\r\n  creditBody.amount = amount\r\n  // console.log(creditBody.amount)\r\n  World.add(world, creditBody)\r\n  // gfx -- blurred\r\n  let creditContainer = new Container()\r\n  let creditBlur = new Graphics()\r\n  creditBlur.beginFill(0x0eead8)\r\n  creditBlur.drawCircle(0, 0, amount * .25)\r\n  let blurFilter = new filters.BlurFilter()\r\n  blurFilter.blur = 3\r\n  creditBlur.filters = store.getState().game.filterEffects ? [ blurFilter ] : []\r\n  creditBlur.pivot.x = (creditBlur.width * .25) * .5\r\n  creditBlur.pivot.y = (creditBlur.height * .25) * .5\r\n  creditBlur.scale.x = 1.1\r\n  creditBlur.scale.y = 1.1\r\n  creditContainer.addChild(creditBlur)\r\n  // gfx -- clear\r\n  let creditGfc = new Graphics()\r\n  creditGfc.beginFill(0x0eead8)\r\n  creditGfc.drawCircle(0, 0, amount * .25)\r\n  creditGfc.pivot.x = (creditGfc.width * .25) * .5\r\n  creditGfc.pivot.y = (creditGfc.height * .25) * .5\r\n  creditContainer.addChild(creditGfc)\r\n  let bevel = new BevelFilter()\r\n  bevel.lightColor = 0xffffff\r\n  bevel.lightAlpha = .3\r\n  bevel.shadowColor = 0x0\r\n  bevel.shadowAlpha = .3\r\n  creditContainer.filters = store.getState().game.filterEffects ? [ bevel ] : []\r\n  // add to stage\r\n  container.addChild(creditContainer)\r\n  \r\n  currencyDrops.push(this)\r\n\r\n  creditBody.main = this\r\n\r\n  this.creditBody = creditBody\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      creditContainer.filters = [bevel]\r\n      creditBlur.filters = [blurFilter]\r\n    } else {\r\n      creditContainer.filters = []\r\n      creditBlur.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroyed = false\r\n  this.destroy = () => {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      let idx = currencyDrops.indexOf(this)\r\n      if (idx > -1) {\r\n        currencyDrops.splice(idx, 1)\r\n        creditContainer.destroy()\r\n        World.remove(world, creditBody)\r\n        world = null\r\n        container = null\r\n        currencyDrops = null\r\n        gameObjects = null\r\n        creditBody = null\r\n        this.creditBody = null\r\n        creditContainer = null\r\n      }\r\n    }\r\n  }\r\n\r\n  setTimeout(() => { this.destroy() }, 20000)\r\n\r\n  this.positionCreditGfx = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(creditBody)\r\n    creditContainer.position = { x, y }\r\n    creditContainer.rotation = rot\r\n  }\r\n\r\n  return this\r\n\r\n} ","import Zombie from '../enemies/Zombie'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport CreditDrop from '../items/CurrencyCredit'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\n\r\nconst { getState } = store\r\nconst { TweenLite: { delayedCall } } = window\r\nconst yStartPos = getState().game.height/2\r\n\r\nexport const GenerateZombies = (count) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  \r\n  const startZombieCreation = () => {\r\n    let numOnStage = (\r\n      getState().game.waveNum > 20 ? 4\r\n      : getState().game.waveNum > 10 ? 3\r\n      : 2\r\n    )\r\n    for (let i = 0; i < count; ++i) {\r\n      const getAZombie = () => {\r\n        if (\r\n          getState().game.zombiesOnStage < numOnStage &&\r\n          getState().game.gameState !== GameStates.PAUSE &&\r\n          getState().game.gameState !== GameStates.MAIN_MENU &&\r\n          (getState().game.gameSubState === SubStates.WAVE_STARTED || getState().game.gameSubState === SubStates.PLAYER_RESPAWN)\r\n          ) {\r\n          console.log('should create a zombo')\r\n          if (getState().game.gameSubState !== SubStates.WAVE_DEFEATED) {\r\n            new Zombie(random.int(buffer, width - buffer), yStartPos)\r\n          }\r\n        } else {\r\n          setTimeout(() => { getAZombie() }, 2000)\r\n        }\r\n      }\r\n      getAZombie()\r\n    }\r\n  }\r\n  startZombieCreation()\r\n  \r\n}\r\n\r\nexport const GenerateRandomAmmoDrops = (position, amountLimits, overrideCount) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let { game: { player: { weapons: { list, ammoCapacity } } } } = getState()\r\n  let randCount = overrideCount ? overrideCount : random.int(1, 2)\r\n  let type = list[Math.floor(Math.random() * list.length)]\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new AmmoDrop(\r\n      position ? position : { x: random.int(buffer, width - buffer), y: 200 },\r\n      type,\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : random.int(5, ammoCapacity[type]))\r\n  }\r\n}\r\n\r\nexport const GenerateRandomCreditDrops = (position, amountLimits) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let randCount = getState().game.player.perks['creditDropper'].owned ? random.int(5, 8) : random.int(4, 5)\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new CreditDrop(\r\n      position ?\r\n        { x: position.x, y: position.y - random.int(0, 75) }\r\n        : { x: random.int(buffer, width - buffer), y: 200 - random.int(0, 75) },\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : getState().game.player.perks['creditDropper'].owned ? random.int(15, 30) : random.int(5, 20)\r\n    )\r\n  }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { applyGsapHover } from '../utils/Utils'\r\nimport { gameStateTransition, unsetAllKeys } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { createGenericMessage } from '../createMessages'\r\nimport { FELL_OFF } from '../constants/DeathTypes'\r\nimport random from 'random'\r\n\r\nconst { dispatch, getState } = store\r\n\r\nfunction RespawnButton () {\r\n\tlet container = new PIXI.Container()\r\n\tlet btn = new PIXI.Graphics()\r\n\tbtn.beginFill(0x555555)\r\n\tbtn.drawRect(0, 0, 150, 50)\r\n\tcontainer.addChild(btn)\r\n\r\n\tconst text = new PIXI.Text('Respawn?', { font: 'Arial', fill: '#FFFFFF', fontSize: 20, fontWeight: 'bold' })\r\n\ttext.position.x = btn.width/2 - text.width/2\r\n\ttext.position.y = btn.height/2 - text.height/2\r\n\tcontainer.addChild(text)\r\n\r\n\treturn container\r\n}\r\n\r\nexport default function ScreenUI () {\r\n\tlet { gameObjects, TweenLite: { from }, Bounce } = window\r\n  let gameContainer = gameObjects.getKeyValue('game-pixi-container')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n\r\n  // let zombies = gameObjects.getKeyValue('zombies')\r\n\r\n\tthis.respawnButton = new RespawnButton()\r\n\tgameContainer.addChild(this.respawnButton)\r\n\tthis.respawnButton.visible = false\r\n\tthis.respawnButton.interactive = true\r\n\tthis.respawnButton.pivot.x = this.respawnButton.width/2\r\n\tthis.respawnButton.pivot.y = this.respawnButton.height/2\r\n\tthis.respawnButton.position.x = (this.respawnButton.width/2) + 20\r\n\tthis.respawnButton.position.y = (this.respawnButton.height/2) + 20\r\n\r\n  this.respawn = () => {\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.respawn()\r\n    createGenericMessage('Still alive!', 0xFFFFFF, .5, .75)\r\n    if (player.lastDeathType !== FELL_OFF) {\r\n      GenerateRandomAmmoDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      },\r\n      {\r\n        min: 10, max: getState().game.player.weapons.ammoCapacity[getState().game.player.weapons.equipped] * 2\r\n      },\r\n      random.int(1, 2))\r\n      GenerateRandomCreditDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      })\r\n    }\r\n  }\r\n\r\n\tthis.respawnButton.on('click', () => {\r\n\t\tthis.respawn()\r\n\t\tthis.respawnButton.visible = false\r\n\t})\r\n\r\n\tapplyGsapHover(this.respawnButton)\r\n\r\n\tthis.showRespawnButton = () => {\r\n\t\tthis.respawnButton.visible = true\r\n\t\tfrom(this.respawnButton.scale, 1.5, { x: .5, y: .5, ease: Bounce.easeOut })\r\n  }\r\n\r\n  const unpause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    // player \r\n    let player = gameObjects.getKeyValue('player')\r\n    player.pause()\r\n    // zombies \r\n    zombies.forEach(zombie => {\r\n      zombie.unpause()\r\n    })\r\n    // resume physics engine\r\n    engine.timing.timeScale = 1\r\n  }\r\n\r\n  const pause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    dispatch( unsetAllKeys() )\r\n    // character\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.unpause()\r\n    // zombies\r\n    zombies.forEach(zombie => {\r\n      zombie.pause()\r\n    })\r\n    // pause physics engine\r\n    engine.timing.timeScale = 0.05\r\n  }\r\n\r\n  this.unpause = unpause\r\n  this.pause = pause\r\n  \r\n  this.togglePause = () => {\r\n    let { gameState, gameSubState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU && gameState !== GameStates.SHOP_MENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameState !== GameStates.BUILD_MENU && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.WAVE_DEFEATED) {\r\n      let player = gameObjects.getKeyValue('player')\r\n      if (!player.dead) {\r\n        if (gameState !== GameStates.PAUSE && gameSubState !== SubStates.WAITING) {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.PAUSE) )\r\n          pause()\r\n        } else {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.GAMEPLAY) )\r\n          if (gameSubState === SubStates.WAVE_STARTED) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAVE_STARTED) )\r\n          } else if (gameSubState === SubStates.NEUTRAL) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n          }\r\n          unpause()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // add a pause listener to the screen UI ('P' (80) or ESC (27) key)\r\n  document.body.addEventListener('keydown', e => {\r\n    if (e.key === 'p' || e.key === 'P' || e.key === 'Escape') {\r\n      console.log('pause key was pressed')\r\n      this.togglePause()\r\n    }\r\n  })\r\n\r\n\treturn this\r\n\r\n}\r\n","// Matter and Custom\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { makePixiSprite, setUpMatter, setUpPixi } from './utils/Utils'\r\nimport { World, Bodies, Events } from 'matter-js'\r\nimport Player from './player/Player'\r\nimport createGameObjects from './createGameObjects'\r\nimport { setTexturePath, gameStateTransition } from './gameSlice'\r\nimport { gameTickHandler, checkCollisionStart } from './engineHandlers'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport WeaponsUI from './ui/WeaponsUI'\r\nimport ScreenUI from './ui/ScreenUI'\r\n// images\r\nimport weaponUI_pistolIcon from '../../images/pistol-icon.png'\r\nimport weaponUI_smgIcon from '../../images/smg-icon.png'\r\nimport weaponUI_shotgunIcon from '../../images/shotgun-icon.png'\r\n// environment textures \r\nimport groundTexture from '../../images/GroundTexture_Optimized.png'\r\nimport wallTile from '../../images/wallTile.png'\r\nimport gradientAlpha from '../../images/gradient-layer-mask.png'\r\n// game cover art\r\nimport coverArt from '../../images/GameCover.png'\r\n// explosive barrel \r\nimport explosiveBarrel from '../../images/explosiveBarrier.png'\r\n// player head\r\nimport charHead from '../../images/head-sprite.png'\r\n// Sound FX\r\nimport { Howl, Howler } from 'howler'\r\nimport _9mm1 from '../../sounds/9mm1.wav'\r\nimport _9mm2 from '../../sounds/9mm2.mp3'\r\nimport explosion1 from '../../sounds/explosion1.wav'\r\nimport distant_explosion from '../../sounds/explosion_distant.wav' \r\nimport pistolReloadSnd from '../../sounds/pistolReload.wav'\r\nimport bulletImpact_body from '../../sounds/bodyBulletImpact.wav'\r\nimport grenadeClink from '../../sounds/grenadeClink.wav'\r\nimport throwSound from '../../sounds/throw.wav'\r\nimport coinCollectSound from '../../sounds/coinCollect.wav'\r\nimport ammoCollectSound from '../../sounds/collectAmmo.wav'\r\nimport itemCollectSound from '../../sounds/collectItem.wav'\r\nimport bloodSquash from '../../sounds/bloodSquash.flac'\r\nimport bloodSquish from '../../sounds/bloodSquish.wav'\r\nimport bloodSmack from '../../sounds/bloodSmack.wav'\r\nimport deathRipSound from '../../sounds/deathRipSound.wav'\r\nimport jumpLandingSound from '../../sounds/jumpLanding.wav'\r\nimport dirtImpactSound from '../../sounds/dirtImpact.wav'\r\nimport zombieHurtSound from '../../sounds/zombieHurt.wav'\r\nimport zombieDeathSound from '../../sounds/zombieDeath.wav'\r\nimport pain1Sound from '../../sounds/pain1.wav'\r\nimport pain2Sound from '../../sounds/pain2.wav'\r\nimport playerDeathSound from '../../sounds/playerDeath.wav'\r\nimport buttonAddSound from '../../sounds/buttonAdd.wav'\r\nimport buttonSubtractSound from '../../sounds/buttonSubtract.wav'\r\nimport buttonClickSound from '../../sounds/buttonClick.wav'\r\nimport buttonHoverSound from '../../sounds/buttonHover.wav'\r\nimport placeObjectSound from '../../sounds/placeObject.flac'\r\nimport buttonCancelSound from '../../sounds/cancelSound.wav'\r\nimport purchaseSound from '../../sounds/moneySound.wav'\r\nimport confirmSound from '../../sounds/purchase.wav'\r\nimport shellImpactSound from '../../sounds/shellImpact.wav'\r\nimport healthPickupSound from '../../sounds/health.wav'\r\nimport zombieGrowl from '../../sounds/zombieGrowl.wav'\r\nimport smgFire from '../../sounds/smgFire.wav'\r\nimport magDrop from '../../sounds/magDrop.wav'\r\nimport shotShell from '../../sounds/shotShell.wav'\r\nimport shotgunBlast from '../../sounds/shotgunBlast.wav'\r\nimport achievement1 from '../../sounds/achievement1.wav'\r\nimport achievement2 from '../../sounds/achievement2.mp3'\r\nimport achievement3 from '../../sounds/achievement3.wav'\r\nimport jumpSound from '../../sounds/jumpSound.wav'\r\nimport chargingNade from '../../sounds/grenadeCharge.wav'\r\n\r\n// spritesheets in /public folder to use pixi .loader, not webpack \r\nconst zombieWalkcycleTest = './spritesheet-assets/zombie_walkcycle_test.json'\r\nconst z_walk_spritesheet = './spritesheet-assets/z_walk/z_walk.json'\r\nconst z_attack_spritesheet = './spritesheet-assets/z_attack/z_attack.json'\r\nconst z_parts_spritesheet = './spritesheet-assets/z_parts/limbs.json'\r\nconst muzzle_flashes_spritesheet = './spritesheet-assets/FX/muzzle_flashes/muzzle-flashes.json'\r\n// updated zombie sprites\r\nconst zomb_idle_sheet = './spritesheet-assets/enemy-spritesheets/zombie/idle/idle.json'\r\nconst zomb_walk_sheet = './spritesheet-assets/enemy-spritesheets/zombie/walkcycle/walkcycle.json'\r\nconst zomb_attack1_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack1/attack1.json'\r\nconst zomb_attack2_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack2/attack2.json'\r\nconst zomb_parts_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts.json'\r\nconst zomb_parts_gored_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts_gored.json'\r\nconst zomb_slash_fx_sheet = './spritesheet-assets/enemy-spritesheets/zombie/slash_fx/slash_fx.json'\r\n\r\n// barriers\r\nconst barriers_sheet = './spritesheet-assets/barriers/barriers.json'\r\n\r\n// updated character sprites \r\nconst char_parts = './spritesheet-assets/character-spritesheets/parts/player_parts.json'\r\nconst char_idle_sheet = './spritesheet-assets/character-spritesheets/idle/char_idle_anim.json'\r\nconst char_run_sheet = './spritesheet-assets/character-spritesheets/run/char_run_anim.json'\r\nconst char_jump_sheet = './spritesheet-assets/character-spritesheets/jump/char_jump_anim.json'\r\nconst char_reload_pistol_sheet = './spritesheet-assets/character-spritesheets/reloadPistol/char_reload_pistol_anim.json'\r\nconst char_reload_smg_sheet = './spritesheet-assets/character-spritesheets/reloadSMG/char_reload_smg_anim.json'\r\nconst left_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmPistolFire/char_left_arm_pistol_fire.json'\r\nconst right_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmPistolFire/char_right_arm_pistol_fire.json'\r\nconst left_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmSMGFire/char_left_arm_smg_fire.json'\r\nconst right_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmSMGFire/char_right_arm_smg_fire.json'\r\nconst melee_pistol_sheet = './spritesheet-assets/character-spritesheets/melee/melee_pistol/melee_pistol.json'\r\nconst melee_ump_sheet = './spritesheet-assets/character-spritesheets/melee/melee_ump/melee_ump.json'\r\nconst melee_shotgun_sheet = './spritesheet-assets/character-spritesheets/melee/melee_shotgun/melee_shotgun.json'\r\nconst grenade_pistol_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/pistolEquipped/grenade_throw_pistol.json'\r\nconst grenade_ump_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/umpEquipped/grenade_throw_ump.json'\r\nconst grenade_shotgun_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/shotgunEquipped/grenade_throw_shotgun.json'\r\nconst arms_fire_shotgun = './spritesheet-assets/character-spritesheets/armsFireShotgun/arms_fire_shotgun_anim.json'\r\nconst char_reload_shotgun_sheet = './spritesheet-assets/character-spritesheets/reloadShotgun/reloadShotgun.json'\r\n\r\n// blood effects\r\nconst blood_spurt_1 = './spritesheet-assets/FX/blood_fx/blood_spurt_1/blood_spurt_1.json'\r\nconst blood_spurt_2 = './spritesheet-assets/FX/blood_fx/blood_spurt_2/blood_spurt_2.json'\r\nconst blood_spurt_3 = './spritesheet-assets/FX/blood_fx/blood_spurt_3/blood_spurt_3.json'\r\n\r\n// landmine\r\nconst landmine_sheet = './spritesheet-assets/landmine/landmine.json'\r\nconst clustermine_sheet = './spritesheet-assets/clustermine/clustermine.json'\r\nconst remote_mine_sheet = './spritesheet-assets/remote-mine/remote-mine.json'\r\n\r\n// turret\r\nconst turret_scan_sheet = './spritesheet-assets/turret/sheets/turret_scan.json'\r\nconst turret_shoot_sheet = './spritesheet-assets/turret/sheets/turret_shoot.json'\r\n\r\n// explosion assts\r\nconst explosion_assets_sheet = './spritesheet-assets/FX/explosion_fx/explosion_assets.json'\r\nconst wood_planks_sheet = './spritesheet-assets/FX/wood_planks/wood_planks.json'\r\n\r\n// ground spatters \r\nconst ground_effects_sheet = './spritesheet-assets/FX/ground_fx/ground_fx.json'\r\n\r\n// FX\r\nconst explosion3d1_sheet = './spritesheet-assets/FX/explosion3d/explosion3d1.json'\r\nconst explosion3d2_sheet = './spritesheet-assets/FX/explosion3d/explosion3d2.json'\r\nconst sparks_sheet = './spritesheet-assets/FX/spark-particle/spark_particle.json'\r\nconst muzzle_sparks_sheet = './spritesheet-assets/FX/muzzle-sparks/muzzle_sparks.json'\r\n\r\nlet { dispatch, getState } = store\r\n\r\nlet { TweenLite: { to } } = window\r\n\r\nconst { world, render, engine, width, height, worldWidth } = setUpMatter('app-container', true)\r\n\r\nconst { app, loader } = setUpPixi('app-container')\r\n\r\nconst addGround = () => {\r\n\tlet ground = Bodies.rectangle(worldWidth/2, height, worldWidth, height/2, { \r\n    isStatic: true,\r\n    collisionFilter: {\r\n      mask: 3\r\n    }\r\n  })\r\n\tground.label = 'ground'\r\n\tWorld.add(world, ground)\r\n\t// dispatch(setGroundId(ground.id))\r\n\treturn ground\r\n}\r\n\r\nexport default function buildGame() {\r\n\r\n\tloader\r\n\t.add(gradientAlpha)\r\n\t.add(wallTile)\r\n\t.add(char_reload_shotgun_sheet)\r\n\t.add(arms_fire_shotgun)\r\n\t.add(sparks_sheet)\r\n\t.add(muzzle_sparks_sheet)\r\n\t.add(explosion3d1_sheet)\r\n\t.add(explosion3d2_sheet)\r\n  .add(turret_scan_sheet)\r\n  .add(turret_shoot_sheet)\r\n\t.add(remote_mine_sheet)\r\n\t.add(clustermine_sheet)\r\n\t.add(landmine_sheet)\r\n\t.add(explosiveBarrel)\r\n  .add(barriers_sheet)\r\n\t.add(groundTexture)\r\n\t.add(zombieWalkcycleTest)\r\n\t.add(z_walk_spritesheet)\r\n\t.add(z_attack_spritesheet)\r\n\t.add(z_parts_spritesheet)\r\n\t.add(zomb_idle_sheet)\r\n\t.add(zomb_walk_sheet)\r\n\t.add(zomb_attack1_sheet)\r\n\t.add(zomb_attack2_sheet)\r\n\t.add(zomb_parts_sheet)\r\n\t.add(zomb_parts_gored_sheet)\r\n\t.add(zomb_slash_fx_sheet)\r\n\t.add(muzzle_flashes_spritesheet)\r\n\t.add(blood_spurt_1)\r\n\t.add(blood_spurt_2)\r\n  .add(blood_spurt_3)\r\n\t.add(explosion_assets_sheet)\r\n\t.add(wood_planks_sheet)\r\n\t.add(ground_effects_sheet)\r\n\t.add(char_parts)\r\n  .add(char_idle_sheet)\r\n  .add(char_run_sheet)\r\n  .add(char_jump_sheet)\r\n  .add(char_reload_pistol_sheet)\r\n  .add(char_reload_smg_sheet)\r\n  .add(melee_pistol_sheet)\r\n\t.add(melee_ump_sheet)\r\n\t.add(melee_shotgun_sheet)\r\n  .add(grenade_pistol_sheet)\r\n  .add(grenade_ump_sheet)\r\n  .add(grenade_shotgun_sheet)\r\n  .add(left_arm_pistol_fire_sheet)\r\n  .add(right_arm_pistol_fire_sheet)\r\n  .add(left_arm_smg_fire_sheet)\r\n  .add(right_arm_smg_fire_sheet)\r\n  .add(charHead)\r\n\t.add(weaponUI_pistolIcon)\r\n\t.add(weaponUI_smgIcon)\r\n\t.add(weaponUI_shotgunIcon)\r\n\t.load(setUp)\r\n\r\n\tfunction setUp () {\r\n\r\n\t\twindow.gameObjects = createGameObjects()\r\n\t\tlet { gameObjects } = window\r\n\r\n\t\t// images\r\n\t\tdispatch(setTexturePath('game-cover', coverArt))\r\n\t\tdispatch(setTexturePath('char-head', charHead))\r\n\t\tdispatch(setTexturePath('gradient-alpha', gradientAlpha))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-pistol', weaponUI_pistolIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-smg', weaponUI_smgIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-shotgun', weaponUI_shotgunIcon))\r\n\t\tdispatch(setTexturePath('ground-texture', groundTexture))\r\n\t\tdispatch(setTexturePath('explosive-barrel', explosiveBarrel))\r\n\t\t// env textures\r\n    let groundTex = makePixiSprite('ground-texture')\r\n    groundTex.pivot.x = groundTex.width * .5\r\n\t\tgroundTex.pivot.y = groundTex.height * .425\r\n\t\tlet gradientAlphaImg = makePixiSprite('gradient-alpha')\r\n\t\tgradientAlphaImg.width = width\r\n\t\tgradientAlphaImg.height = height\r\n\t\tgameObjects.setKeyValue('gradient-alpha', gradientAlphaImg)\r\n\t\tlet gameCover = makePixiSprite('game-cover')\r\n\t\tgameObjects.setKeyValue('game-cover-art', gameCover)\r\n\t\t// set sound fx\r\n\t\tgameObjects.setKeyValue('9mm-sound1', _9mm1)\r\n\t\tgameObjects.setKeyValue('9mm-sound2', _9mm2)\r\n\t\tgameObjects.setKeyValue('explosion1', explosion1)\r\n\t\tgameObjects.setKeyValue('distant-explosion', distant_explosion)\r\n\t\tgameObjects.setKeyValue('pistol-reload-sound', pistolReloadSnd)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body', bulletImpact_body)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body-sound', new Howl({src:[bulletImpact_body]}))\r\n\t\tgameObjects.setKeyValue('grenade-clink-sound', new Howl({ src: [grenadeClink] }))\r\n\t\tgameObjects.setKeyValue('throw-sound', new Howl({ src: [throwSound] }))\r\n\t\tgameObjects.setKeyValue('confirm-sound', new Howl({ src: [ confirmSound ] }))\r\n\t\tgameObjects.setKeyValue('coin-collect-sound', new Howl({ src: [ coinCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('ammo-collect-sound', new Howl({ src: [ ammoCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('item-collect-sound', new Howl({ src: [ itemCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('blood-squish-sound', new Howl({ src: [ bloodSquish ] }))\r\n\t\tgameObjects.setKeyValue('blood-squash-sound', new Howl({ src: [ bloodSquash ] }))\r\n\t\tgameObjects.setKeyValue('blood-smack-sound', new Howl({ src: [ bloodSmack ] }))\r\n\t\tgameObjects.setKeyValue('death-rip-sound', new Howl({ src: [ deathRipSound ] }))\r\n\t\tgameObjects.setKeyValue('jump-landing-sound', new Howl({ src: [ jumpLandingSound ] }))\r\n\t\tgameObjects.setKeyValue('dirt-impact-sound', new Howl({ src: [ dirtImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-hurt-sound', new Howl({ src: [ zombieHurtSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('zombie-death-sound', new Howl({ src: [ zombieDeathSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('pain1-sound', new Howl({ src: [ pain1Sound ] }))\r\n\t\tgameObjects.setKeyValue('pain2-sound', new Howl({ src: [ pain2Sound ] }))\r\n\t\tgameObjects.setKeyValue('player-death-sound', new Howl({ src: [ playerDeathSound ] }))\r\n\t\tgameObjects.setKeyValue('button-add-sound', new Howl({ src: [ buttonAddSound ] }))\r\n\t\tgameObjects.setKeyValue('button-subtract-sound', new Howl({ src: [ buttonSubtractSound ] }))\r\n\t\tgameObjects.setKeyValue('button-hover-sound', new Howl({ src: [ buttonHoverSound ] }))\r\n\t\tgameObjects.setKeyValue('button-click-sound', new Howl({ src: [ buttonClickSound ] }))\r\n\t\tgameObjects.setKeyValue('place-object-sound', new Howl({ src: [ placeObjectSound ] }))\r\n\t\tgameObjects.setKeyValue('button-cancel-sound', new Howl({ src: [ buttonCancelSound ] }))\r\n\t\tgameObjects.setKeyValue('purchase-sound', new Howl({ src: [ purchaseSound ] }))\r\n\t\tgameObjects.setKeyValue('shell-impact-sound', new Howl({ src: [ shellImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('health-pickup-sound', new Howl({ src: [ healthPickupSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-growl-sound', new Howl({ src: [ zombieGrowl ] }))\r\n\t\tgameObjects.setKeyValue('smg-fire-sound', new Howl({ src: [ smgFire ] }))\r\n\t\tgameObjects.setKeyValue('mag-drop-sound', new Howl({ src: [ magDrop ] }))\r\n\t\tgameObjects.setKeyValue('shot-shell-sound', new Howl({ src: [ shotShell ] }))\r\n\t\tgameObjects.setKeyValue('shotgun-blast-sound', new Howl({ src: [ shotgunBlast ] }))\r\n\t\tgameObjects.setKeyValue('achievement1-sound', new Howl({ src: [ achievement1 ] }))\r\n\t\tgameObjects.setKeyValue('achievement2-sound', new Howl({ src: [ achievement2 ] }))\r\n\t\tgameObjects.setKeyValue('achievement3-sound', new Howl({ src: [ achievement3 ] }))\r\n\t\tgameObjects.setKeyValue('charging-grenade-sound', new Howl({ src: [ chargingNade ] }))\r\n\t\tgameObjects.setKeyValue('jump-sound', new Howl({ src: [ jumpSound ] }))\r\n\t\t// updated zombie sprites\r\n\t\tgameObjects.setKeyValue('zombie-idle-sheet', loader.resources[zomb_idle_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-walk-sheet', loader.resources[zomb_walk_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack1-sheet', loader.resources[zomb_attack1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack2-sheet', loader.resources[zomb_attack2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-sheet', loader.resources[zomb_parts_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-gored-sheet', loader.resources[zomb_parts_gored_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-slash-fx-sheet', loader.resources[zomb_slash_fx_sheet].spritesheet)\r\n    gameObjects.setKeyValue('muzzle-flashes', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('sparks-sheet', loader.resources[sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('muzzle-sparks-sheet', loader.resources[muzzle_sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d1-sheet', loader.resources[explosion3d1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d2-sheet', loader.resources[explosion3d2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-1', loader.resources[blood_spurt_1].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-2', loader.resources[blood_spurt_2].spritesheet)\r\n    gameObjects.setKeyValue('blood-spurt-3', loader.resources[blood_spurt_3].spritesheet)\r\n    gameObjects.setKeyValue('explosion-assets-sheet', loader.resources[explosion_assets_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('wood-planks-sheet', loader.resources[wood_planks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('remote-mine-sheet', loader.resources[remote_mine_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('landmine-sheet', loader.resources[landmine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('clustermine-sheet', loader.resources[clustermine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-scan-sheet', loader.resources[turret_scan_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-shoot-sheet', loader.resources[turret_shoot_sheet].spritesheet)\r\n    gameObjects.setKeyValue('barriers-sheet', loader.resources[barriers_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('ground-fx-sheet', loader.resources[ground_effects_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('player-parts-sheet', loader.resources[char_parts].spritesheet)\r\n    gameObjects.setKeyValue('char-idle-sheet', loader.resources[char_idle_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-run-sheet', loader.resources[char_run_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-jump-sheet', loader.resources[char_jump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-pistol-sheet', loader.resources[char_reload_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-smg-sheet', loader.resources[char_reload_smg_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-shotgun-sheet', loader.resources[char_reload_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('left-arm-pistol-fire-sheet', loader.resources[left_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-pistol-fire-sheet', loader.resources[right_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('left-arm-smg-fire-sheet', loader.resources[left_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-smg-fire-sheet', loader.resources[right_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-pistol-sheet', loader.resources[melee_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-ump-sheet', loader.resources[melee_ump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-shotgun-sheet', loader.resources[melee_shotgun_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-pistol-sheet', loader.resources[grenade_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-ump-sheet', loader.resources[grenade_ump_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('grenade-shotgun-sheet', loader.resources[grenade_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('arms-fire-shotgun-sheet', loader.resources[arms_fire_shotgun].spritesheet)\r\n\t\t\r\n\t\t\r\n    let container = new PIXI.Container()\r\n\t\tcontainer.interactive = true\r\n\t\tcontainer.width = width\r\n\t\tcontainer.height = height\r\n\t\t\r\n    // make dedicated muzzle flashes for re-use instead of making a new image each time\r\n\t\tgameObjects.setKeyValue('muzzle-flashes-sheet', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n    \r\n\t\tlet ground = addGround()\r\n\t\tapp.stage.interactive = true\r\n\t\tapp.stage.addChild(container)\r\n\t\tcontainer.addChild(groundTex)\r\n    \r\n\t\tgameObjects.setKeyValue('pixi-app', app)\r\n\t\tgameObjects.setKeyValue('game-pixi-container', container)\r\n\t\t\r\n    gameObjects.setKeyValue('ammo-drops-by-type', {\r\n\t\t\t'pistol weapon': [],\r\n      'smg weapon': [],\r\n      'shotgun weapon': [],\r\n    })\r\n    gameObjects.setKeyValue('text-messages', [])\r\n    gameObjects.setKeyValue('reload-text-messages', [])\r\n\t\tgameObjects.setKeyValue('gibs', [])\r\n    gameObjects.setKeyValue('grenades', [])\r\n    gameObjects.setKeyValue('explosions', [])\r\n    gameObjects.setKeyValue('rocks', [])\r\n    gameObjects.setKeyValue('currency-drops', [])\r\n\t\tgameObjects.setKeyValue('pistol-shells', [])\r\n\t\tgameObjects.setKeyValue('pistol-bullets', [])\r\n\t\tgameObjects.setKeyValue('build-objects', [])\r\n\t\tgameObjects.setKeyValue('bullet-impacts', [])\r\n\t\tgameObjects.setKeyValue('wood-planks', [])\r\n\t\tgameObjects.setKeyValue('spark-sprites', [])\r\n\t\tgameObjects.setKeyValue('explosion-sprites', [])\r\n\t\tgameObjects.setKeyValue('remote-mines', {})\r\n\t\tgameObjects.setKeyValue('remote-mines-array', [])\r\n\t\tgameObjects.setKeyValue('static-ground-effects', [])\r\n\t\tgameObjects.setKeyValue('zombie-ragdolls', [])\r\n\t\tgameObjects.setKeyValue('zombies', [])\r\n\t\tgameObjects.setKeyValue('health-drops', [])\r\n\t\t\r\n\t\tgameObjects.setKeyValue('wall-tile', wallTile)\r\n\t\tgameObjects.setKeyValue('ground', ground)\r\n\t\tgameObjects.setKeyValue('ground-texture', groundTex)\r\n\t\tgameObjects.setKeyValue('game-width', width)\r\n\t\tgameObjects.setKeyValue('game-height', height)\r\n\t\tgameObjects.setKeyValue('world-width', worldWidth)\r\n\t\tgameObjects.setKeyValue('world', world)\r\n\t\tgameObjects.setKeyValue('render', render)\r\n\t\tgameObjects.setKeyValue('engine', engine)\r\n\t\tlet screenUI = new ScreenUI()\r\n\t\tgameObjects.setKeyValue('screen-ui', screenUI)\r\n\t\tgameObjects.setKeyValue('weapons-ui', new WeaponsUI())\r\n\t\tlet player = new Player()\r\n\t\tgameObjects.setKeyValue('player', player)\r\n\t\t\r\n\t\tfunction buildMenu () {\r\n\t\t\t// create a PIXI menu\r\n\t\t\tlet menu = new PIXI.Container()\r\n\t\t\t// let menuBG = new PIXI.Graphics()\r\n\t\t\t// menuBG.beginFill(0x222222)\r\n\t\t\t// menuBG.drawRect(0, 0, width, height)\r\n\t\t\t// gameCover.width = gameCover.width * .5\r\n\t\t\t// gameCover.height = gameCover.height * .5\r\n\t\t\tgameCover.pivot.x = gameCover.width *  .5\r\n\t\t\tgameCover.pivot.y = gameCover.height *  .5\r\n\t\t\tgameCover.scale.x = .51\r\n\t\t\tgameCover.scale.y = .51\r\n\t\t\tcontainer.alpha = 0\r\n\t\t\tmenu.addChild(\r\n\t\t\t\tgameCover\r\n\t\t\t)\r\n\t\t\t// gameCover.on('added', () => {\r\n\t\t\t// })\r\n\t\t\tcontainer.alpha = 1\r\n\t\t\tmenu.interactive = true\r\n\t\t\tlet playBtn = new PIXI.Container()\r\n\t\t\tlet playBtnGfc = new PIXI.Graphics()\r\n\t\t\tplayBtnGfc.beginFill(0x555555)\r\n\t\t\tplayBtnGfc.drawRect(0, 0, 250, 80)\r\n\t\t\tlet playBtnTxt = new PIXI.Text('Play', {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 36,\r\n\t\t\t\tfill: 0xFFFFFF\r\n\t\t\t})\r\n\t\t\tplayBtn.addChild(playBtnGfc, playBtnTxt)\r\n\t\t\tfunction positionPlayButton() {\r\n\t\t\t\tplayBtn.position.x = width/2 - playBtn.width/2\r\n\t\t\t\tplayBtn.position.y = height/2 - playBtn.height/2\r\n\t\t\t}\r\n\t\t\tpositionPlayButton()\r\n\t\t\tplayBtnTxt.position.x = playBtn.width/2 - playBtnTxt.width/2\r\n\t\t\tplayBtnTxt.position.y = playBtn.height/2 - playBtnTxt.height/2\r\n\t\t\tplayBtn.interactive = true\r\n\t\t\tplayBtn.on('click', () => {\r\n\t\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\tdispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n\t\t\t\tdispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseover', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.05, y: 1.05, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseout', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.00, y: 1.00, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\t// menu.addChild(playBtn) -- remove pixi main menu button \r\n\t\t\tapp.stage.addChild(menu)\r\n\t\t\tgameObjects.setKeyValue('main-menu', menu)\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmenu\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet { menu: mainMenu } = buildMenu()\r\n\r\n\t\tEvents.on(engine, 'tick', e => {\r\n\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\r\n\t\t\tif (mainMenu.visible === true) {\r\n\t\t\t\tmainMenu.visible = false\r\n\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t// app.view.style.opacity = .75\r\n\t\t\t}\r\n\t\t\tif (gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW) {\r\n        if (mainMenu.visible === false) {\r\n          mainMenu.visible = true\r\n\t\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t\t// app.view.style.opacity = .85\r\n\t\t\t\t}\r\n      }\r\n      if (gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW || gameState === GameStates.PAUSE || gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameState === GameStates.SHOP_MENU || gameState === GameStates.BUILD_MENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n        document.body.style.cursor = 'auto'\r\n        document.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n      } else {\r\n        document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n      }\r\n      if (gameState === GameStates.GAMEPLAY) {\r\n        if (gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n          document.body.style.cursor = 'auto'\r\n        } else {\r\n          document.body.style.cursor = 'none'\r\n        }\r\n\t\t\t}\r\n      \r\n      gameTickHandler(e, gameObjects)\r\n\r\n\t\t})\r\n\r\n\t\tEvents.on(engine, 'collisionStart', e => {\r\n\t\t\tlet { game: { gameState } } = getState()\r\n\t\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\t\tfor (let i = 0; i < e.pairs.length; ++i) {\r\n\t\t\t\t\tcheckCollisionStart(e, i, gameObjects)\r\n\t\t\t\t}\r\n\t\t\t}\r\n    })\r\n    \r\n\t}\r\n\r\n}\r\n","// anything that we can't manage with redux will go here,\r\n// meaning full objects and functions with methods for\r\n// manipulating Matter objects\r\nexport default function createGameObjects() {\r\n\tlet state = new State()\r\n\tfunction State() {\r\n\t\tthis.state = {}\r\n\t\tthis.getKeyValue = key => {\r\n      if (this.state[key]) {\r\n        return this.state[key]\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n\t\tthis.setKeyValue = (key, value) => {\r\n      this.state[key] = value\r\n      return this.state[key]\r\n    }\r\n\t\tthis.getFullState = () => { return this.state }\r\n\t\tthis.setFullState = (obj) => { this.state = obj }\r\n\t}\r\n\treturn state\r\n}\r\n","import { batch } from 'react-redux'\r\nimport store from '../../../app/store'\r\nimport { setZombiesOnStage, incrementWave, setWaveCountToDefeat, decrementZombieAttackTimeLimit, incrementZombieHealth, updateZombieWalkSpeed, updateZombieAttackDmg } from '../gameSlice'\r\nimport { createWaveMessage } from '../createMessages'\r\nimport { GenerateZombies } from '../items/ItemGenerators'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { resetWave } from '../ReactComponents/PauseMenu'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const startWave = () => {\r\n\r\n  if (getState().game.waveNum === 0) {\r\n    dispatch(incrementWave())\r\n  }\r\n\r\n  const start = () => {\r\n    let { waveNum } = getState().game\r\n    batch(() => {\r\n      dispatch( updateZombieWalkSpeed( waveNum ) )\r\n      dispatch( updateZombieAttackDmg( waveNum ) )\r\n      dispatch( decrementZombieAttackTimeLimit( waveNum ) )\r\n      dispatch( incrementZombieHealth( waveNum ) )\r\n      dispatch( setWaveCountToDefeat( waveNum ) )\r\n    })\r\n    GenerateZombies( waveNum )\r\n  }\r\n\r\n  if (\r\n    getState().game.gameState === GameStates.GAMEPLAY &&\r\n    getState().game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU &&\r\n    getState().game.gameSubState !== SubStates.WAVE_DEFEATED\r\n    ) {\r\n    start()\r\n    setTimeout(() => {\r\n      if (getState().game.zombiesOnStage === 0) {\r\n        start()\r\n      }\r\n    }, 1000)\r\n  } else {\r\n    setTimeout(start, 3000)\r\n  }\r\n\r\n}\r\n\r\nconst clearGameObjects = () => {\r\n  // destroy current renderable objects \r\n  let { gameObjects } = window\r\n  let credits = gameObjects.getKeyValue('currency-drops')\r\n  let healthdrops = gameObjects.getKeyValue('health-drops')\r\n  let pistolAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_PISTOL]\r\n  let smgAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SMG]\r\n  let shotgunAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SHOTGUN]\r\n  credits.forEach(credit => { credit.destroy() })\r\n  pistolAmmoDrops\r\n    .concat(smgAmmoDrops)\r\n    .concat(shotgunAmmoDrops)\r\n    .forEach(ammo => { ammo.destroy() })\r\n  healthdrops.forEach(health => { health.destroy() })\r\n}\r\n\r\nexport const waveDefeated = () => {\r\n  resetWave()\r\n  dispatch( setZombiesOnStage(0) )\r\n  dispatch( setWaveCountToDefeat(null) )\r\n  createWaveMessage('Wave Defeated!')\r\n  // window.TweenLite.delayedCall(30, clearGameObjects)\r\n  updateScore( getState().game.scoreAmounts.waveCompleted * getState().game.waveNum )\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { SubStates } from '../constants/GameStates'\r\nimport { addPurchase, decrementWave, setZombiesOnStage, gameStateTransition, setWaveCountToDefeat, subtractFromTotalCredits } from '../gameSlice'\r\nimport MenuComponents from './MenuComponents'\r\nimport { gotoMainMenu, resetWave } from './PauseMenu'\r\nimport { CustomMenuButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n  \r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const lastGameSubState = useSelector(state => state.game.lastGameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const respawnCost = useSelector(state => state.game.respawnCost)\r\n  const respawnToShopCost = useSelector(state => state.game.respawnToShopCost)\r\n  const waveNum = useSelector(state => state.game.waveNum)\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>\r\n          {\r\n            credits >= respawnToShopCost ? 'Respawn Menu'\r\n            : 'Game Over'\r\n          }\r\n        </MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n          {\r\n            credits >= respawnCost || lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={240}\r\n              onClick={() => {\r\n                screenUI.respawn()\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU && lastGameSubState !== SubStates.PLAYER_RESPAWN && lastGameSubState !== SubStates.WAVE_STARTED) {\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n                }\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n                  dispatch( subtractFromTotalCredits(respawnCost) )\r\n                }\r\n                dispatch( addPurchase('Respawn', respawnCost) )\r\n              }}>\r\n                Respawn? { lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ? '' : `$${respawnCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          {\r\n            credits >= respawnToShopCost && waveNum > 0 && lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={360}\r\n              onClick={() => {\r\n                resetWave()\r\n                batch(() => {\r\n                  dispatch( setZombiesOnStage(0) )\r\n                  dispatch( setWaveCountToDefeat(null) )\r\n                  dispatch( decrementWave() )\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU) )\r\n                  dispatch( subtractFromTotalCredits(respawnToShopCost) )\r\n                  dispatch( addPurchase('Shop Respawn', respawnToShopCost) )\r\n                })\r\n              }}>\r\n                Restart Current Wave from Shop? { `$${respawnToShopCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          <MenuComponents.MenuButtonSpacer>\r\n            <CustomMenuButton\r\n            onClick={gotoMainMenu}>\r\n              Go to Main Menu\r\n            </CustomMenuButton>\r\n          </MenuComponents.MenuButtonSpacer>\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\nimport { gameStateTransition, setSelectedBarrierToBuild, setSelectedTrapToBuild } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { barrierTypes, trapTypes } from '../constants/buildTypes'\r\nimport { CustomMenuButton, BackButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const BuildMenuStates = {\r\n    MAIN: 'main',\r\n    BARRIERS: 'barriers',\r\n    TRAPS: 'traps'\r\n  }\r\n  const [buildMenuState, setBuildMenuState] = React.useState(BuildMenuStates.MAIN)\r\n  const barrierCosts = useSelector(state => state.game.barriers.costToBuild)\r\n  const trapCosts = useSelector(state => state.game.traps.costToBuild)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const showBarriersSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.BARRIERS\r\n    )\r\n  }\r\n\r\n  const showTrapsSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.TRAPS\r\n    )\r\n  }\r\n\r\n  const backToBuildMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.MAIN\r\n    )\r\n  }\r\n\r\n  const gotoPlacementMode = () => {\r\n    let screenUI = gameObjects.getKeyValue('screen-ui')\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.BUILD_PLACEMENT_MODE)\r\n    )\r\n  }\r\n\r\n  const replaceCursorWithObjectToPlace = () => {\r\n    let crosshair = gameObjects.getKeyValue('crosshair')\r\n    crosshair.buildArrow(0xFFFFFF)\r\n  }\r\n  \r\n  const chooseBarrier = filteredType => {\r\n    if (credits >= barrierCosts[filteredType]) {\r\n      dispatch( setSelectedBarrierToBuild(filteredType) )\r\n      dispatch( setSelectedTrapToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n  \r\n  const chooseTrap = filteredType => {\r\n    if (credits >= trapCosts[filteredType]) {\r\n      dispatch( setSelectedTrapToBuild(filteredType) )\r\n      dispatch( setSelectedBarrierToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        {\r\n          buildMenuState === BuildMenuStates.TRAPS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Traps</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.BARRIERS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Barriers</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                <MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.MAIN ?\r\n            <>\r\n              <MenuComponents.MenuTitle>Build Menu</MenuComponents.MenuTitle>\r\n              <MenuComponents.MenuButtonContainer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showBarriersSubMenu }>\r\n                        Barriers\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showTrapsSubMenu }>\r\n                        Traps\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToShopQuery }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n              </MenuComponents.MenuButtonContainer>\r\n            </>\r\n          : null\r\n        }\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nposition: absolute;\r\nbottom: 0;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nbackground-color: #333;\r\nopacity: .8;\r\n`\r\n\r\nexport default () => {\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <MenuButton bgcolor={'#555'} width={500} height={40}>Done Placing Barriers/Traps: Press [ B ]</MenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","// React\r\nimport React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport buildGame from './buildGame'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { startWave, waveDefeated } from './waves/waveManager'\r\nimport { updateWeaponsUI } from './ui/WeaponsUI'\r\nimport { createGenericMessage } from './createMessages'\r\nimport { addToTotalCredits, gameStateTransition, setWeaponEquipped, loadLocalStorageState } from './gameSlice'\r\nimport PauseMenu, { gotoMainMenu } from './ReactComponents/PauseMenu'\r\nimport ShopMenu, { CornerBackButton, Inline } from './ReactComponents/ShopMenu'\r\nimport ShopQuery from './ReactComponents/ShopQuery'\r\nimport RespawnMenu from './ReactComponents/RespawnMenu'\r\nimport BuildMenu from './ReactComponents/BuildMenu'\r\nimport DoneBarrierPlacementBanner from './ReactComponents/DoneBarrierPlacementBanner'\r\nimport MenuComponents from './ReactComponents/MenuComponents'\r\nimport { NoTransitionButton } from './ReactComponents/PauseMenu'\r\nimport AchievementsView from './ReactComponents/AchievementsView'\r\nimport { motion } from 'framer-motion'\r\nimport Axios from 'axios'\r\n\r\nconst useScores = (initial) => {\r\n\r\n  const [scores, setScores] = React.useState(initial)\r\n\r\n  return [\r\n    scores,\r\n    setScores\r\n  ]\r\n\r\n}\r\n\r\nexport const ScoresView = (scores) => {\r\n\r\n  return (\r\n    <MenuComponents.Container>\r\n      <MenuComponents.MenuTitle>Top 100 Scores of All-time</MenuComponents.MenuTitle>\r\n      <MenuComponents.MenuButtonContainer\r\n      style={{\r\n        height: 470,\r\n        overflow: 'scroll',\r\n      }}\r\n      >\r\n        {\r\n          scores && scores.scores && scores.scores\r\n          .sort((a, b) => b.score - a.score)\r\n          .map(score => (\r\n            <>\r\n              <NoTransitionButton\r\n              bgcolor={ 'rgba(0, 0, 0, 0.25)' }\r\n              hovercolor={ 'rgba(0, 0, 0, 0.35)' }\r\n              bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n              hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n              >\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    { score.name }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: 0,\r\n                    right: 0,\r\n                  }}>\r\n                    { score.score }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    right: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    {\r\n                      (() => {\r\n                        let date = score.time.substr(0, score.time.indexOf('T'))\r\n                        let year = date.substr(0, score.time.indexOf('-'))\r\n                        let dateNoYear = date.substr(score.time.indexOf('-') + 1, date.length)\r\n                        return (\r\n                          `${dateNoYear} - ${year}`\r\n                        )\r\n                      })()\r\n                    }\r\n                  </div>\r\n                </Inline>\r\n              </NoTransitionButton>            \r\n            </>\r\n          ))\r\n        }\r\n      </MenuComponents.MenuButtonContainer>\r\n      <MenuComponents.MenuButtonContainer>\r\n        <CornerBackButton\r\n        marginTop={'-60px'}\r\n        onClick={ gotoMainMenu } />\r\n      </MenuComponents.MenuButtonContainer>\r\n    </MenuComponents.Container>\r\n  )\r\n\r\n}\r\n\r\nexport default function Game () {\r\n\r\n\tconst { gameObjects, TweenLite: { delayedCall } } = window\r\n\tconst dispatch = useDispatch()\r\n\tconst game = useSelector(state => state.game)\r\n  const weaponEquipped = useSelector(state => state.game.player.weapons.equipped)\r\n  const waitInterval = React.useRef(null)\r\n  const cancelWaveStart = React.useRef(false)\r\n  const [scores, setScores] = useScores([])\r\n  const [animateScore, setAnimateScore] = useState(false)\r\n  // const [upgradeToggleAnimate, setUpgradeToggleAnimate] = useState(false)\r\n  const [runUpgraded, setRunUpgraded] = useState(false)\r\n  const [reloadUpgraded, setReloadUpgraded] = useState(false)\r\n  const [jumpUpgraded, setJumpUpgraded] = useState(false)\r\n  const [meleeUpgraded, setMeleeUpgraded] = useState(false)\r\n  const [defenseUpgraded, setDefenseUpgraded] = useState(false)\r\n  // const equipped = useSelector(state => state.game.player.weapons.equipped)\r\n\r\n\t// one-time methods and non-react code will go here\r\n\tReact.useEffect(() => {\r\n\r\n    buildGame()\r\n    // dispatch(\r\n    //   loadLocalStorageState()\r\n    // )\r\n\r\n\t}, []) // do once\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\t// on weapon toggle change..\r\n\t\tupdateWeaponsUI()\r\n\r\n\t}, [weaponEquipped])\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_STARTED) {\r\n\t\t\tconsole.log('wave starting..')\r\n      startWave()\r\n\t\t}\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_DEFEATED) {\r\n\t\t\tconsole.log('wave defeated')\r\n\t\t\twaveDefeated()\r\n    }\r\n    \r\n    if (game.gameSubState === SubStates.WAITING) {\r\n      let countdown = 3, timeInt = 500\r\n      cancelWaveStart.current = false\r\n      waitInterval.current = setInterval(() => {\r\n        createGenericMessage(`${countdown}`, '#FFFFFF', .25, .5)\r\n        countdown -= 1\r\n      }, timeInt)\r\n      delayedCall((timeInt/1000) * 4, () => {\r\n        if (!cancelWaveStart.current) {\r\n          clearInterval(waitInterval.current)\r\n          dispatch(gameStateTransition('sub', game.gameSubState, SubStates.WAVE_STARTED))\r\n        }\r\n      })\r\n    }\r\n\r\n    if (game.gameSubState === SubStates.PLAYER_DEATH) {\r\n      clearInterval(waitInterval.current)\r\n      cancelWaveStart.current = true\r\n\t\t\tcreateGenericMessage('You died.', '#FF0000', .75, 3)\r\n    }\r\n    \r\n  }, [game.gameSubState, delayedCall, dispatch])\r\n  \r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.waveCountToDefeat === 0 && game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n\t\t\twaveDefeated()\r\n\t\t}\r\n\r\n\t}, [game.waveCountToDefeat, game.lastGameSubState, game.gameSubState, dispatch])\r\n\t\r\n\tReact.useEffect(() => {\r\n\r\n    console.log('Game state has changed')\r\n\r\n    if (game.gameState === GameStates.SHOP_MENU || game.gameState === GameStates.BUILD_MENU) {\r\n      let screenUI = gameObjects.getKeyValue('screen-ui')\r\n      screenUI.pause()\r\n    }\r\n    \r\n    if (game.gameState === GameStates.MAIN_MENU || game.gameState === GameStates.GAMEPLAY) {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n    } else {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n    }\r\n\r\n\t\tif (game.gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (game.player.weapons.equipped === null) {\r\n\t\t\t\tdispatch(setWeaponEquipped('pistol weapon'))\r\n\t\t\t}\r\n    }\r\n\r\n  }, [game.gameState, game.player.weapons.equipped, gameObjects, dispatch])\r\n\r\n  React.useEffect(() => {\r\n    if (game.purchases !== null && game.lastPurchase && game.lastPurchase.item !== null && game.lastPurchase.amount > 0) {\r\n      let snd = window.gameObjects.getKeyValue('purchase-sound')\r\n      snd.play()\r\n      let confirm = window.gameObjects.getKeyValue('confirm-sound')\r\n      confirm.play()\r\n      toast.dark(`You bought ${game.lastPurchase.item} for $${game.lastPurchase.amount}`, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    }\r\n    console.log(game.lastPurchase)\r\n  }, [ game.purchases, game.lastPurchase ])\r\n\r\n  React.useEffect(() => {\r\n    if (game.lastAchievementEarned !== null) {\r\n      let snd = window.gameObjects.getKeyValue('achievement2-sound')\r\n      snd.play()\r\n      toast.warning(`Achievement Earned: ${game.lastAchievementEarned}`, {\r\n        position: \"top-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n      dispatch(\r\n        addToTotalCredits( 500 )\r\n      )\r\n    }\r\n  }, [ game.achievements, game.lastAchievementEarned ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    let isErr\r\n    if (game.gameState === GameStates.SCORES_VIEW) {\r\n      Axios.get('http://localhost:8080/scores')\r\n      .catch(err => {\r\n        console.log(err)\r\n        isErr = true\r\n      })\r\n      .then(scores => {\r\n        if (isErr) {\r\n          console.log('api is on a different port, use yarn build to view working scores')\r\n        } else {\r\n          setScores( scores.data )\r\n        }\r\n      })\r\n    }\r\n\r\n  }, [ game.gameState ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    setAnimateScore(true)\r\n    delayedCall(.1, () => { setAnimateScore(false) })\r\n\r\n  }, [ game.scoreToggle ])\r\n\r\n  React.useEffect(() => {\r\n    setRunUpgraded(true)\r\n    delayedCall(.25, () => { setRunUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.run.current ])\r\n\r\n  React.useEffect(() => {\r\n    setReloadUpgraded(true)\r\n    delayedCall(.25, () => { setReloadUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.reload.current ])\r\n\r\n  React.useEffect(() => {\r\n    setJumpUpgraded(true)\r\n    delayedCall(.25, () => { setJumpUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.jump.current ])\r\n\r\n  React.useEffect(() => {\r\n    setMeleeUpgraded(true)\r\n    delayedCall(.25, () => { setMeleeUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.melee.current ])\r\n\r\n  React.useEffect(() => {\r\n    setDefenseUpgraded(true)\r\n    delayedCall(.25, () => { setDefenseUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.defense.current ])\r\n\r\n\treturn (\r\n\t\t<>\r\n      <ToastContainer />\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SCORES_VIEW ?\r\n          <ScoresView scores={ scores } />\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.MAIN_MENU && window.gameObjects ?\r\n          <>\r\n            <PauseMenu\r\n            margintop={ true }\r\n            hidetitle={ true }\r\n            hidebg={ false }\r\n            bgcolor={ '#222' }\r\n            playbtn={ true }\r\n            />\r\n          </>\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.BUILD_PLACEMENT_MODE && game.gameState === GameStates.GAMEPLAY\r\n          ?\r\n            <>\r\n              <DoneBarrierPlacementBanner />\r\n            </>\r\n          : null \r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          gameObjects && game.gameState === GameStates.PAUSE\r\n          ? <PauseMenu shop-query-visibility={ game.gameSubState === SubStates.SHOP_QUERY_SUBMENU } />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SHOP_MENU\r\n          ? <ShopMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.BUILD_MENU\r\n          ? <BuildMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.SHOP_QUERY_SUBMENU\r\n          ? <ShopQuery />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.PLAYER_DEATH\r\n          ? <RespawnMenu />\r\n          : null\r\n        }\r\n      </>\r\n      \r\n      <>\r\n        {\r\n          /* Wave count and zombies to defeat */\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div\r\n          style={{\r\n            backgroundColor: '#333',\r\n            position: 'absolute',\r\n            margin: 'auto',\r\n            width: '50%',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n            top: '4px',\r\n            left: 0, right: 0,\r\n            textAlign: 'center',\r\n            borderRadius: '2px'\r\n          }}>\r\n            <div style={{ display: 'inline-block' }} className='debug-ui'>\r\n              wave no: {game.waveNum}\r\n            </div>\r\n            <div style={{ marginLeft: '100px', display: 'inline-block' }} className='debug-ui'>\r\n              enemies to defeat: {game.waveCountToDefeat}\r\n            </div>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <motion.div\r\n            className='game-score'\r\n            animate={{\r\n              scale: animateScore ? [ 1.35, 1.0 ] : 1.0\r\n            }}\r\n            transition={{\r\n              duration: .35\r\n            }}\r\n            >\r\n              {\r\n                <span\r\n                style={{\r\n                  color: (\r\n                    game.score < game.prevScore ? 'red'\r\n                    : game.score > game.prevScore ? '#00FF61'\r\n                    : 'white'\r\n                  )\r\n                }}>\r\n                  {\r\n                    game.score\r\n                  }\r\n                </span>\r\n              }\r\n            </motion.div>\r\n          : null\r\n        }\r\n        <div\r\n        className={ game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ? 'player-attributes' : '' }>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <>\r\n            <div className={ reloadUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Reload Lvl. { game.player.upgradeTiers['reload'].current }\r\n            </div>\r\n            <div className={ runUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Run Lvl. { game.player.upgradeTiers['run'].current }\r\n            </div>\r\n            <div className={ jumpUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Jump Lvl. { game.player.upgradeTiers['jump'].current }\r\n            </div>\r\n            <div className={ defenseUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Defense Lvl. { game.player.upgradeTiers['defense'].current }\r\n            </div>\r\n            <div className={ meleeUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Melee Lvl. { game.player.upgradeTiers['melee'].current }\r\n            </div>\r\n          </>\r\n          : null\r\n        }\r\n        </div>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <div className='total-ammo-count-ui'>\r\n              {\r\n                game.player.weapons.totalAmmo[\r\n                  game.player.weapons.equipped\r\n                ]\r\n              }\r\n            </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div className='total-credits-ui'>\r\n            credits: <span style={{ color: '#71DD4D' }}>${ game.player.credits }</span>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW && weaponEquipped ?\r\n          <div className='weapon-stats'>\r\n            <div className='weapon-stats-item'>ROF: { game.player.modTiers['rof'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>PWR: { game.player.modTiers['powder'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>ACC: { game.player.modTiers['sight'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>CAP: { game.player.modTiers['mag'][weaponEquipped].current }</div>\r\n          </div>\r\n          : null\r\n        }\r\n      </>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n","import React from 'react';\r\nimport Game from './features/game/Game'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\t\t\t\t<Game />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}