{"version":3,"sources":["images/pistol-icon.png","images/smg-icon.png","images/shotgun-icon.png","images/GroundTexture_Optimized.png","images/wallTile.png","images/gradient-layer-mask.png","images/explosiveBarrier.png","images/head-sprite.png","sounds/bodyBulletImpact.wav","images/GameCover.png","sounds/9mm1.wav","sounds/9mm2.mp3","sounds/explosion1.wav","sounds/explosion_distant.wav","sounds/pistolReload.wav","sounds/grenadeClink.wav","sounds/throw.wav","sounds/coinCollect.wav","sounds/collectAmmo.wav","sounds/collectItem.wav","sounds/bloodSquash.flac","sounds/bloodSquish.wav","sounds/bloodSmack.wav","sounds/deathRipSound.wav","sounds/jumpLanding.wav","sounds/dirtImpact.wav","sounds/zombieHurt.wav","sounds/zombieDeath.wav","sounds/pain1.wav","sounds/pain2.wav","sounds/playerDeath.wav","sounds/buttonAdd.wav","sounds/buttonSubtract.wav","sounds/buttonClick.wav","sounds/buttonHover.wav","sounds/placeObject.flac","sounds/cancelSound.wav","sounds/moneySound.wav","sounds/purchase.wav","sounds/shellImpact.wav","sounds/health.wav","sounds/zombieGrowl.wav","sounds/smgFire.wav","sounds/magDrop.wav","sounds/shotShell.wav","sounds/shotgunBlast.wav","sounds/achievement1.wav","sounds/achievement2.mp3","sounds/achievement3.wav","sounds/jumpSound.wav","sounds/grenadeCharge.wav","features/game/constants/GameStates.js","app/initialState.js","features/game/constants/weapons.js","features/game/gameSlice.js","app/store.js","features/game/utils/Utils.js","features/game/constants/mouseStates.js","features/game/collisionOptions.js","features/game/ReactComponents/MenuComponents.js","features/game/utils/updateScore.js","features/game/ReactComponents/ShopMenu.js","features/game/ReactComponents/AchievementsView.js","features/game/ReactComponents/PauseMenu.js","features/game/createMessages.js","features/game/items/Gib.js","features/game/player/PlayerRagdoll.js","features/game/FX/BloodSpurt.js","features/game/constants/DeathTypes.js","features/game/items/Rock.js","features/game/items/WoodPlank.js","features/game/FX/ExplosionSprite.js","features/game/FX/GrenadeExplosion.js","features/game/BuildItems/WallBarrier.js","features/game/BuildItems/Landmine.js","features/game/items/Grenade.js","features/game/BuildItems/Clustermine.js","features/game/constants/buildTypes.js","features/game/BuildItems/RemoteMine.js","features/game/player/fireWeapons.js","features/game/FX/MuzzleFlashFX.js","features/game/BuildItems/MachineGunTurret.js","features/game/FX/Sparks.js","features/game/utils/saveGame.js","features/game/ReactComponents/ShopQuery.js","features/game/player/Player.js","features/game/player/crosshairs.js","features/game/FX/GroundEffect.js","features/game/engineHandlers.js","features/game/WallTile.js","features/game/ui/WeaponsUI.js","features/game/items/HealthDrop.js","features/game/items/AmmoDrop.js","features/game/enemies/Zombie.js","features/game/items/CurrencyCredit.js","features/game/items/ItemGenerators.js","features/game/ui/ScreenUI.js","features/game/buildGame.js","features/game/createGameObjects.js","features/game/waves/waveManager.js","features/game/ReactComponents/RespawnMenu.js","features/game/ReactComponents/BuildMenu.js","features/game/ReactComponents/DoneBarrierPlacementBanner.js","features/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SubStates","GameStates","MAIN_MENU","GAMEPLAY","PAUSE","IN_GAME_MENU","GAMEOVER","SHOP_MENU","BUILD_MENU","SCORES_VIEW","width","height","keys","score","prevScore","lvlToWin","scoreToggle","scoreAmounts","zombie","meleeConnect","zombieStreakBonus","zombieKnockedOffStage","headShot","collectCredit","collectHealth","collectAmmo","waveCompleted","achievement","penalties","respawn","killed","damageTaken","achievements","owned","description","stats","zombiesKilled","bulletsFired","timesReloaded","grenadesThrown","timesKilled","timesRespawned","itemsPickedUp","creditsEarned","storePurchases","trapsBuilt","barriersBuilt","meleeKills","mineKills","trapsPlaced","barriersPlaced","turretKills","damageDealt","trapTypesPlaced","barrierTypesPlaced","lastAchievementEarned","lastMagDropped","consecutiveGrenadeKills","lastGrenadeKill","zombieLastKilled","filterEffects","displayZombieHealth","rightMouseDown","mouseState","x","y","btn","mousePosition","mouseRelativeToPlayerPosition","textures","gameState","lastGameState","gameSubState","lastGameSubState","waveNum","waveCountToDefeat","zombiesOnStage","showingMessage","respawnCost","respawnToShopCost","purchases","lastPurchase","item","amount","player","perks","magnetism","cost","magDmg","lastBullet","creditDropper","ammoDropper","healthDropper","quickTurret","barrierPlus","cluck","health","credits","position","compositeId","composite","headId","bodyId","armId","weapons","list","equipped","grenadeChargeRate","grenadeUpperForceThreshold","grenadeFuseTime","default","grenadeExplosionSize","laser","meleeDamage","damage","min","max","shotLimiter","ammoCapacity","totalAmmo","ammoCostPerBox","lastShot","reloadSpeed","reloadAnimationFrames","bulletVariance","bulletForce","shellEjectionForce","shellRemovalTimeout","buyWeapons","constants","variables","magnetismSpeed","currentDirection","lastDirection","jumping","jumpForce","defense","acceleration","deceleration","upgradeTiers","run","current","jump","reload","melee","upgradeCosts","upgradeAmounts","modTiers","rof","powder","sight","mag","modCosts","modAmounts","barriers","selectedBarrier","costToBuild","traps","turret","fireDistance","cooldown","selectedTrap","enemies","zombies","attackDmg","attackDmgDefault","attackIncrementer","walkSpeed","walkSpeedDefault","walkSpeedIncrementer","zombieAttackLimiter","zombieAttackDefaultLimiter","zombieAttackLimiterDecrementer","zombieAttackDistance","defaultHealth","startingHealth","healthIncrementer","onRight","onLeft","consumables","healthkit","full","AchievementDefs","StatsDefs","gameSlice","createSlice","name","initialState","reducers","loadLocalStorageState","state","localStorage","getItem","JSON","parse","setTrapTypePlaced","action","payload","setBarrierTypePlaced","setLastMagDropped","increaseStats","increaseStatsByAmount","reducer","type","prepare","setLastGrenadeKill","resetConsecutiveGrenadeKills","setZombieLastKilled","flipScoreToggle","increaseScore","decreaseScore","updatePrevScore","addPurchase","setZombiesOnLeft","setZombiesOnRight","setRightMouseDown","attachMod","modType","wepType","Math","round","setPlayerCompositeId","console","log","setKeyPress","push","removeKeyPress","splice","indexOf","parseInt","setLastDirection","setCurrentDirection","setJumping","setGroundId","groundId","setMousePosition","setMouseStateX","setMouseStateY","setMouseButtonState","setWeaponEquipped","setLastShot","dateTimeObject","weapon","setMouseRelativeToPlayerPosition","setCompositeBodyIds","setStaticGunAngle","staticGunAngle","setStaticGunAngleState","staticGun","setTexturePath","textureName","texturePath","gameStateTransition","from","to","incrementWave","decrementWave","setWaveCountToDefeat","incrementWaveCountToDefeat","decrementWaveCountToDefeat","setWeaponsList","setShowingMessage","unsetAllKeys","resetPlayerVariables","Object","assign","decrementTotalAmmo","addToTotalAmmo","updateAmmoCapacity","newCapacityAmount","setPlayerPosition","addToTotalCredits","subtractFromTotalCredits","upgradeRunSpeed","upgradeReloadSpeed","upgradeJumpForce","upgradeDefense","upgradeMelee","updatePlayerHealth","decrementGrenadeCount","incrementGrenadeCount","updateZombieWalkSpeed","incrementer","updateZombieAttackDmg","decrementZombieAttackTimeLimit","showLaserSight","incrementZombieHealth","setSelectedBarrierToBuild","setSelectedTrapToBuild","setLastWaveCountDefeated","lastWaveCountDefeated","incrementZombiesOnStage","setZombiesOnStage","updateWeaponsList","setPlayerMagnetism","range","speed","setPlayerMagDamage","setPlayerLastBullet","setPlayerCreditDropper","setPlayerAmmoDropper","setPlayerHealthDropper","setPlayerQuickTurret","setPlayerBarrierPlus","setPlayerFusterCluck","toggleFilterEffects","toggleZombieHealthDisplay","setAchievementOwned","actions","store","configureStore","game","subscribe","getState","window","TweenLite","makePixiSprite","stringIdentifier","PIXI","getBodyWidth","body","bounds","getBodyHeight","getPlayerPartByType","gameObjects","gunId","world","getKeyValue","Composite","get","getPlayerBody","GREATER_THAN_PLAYER_X_POS","playerCollisionOptions","group","category","mask","enemyCollisionOptions","itemCollisionOptions","Container","styled","div","props","Backing","opacity","bgcolor","MenuTitle","MenuButtonContainer","MenuButton","cancelTransition","MenuButtonSpacer","updateScore","dispatch","delayedCall","subtractScore","MenuComponents","Inline","IncrementDecrement","AmmoCount","CustomMenuButton","bordercolor","hovercolor","hoverborder","style","onClick","play","onMouseOver","children","BackButton","borderRadius","arrowOnly","fontSize","CornerBackButton","top","right","marginTop","Modal","label","labelClr","clickConfirmHandler","clickCancelHandler","boxShadow","color","space-top","display","marginRight","AmmoSubMenu","toDefaultSubMenu","toAmmoSubMenu","toStandardMenu","useDispatch","useSelector","ammoCap","React","useReducer","ammo","ammoInCart","dispatchAmmoInCart","useState","dollarCost","setDollarCost","fontWeight","left","weaponsUI","updateGrenadeIcons","select","PlayerAttributesMenuButton","subMenuType","setSubMenuType","upgradeTypes","getAttrName","length","ModSubMenu","getWepText","wepTxt","getModDescription","mod","selectedMod","setSelectedMod","selectedType","setSelectedType","marginLeft","modPurchaseName","updateWeaponMagazines","map","i","Fragment","key","ShopMenu","menuType","setMenuType","w","h","screenUI","toAmmoMenu","backToStandardMenu","openAmmoSubMenu","getHealthkitCostStyle","kitType","useEffect","unpause","acceptHealth","data-tip","data-for","id","batch","backBtnFn","achievementsKeys","resetWave","forEach","z","kill","setKeyValue","dead","gotoMainMenu","NoTransitionButton","Stat","stat","padding","PauseMenu","pauseMenuStates","showDefault","setPauseMenuState","pauseMenuState","effectFilters","margintop","hidebg","hidetitle","playbtn","setTimeout","updateWeaponsUI","togglePause","AchievementsView","checkFilters","ammos","concat","credit","displayHealth","createGenericMessage","txt","fillColor","durationMotion","durationLinger","fill","Power1","container","gameWidth","gameHeight","text","font","pivot","addChild","alpha","onStart","onComplete","delay","ease","easeIn","removeChild","createTextMessage","set","texts","playerBody","msg","playerPosition","initialY","destroy","idx","Gib","timeToDisappear","position_x","position_y","force_x","force_y","gibs","Bodies","circle","collisionFilter","World","add","partsSheet","gfc","Sprite","floor","random","getTexturePNG","this","Body","applyForce","float","animate","renderFn","rot","rotation","remove","GibGenerator","count","force","gibCnt","PlayerRagdollDecap","partLastDamaged","bUpper","a","l","hnd","f1","f2","spine","bodyUpper","rectangle","head","maskBody","armUpperL","armUpperR","handL","armLowerL","armLowerR","handR","legUpperL","legUpperR","legLowerL","legLowerR","footL","footR","bodyToHead","Constraint","create","bodyA","bodyB","pointA","pointB","bodyUpperToArmUpperL","bodyUpperToArmUpperR","armUpperLToArmLowerL","armUpperRToArmLowerR","handToLowerL","handToLowerR","bodyLowerToLegUpperL","bodyLowerToLegUpperR","legUpperLToLegLowerL","legUpperRToLegLowerR","footLToLowerLegL","footRToLowerLegR","spineGfx","spineLinks","_si","spineLink","spineConstraints","makeSpine","upper_spineLinks","upper_spineConstraints","spineToUpper","gibForce","int","parts_spritesheet","spriteParts","foot2","_id","leg2","hand2","arm2","upperArm2","foot1","upperLeg2","skull","leg1","upperLeg1","link","spineGfc","torsoUpper","hand1","arm1","upperArm1","part","updateAnchor","sprite","animateRagParts","renderFnc","linkPos","maskPos","skullPos","torsoUpperPos","arm1Pos","upperArm1Pos","hand1Pos","upperLeg1Pos","leg1Pos","foot1Pos","arm2Pos","upperArm2Pos","hand2Pos","upperLeg2Pos","leg2Pos","foot2Pos","PlayerRagdollHalved","bLower","bodyLower","entrailGfx","lower_spineLinks","lower_spineConstraints","spineToLower","entrailGfc","torsoLower","torsoLowerPos","PlayerRagdollMaim","b","bodyUpperToLegUpperL","bodyUpperToLegUpperR","torso","torsoPos","PlayerRagdoll","BloodSpurt","scale","bodyToDelete","chosenSpurt","bloodSpurt1_sheet","bloodSpurt1","AnimatedSprite","animations","bloodSpurt2_sheet","bloodSpurt2","bloodSpurt3_sheet","bloodSpurt3","spurts","autoChosen","animationSpeed","loop","FELL_OFF","Rock","rocks","explosionAssetsSheet","rockPieceAssets","rockSprite","rockScale","rockBody","restitution","WoodPlank","pos","woodPlanksSheet","woodPlanks","plankRange","getPlank","gfcContainer","torque","ExplosionSprite","renderBody","explosionTexture1","explosionTexture2","explosion1","explosion2","explosions","ex","explosion","adjustment","AdjustmentFilter","brightness","saturation","blur","BlurFilter","glow","GlowFilter","outerStrength","filters","onUpdate","GrenadeExplosion","showRocksBool","options","explosionSound1","Howl","src","distantExplosion","distantExplosionSound","explosionsArray","smokeAssets","positionalBody","isStatic","calcRenderedPosition","calculatedPosition","randInt","s","smokeSprite","idx1","randScale","xyval","r","showWood","showExplosionSprite","explosionSprites","seek","WallBarrier","dimensions","barriersSprites","buildObjects","woodenBarrier","stoneBarrier","metalBarrier","explosiveBarrier","types","WOOD","STONE","METAL","EXPLOSIVE","barrierSprite","objBody","inertia","Infinity","ground","constraint","strength","main","destroyed","getBody","healthDisplay","sprites","takeDamage","dmg","displayBarrierStrength","removeSelf","_x","_y","explosionHitbox","Landmine","landmines","landmineSheet","hitbox","Grenade","fuseTime","grenadeDistance","start","end","grenades","grenadeBody","grenadeGfc","beginFill","drawCircle","bevel","BevelFilter","shadowAlpha","lightAlpha","thickness","shadowColor","lightColor","noise","NoiseFilter","seed","motionBlur","MotionBlurFilter","velocity","radians","exploded","explode","showRocks","explosionSize","distance","Clustermine","num","xforce","yforce","nade","barrierTypes","trapTypes","LANDMINE","CLUSTER_BOMB","REMOTE_MINE","TURRET","RemoteMine","mineNumber","remoteMines","remoteMinesArr","Text","calcPistolDamage","BulletImpact","surfaceType","tint","alphaDuration","rand","duration","renderPosition","PistolShell","changeLabelString","overrideOptions","shells","undefined","setAngularVelocity","shellWd","shellHt","drawRect","endFill","bind","PistolBullet","extraDamageBool","arm","bullets","bulletWd","overrideBody","setAngle","overrideAngle","Vector","angle","overrideForce","position1","position2","cos","sin","calcBulletAngle","addImpactEffect","bulletImpacts","impact","bulletLastPos","bulletTrail","linePoints","fireEquippedWeapon","playerBodyWd","playerBodyHt","Date","now","checkEmpty","reloading","stringify","fireBullet","fireWeaponAnimation","extraDmg","lastBulletByWepType","split","shaking","changeTextForEmptyShake","emptyMagShake","MuzzleFlashFX","muzzleFlashesSheet","muzzleFlash001","muzzleFlash002","muzzleFlash003","muzzleFlash004","muzzleFlash005","muzzleFlashes","visible","muzzleScale","blurFilter","getRandomBlur","quality","glowFilter","innerStrength","adjustmentFilter","flashes","flash","tier","randFlash","getRandomFlash","_muzzleScale","MachineGunTurret","scanAnim","shootAnim","onFrameChange","gotoAndStop","child","direction","scanning","muzzleFlashFX","setMuzzleRotations","degrees","fireEffect","_ejectY","shooting","Spark","spark1","spark2","sparks","spark","adjFilter","sparkContainer","stop","adjust","setItem","BottomBanner","Back","nextWave","wave","saveGame","alert","ShopQuery","className","EnhancedMuzzleSpark","muzzleSpark","gotoAndPlay","getFilters","updateFilters","Player","engine","wd","ht","friction","armAttach","headAttach","bodies","life","lifebarOutline","lineStyle","lifebar","initialLifebarWidth","charReloadPistolSpritesheet","charReloadPistolSprite","charReloadSMGSpritesheet","charReloadSMGSprite","charReloadShotgunSpritesheet","charReloadShotgunSprite","shotgunShellLoadIterations","gotoToEndOfShotgunReload","reloadAnimsByType","reloadAnims","kernelSize","meleePistolSpritesheet","meleePistolAnim","meleeAttackInProgress","removeMeleeHitbox","currentFrame","meleeUMPSpritesheet","meleeUMPAnim","meleeShotgunSpritesheet","meleeShotgunAnim","meleeSprites","grenadeThrowInProgress","grenadeForce","chargingGrenade","chargeGrenade","chargeGrenadeSound","meter","renderGrenadeChargeMeter","createGrenade","calculatedGrenadeForce","calcGrenadeAngle","throwGrenade","attacks","grenadeThrowPistolAnim","grenadeThrowUMPAnim","grenadeThrowShotgunAnim","grenadeThrowPistolSpritesheet","grenadeThrown","grenadeThrowUMPSpritesheet","grenadeThrowShotgunSpritesheet","grenadeSprites","grenadeSpritesByEquipped","ejectedMags","reloadMagazineActionsByType","magDmgOwned","mx","pistolReloadSound","fade","_d","magBody","pistolMag","magObj","gfx","unshift","pop","smgMag","reloadShell","updateEjectedMagPositions","reloadWeapon","charRightArmFirePistolSpritesheet","charRightArmFirePistolSprite","charRightArmFireSMGSpritesheet","charRightArmFireSMGSprite","charArmsFireShotgunSpritesheet","charRightArmFireShotgunSprite","headSprite","positionHeadSprite","renderObj","_mx","my","fn","armsSpritesByType","charLeftArmFirePistolSprite","charRunSpritesheet","charRunSprite","charIdleSpritesheet","charIdleSprite","charJumpSpritesheet","charJumpSprite","stopJumpAnimation","resumeJumpAnimation","jumpMotionBlur","playJumpAnimation","charLeftArmFirePistolSpritesheet","charLeftArmFireSMGSpritesheet","charLeftArmFireSMGSprite","charLeftArmFireShotgunSprite","armsSprites","_9mm1","_9mm2","pistolSound1","pistolReloadSnd","_1","volume","jumpSound","pain1Snd","pain2Snd","deathRip","playerDeathSnd","hitImpact","smgFire","shotgunFire","mSpark","currentMuzzleSpark","bodySprites","shadow","drawEllipse","setBodySpritesPositions","obj","setArmsSpritePosition","fpos","_my","getFlashes","createMeleeHitbox","meleeHitbox","meleeAttack","collectCredits","playerHit","resetPlayerHit","blinkAlpha","bloodSpurtPos","amt","addSpritesInOrder","timing","timeScale","playerRagdoll","lastDeathType","lastBodyPosition","translate","deathType","parts","playerArm","getPlayerComposite","bh","keydownListenersAdded","addEventListener","e","keyCode","changeBack","toString","detonate","currentTurret","updateDirection","target","document","getElementsByTagName","getBoundingClientRect","armAngle","mouseX","mouseY","rect","clientX","clientY","mPosRel","buttons","costToBuild_trap","costToBuild_barrier","closestX","barrier","buildNewLocation","placeObjectSound","cancelSound","checkAllowArray","buildObjectPlacementComparison","reduce","prev","curr","abs","trap","buildTrap","trapPosition","mine","updateNumber","preventDefault","grenadesCount","deltaY","pause","Crosshairs","crosshair","cross","moveTo","lineTo","changed","_new","buildArrow","animationLoop","GroundEffect","bodyPart","groundFx","fxSheet","bulletTextures","groundBloodSpatters","render","groundTex","groundBody","pistolBullets","pistolBulletWd","pistolBulletHt","pistolShells","pistolShellWd","pistolShellHt","ammoDrops","pistolAmmoDrops","smgAmmoDrops","shotgunAmmoDrops","creditDrops","crosshairs","zombieRags","leftEnemyCount","rightEnemyCount","leftEnemyCountDisplay","rightEnemyCountDisplay","sparkSprites","healthdrops","wallTile","WallTile","texture","Texture","delta","tilePosition","TilingSprite","createCollision","body1_label","body2_label","callback","pairs","body1","body2","calculateDamageAmount","weapon_str","calcSMGDamage","calcShotgunDamage","calcTurretDamage","checkCollisionStart","snd","knockback","ammo_type","grenadeClink","gameTickVarsDefined","getZombieRadarTextStyle","gameTickHandler","gradientAlpha","accelMax","mouseButtonState","renderPositionFn","firePistol","fireSMG","fireShotgun","Render","lookAt","playerPosX","playerPosY","box","positionAmmoBox","coin","positionCreditGfx","creditBody","playerRag","grenade","rock","wood","gib","setPlayerVars","playerDirection","paused","walk","setSpritesPositions","timeSinceLastAttack","attack","shoot","updatePosition","rag","fx","WeaponsUI","mags","pistolIcon","smgIcon","shotgunIcon","icons","iconBG","DropShadowFilter","icon","keepOnTop","magazinesByWeaponType","g","emptyText","setInterval","bulletMask","bulletBevel","gbevel","gnoise","makeMagByType","bullet","bulletGfc","weaponIcons","updateMagazine","Array","swapSwap","wep","magazineIndexes","magEmptyBools","doTheWiggle","defaultPos","textForEmptyShake","str","removeEmptyText","forceReload","ammoCheck","limit","_i","onCompleteParams","forceWepEquipped","m","hasOwnProperty","lastMagIdx","makeGrenadeIcon","grenadeCount","gnade","HealthDrop","_amt","Graphics","healths","AmmoDrop","weaponType","colors","ammoBox","ammoGfc","boxGfc","blurGfc","bevelFilter","boxTxt","ZombieRagdoll","f","constraints","_body","z_parts_spritesheet","skulls","getSkullTex","c","getARandomConstraint","Zombie","Power2","zombieWalkSpeed","headToBody","zWalkSheet","zAttackSheet","idleSheet","idleAnim","zWalk","zAttack","zAttack2","slashFX","slashAnim","walkAnim","attackAnim","attackAnim2","anims","anim","playerBodyPosition","playSlashAnim","shouldDisplayHealth","moveLifeDisplay","zombieFarFromPlayer","playIdleAnim","playing","walkAnimPlaying","stopIdleAnim","playWalkAnim","stopWalkAnim","healthOffsetY","damageDisplayOptions","healthDisplayOptions","renderFnResult","alteredWalkSpeed","comparison","bool","dmgTxts","dmgIterator","tintAmounts","1","2","3","4","partDamaged","isCritical","isMelee","attackType","spurtPosLow","spurtPosHi","directionX","removeZombieFromMatterWorld","attackHitbox","removeZombieFromZombiesArray","skipZombieRag","killType","dropPos","GenerateRandomCreditDrops","scoreAmt","zombieGrowl","oneOfTwo","compareResult","makeAttackHitbox","CreditDrop","currencyDrops","creditContainer","creditBlur","creditGfc","yStartPos","amountLimits","randCount","RespawnButton","ScreenUI","pixiElt","Bounce","gameContainer","respawnButton","interactive","overrideCount","GenerateRandomAmmoDrops","on","showRespawnButton","easeOut","muzzle_flashes_spritesheet","zomb_idle_sheet","zomb_walk_sheet","zomb_attack1_sheet","zomb_attack2_sheet","zomb_parts_sheet","zomb_parts_gored_sheet","zomb_slash_fx_sheet","barriers_sheet","char_parts","char_idle_sheet","char_run_sheet","char_jump_sheet","char_reload_pistol_sheet","char_reload_smg_sheet","left_arm_pistol_fire_sheet","right_arm_pistol_fire_sheet","left_arm_smg_fire_sheet","right_arm_smg_fire_sheet","melee_pistol_sheet","melee_ump_sheet","melee_shotgun_sheet","grenade_pistol_sheet","grenade_ump_sheet","grenade_shotgun_sheet","arms_fire_shotgun","char_reload_shotgun_sheet","blood_spurt_1","blood_spurt_2","blood_spurt_3","landmine_sheet","wood_planks_sheet","sparks_sheet","elementId","mouseConstraintBool","Engine","element","getElementById","pixelRatio","runner","Runner","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","stiffness","worldWidth","setUpMatter","app","antialias","resolution","ROUND_PIXELS","appendChild","view","loader","setUpPixi","buildGame","onload","explosiveBarrel","groundTexture","charHead","weaponUI_pistolIcon","weaponUI_smgIcon","weaponUI_shotgunIcon","load","value","getFullState","setFullState","coverArt","gradientAlphaImg","gameCover","distant_explosion","bulletImpact_body","throwSound","confirmSound","coinCollectSound","ammoCollectSound","itemCollectSound","bloodSquish","bloodSquash","bloodSmack","deathRipSound","jumpLandingSound","dirtImpactSound","zombieHurtSound","zombieDeathSound","pain1Sound","pain2Sound","playerDeathSound","buttonAddSound","buttonSubtractSound","buttonHoverSound","buttonClickSound","buttonCancelSound","purchaseSound","shellImpactSound","healthPickupSound","magDrop","shotShell","shotgunBlast","achievement1","achievement2","achievement3","chargingNade","resources","spritesheet","addGround","stage","mainMenu","menu","playBtn","playBtnGfc","playBtnTxt","fontFamily","positionPlayButton","buildMenu","Events","cursor","getElementsByClassName","pointerEvents","startWave","numOnStage","getAZombie","startZombieCreation","GenerateZombies","waveDefeated","chars","transitionToShopQuery","waveMsgOutro","waveMsgIntro","createWaveMessage","BuildMenuStates","buildMenuState","setBuildMenuState","barrierCosts","trapCosts","backToBuildMenu","gotoPlacementMode","replaceCursorWithObjectToPlace","chooseBarrier","filteredType","chooseTrap","filter","ScoresView","scores","overflow","sort","date","time","substr","year","dateNoYear","Game","weaponEquipped","waitInterval","useRef","cancelWaveStart","initial","useScores","setScores","animateScore","setAnimateScore","runUpgraded","setRunUpgraded","reloadUpgraded","setReloadUpgraded","jumpUpgraded","setJumpUpgraded","meleeUpgraded","setMeleeUpgraded","defenseUpgraded","setDefenseUpgraded","countdown","timeInt","clearInterval","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warning","isErr","Axios","catch","err","then","data","DoneBarrierPlacementBanner","shop-query-visibility","BuildMenu","RespawnMenu","backgroundColor","margin","lineHeight","textAlign","transition","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,iCCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.25a15361.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pistol-icon.7f31cd11.png\";","module.exports = __webpack_public_path__ + \"static/media/smg-icon.3a3ac587.png\";","module.exports = __webpack_public_path__ + \"static/media/shotgun-icon.0cd5d683.png\";","module.exports = __webpack_public_path__ + \"static/media/GroundTexture_Optimized.b017db2f.png\";","module.exports = __webpack_public_path__ + \"static/media/wallTile.c21abdef.png\";","module.exports = __webpack_public_path__ + \"static/media/gradient-layer-mask.2be09341.png\";","module.exports = __webpack_public_path__ + \"static/media/explosiveBarrier.4f1da0f2.png\";","module.exports = __webpack_public_path__ + \"static/media/head-sprite.0a5881b1.png\";","module.exports = __webpack_public_path__ + \"static/media/bodyBulletImpact.94466266.wav\";","module.exports = __webpack_public_path__ + \"static/media/GameCover.82b711ae.png\";","module.exports = __webpack_public_path__ + \"static/media/9mm1.604f7da7.wav\";","module.exports = __webpack_public_path__ + \"static/media/9mm2.c11c6dad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/explosion1.9434e92f.wav\";","module.exports = __webpack_public_path__ + \"static/media/explosion_distant.d9a90524.wav\";","module.exports = __webpack_public_path__ + \"static/media/pistolReload.915ac0e1.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeClink.e7168e2c.wav\";","module.exports = __webpack_public_path__ + \"static/media/throw.e7ed00d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/coinCollect.b65cb627.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectAmmo.b05c1059.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectItem.a7bd5386.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquash.6c1046e0.flac\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquish.508e6483.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSmack.eb606367.wav\";","module.exports = __webpack_public_path__ + \"static/media/deathRipSound.733ed512.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpLanding.f703082d.wav\";","module.exports = __webpack_public_path__ + \"static/media/dirtImpact.de2bbd17.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieHurt.2e807e84.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieDeath.0ac25f1f.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain1.e6646ac7.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain2.defb4bdf.wav\";","module.exports = __webpack_public_path__ + \"static/media/playerDeath.e8c5712d.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonAdd.8db1c8cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonSubtract.b240a4d0.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonClick.10d30b9f.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonHover.e0064aca.wav\";","module.exports = __webpack_public_path__ + \"static/media/placeObject.fa092176.flac\";","module.exports = __webpack_public_path__ + \"static/media/cancelSound.0d1ffcde.wav\";","module.exports = __webpack_public_path__ + \"static/media/moneySound.1bae50c5.wav\";","module.exports = __webpack_public_path__ + \"static/media/purchase.4979dc37.wav\";","module.exports = __webpack_public_path__ + \"static/media/shellImpact.8075d182.wav\";","module.exports = __webpack_public_path__ + \"static/media/health.29ff687c.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieGrowl.4792280f.wav\";","module.exports = __webpack_public_path__ + \"static/media/smgFire.b1f03f38.wav\";","module.exports = __webpack_public_path__ + \"static/media/magDrop.1547e6a9.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotShell.f90e6de6.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotgunBlast.4118af72.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement1.dd62d37e.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement2.7a014c29.mp3\";","module.exports = __webpack_public_path__ + \"static/media/achievement3.23db76c0.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpSound.ccaa05f0.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeCharge.31709a11.wav\";","const GameStates = {\r\n  MAIN_MENU: 'main menu',\r\n  GAMEPLAY: 'gameplay',\r\n  PAUSE: 'pause',\r\n  IN_GAME_MENU: 'in-game menu',\r\n  GAMEOVER: 'gameover',\r\n  SHOP_MENU: 'in-game shop menu',\r\n  BUILD_MENU: 'build menu',\r\n  SCORES_VIEW: 'scores view',\r\n}\r\n\r\nexport const SubStates = {\r\n\tNEUTRAL: 'neutral',\r\n\tWAITING: 'waiting',\r\n\tWAVE_STARTED: 'wave started',\r\n\tWAVE_DEFEATED: 'wave defeated',\r\n\tWAVE_CHANGE: 'wave change',\r\n\tPLAYER_DEATH: 'player death',\r\n  PLAYER_RESPAWN: 'player respawn',\r\n  SHOP_QUERY_SUBMENU: 'shop query sub-menu',\r\n  BUILD_PLACEMENT_MODE: 'build trap placement mode'\r\n}\r\n\r\nexport default GameStates\r\n","import GameStates, { SubStates } from '../features/game/constants/GameStates'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_GRENADE } from '../features/game/constants/weapons'\r\n\r\nexport default {\r\n  width: 1200,\r\n  height: 550,\r\n  keys: [],\r\n  score: 0,\r\n  prevScore: 0,\r\n  lvlToWin: 30,\r\n  scoreToggle: false,\r\n  scoreAmounts: {\r\n    zombie: 500,\r\n    meleeConnect: 100,\r\n    zombieStreakBonus: 250,\r\n    zombieKnockedOffStage: 500,\r\n    headShot: 100,\r\n    collectCredit: 10,\r\n    collectHealth: 10,\r\n    collectAmmo: 10,\r\n    waveCompleted: 1000,\r\n    achievement: 5000,\r\n    penalties: {\r\n      respawn: 1000,\r\n      killed: 500,\r\n      damageTaken: 20\r\n    }\r\n  },\r\n  achievements: {\r\n    'SPARTA': { owned: false, description: 'Kicking a zombie off-stage' },\r\n    'Downtown': { owned: false, description: 'Throwing a grenade 2000 ft. and hitting a zombie' },\r\n    'Triplets': { owned: false, description: 'Killing 3 Zombies with one grenade' },\r\n    'Collector': { owned: false, description: 'Buying both the Shotgun and the SMG from the Shop' },\r\n    'P.Modder': { owned: false, description: 'Purchasing all pistol modifications' },\r\n    'SMG Modder': { owned: false, description: 'Purchasing all SMG modifications' },\r\n    'S.Modder': { owned: false, description: 'Purchasing all Shotgun modifications' },\r\n    'Aficionado': { owned: false, description: 'Buying all mods in available' },\r\n    'Jumpshot': { owned: false, description: 'Jumping in the air and firing the final killshot' },\r\n    'Piledrive': { owned: false, description: 'Killing 5 zombies with melee attacks as the final strike' },\r\n    'Traphouse': { owned: false, description: 'Building and placing 3 different traps' },\r\n    'Barricade': { owned: false, description: 'Building and placing 3 different barrier types' },\r\n    'Miner': { owned: false, description: 'Killing at least 3 zombies with landmines' },\r\n    'Gunna': { owned: false, description: 'Killing at least 10 zombies with turrets' }\r\n  },\r\n  stats: {\r\n    zombiesKilled: 0,\r\n    bulletsFired: 0,\r\n    timesReloaded: 0,\r\n    grenadesThrown: 0,\r\n    timesKilled: 0,\r\n    timesRespawned: 0,\r\n    itemsPickedUp: 0,\r\n    creditsEarned: 0,\r\n    storePurchases: 0,\r\n    trapsBuilt: 0,\r\n    barriersBuilt: 0,\r\n    meleeKills: 0,\r\n    mineKills: 0,\r\n    trapsPlaced: 0,\r\n    barriersPlaced: 0,\r\n    turretKills: 0,\r\n    damageTaken: 0,\r\n    damageDealt: 0,\r\n  },\r\n  trapTypesPlaced: {},\r\n  barrierTypesPlaced: {},\r\n  lastAchievementEarned: null, // name of achievement\r\n  lastMagDropped: null, // time\r\n  consecutiveGrenadeKills: 0,\r\n  lastGrenadeKill: null, // time\r\n  zombieLastKilled: null, // time\r\n  filterEffects: false,\r\n  displayZombieHealth: true,\r\n  rightMouseDown: false,\r\n  mouseState: { x: '', y: '', btn: '' },\r\n  mousePosition: { x: 0, y: 0},\r\n  mouseRelativeToPlayerPosition: { x: 0, y: 0},\r\n  textures: {},\r\n  gameState: GameStates.MAIN_MENU,\r\n  lastGameState: null,\r\n  gameSubState: SubStates.NEUTRAL,\r\n  lastGameSubState: null,\r\n  waveNum: 0,\r\n  waveCountToDefeat: null,\r\n  zombiesOnStage: 0,\r\n  showingMessage: false,\r\n  respawnCost: 300,\r\n  respawnToShopCost: 150,\r\n  purchases: 0,\r\n  lastPurchase: {\r\n    item: null,\r\n    amount: null,\r\n  },\r\n  player: {\r\n    perks: {\r\n      magnetism: {\r\n        cost: 750,\r\n        owned: false\r\n      },\r\n      magDmg: {\r\n        cost: 750,\r\n        owned: false\r\n      },\r\n      lastBullet: {\r\n        cost: 750,\r\n        owned: false\r\n      },\r\n      creditDropper: {\r\n        cost: 1250,\r\n        owned: false\r\n      },\r\n      ammoDropper: {\r\n        cost: 1250,\r\n        owned: false\r\n      },\r\n      healthDropper: {\r\n        cost: 1250,\r\n        owned: false\r\n      },\r\n      quickTurret: {\r\n        cost: 1000,\r\n        owned: false\r\n      },\r\n      barrierPlus: {\r\n        cost: 1000,\r\n        owned: false\r\n      },\r\n      cluck: {\r\n        cost: 1000,\r\n        owned: false\r\n      }\r\n    },\r\n    health: 100,\r\n    credits: 500,\r\n    position: { x: 0, y: 0 },\r\n    compositeId: '',\r\n    composite: {\r\n      headId: '',\r\n      bodyId: '',\r\n      armId: ''\r\n    },\r\n    weapons: {\r\n      list: [ WEAPON_TYPE_PISTOL ],\r\n      equipped: null,\r\n      grenadeChargeRate: 0.00035,\r\n      grenadeUpperForceThreshold: 0.025,\r\n      grenadeFuseTime: {\r\n        default: 3\r\n      },\r\n      grenadeExplosionSize: 450,\r\n      laser: {\r\n        'pistol weapon': false,\r\n        'smg weapon': false,\r\n        'shotgun weapon': false,\r\n      },\r\n      meleeDamage: {\r\n        'pistol weapon': 10,\r\n        'smg weapon': 15,\r\n        'shotgun weapon': 20,\r\n      },\r\n      damage: {\r\n        'pistol weapon': { 'min': 4, 'max': 10 },\r\n        'smg weapon': { 'min': 3, 'max': 7 },\r\n        'shotgun weapon': { 'min': 4, 'max': 8 },\r\n        'turret weapon': { min: 4, max: 6 }\r\n      },\r\n      shotLimiter: {\r\n        'pistol weapon': 300,\r\n        'smg weapon': 100,\r\n        'shotgun weapon': 500,\r\n      },\r\n      ammoCapacity: {\r\n        'pistol weapon': 9,\r\n        'smg weapon': 19,\r\n        'shotgun weapon': 6,\r\n        'grenades': 1\r\n      },\r\n      totalAmmo: {\r\n        'pistol weapon': 9 * 5,\r\n        'smg weapon': 19 * 5,\r\n        'shotgun weapon': 6 * 5,\r\n        'grenades': 3\r\n      },\r\n      ammoCostPerBox: {\r\n        'pistol weapon': 10,\r\n        'smg weapon': 20,\r\n        'shotgun weapon': 20,\r\n        'grenades': 80\r\n      },\r\n      lastShot: {\r\n        'pistol weapon': null,\r\n        'smg weapon': null,\r\n        'shotgun weapon': null,\r\n      },\r\n      reloadSpeed: {\r\n        'pistol weapon': .4,\r\n        'smg weapon': .4,\r\n        'shotgun weapon': .4,\r\n      },\r\n      reloadAnimationFrames: {\r\n        'pistol weapon': 55,\r\n        'smg weapon': 60,\r\n        'shotgun weapon': 80,\r\n      },\r\n      bulletVariance: {\r\n        'pistol weapon': 0.0004,\r\n        'smg weapon': 0.001,\r\n        'shotgun weapon': 0.002,\r\n      },\r\n      bulletForce: {\r\n        'pistol weapon': .0075,\r\n        'smg weapon': .0075,\r\n        'shotgun weapon': .0075,\r\n        'turret': .01\r\n      },\r\n      shellEjectionForce: {\r\n        'pistol weapon': { 'min': 0.0003, 'max': 0.0007 },\r\n        'smg weapon': { 'min': 0.0003, 'max': 0.0010 },\r\n        'shotgun weapon': { 'min': 0.0008, 'max': 0.0012 },\r\n      },\r\n      shellRemovalTimeout: {\r\n        'pistol weapon': 2000,\r\n        'smg weapon': 2000,\r\n        'shotgun weapon': 2000,\r\n      },\r\n      buyWeapons: {\r\n        'smg weapon': 1500,\r\n        'shotgun weapon': 2750\r\n      },\r\n    },\r\n    constants: {\r\n      width: 50,\r\n      height: 180\r\n    },\r\n    variables: {\r\n      magnetism: 400,\r\n      magnetismSpeed: 1,\r\n      currentDirection: '',\r\n      lastDirection: '',\r\n      jumping: false,\r\n      jumpForce: -0.4,\r\n      defense: 0,\r\n      acceleration: {\r\n        min: 2,\r\n        max: 5\r\n      },\r\n      deceleration: 0.5\r\n    },\r\n    upgradeTiers: {\r\n      run: { min: 1, current: 1, max: 4 },\r\n      jump: { min: 1, current: 1, max: 4 },\r\n      reload: { min: 1, current: 1, max: 4 },\r\n      defense: { min: 1, current: 1, max: 4 },\r\n      melee: { min: 1, current: 1, max: 4 }\r\n    },\r\n    upgradeCosts: {\r\n      run: 200,\r\n      jump: 200,\r\n      reload: 300,\r\n      defense: 400,\r\n      melee: 400\r\n    },\r\n    upgradeAmounts: {\r\n      run: 1,\r\n      jump: -0.1,\r\n      reload: .1,\r\n      defense: 7,\r\n      melee: {\r\n        'pistol weapon': 5,\r\n        'smg weapon': 6,\r\n        'shotgun weapon': 8,\r\n      }\r\n    },\r\n    modTiers: {\r\n      rof: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      },\r\n      powder: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      },\r\n      sight: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      },\r\n      mag: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      }\r\n    },\r\n    modCosts: {\r\n      rof: {\r\n        'pistol weapon': 300,\r\n        'smg weapon': 400,\r\n        'shotgun weapon': 500,\r\n      },\r\n      powder: {\r\n        'pistol weapon': 400,\r\n        'smg weapon': 550,\r\n        'shotgun weapon': 750,\r\n      },\r\n      sight: {\r\n        'pistol weapon': 200,\r\n        'smg weapon': 300,\r\n        'shotgun weapon': 300,\r\n      },\r\n      mag: {\r\n        'pistol weapon': 350,\r\n        'smg weapon': 600,\r\n        'shotgun weapon': 600,\r\n      }\r\n    },\r\n    modAmounts: {\r\n      rof: {\r\n        'pistol weapon': 20,\r\n        'smg weapon': 15,\r\n        'shotgun weapon': 25,\r\n      },\r\n      powder: {\r\n        'pistol weapon': 3,\r\n        'smg weapon': 2,\r\n        'shotgun weapon': 3,\r\n      },\r\n      sight: {\r\n        'pistol weapon': 0.0001,\r\n        'smg weapon': 0.0002,\r\n        'shotgun weapon': 0.0003,\r\n      },\r\n      mag: {\r\n        'pistol weapon': 3,\r\n        'smg weapon': 5,\r\n        'shotgun weapon': 1,\r\n      }\r\n    }\r\n  },\r\n  barriers: {\r\n    selectedBarrier: null,\r\n    costToBuild: {\r\n      'Wooden': 150,\r\n      'Stone': 250,\r\n      'Metal': 350,\r\n      'Explosive Barrel': 400\r\n    }\r\n  },\r\n  traps: {\r\n    turret: {\r\n      fireDistance: 500,\r\n      cooldown: .5\r\n    },\r\n    selectedTrap: null,\r\n    costToBuild: {\r\n      'Landmine': 250,\r\n      'Remote Mine': 400,\r\n      'Machine Gun Turret': 750,\r\n      'Cluster Bomb': 500\r\n    },\r\n  },\r\n  enemies: {\r\n    zombies: {\r\n      attackDmg: 20,\r\n      attackDmgDefault: 20,\r\n      attackIncrementer: .25,\r\n      walkSpeed: 1.5,\r\n      walkSpeedDefault: 1.5,\r\n      walkSpeedIncrementer: 0.015,\r\n      zombieAttackLimiter: 2000,\r\n      zombieAttackDefaultLimiter: 2000,\r\n      zombieAttackLimiterDecrementer: 15,\r\n      zombieAttackDistance: 150,\r\n      defaultHealth: 100,\r\n      startingHealth: 100,\r\n      healthIncrementer: .5,\r\n      onRight: 0,\r\n      onLeft: 0\r\n    }\r\n  },\r\n  consumables: {\r\n    healthkit: {\r\n      '20': { cost: 40 },\r\n      '50': { cost: 80 },\r\n      full: { cost: 150 },\r\n    }\r\n  }\r\n}","export const WEAPON_TYPE_PISTOL = 'pistol weapon'\r\nexport const WEAPON_TYPE_GRENADE = 'grenades'\r\nexport const WEAPON_TYPE_SMG = 'smg weapon'\r\nexport const WEAPON_TYPE_TURRET = 'turret weapon'\r\nexport const WEAPON_TYPE_SHOTGUN = 'shotgun weapon'\r\n\r\nexport const PISTOL_BULLET_REMOVAL_TIMEOUT = 500\r\nexport const PISTOL_SHELL_REMOVAL_TIMEOUT = 2000\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MIN = 0.0003\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MAX = 0.0007\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN = 0.5\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX = 1.0\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_GRENADE } from './constants/weapons'\r\n// import { original } from 'immer'\r\nimport initialState from '../../app/initialState'\r\n\r\nexport const AchievementDefs = {\r\n  THIS_IS_SPARTA: 'SPARTA',\r\n  FROM_DOWNTOWN: 'Downtown',\r\n  FIRE_IN_THE_HOLE: 'Triplets',\r\n  WEAPONS_COLLECTOR: 'Collector',\r\n  PISTOL_MODDER: 'P.Modder',\r\n  SMG_MODDER: 'SMG Modder',\r\n  SHOTGUN_MODDER: 'S.Modder',\r\n  MOD_AFICIONADO: 'Aficionado',\r\n  THE_JUMP_SHOT: 'Jumpshot',\r\n  PILEDRIVE: 'Piledrive',\r\n  TRAPHOUSE: 'Traphouse',\r\n  BARRICADE: 'Barricade',\r\n  MINER: 'Miner',\r\n  GUNNA: 'Gunna',\r\n}\r\n\r\nexport const StatsDefs = {\r\n  zombiesKilled: 'zombiesKilled',\r\n  bulletsFired: 'bulletsFired',\r\n  timesReloaded: 'timesReloaded',\r\n  grenadesThrown: 'grenadesThrown',\r\n  timesKilled: 'timesKilled',\r\n  timesRespawned: 'timesRespawned',\r\n  itemsPickedUp: 'itemsPickedUp',\r\n  creditsEarned: 'creditsEarned',\r\n  storePurchases: 'storePurchases',\r\n  meleeKills: 'meleeKills',\r\n  mineKills: 'mineKills',\r\n  trapsPlaced: 'trapsPlaced',\r\n  barriersPlaced: 'barriersPlaced',\r\n  turretKills: 'turretKills',\r\n  damageTaken: 'damageTaken',\r\n  damageDealt: 'damageDealt',\r\n}\r\n\r\n// for flattened data game state\r\nexport const gameSlice = createSlice({\r\n\tname: 'game',\r\n  // initialState: {},\r\n  initialState: initialState, //JSON.parse(localStorage.getItem('ZombieChamber-GameSave')) || ,\r\n\treducers: {\r\n    loadLocalStorageState: state => {\r\n      if (localStorage && localStorage.getItem('ZombieChamber-GameSave')) {\r\n        return JSON.parse(localStorage.getItem('ZombieChamber-GameSave'))\r\n      } else {\r\n        return state\r\n      }\r\n    },\r\n    setTrapTypePlaced: (state, action) => ({\r\n      ...state,\r\n      trapTypesPlaced: {\r\n        ...state.trapTypesPlaced,\r\n        [ action.payload ]: state.trapTypesPlaced[ action.payload ] ? state.trapTypesPlaced[ action.payload ] + 1 : 1\r\n      },\r\n    }),\r\n    setBarrierTypePlaced: (state, action) => ({\r\n      ...state,\r\n      barrierTypesPlaced: {\r\n        ...state.barrierTypesPlaced,\r\n        [ action.payload ]: state.barrierTypesPlaced[ action.payload ] ? state.barrierTypesPlaced[ action.payload ] + 1 : 1\r\n      }\r\n    }),\r\n    setLastMagDropped: (state, action) => {\r\n      state.lastMagDropped = action.payload\r\n    },\r\n    increaseStats: (state, action) => {\r\n      state.stats[ action.payload ] += 1\r\n    },\r\n    increaseStatsByAmount: {\r\n      reducer: (state, action) => {\r\n        state.stats[ action.payload.type ] += action.payload.amount\r\n      },\r\n      prepare: (type, amount) => ({ payload: { type, amount } })\r\n    },\r\n    setLastGrenadeKill: (state, action) => {\r\n      state.lastGrenadeKill = action.payload\r\n      state.consecutiveGrenadeKills += 1\r\n    },\r\n    resetConsecutiveGrenadeKills: state => { state.consecutiveGrenadeKills = 0 },\r\n    setZombieLastKilled: (state, action) => {\r\n      state.zombieLastKilled = action.payload\r\n    },\r\n    flipScoreToggle: state => { state.scoreToggle = !state.scoreToggle },\r\n    increaseScore: (state, action) => {\r\n      state.score += action.payload\r\n    },\r\n    decreaseScore: (state, action) => {\r\n      state.score -= action.payload\r\n    },\r\n    updatePrevScore: (state) => {\r\n      state.prevScore = state.score\r\n    },\r\n    addPurchase: {\r\n      reducer: (state, action) => {\r\n        state.purchases += 1\r\n        state.lastPurchase = action.payload\r\n      },\r\n      prepare: (item, amount) => ({ payload: { item, amount } })\r\n    },\r\n    setZombiesOnLeft: (state, action) => { state.enemies.zombies.onLeft = action.payload },\r\n    setZombiesOnRight: (state, action) => { state.enemies.zombies.onRight = action.payload },\r\n    setRightMouseDown: (state, action) => {\r\n      state.rightMouseDown = action.payload\r\n    },\r\n    attachMod: {\r\n      reducer: (state, action) => {\r\n        let { modType, wepType } = action.payload\r\n        switch (modType) {\r\n          case 'rof':\r\n          state.player.modTiers.rof[wepType].current += 1\r\n          state.player.weapons.shotLimiter[wepType] -= state.player.modAmounts.rof[wepType]\r\n          break;\r\n          case 'powder':\r\n          state.player.modTiers.powder[wepType].current += 1\r\n          state.player.weapons.damage[wepType].min += Math.round(state.player.modAmounts.powder[wepType] * .5)\r\n          state.player.weapons.damage[wepType].max += Math.round(state.player.modAmounts.powder[wepType])\r\n          break;\r\n          case 'sight':\r\n          state.player.modTiers.sight[wepType].current += 1\r\n          state.player.weapons.bulletVariance[wepType] -= state.player.modAmounts.sight[wepType]\r\n          break;\r\n          case 'mag':\r\n          state.player.modTiers.mag[wepType].current += 1\r\n          state.player.weapons.ammoCapacity[wepType] += state.player.modAmounts.mag[wepType]\r\n          break;\r\n          default:\r\n        }\r\n      },\r\n      prepare: (modType, wepType) => ({ payload: { modType, wepType } })\r\n    },\r\n    setPlayerCompositeId: (state, action) => { console.log(action.type); state.player.compositeId = action.payload },\r\n\t\tsetKeyPress: (state, action) => { state.keys.push(action.payload) },\r\n\t\tremoveKeyPress: (state, action) => { state.keys.splice(state.keys.indexOf(parseInt(action.payload)), 1) },\r\n\t\tsetLastDirection: (state, action) => { state.player.variables.lastDirection = action.payload },\r\n\t\tsetCurrentDirection: (state, action) => { state.player.variables.currentDirection = action.payload },\r\n\t\tsetJumping: (state, action) => { state.player.variables.jumping = action.payload },\r\n\t\tsetGroundId: (state, action) => { state.groundId = action.payload },\r\n\t\tsetMousePosition: (state, action) => { state.mousePosition = action.payload },\r\n\t\tsetMouseStateX: (state, action) => { state.mouseState.x = action.payload },\r\n\t\tsetMouseStateY: (state, action) => { state.mouseState.y = action.payload },\r\n\t\tsetMouseButtonState: (state, action) => { state.mouseState.btn = action.payload },\r\n\t\tsetWeaponEquipped: (state, action) => { state.player.weapons.equipped = action.payload },\r\n\t\tsetLastShot: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tlet { player: { weapons: { lastShot, equipped } } } = state\r\n\t\t\t\tlastShot[equipped] = action.payload.dateTimeObject\r\n\t\t\t},\r\n\t\t\tprepare: (weapon, dateTimeObject) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: { weapon, dateTimeObject }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetMouseRelativeToPlayerPosition: (state, action) => { state.mouseRelativeToPlayerPosition = action.payload },\r\n\t\tsetCompositeBodyIds: (state, action) => {\r\n\t\t\tstate.player.composite = action.payload\r\n\t\t},\r\n\t\tsetStaticGunAngle: (state, action) => { state.staticGunAngle = action.payload },\r\n\t\tsetStaticGunAngleState: (state, action) => { state.staticGun = action.payload },\r\n\t\tsetTexturePath: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tstate.textures[action.payload.textureName] = action.payload.texturePath\r\n\t\t\t},\r\n\t\t\tprepare: (textureName, texturePath) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttextureName,\r\n\t\t\t\t\t\ttexturePath\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgameStateTransition: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tswitch (action.payload.type) {\r\n\t\t\t\t\tcase 'sub':\r\n\t\t\t\t\tstate.lastGameSubState = action.payload.from\r\n\t\t\t\t\tstate.gameSubState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'main':\r\n\t\t\t\t\tstate.lastGameState = action.payload.from\r\n\t\t\t\t\tstate.gameState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare: (type, from, to) => ({ payload: { type, from, to } })\r\n\t\t},\r\n\t\tincrementWave: (state) => { state.waveNum += 1 },\r\n\t\tdecrementWave: (state) => { state.waveNum -= 1 },\r\n\t\tsetWaveCountToDefeat: (state, action) => { state.waveCountToDefeat = action.payload },\r\n\t\tincrementWaveCountToDefeat: (state, action) => { state.waveCountToDefeat += 1 },\r\n\t\tdecrementWaveCountToDefeat: (state, action) => {\r\n      state.waveCountToDefeat -= 1\r\n      state.zombiesOnStage -= 1\r\n    },\r\n\t\tsetWeaponsList: (state, action) => { state.player.weapons.list = action.payload },\r\n\t\tsetShowingMessage: (state, action) => { state.showingMessage = action.payload },\r\n\t\tunsetAllKeys: (state, action) => { state.keys = [] },\r\n\t\tresetPlayerVariables: state => {\r\n\t\t\tlet _state = Object.assign({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentDirection: '',\r\n\t\t\t\t\tlastDirection: '',\r\n\t\t\t\t\tjumping: false\r\n\t\t\t\t}\r\n      }, state)\r\n      state = _state\r\n\t\t},\r\n\t\tdecrementTotalAmmo: (state, action) => {\r\n\t\t\tlet { player: { weapons: { totalAmmo } } } = state\r\n\t\t\t// original() from the immer package helps us to see values in redux arrays/objects\r\n\t\t\ttotalAmmo[action.payload] -= 1\r\n    },\r\n    addToTotalAmmo: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { totalAmmo } } } = state\r\n        totalAmmo[action.payload.wepType] += action.payload.amount\r\n      },\r\n      prepare: (wepType, amount) => ({ payload: { wepType, amount } })\r\n    },\r\n    updateAmmoCapacity: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { ammoCapacity } } } = state\r\n        ammoCapacity[action.payload.wepType] = action.payload.newCapacityAmount\r\n      },\r\n      prepare: (wepType, newCapacityAmount) => ({ payload: { wepType, newCapacityAmount } })\r\n    },\r\n    setPlayerPosition: (state, action) => { state.player.position = action.payload },\r\n    addToTotalCredits: (state, action) => { state.player.credits += action.payload },\r\n    subtractFromTotalCredits: (state, action) => { state.player.credits -= action.payload },\r\n    upgradeRunSpeed: (state) => {\r\n      state.player.upgradeTiers.run.current += 1\r\n      state.player.variables.acceleration.max = state.player.variables.acceleration.max + state.player.upgradeAmounts.run\r\n    },\r\n    upgradeReloadSpeed: (state) => {\r\n      state.player.upgradeTiers.reload.current += 1\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] = state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] + state.player.upgradeAmounts.reload\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] = state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] + state.player.upgradeAmounts.reload\r\n    },\r\n    upgradeJumpForce: (state) => {\r\n      state.player.upgradeTiers.jump.current += 1\r\n      state.player.variables.jumpForce = state.player.variables.jumpForce + state.player.upgradeAmounts.jump\r\n    },\r\n    upgradeDefense: (state) => {\r\n      state.player.upgradeTiers.defense.current += 1\r\n      state.player.variables.defense = state.player.variables.defense + state.player.upgradeAmounts.defense\r\n    },\r\n    upgradeMelee: (state) => {\r\n      state.player.upgradeTiers.melee.current += 1\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_PISTOL] += state.player.upgradeAmounts.melee[WEAPON_TYPE_PISTOL]\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_SMG] += state.player.upgradeAmounts.melee[WEAPON_TYPE_SMG]\r\n    },\r\n    updatePlayerHealth: (state, action) => {\r\n      state.player.health = action.payload\r\n    },\r\n    decrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] -= 1 },\r\n    incrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] += 1 },\r\n    updateZombieWalkSpeed: (state, action) => {\r\n      let walkSpeedDefault = state.enemies.zombies.walkSpeedDefault\r\n      let incrementer = state.enemies.zombies.walkSpeedIncrementer\r\n      state.enemies.zombies.walkSpeed = walkSpeedDefault + (action.payload * incrementer)\r\n    },\r\n    updateZombieAttackDmg: (state, action) => {\r\n      state.enemies.zombies.attackDmg = Math.round(\r\n        (action.payload * state.enemies.zombies.attackIncrementer) +\r\n        state.enemies.zombies.attackDmgDefault\r\n      )\r\n    },\r\n    decrementZombieAttackTimeLimit: (state, action) => {\r\n      state.enemies.zombies.zombieAttackLimiter = state.enemies.zombies.zombieAttackDefaultLimiter - (action.payload * state.enemies.zombies.zombieAttackLimiterDecrementer)\r\n      console.log(\r\n        state.enemies.zombies.zombieAttackLimiter\r\n      )\r\n    },\r\n    showLaserSight: (state, action) => {\r\n      state.player.weapons.laser[action.payload] = true\r\n    },\r\n    incrementZombieHealth: (state, action) => {\r\n      state.enemies.zombies.startingHealth = Math.round(state.enemies.zombies.defaultHealth + (state.enemies.zombies.healthIncrementer * action.payload))\r\n    },\r\n    setSelectedBarrierToBuild: (state, action) => {\r\n      state.barriers.selectedBarrier = action.payload\r\n    },\r\n    setSelectedTrapToBuild: (state, action) => {\r\n      state.traps.selectedTrap = action.payload\r\n    },\r\n    setLastWaveCountDefeated: (state) => { state.lastWaveCountDefeated = state.waveCountToDefeat },\r\n    incrementZombiesOnStage: state => { state.zombiesOnStage += 1 },\r\n    setZombiesOnStage: (state, action) => { state.zombiesOnStage = action.payload },\r\n    updateWeaponsList: (state, action) => {\r\n      state.player.weapons.list.push(action.payload)\r\n    },\r\n    // Perks\r\n    setPlayerMagnetism: {\r\n      reducer: (state, action) => {\r\n        state.player.variables.magnetism = action.payload.range\r\n        state.player.variables.magnetismSpeed = action.payload.speed\r\n        state.player.perks.magnetism.owned = true\r\n      },\r\n      prepare: (range, speed) => ({ payload: { range, speed } })\r\n    },\r\n    setPlayerMagDamage: (state) => {\r\n      state.player.perks.magDmg.owned = true\r\n    },\r\n    setPlayerLastBullet: (state) => {\r\n      state.player.perks.lastBullet.owned = true\r\n    },\r\n    setPlayerCreditDropper: state => { state.player.perks.creditDropper.owned = true },\r\n    setPlayerAmmoDropper: state => { state.player.perks.ammoDropper.owned = true },\r\n    setPlayerHealthDropper: state => { state.player.perks.healthDropper.owned = true },\r\n    setPlayerQuickTurret: state => {\r\n      state.player.perks.quickTurret.owned = true\r\n      state.traps.turret.cooldown = .25\r\n      state.traps.turret.fireDistance = 600\r\n    },\r\n    setPlayerBarrierPlus: state => {\r\n      state.player.perks.barrierPlus.owned = true\r\n    },\r\n    setPlayerFusterCluck: state => {\r\n      state.player.perks.cluck.owned = true\r\n    },\r\n    toggleFilterEffects: (state, action) => {\r\n      state.filterEffects = action.payload\r\n    },\r\n    toggleZombieHealthDisplay: (state, action) => {\r\n      state.displayZombieHealth = action.payload\r\n    },\r\n    setAchievementOwned: (state, action) => {\r\n      state.achievements[action.payload].owned = true\r\n      state.lastAchievementEarned = action.payload\r\n    }\r\n\t},\r\n})\r\n\r\nexport const {\r\n  loadLocalStorageState,\r\n  increaseStatsByAmount,\r\n  setTrapTypePlaced,\r\n  setBarrierTypePlaced,\r\n  setLastMagDropped,\r\n  increaseStats,\r\n  setAchievementOwned,\r\n  resetConsecutiveGrenadeKills,\r\n  setLastGrenadeKill,\r\n  setZombieLastKilled,\r\n  flipScoreToggle,\r\n  updatePrevScore,\r\n  increaseScore,\r\n  decreaseScore,\r\n  toggleZombieHealthDisplay,\r\n  toggleFilterEffects,\r\n  setPlayerFusterCluck,\r\n  setPlayerBarrierPlus,\r\n  setPlayerQuickTurret,\r\n  setPlayerHealthDropper,\r\n  setPlayerAmmoDropper,\r\n  setPlayerCreditDropper,\r\n  setPlayerLastBullet,\r\n  setPlayerMagDamage,\r\n  setPlayerMagnetism,\r\n  addPurchase,\r\n  setZombiesOnLeft,\r\n  setZombiesOnRight,\r\n  setRightMouseDown,\r\n\tresetPlayerVariables,\r\n\tunsetAllKeys,\r\n\tsetPlayerCompositeId,\r\n\tsetKeyPress, removeKeyPress,\r\n\tsetLastDirection, setCurrentDirection,\r\n\tsetJumping, setGroundId, setMousePosition,\r\n\tsetMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot,\r\n\tsetWeaponEquipped,\r\n\tsetMouseRelativeToPlayerPosition,\r\n\tsetCompositeBodyIds,\r\n\tsetTexturePath,\r\n\tgameStateTransition,\r\n  incrementWave,\r\n  decrementWave,\r\n  incrementWaveCountToDefeat,\r\n\tsetWaveCountToDefeat,\r\n\tdecrementWaveCountToDefeat,\r\n\tsetWeaponsList,\r\n\tsetShowingMessage,\r\n  decrementTotalAmmo,\r\n  addToTotalAmmo,\r\n  updateAmmoCapacity,\r\n  addToTotalCredits,\r\n  subtractFromTotalCredits,\r\n  setPlayerPosition,\r\n  upgradeRunSpeed,\r\n  upgradeReloadSpeed,\r\n  upgradeJumpForce,\r\n  upgradeDefense,\r\n  upgradeMelee,\r\n  updatePlayerHealth,\r\n  attachMod,\r\n  incrementGrenadeCount,\r\n  decrementGrenadeCount,\r\n  updateZombieWalkSpeed,\r\n  updateZombieAttackDmg,\r\n  decrementZombieAttackTimeLimit,\r\n  showLaserSight,\r\n  incrementZombieHealth,\r\n  setSelectedBarrierToBuild,\r\n  setSelectedTrapToBuild,\r\n  lastWaveCountDefeated,\r\n  incrementZombiesOnStage,\r\n  setZombiesOnStage,\r\n  updateWeaponsList\r\n} = gameSlice.actions\r\n\r\nexport default gameSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport game from '../features/game/gameSlice'\r\nimport initialState from './initialState'\r\n\r\n\r\n// let persistedState = (\r\n//   localStorage && localStorage.getItem('ZombieChamber-GameSave') ? JSON.parse(localStorage.getItem('ZombieChamber-GameSave'))\r\n//   : initialState\r\n// )\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    game\r\n  },\r\n  // preloadedState: {\r\n  //   persistedState\r\n  // }\r\n})\r\n\r\nstore.subscribe(() => {\r\n  // if (localStorage) {\r\n  //   localStorage.setItem('ZombieChamber-GameSave', JSON.stringify(store.getState().game))\r\n  // }\r\n})\r\n\r\n\r\nexport default store\r\n","import * as PIXI from 'pixi.js'\r\nimport { Mouse, MouseConstraint, World, Engine, Render, Runner, Composite, Vector } from 'matter-js'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\n\r\nconst width = 1200, height = 550\r\nconst worldWidth = 6000\r\n\r\nconst { getState } = store\r\n\r\nconst { TweenLite: { to } } = window\r\n\r\nexport const applyGsapHover = pixiElt => {\r\n\tpixiElt.on('mouseover', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.05, y: 1.05 })\r\n\t})\r\n\tpixiElt.on('mouseout', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.00, y: 1.00 })\r\n\t})\r\n}\r\n\r\nexport const makePixiSprite = (stringIdentifier) => {\r\n\treturn (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\tPIXI.Texture.from(\r\n\t\t\t\tgetState().game.textures[stringIdentifier]\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport const calcBulletAngle = (position1, position2) => {\r\n  let { game: { player: { weapons: { bulletVariance, equipped, bulletForce } } } } = getState()\r\n\tlet angle = Vector.angle(position1, position2)\r\n\tlet bulletAngle = {\r\n\t\tx: Math.cos(angle) * bulletForce[equipped],\r\n\t\ty: (Math.sin(angle) * bulletForce[equipped]) + random.float(-bulletVariance[equipped], bulletVariance[equipped])\r\n\t}\r\n\treturn bulletAngle\r\n}\r\n\r\nexport const calcGrenadeAngle = (position1, position2, force) => {\r\n  let angle = Vector.angle(position1, position2)\r\n\tlet grenadeAngle = {\r\n\t\tx: Math.cos(angle) * force.x,\r\n\t\ty: Math.sin(angle) * force.y\r\n\t}\r\n\treturn grenadeAngle\r\n}\r\n\r\nexport const getBodyWidth = body => {\r\n\treturn (body.bounds.max.x - body.bounds.min.x)\r\n}\r\n\r\nexport const getBodyHeight = body => {\r\n\treturn (body.bounds.max.y - body.bounds.min.y)\r\n}\r\n\r\nexport const getPlayerPartByType = (type, gameObjects) => {\r\n\tlet {\r\n\t\tgame: {\r\n\t\t\tplayer: {\r\n\t\t\t\tcomposite: {\r\n\t\t\t\t\theadId,\r\n\t\t\t\t\tbodyId,\r\n\t\t\t\t\tarmId,\r\n\t\t\t\t\tgunId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} = getState()\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tif (type === 'head') {\r\n\t\treturn Composite.get(world, headId, 'body')\r\n\t}\r\n\tif (type === 'body') {\r\n\t\treturn Composite.get(world, bodyId, 'body')\r\n\t}\r\n\tif (type === 'arm') {\r\n\t\treturn Composite.get(world, armId, 'body')\r\n\t}\r\n\tif (type === 'gun') {\r\n\t\treturn Composite.get(world, gunId, 'body')\r\n\t}\r\n\r\n}\r\n\r\n// export const getGround = (gameObjects) => {\r\n// \tlet world = gameObjects.getKeyValue('world')\r\n// \tlet { game: { groundId } } = getState()\r\n// \treturn Composite.get(world, groundId, 'body')\r\n// }\r\n\r\nexport const getPlayerGun = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { gunId } } } } = getState()\r\n\treturn Composite.get(world, gunId, 'body')\r\n}\r\n\r\nexport const getPlayerBody = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { bodyId } } } } = getState()\r\n\treturn Composite.get(world, bodyId, 'body')\r\n}\r\n\r\nexport const getPlayerComposite = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { compositeId } } } = getState()\r\n\treturn Composite.get(world, compositeId, 'composite')\r\n}\r\n\r\nexport function setUpPixi(elementId) {\r\n\tlet app = new PIXI.Application({\r\n\t\twidth,\r\n\t\theight,\r\n\t\tantialias: false,\r\n    resolution: 1\r\n\t})\r\n\tPIXI.settings.ROUND_PIXELS = true;\r\n\tdocument.getElementById(elementId).appendChild(app.view)\r\n\t// app.view.style.opacity = .85\r\n\r\n\treturn {\r\n\t\tapp,\r\n\t\tloader: new PIXI.Loader()\r\n\t}\r\n\r\n}\r\n\r\nexport function setUpMatter(elementId, mouseConstraintBool) {\r\n\t// create engine\r\n\tlet engine = Engine.create()\r\n\tlet world = engine.world\r\n\tworld.bounds = {\r\n\t\tmin: { x: -worldWidth, y: height * -2 },\r\n\t\tmax: { x: worldWidth, y: height * 1.5 }\r\n\t}\r\n\r\n\t// create renderer\r\n\tlet render = Render.create({\r\n\t\t\telement: document.getElementById(elementId),\r\n\t\t\tengine: engine,\r\n\t\t\toptions: {\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tpixelRatio: .5\r\n\t\t\t}\r\n\t})\r\n\tRender.run(render)\r\n\r\n\t// Render.lookAt(render, {\r\n\t// \tmin: { x: 0, y: 0 },\r\n\t// \tmax: { x: width, y: height }\r\n\t// })\r\n\r\n\t// create runner\r\n\tlet runner = Runner.create()\r\n\tRunner.run(runner, engine)\r\n\r\n\tif (mouseConstraintBool) {\r\n\t\tlet mouse = Mouse.create(render.canvas)\r\n\t\tlet\tmouseConstraint = MouseConstraint.create(engine, {\r\n\t\t\tmouse: mouse,\r\n\t\t\tconstraint: {\r\n\t\t\t\tstiffness: 0.2,\r\n\t\t\t\trender: {\r\n\t\t\t\t\tvisible: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tWorld.add(world, mouseConstraint)\r\n\t\t// keep the mouse in sync with rendering\r\n\t\trender.mouse = mouse\r\n\t}\r\n\r\n\t// World.add(world, Bodies.rectangle(0,0,20,20))\r\n\r\n\treturn {\r\n\t\tengine,\r\n\t\trender,\r\n\t\trunner,\r\n\t\tworld,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tworldWidth\r\n\t\t// mouse,\r\n\t\t// mouseConstraint\r\n\t}\r\n\r\n}\r\n","export const GREATER_THAN_PLAYER_X_POS = 'greater than player x position'\r\nexport const GREATER_THAN_PLAYER_Y_POS = 'greater than player y position'\r\nexport const LESS_THAN_PLAYER_X_POS = 'less than player x position'\r\nexport const LESS_THAN_PLAYER_Y_POS = 'less than player y position'\r\nexport const MOUSE_UP = 'mouse up'\r\nexport const MOUSE_DOWN = 'mouse down'\r\n","export const playerCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const enemyCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n\r\nexport const itemCollisionOptions = {\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const gibCollisionOptions = {\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbottom: 0;\r\nmargin: auto;\r\ndisplay: block;\r\nposition: absolute;\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : 'none' };\r\n`\r\n\r\nconst Backing = styled.div`\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nopacity: ${ props => props.opacity ? props.opacity : .5 };\r\nbackground-color: ${ props => props.bgcolor ? props.bgcolor : '#222' };\r\n`\r\n\r\nconst MenuTitle = styled.div`\r\nleft: 0;\r\nright: 0;\r\ntop: 20px;\r\nwidth: 300px;\r\nmargin: auto;\r\ndisplay: block;\r\nfont-size: 2em;\r\ntext-align: center;\r\nposition: absolute;\r\n`\r\n\r\nconst MenuButtonContainer = styled.div`\r\ntop: ${ props => props['space-top'] ? props['space-top'] : 80 }px;\r\nfont-size: 1.5em;\r\ntext-align: center;\r\nposition: absolute;\r\nwidth: 100%;\r\n`\r\n\r\nconst MenuButton = styled.div`\r\nopacity: ${ props => props['opacity'] ? props['opacity'] : 1 }\r\ncolor: #fff;\r\nposition: relative;\r\nwidth: ${ props => props['width'] ? props['width'] : 200}px;\r\nheight: ${ props => props['height'] ? props['height'] : 60 }px;\r\nline-height: ${ props => props['height'] ? props['height'] : 60 }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : '#00589b' };\r\nleft: 0; right: 0;\r\ncursor: pointer;\r\nmargin: auto;\r\nborder: 2px solid ${ props => props['bordercolor'] ? props['bordercolor'] : 'rgba(0,0,0,0)' };\r\ntransform: scale(1.00);\r\n&:hover {\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transition: all .35s' };\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transform: scale(1.05)' };\r\n  background-color: ${ props => props['hovercolor'] };\r\n  border: 2px solid ${ props => props['hoverborder'] ? props['hoverborder'] : 'rgba(0,0,0,0)' };\r\n}\r\n`\r\n\r\nconst MenuButtonSpacer = styled.div`\r\npadding: ${ props => props['padding'] ? props['padding'] : 10 }px;\r\n`\r\n\r\nexport default {\r\n  Container,\r\n  Backing, \r\n  MenuTitle,\r\n  MenuButtonContainer,\r\n  MenuButton,\r\n  MenuButtonSpacer\r\n}\r\n","import { increaseScore, decreaseScore, updatePrevScore, flipScoreToggle } from '../gameSlice'\r\nimport store from '../../../app/store'\r\n\r\n\r\nexport const updateScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( increaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n\r\nexport const subtractScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( decreaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n","import React, { Children } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { showLaserSight, gameStateTransition, incrementWave, subtractFromTotalCredits, addPurchase, addToTotalAmmo,\r\n  upgradeRunSpeed, upgradeReloadSpeed, upgradeJumpForce, upgradeDefense, upgradeMelee, attachMod, setWeaponEquipped,\r\n  updateWeaponsList, setPlayerMagnetism, setPlayerMagDamage, setPlayerLastBullet, setPlayerCreditDropper,\r\n  setPlayerAmmoDropper, \r\n  setPlayerHealthDropper,\r\n  setPlayerQuickTurret,\r\n  setPlayerBarrierPlus,\r\n  setPlayerFusterCluck,\r\n  setAchievementOwned,\r\n  AchievementDefs} from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_GRENADE, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButton, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const Inline = styled.div`\r\ndisplay: inline-block;\r\nvertical-align: top;\r\nmargin-right: 4px;\r\n`\r\n\r\nconst IncrementDecrement = styled.div`\r\ntop: 0;\r\nwidth: 30px;\r\nheight: 30px;\r\ncolor: darkgreen;\r\nline-height: 30px;\r\ntext-align: center;\r\nposition: absolute;\r\nbackground-color: #ccc;\r\nleft: ${ props => props['left'] ? 0 : 'auto' };\r\nright: ${ props => props['right'] ? 0 : 'auto' };\r\ntransform: scale(1.0);\r\n&:hover {\r\n  transition: all;\r\n  transform: scale(1.05);\r\n  background-color: #fff;\r\n}\r\n`\r\n\r\nconst AmmoCount = styled.div`\r\ncolor: #FFF;\r\ntext-align: center;\r\n`\r\n\r\nconst UPGRADE_SUB_MENU = ' upgrade sub menu'\r\nconst PERKS_MENU = 'perks menu'\r\nconst STANDARD_MENU = 'standard menu'\r\nconst AMMO_MENU = 'ammo menu'\r\nconst HEALTHKIT_MENU = 'healthkit menu'\r\nconst BUY_NEW_WEAPONS_MENU = 'buy weapons menu'\r\nconst WEAPON_MODS_MENU = 'weapon mods menu'\r\nconst PISTOL_MODS_SUBMENU = 'pistol mods submenu'\r\nconst SMG_MODS_SUBMENU = 'smg mods submenu'\r\nconst SHOTGUN_MODS_SUBMENU = 'shotgun mods submenu'\r\nconst PLAYER_ATTRIBUTES_MENU = 'player attributes menu'\r\nconst DEFAULT_SUBMENU = 'none - default'\r\nconst PISTOL_AMMO_SUBMENU = 'pistol ammunition submenu'\r\nconst SMG_AMMO_SUBMENU = 'smg ammunition submenu'\r\nconst SHOTGUN_AMMO_SUBMENU = 'shotgun ammunition submenu'\r\nconst GRENADES_AMMO_SUBMENU = 'grenades submenu'\r\nconst ATTR_RUN_SPEED = 'run'\r\nconst ATTR_RELOAD_SPEED = 'reload'\r\nconst ATTR_JUMP_FORCE = 'jump'\r\nconst ATTR_DEFENSE = 'defense'\r\nconst ATTR_MELEE = 'melee'\r\n\r\nexport const CustomMenuButton = (props) => (\r\n  <MenuButton\r\n  opacity={ props && props.opacity ? props.opacity : 1 }\r\n  bgcolor={ props && props.bgcolor ? props.bgcolor : '#222' }\r\n  bordercolor={ props && props.bordercolor ? props.bordercolor : '#333' }\r\n  hovercolor={ props && props.hovercolor ? props.hovercolor : '#333' }\r\n  hoverborder={ props && props.hoverborder ? props.hoverborder : '#fff' }\r\n  width={ props.width }\r\n  height={ props.height }\r\n  style={ props.style }\r\n  cancelTransition={ props && props.cancelTransition ? props.cancelTransition : false }\r\n  onClick={ () => {\r\n    if (props.onClick) {\r\n      props.onClick()\r\n      let snd = window.gameObjects.getKeyValue('button-click-sound')\r\n      snd.play()\r\n    }\r\n  }}\r\n  onMouseOver={() => {\r\n    if (!props.cancelTransition) {\r\n      // let snd = window.gameObjects.getKeyValue('button-hover-sound')\r\n      // snd.play()\r\n    }\r\n  }}\r\n  >\r\n    { props.children }\r\n  </MenuButton>\r\n)\r\n\r\nexport const BackButton = props => (\r\n  <CustomMenuButton\r\n  width={ props.width ? props.width : 120 }\r\n  height={ 40 }\r\n  style={{ borderRadius: '10px' }}\r\n  bgcolor={ '#444' }\r\n  hovercolor={ '#189969' }\r\n  onClick={ props.onClick }\r\n  >\r\n    {\r\n      props.arrowOnly ?\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0;\r\n        </span>\r\n      :\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0; Back\r\n        </span>\r\n    }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const CornerBackButton = (props) => (\r\n  <div\r\n  style={{\r\n    top: 0,\r\n    right: props.right ? props.right : '20px',\r\n    marginTop: props.marginTop ? props.marginTop : '-40px',\r\n    position: 'absolute'\r\n  }}>\r\n      <BackButton\r\n      onClick={ props.onClick }\r\n      width={ props.width ? props.width : 120 }\r\n      arrowOnly={ props.arrowOnly ? props.arrowOnly : false }\r\n      />\r\n  </div>\r\n)\r\n\r\nfunction Modal ({ label, labelClr, width, height, clickConfirmHandler, clickCancelHandler }) {\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ top: '150px' }} width={ width ? width : 500 } height={ height ? height : 300 }>\r\n        <Backing\r\n        width={ width ? width : 500 }\r\n        height={ height ? height : 300 }\r\n        bgcolor={ '#222' }\r\n        opacity={ 1.0 }\r\n        style={{\r\n          borderRadius: '2px',\r\n          boxShadow: '5px 5px rgba(0, 0, 0, 0.2)'\r\n        }}\r\n        />\r\n        <MenuTitle style={{ fontSize: '1.2em' }}>\r\n          <span\r\n          style={{\r\n            color: labelClr\r\n          }}>\r\n          {\r\n            label\r\n          }\r\n          </span>\r\n        </MenuTitle>\r\n        <MenuButtonContainer space-top={ 200 }>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ 'red' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              marginRight: '12px',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickCancelHandler}>\r\n            Nope.\r\n          </MenuButton>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ '#189969' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickConfirmHandler}>\r\n            Confirm\r\n          </MenuButton>\r\n        </MenuButtonContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction AmmoSubMenu ({ type, toDefaultSubMenu, toAmmoSubMenu, toStandardMenu }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const ammoCostPerBox = useSelector(state => state.game.player.weapons.ammoCostPerBox)\r\n  const ammoCap = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const ammoReducer = (ammo, action) => {\r\n    switch (action.type) {\r\n      case 'INCREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] + action.amount\r\n        }\r\n      case 'DECREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] - action.amount\r\n        }\r\n      case 'SET':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: action.amount\r\n        }\r\n      default:\r\n        return ammo\r\n    }\r\n  }\r\n  const [ammoInCart, dispatchAmmoInCart] = React.useReducer(ammoReducer, {\r\n    'pistol weapon': 0,\r\n    'smg weapon': 0,\r\n    'grenades': 0,\r\n    'shotgun weapon': 0\r\n  })\r\n  const [dollarCost, setDollarCost] = React.useState(0)\r\n\r\n  return (\r\n    <>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={ '#28934C' }\r\n        width={100}\r\n        height={30}\r\n        style={{\r\n          borderRadius: '4px',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        { `$${ dollarCost }` }\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        width={150}\r\n        height={ 30 }\r\n        bgcolor={ '#444' }\r\n      >\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] - ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (ammoInCart[type] > 0) {\r\n              dispatchAmmoInCart({ type: 'DECREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-subtract-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          left={true}>\r\n            <span style={{ fontWeight: 'bold' }}>-</span>\r\n        </IncrementDecrement>\r\n        <AmmoCount>{ ammoInCart[type] }</AmmoCount>\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] + ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (credits >= cost) {\r\n              dispatchAmmoInCart({ type: 'INCREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-add-sound')\r\n              snd.play()\r\n            } else {\r\n              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          right={true}>\r\n            <span style={{ fontWeight: 'bold' }}>+</span>\r\n         </IncrementDecrement>\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={'rgba(0,0,0,0)'}\r\n        height={30}\r\n        >\r\n          <div style={{ display: 'inline-block', marginRight: '4px' }}>\r\n            <CustomMenuButton\r\n              onClick={ () => {\r\n                toDefaultSubMenu()\r\n                dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                setDollarCost(0)\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }}\r\n              width={80}\r\n              height={30}\r\n              hoverborder={'#B00000'}\r\n              >\r\n              Cancel\r\n            </CustomMenuButton>\r\n          </div>\r\n          <div style={{ display: 'inline-block' }}>\r\n            {\r\n              dollarCost > 0 ?\r\n              <CustomMenuButton\r\n                onClick={ () => {\r\n                  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n                  dispatch( subtractFromTotalCredits( dollarCost ) )\r\n                  dispatch( addPurchase(type !== WEAPON_TYPE_GRENADE ? `${type} ammo` : dollarCost > ammoCostPerBox[type] ? type : 'a grenade', dollarCost) )\r\n                  dispatch( addToTotalAmmo( type, ammoInCart[type] ) )\r\n                  dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                  if (type === WEAPON_TYPE_GRENADE) {\r\n                    weaponsUI.updateGrenadeIcons()\r\n                  } else {\r\n                    weaponsUI.select(type)\r\n                    dispatch( setWeaponEquipped(type) )\r\n                    weaponsUI.reload(true)\r\n                  }\r\n                  setDollarCost(0)\r\n                  toDefaultSubMenu()\r\n                }}\r\n                width={100}\r\n                height={30}\r\n                hoverborder={'#189969'}\r\n                >\r\n                Buy\r\n              </CustomMenuButton>\r\n              : null\r\n            }\r\n          </div>\r\n      </MenuButton>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PlayerAttributesMenuButton = ({ type, toDefaultSubMenu, subMenuType, setSubMenuType, toStandardMenu }) => {\r\n\r\n  const upgradeTiers = useSelector(state => state.game.player.upgradeTiers)\r\n  const upgradeCosts = useSelector(state => state.game.player.upgradeCosts)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const dispatch = useDispatch()\r\n  const upgradeTypes = {\r\n    'run': upgradeRunSpeed,\r\n    'jump': upgradeJumpForce,\r\n    'reload': upgradeReloadSpeed,\r\n    'defense': upgradeDefense,\r\n    'melee': upgradeMelee\r\n  }\r\n  const getAttrName = type => {\r\n    switch (type) {\r\n      case 'run':\r\n        return 'Run Speed'\r\n        break;\r\n      case 'jump':\r\n        return 'Jump Height'\r\n        break;\r\n      case 'reload':\r\n        return 'Reload Speed'\r\n        break;\r\n      case 'defense':\r\n        return 'Defense'\r\n        break;\r\n      case 'melee':\r\n        return 'Melee Attack Power'\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n      {\r\n        subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1\r\n        ?\r\n          subMenuType === type + UPGRADE_SUB_MENU\r\n          ?\r\n            <Modal\r\n              label={`Upgrade ${ getAttrName(type) } to lvl. ${ upgradeTiers[type].current + 1 }?`}\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( upgradeCosts[type] ) )\r\n                dispatch( addPurchase(`${getAttrName(type)} Boost`, upgradeCosts[type]) )\r\n                dispatch( upgradeTypes[type]() )\r\n                toDefaultSubMenu()\r\n              }}\r\n              clickCancelHandler={() => {\r\n                toDefaultSubMenu()\r\n              }}\r\n              />\r\n          : null\r\n        :\r\n        <>\r\n          <CustomMenuButton\r\n            width={getAttrName(type).length > 14 ? 340 : 240 }\r\n            onClick={() => {\r\n              if (credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max) {\r\n                setSubMenuType( type + UPGRADE_SUB_MENU )\r\n              } else {\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }\r\n            }}>\r\n            { getAttrName(type) } { upgradeTiers[type].current !== upgradeTiers[type].max ? 'Lvl.' : '' }{ upgradeTiers[type].current !== upgradeTiers[type].max ? upgradeTiers[type].current + 1 : '' } - <span style={{ color: credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max ? '#189969' : 'red' }}>\r\n            {\r\n              upgradeTiers[type].current < upgradeTiers[type].max\r\n              ? `$${upgradeCosts[type]}`\r\n              : 'MAXED'\r\n            }</span>\r\n          </CustomMenuButton>\r\n          <br/>\r\n        </>\r\n      }\r\n  </>\r\n  )\r\n}\r\n\r\nfunction ModSubMenu ({ type, setSubMenuType }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const modTiers = useSelector(state => state.game.player.modTiers)\r\n  const modCosts = useSelector(state => state.game.player.modCosts)\r\n  const ammoCapacity = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const getWepText = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        return 'Pistol'\r\n      case WEAPON_TYPE_SMG:\r\n        return 'SMG'\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        return 'SHOTGUN'\r\n      default:\r\n    }\r\n  }\r\n  let wepTxt = getWepText(type)\r\n  const getModDescription = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'RATE OF FIRE MAXED!' : 'Upgrade Rate-of-Fire'\r\n      case 'powder':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'FIREPOWER MAXED!' : 'Increase Firepower'\r\n      case 'sight':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'ACCURACY MAXED!' : 'Upgrade Accuracy'\r\n      case 'mag':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'AMMO CAP MAXED!' : 'Increase Ammo Capacity'\r\n      default:\r\n    }\r\n  }\r\n  const mods = ['rof', 'powder', 'sight', 'mag']\r\n  const [selectedMod, setSelectedMod] = React.useState(null)\r\n  const [selectedType, setSelectedType] = React.useState(null)\r\n  const modPurchaseName = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return `Rate of fire boost for the ${type}`\r\n      case 'powder':\r\n        return `Firepower boost for the ${type}`\r\n      case 'sight':\r\n        return `Accuracy boost for the ${type}`\r\n      case 'mag':\r\n        return `Magazine ammo capacity boost for the ${type}`\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Inline style={{ marginLeft: '40px' }}>\r\n        {\r\n          selectedMod && selectedType ?\r\n          <>\r\n            <Modal\r\n              label={`${getWepText(selectedType)} ${ getModDescription(selectedMod, selectedType) } lvl.${ modTiers[selectedMod][selectedType].current + 1 }?`}\r\n              labelClr={ modTiers[selectedMod][selectedType].current === modTiers[selectedMod][selectedType].max ? 'red' : 'white' }\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( modCosts[selectedMod][selectedType] ) )\r\n                dispatch( addPurchase(modPurchaseName(selectedMod, selectedType), modCosts[selectedMod][selectedType]) )\r\n                dispatch( attachMod(selectedMod, selectedType) )\r\n                if (selectedMod === 'mag') {\r\n                  dispatch( addToTotalAmmo(selectedType, ammoCapacity[selectedType]) )\r\n                  let wepUI = gameObjects.getKeyValue('weapons-ui')\r\n                  wepUI.updateWeaponMagazines(selectedType)\r\n                }\r\n                if (selectedMod === 'sight') {\r\n                  dispatch( showLaserSight(selectedType) )\r\n                }\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n              clickCancelHandler={() => {\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n            />\r\n          </>\r\n          :\r\n          mods.map((mod, i) => (\r\n            <React.Fragment key={i}>\r\n              <CustomMenuButton onClick={() => {\r\n                if (credits >= modCosts[mod][type] && modTiers[mod][type].current < modTiers[mod][type].max) {\r\n                  setSelectedMod(mod)\r\n                  setSelectedType(type)\r\n                } else {\r\n                  let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                  snd.play()\r\n                }\r\n              }} width={520}>{wepTxt}: {getModDescription(mod, type)} { modTiers[mod][type].current === modTiers[mod][type].max ? '' : ' - lvl.' } { modTiers[mod][type].current < modTiers[mod][type].max ? modTiers[mod][type].current + 1 : '' }{ modTiers[mod][type].current < modTiers[mod][type].max ? '-' : '' }<span style={{ color: credits >= modCosts[mod][type] && modTiers[mod][type].current !== modTiers[mod][type].max ? '#189969' : 'red' }}>\r\n                {`\r\n                  ${\r\n                    modTiers[mod][type].current === modTiers[mod][type].max ?\r\n                    '' : `$${ modCosts[mod][type] }`\r\n                  }`\r\n                }\r\n                </span>\r\n              </CustomMenuButton>\r\n              <br/>\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </Inline>\r\n      {\r\n        !selectedMod && !selectedType ?\r\n        <Inline>\r\n          <CustomMenuButton\r\n          onClick={ () => { setSubMenuType(DEFAULT_SUBMENU) }}\r\n          width={80}\r\n          height={30}\r\n          hoverborder={'red'}\r\n          style={{\r\n            marginLeft: '10px'\r\n          }}\r\n          >\r\n            close\r\n          </CustomMenuButton>\r\n        </Inline>\r\n        : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ShopMenu () {\r\n\r\n  const [menuType, setMenuType] = React.useState(STANDARD_MENU)\r\n  const [subMenuType, setSubMenuType] = React.useState(DEFAULT_SUBMENU)\r\n\r\n  const dispatch = useDispatch()\r\n  const game = useSelector(state => state.game)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const { gameObjects } = window\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const player = gameObjects.getKeyValue('player')\r\n\r\n  const continueToNextWave = () => {\r\n    screenUI.unpause()\r\n    dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  }\r\n\r\n  const toDefaultSubMenu = () => {\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const toAmmoMenu = () => {\r\n    setMenuType( AMMO_MENU )\r\n  }\r\n  \r\n  const toHealthkitMenu = () => {\r\n    setMenuType( HEALTHKIT_MENU )\r\n  }\r\n\r\n  const toPlayerAttrMenu = () => {\r\n    setMenuType( PLAYER_ATTRIBUTES_MENU )\r\n  }\r\n\r\n  const backToStandardMenu = () => {\r\n    setMenuType( STANDARD_MENU )\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const openAmmoSubMenu = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        setSubMenuType( PISTOL_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SMG:\r\n        setSubMenuType( SMG_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        setSubMenuType( SHOTGUN_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_GRENADE:\r\n        setSubMenuType( GRENADES_AMMO_SUBMENU )\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  const toWeaponModsMenu = () => {\r\n    setMenuType( WEAPON_MODS_MENU )\r\n  }\r\n\r\n  const toNewWeaponsMenu = () => {\r\n    setMenuType( BUY_NEW_WEAPONS_MENU )\r\n  }\r\n\r\n  const getHealthkitCostStyle = (kitType) => {\r\n    let condition = (\r\n      game.player.credits > game.consumables.healthkit[kitType].cost &&\r\n      game.player.health < 100\r\n    )\r\n    return {\r\n      color: condition ? '#189969' : 'red',\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (menuType === BUY_NEW_WEAPONS_MENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1) {\r\n      dispatch(\r\n        setAchievementOwned( AchievementDefs.WEAPONS_COLLECTOR )\r\n      )\r\n      updateScore( game.scoreAmounts.achievement )\r\n      backToStandardMenu()\r\n    }\r\n\r\n  }, [ game.player.weapons.list, menuType ])\r\n\r\n  React.useEffect(() => {\r\n\r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.PISTOL_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SMG].current === game.player.modTiers['rof'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SMG].current === game.player.modTiers['powder'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SMG].current === game.player.modTiers['sight'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SMG].current === game.player.modTiers['mag'][WEAPON_TYPE_SMG].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SMG_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SHOTGUN_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n      if (\r\n        game.achievements[ AchievementDefs.PISTOL_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SMG_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SHOTGUN_MODDER ].owned\r\n        ) {\r\n          dispatch(\r\n            setAchievementOwned( AchievementDefs.MOD_AFICIONADO )\r\n          )\r\n          updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n  }, [ game.player.modTiers ])\r\n\r\n  return (\r\n    <>\r\n      <Container width={ w * .75 } height={ h * .75 }>\r\n          <Backing width={ w * .75 } height={ h * .75 }/>\r\n          <MenuTitle>Shop</MenuTitle>\r\n          <MenuButtonContainer width={ w }>\r\n            {\r\n              menuType === STANDARD_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton width={350} onClick={ () => { toAmmoMenu() } }>Buy Ammo &amp; Grenades</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toHealthkitMenu() } }>Buy Health Kits</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { setMenuType(PERKS_MENU) } }>Perks</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toPlayerAttrMenu() } }>Upgrade Player</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toWeaponModsMenu() } }>Weapon Mods</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    null\r\n                    :\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={ () => { toNewWeaponsMenu() } }>Buy New Weapons</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ backToShopQuery }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === AMMO_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === PISTOL_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_PISTOL }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_PISTOL) } }>\r\n                          Buy Pistol Ammo\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SMG_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SMG }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SMG) } }>\r\n                            Buy SMG Ammo\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === GRENADES_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_GRENADE }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_GRENADE) } }>\r\n                          Buy Grenades\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SHOTGUN_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SHOTGUN }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SHOTGUN) } }>\r\n                            Buy Shotgun Shells\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton\r\n                    onClick={ () => { backToStandardMenu() } }>\r\n                  </BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === HEALTHKIT_MENU ?\r\n              <>\r\n              <MenuButtonSpacer>\r\n                <Inline>\r\n                  <MenuButtonSpacer>\r\n                    <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={() => {\r\n                        let amount\r\n                        if (game.player.health < 100) {\r\n                          if (game.player.health + 20 > 100) { amount = 100 }\r\n                          else { amount = game.player.health + 20 }\r\n                          player.acceptHealth( amount )\r\n                          dispatch( subtractFromTotalCredits(game.consumables.healthkit['20'].cost) )\r\n                          dispatch( addPurchase('+20 Healthkit', game.consumables.healthkit['20'].cost) )\r\n                          let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                          snd.play()\r\n                        } else {\r\n                          let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                          snd.play()\r\n                        }\r\n                      }}>+20 Healthkit - <span\r\n                      style={ getHealthkitCostStyle('20') }\r\n                      >\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['20'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                        width={ 300 }\r\n                        onClick={() => {\r\n                          let amount\r\n                          if (game.player.health < 100) {\r\n                            if (game.player.health + 50 > 100) { amount = 100 }\r\n                            else { amount = game.player.health + 50 }\r\n                            player.acceptHealth( amount )\r\n                            dispatch( subtractFromTotalCredits(game.consumables.healthkit['50'].cost) )\r\n                            dispatch( addPurchase('+50 Healthkit', game.consumables.healthkit['50'].cost) )\r\n                            let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                            snd.play()\r\n                          } else {\r\n                            let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>+50 Healthkit - <span\r\n                        style={ getHealthkitCostStyle('50') }>\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['50'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <CustomMenuButton\r\n                    width={ 300 }\r\n                    onClick={() => {\r\n                      if (game.player.health < 100) {\r\n                        player.acceptHealth( 100 )\r\n                        dispatch( subtractFromTotalCredits(game.consumables.healthkit['full'].cost) )\r\n                        dispatch( addPurchase('Full Healthkit', game.consumables.healthkit['full'].cost) )\r\n                      let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                        snd.play()\r\n                      } else {\r\n                        let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                        snd.play()\r\n                      }\r\n                    }}>Full Healthkit - <span\r\n                    style={ getHealthkitCostStyle('full') }>\r\n                    { game.player.health < 100 ? `${game.consumables.healthkit['full'].cost}` : 'Health Full' }\r\n                    </span>\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ () => { backToStandardMenu() } }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PLAYER_ATTRIBUTES_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RUN_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_JUMP_FORCE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RELOAD_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_DEFENSE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_MELEE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1 ? null                  \r\n                    :\r\n                    <MenuButtonSpacer>\r\n                      <BackButton\r\n                        onClick={ () => {\r\n                          backToStandardMenu()\r\n                        }}>\r\n                          Back\r\n                      </BackButton>\r\n                    </MenuButtonSpacer>\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PERKS_MENU ?\r\n              <>\r\n                <div\r\n                onClick={() => {\r\n                  setMenuType(STANDARD_MENU)\r\n                }}\r\n                style={{\r\n                  top: 0,\r\n                  right: '20px',\r\n                  marginTop: '-40px',\r\n                  position: 'absolute'\r\n                }}>\r\n                  <BackButton\r\n                  width={50}\r\n                  arrowOnly={true}\r\n                  />\r\n                </div>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['magnetism'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='increase-magnetism'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magnetism'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magnetism'].cost) )\r\n                            dispatch( setPlayerMagnetism(1200, 4) )\r\n                            dispatch( addPurchase('Magnetism perk', game.player.perks['magnetism'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Increase Magnetism\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magnetism'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magnetism'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='increase-magnetism' type='dark'>\r\n                        <span>\r\n                          Will increase the effect of items being drawn to you for easy pick up\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['magDmg'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='mag-damage'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magDmg'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magDmg'].cost) )\r\n                            dispatch( setPlayerMagDamage() )\r\n                            dispatch( addPurchase('Mag Damage perk', game.player.perks['magDmg'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Magazine Damage\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magDmg'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magDmg'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='mag-damage' type='dark'>\r\n                        <span>\r\n                          Ejected magazines will damage enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['lastBullet'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='last-bullet'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['lastBullet'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['lastBullet'].cost) )\r\n                            dispatch( setPlayerLastBullet() )\r\n                            dispatch( addPurchase('Last Bullet Extra Damage perk', game.player.perks['lastBullet'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Last Round\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['lastBullet'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['lastBullet'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='last-bullet' type='dark'>\r\n                        <span>\r\n                          Last bullet fired will cause greater damage to enemies \r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['creditDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='credit-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['creditDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['creditDropper'].cost) )\r\n                            dispatch( setPlayerCreditDropper() )\r\n                            dispatch( addPurchase('Credit Dropper perk', game.player.perks['creditDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Credit Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['creditDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['creditDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='credit-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will drop more credits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['ammoDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='ammo-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['ammoDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['ammoDropper'].cost) )\r\n                            dispatch( setPlayerAmmoDropper() )\r\n                            dispatch( addPurchase('Ammo Dropper perk', game.player.perks['ammoDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Ammo Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['ammoDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['ammoDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='ammo-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop ammunition\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['healthDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='health-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['healthDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['healthDropper'].cost) )\r\n                            dispatch( setPlayerHealthDropper() )\r\n                            dispatch( addPurchase('Health Dropper perk', game.player.perks['healthDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Health Dropper\r\n                          <span\r\n                              style={{\r\n                                color: (\r\n                                  credits >= game.player.perks['healthDropper'].cost ? 'green' : 'red'\r\n                                )\r\n                              }}>\r\n                                &nbsp;${game.player.perks['healthDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='health-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop small health kits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['quickTurret'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='quick-turret'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['quickTurret'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['quickTurret'].cost) )\r\n                            dispatch( setPlayerQuickTurret() )\r\n                            dispatch( addPurchase('Turret Upgrade perk', game.player.perks['quickTurret'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Quick Turrets\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['quickTurret'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['quickTurret'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='quick-turret' type='dark'>\r\n                        <span>\r\n                          Any placed machine gun turrets will now have less delay between fired shots and slightly more range\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['barrierPlus'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='barrier-plus'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['barrierPlus'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['barrierPlus'].cost) )\r\n                            dispatch( setPlayerBarrierPlus() )\r\n                            dispatch( addPurchase('Barrier Plus+ perk', game.player.perks['barrierPlus'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Barrier Plus\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['barrierPlus'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['barrierPlus'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='barrier-plus' type='dark'>\r\n                        <span>\r\n                          Placed barriers will now have increased strength to ward of oncoming enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['cluck'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='big-cluster'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['cluck'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['cluck'].cost) )\r\n                            dispatch( setPlayerFusterCluck() )\r\n                            dispatch( addPurchase('Fuster Cluck perk', game.player.perks['cluck'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Fuster Cluck\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['cluck'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['cluck'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='big-cluster' type='dark'>\r\n                        <span>\r\n                          Cluster bombs will now expel more explosives\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === BUY_NEW_WEAPONS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                            if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) {\r\n                              batch(() => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) )\r\n                                dispatch(\r\n                                  addPurchase('Submachine Gun', game.player.weapons.buyWeapons[WEAPON_TYPE_SMG])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SMG) )\r\n                              })\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                         Buy Submachine Gun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                          if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) {\r\n                            batch(\r\n                              () => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) )\r\n                                dispatch(\r\n                                  addPurchase('Shotgun', game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SHOTGUN) )\r\n                              }\r\n                              )\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                        Buy Shotgun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={() => { backToStandardMenu() }} />\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === WEAPON_MODS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer style={{ marginTop: '-15px' }}>\r\n                  {\r\n                    subMenuType === PISTOL_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_PISTOL} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SMG_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SMG} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SHOTGUN_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SHOTGUN} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === DEFAULT_SUBMENU ?\r\n                    <>\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={() => { setSubMenuType(PISTOL_MODS_SUBMENU) }}>Pistol Mods</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                      {\r\n                         game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SMG_MODS_SUBMENU) }}>SMG Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null \r\n                      }\r\n                      {\r\n                        game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SHOTGUN_MODS_SUBMENU) }}>Shotgun Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null\r\n                      }\r\n                      <MenuButtonSpacer style={{ marginTop: '40px' }}>\r\n                        <BackButton onClick={ backToStandardMenu }>Back</BackButton>\r\n                      </MenuButtonSpacer>\r\n                    </>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n          </MenuButtonContainer>\r\n        </Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport MenuComponents from './MenuComponents'\r\nimport { BackButton, CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\n\r\nexport default ({ backBtnFn }) => {\r\n\r\n  const { gameObjects } = window\r\n  const state = useSelector(state => state)\r\n  let achievementsKeys = Object.keys(state.game.achievements)\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container\r\n      width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n      height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n      >\r\n        <MenuComponents.Backing\r\n        width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n        height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n        ></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>Achievements</MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n            {\r\n              achievementsKeys.map(key => {\r\n                if (state.game.achievements[key].owned) {\r\n                  return (\r\n                    <React.Fragment key={key}>\r\n                    <Inline>\r\n                      <MenuComponents.MenuButtonSpacer data-tip data-for={key+'-description'}>\r\n                        <CustomMenuButton>\r\n                          {key}\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                    <ReactTooltip id={key+'-description'}>\r\n                      <span>\r\n                        Earned by: {state.game.achievements[key].description}\r\n                      </span>\r\n                    </ReactTooltip>\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n          <CornerBackButton marginTop={'-60px'} onClick={ backBtnFn } />\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport { decrementWave, gameStateTransition, setWaveCountToDefeat, toggleZombieHealthDisplay, toggleFilterEffects, setZombiesOnStage, StatsDefs } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport store from '../../../app/store'\r\nimport { CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { Children } from 'react'\r\nimport { batch, useDispatch, useSelector } from 'react-redux'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport updateScore from '../utils/updateScore'\r\nimport AchievementsView from './AchievementsView'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const resetWave = () => {\r\n  const screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  const player = window.gameObjects.getKeyValue('player')\r\n  // remove existing zombies, if any\r\n  let zombies = window.gameObjects.getKeyValue('zombies')\r\n  while(zombies.length > 0) {\r\n    zombies.forEach(z => { z.kill(null, true) })\r\n  }\r\n  window.gameObjects.setKeyValue('zombies', [])\r\n  screenUI.unpause()\r\n  if (player.dead) {\r\n    screenUI.respawn()\r\n  }\r\n}\r\n\r\nexport const gotoMainMenu = () => {\r\n  const dispatch = store.dispatch\r\n  resetWave()\r\n  batch(() => {\r\n    dispatch( setZombiesOnStage(0) )\r\n    dispatch( setWaveCountToDefeat(null) )\r\n    dispatch(gameStateTransition('sub', store.getState().game.gameSubState, SubStates.NEUTRAL))\r\n    dispatch( gameStateTransition('main', store.getState().game.gameState, GameStates.MAIN_MENU))\r\n  })\r\n}\r\n\r\nexport const NoTransitionButton = ({ bgcolor, bordercolor, hoverborder, hovercolor, width, height, children }) => (\r\n  <CustomMenuButton\r\n  onMouseOver={ null }\r\n  width={ width ? width : '200px' }\r\n  height={ height ? height : '60px' }\r\n  hovercolor={ hovercolor ? hovercolor : '#222' }\r\n  hoverborder={ hoverborder ? hoverborder : '#333' }\r\n  bordercolor={ bordercolor ? bordercolor : '#333' }\r\n  bgcolor={ bgcolor ? bgcolor : '#222' }\r\n  cancelTransition={true}\r\n  >\r\n    { children }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const Stat = ({ label, stat }) => {\r\n  return (\r\n    <MenuButtonSpacer padding={ 1 }>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 200 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { label }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 400 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.4)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.5)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { stat }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n    </MenuButtonSpacer>\r\n  )\r\n}\r\n\r\nexport default function PauseMenu (props) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const game = useSelector(state => state.game)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const stats = useSelector(state => state.game.stats)\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const pauseMenuStates = {\r\n    DEFAULT: 'Default',\r\n    ACHIEVEMENTS: 'achievements',\r\n    CONTROLS: 'Controls',\r\n    OPTIONS: 'Options',\r\n    STATS: 'Stats',\r\n  }\r\n\r\n  const showControls = () => {\r\n    setPauseMenuState(pauseMenuStates.CONTROLS)\r\n  }\r\n\r\n  const showOptions = () => {\r\n    setPauseMenuState(pauseMenuStates.OPTIONS)\r\n  }\r\n\r\n  const showDefault = () => {\r\n    setPauseMenuState(pauseMenuStates.DEFAULT)\r\n  }\r\n\r\n  const seeScoreboard = () => {\r\n    dispatch(\r\n      gameStateTransition('main', GameStates.MAIN_MENU, GameStates.SCORES_VIEW)\r\n    )\r\n  }\r\n\r\n  const showStats = () => {\r\n    setPauseMenuState(pauseMenuStates.STATS)\r\n  }\r\n\r\n  const [pauseMenuState, setPauseMenuState] = React.useState(pauseMenuStates.DEFAULT)\r\n\r\n  const resumeGame = () => {\r\n    if (gameState === GameStates.PAUSE) {\r\n      window.gameObjects.getKeyValue('screen-ui').togglePause()\r\n    }\r\n  }\r\n\r\n  const playGame = () => {\r\n    dispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n    dispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n    setTimeout(() => {\r\n      let weaponsUI = window.gameObjects.getKeyValue('weapons-ui')\r\n      weaponsUI.updateGrenadeIcons()\r\n      weaponsUI.updateWeaponsUI()\r\n      weaponsUI.updateWeaponMagazines(game.player.weapons.equipped)\r\n      // let screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n      // screenUI.unpause()\r\n    }, 100)\r\n  }\r\n\r\n  const showAchievements = () => {\r\n    setPauseMenuState(pauseMenuStates.ACHIEVEMENTS)\r\n  }\r\n\r\n  const effectFilters = useSelector(state => state.game.filterEffects)\r\n\r\n  const toggleFilters = () => {\r\n    dispatch( toggleFilterEffects(!effectFilters) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => zombie.checkFilters())\r\n    let ammos = window.gameObjects.getKeyValue('ammo-drops-by-type')\r\n    ammos[WEAPON_TYPE_SMG]\r\n    .concat(ammos[WEAPON_TYPE_PISTOL])\r\n    .concat(ammos[WEAPON_TYPE_SHOTGUN])\r\n    .forEach(ammo => ammo.checkFilters())\r\n    let credits = window.gameObjects.getKeyValue('currency-drops')\r\n    credits.forEach(credit => credit.checkFilters())\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    healths.forEach(health => health.checkFilters())\r\n    let player = window.gameObjects.getKeyValue('player')\r\n    player.checkFilters()\r\n    let weaponsUI = window.gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.checkFilters()\r\n  }\r\n\r\n  const displayZombieHealth = useSelector(state => state.game.displayZombieHealth)\r\n\r\n  const toggleZombieHealth = () => {\r\n    dispatch( toggleZombieHealthDisplay(!displayZombieHealth) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => {\r\n      zombie.displayHealth(!displayZombieHealth)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {\r\n      gameObjects ?\r\n        <Container style={{ top: props.margintop ? '100px' : 0 }} width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }>\r\n          { \r\n            props.hidebg ? null :\r\n            <>\r\n              <Backing bgcolor={ '#222' } opacity={ gameState === GameStates.MAIN_MENU ? .35 : .5 } width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }/>\r\n            </>\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.DEFAULT ?\r\n            <>\r\n              {\r\n                props.hidetitle ? null\r\n                : <MenuTitle>Pause Menu</MenuTitle>\r\n              }\r\n              <MenuButtonContainer width={ w ? w : 0 }>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 6 }>\r\n                  {\r\n                    props.playbtn ?\r\n                      <CustomMenuButton\r\n                      height={ 40 }\r\n                      onClick={ playGame }>\r\n                        Play Game\r\n                      </CustomMenuButton>\r\n                    :\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ resumeGame }>\r\n                        Resume Game\r\n                      </CustomMenuButton>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                {\r\n                  gameState !== GameStates.MAIN_MENU ?\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ gotoMainMenu }>\r\n                        Main Menu\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  :\r\n                    <MenuButtonSpacer padding={2}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ seeScoreboard }>\r\n                        Scoreboard\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                }\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showControls }>\r\n                    View Controls\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showOptions }>\r\n                    Options\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showStats }>\r\n                    Stats\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showAchievements }>\r\n                    Achievements\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.ACHIEVEMENTS ?\r\n            <AchievementsView backBtnFn={ showDefault } /> : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.CONTROLS ?\r\n            <>\r\n              <MenuTitle>Controls</MenuTitle>\r\n              <MenuButtonContainer width={ w }>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Jump: W</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Left: A</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Right: D</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Melee Weapon Bash: F</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Aim: Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Shoot: Left Mouse</CustomMenuButton>\r\n                </Inline>\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Charge Grenade Throw: Hold G / Right Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Change Weapon: Space / Mouse Wheel</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Turn Turret: L/R Arrow (while placing)</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Detonate remote mines: Numpad  1 - 9</CustomMenuButton>\r\n                </Inline>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.OPTIONS ?\r\n            <>\r\n              <MenuTitle>Options</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Effect Filters?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='effects-filter'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ effectFilters ? 'white' : 'red' }\r\n                      onClick={ toggleFilters }>\r\n                        <span\r\n                        style={{ color: effectFilters ? 'white' : 'red' }}>\r\n                        { effectFilters ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='effects-filter'>\r\n                      <span >\r\n                        Adds filter effects like glow and motion blur to animations. Turning off could improve performance.\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Display Zombie Health?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='display-zombie-health'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ displayZombieHealth ? 'white' : 'red' }\r\n                      onClick={ toggleZombieHealth }>\r\n                        <span\r\n                        style={{ color: displayZombieHealth ? 'white' : 'red' }}>\r\n                        { displayZombieHealth ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='display-zombie-health'>\r\n                      <span >\r\n                        Displays a yellow text box above each enemy zombie\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.STATS ?\r\n            <>\r\n              <MenuTitle>Stats</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Stat label={ 'Shots Fired' } stat={ stats.bulletsFired } />\r\n                <Stat label={ 'Mags Changed' } stat={ stats.timesReloaded } />\r\n                <Stat label={ 'Grenades Thrown' } stat={ stats.grenadesThrown } />\r\n                <Stat label={ 'Zombies Killed' } stat={ stats.zombiesKilled } />\r\n                <Stat label={ 'Deaths' } stat={ stats.timesKilled } />\r\n                {/* <Stat label={ 'Respawns' } stat={ stats.timesRespawned } /> */}\r\n                \r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n        </Container>\r\n      : null\r\n    }\r\n    </>\r\n  )\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { gameStateTransition, setShowingMessage } from './gameSlice'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { getBodyHeight } from './utils/Utils'\r\nimport { resetWave } from './ReactComponents/PauseMenu'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const createWaveMessage = txt => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: '#FFFFFF',\r\n\t\tfontSize: 40,\r\n    fontWeight: 'bold'\r\n  }, {\r\n    chars: [\r\n      ['a', 'z'],\r\n      ['0', '9'],\r\n      ['A', 'Z'],\r\n      ' .!?'\r\n    ]\r\n  })\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n  } = window\r\n  // let screenUI = gameObjects.getKeyValue('screen-ui')\r\n  let player = gameObjects.getKeyValue('player')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/5\r\n\r\n  container.addChild(text)\r\n  \r\n  const transitionToShopQuery = () => {\r\n    resetWave() // in case any zombies are roaming\r\n    if (getState().game.gameState === GameStates.MAIN_MENU || getState().game.gameState === GameStates.PAUSE) {\r\n      if (getState().game.gameSubState === SubStates.WAVE_DEFEATED || getState().game.gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.NEUTRAL))\r\n      }\r\n    } else {\r\n      if (!player.dead) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n        container.removeChild(text)\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const waveMsgOutro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgOutro, 2000)\r\n    } else {\r\n      to(text, .75, {\r\n        delay: 2,\r\n        x: gameWidth * 1.5,\r\n        ease: Power1.easeIn,\r\n        onUpdate: () => { if (gameObjects.getKeyValue('zombies').length > 0) { resetWave() } },\r\n        onComplete: transitionToShopQuery\r\n      })\r\n    }\r\n  }\r\n  \r\n  const waveMsgIntro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgIntro, 2000)\r\n    } else {\r\n      from(text, .75, {\r\n        x: -100,\r\n        alpha: 0,\r\n        // onUpdate: () => { resetWave() },\r\n        onUpdate: () => { if (gameObjects.getKeyValue('zombies').length > 0) { resetWave() } },\r\n        onComplete: waveMsgOutro\r\n      })\r\n    }\r\n  }\r\n\r\n  waveMsgIntro()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createGenericMessage = (txt, fillColor, durationMotion, durationLinger) => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: fillColor,\r\n\t\tfontSize: 40,\r\n\t\tfontWeight: 'bold'\r\n\t})\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n\t} = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/2\r\n\r\n\tcontainer.addChild(text)\r\n\r\n\tfrom(text, durationMotion, {\r\n\t\tx: -100,\r\n\t\talpha: 0,\r\n\t\tonStart: () => {\r\n\t\t\tdispatch( setShowingMessage(true) )\r\n\t\t},\r\n\t\tonComplete: () => {\r\n\t\t\tto(text, durationMotion, {\r\n\t\t\t\tdelay: durationLinger,\r\n\t\t\t\tx: gameWidth * 1.5,\r\n\t\t\t\tease: Power1.easeIn,\r\n\t\t\t\tonComplete: () => {\r\n\t\t\t\t\tdispatch( setShowingMessage(false) )\r\n\t\t\t\t\tcontainer.removeChild(text)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createTextMessage = (txt, fill, durationMotion, durationLinger, fontSize) => {\r\n\r\n  let {\r\n    gameObjects,\r\n    TweenLite: { to, set }\r\n  } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let texts = gameObjects.getKeyValue('text-messages')\r\n  let playerBody = gameObjects.getKeyValue('player').body\r\n  let msg = new PIXI.Text(txt, { fill, fontSize: fontSize ? fontSize : 13, fontWeight: 'bold' })\r\n  msg.pivot.x = msg.width * .5\r\n  msg.pivot.y = msg.height * .5\r\n  container.addChild(msg)\r\n\r\n  let { game: { player: { position: playerPosition } } } = getState()\r\n  let initialY = playerPosition.y - (getBodyHeight(playerBody) * .65)\r\n\r\n  texts.push(msg)\r\n\r\n  set(msg, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20)\r\n  })\r\n\r\n  to(msg, durationMotion, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20) - 20,\r\n    onComplete: () => {\r\n      to(msg, durationMotion, {\r\n        delay: durationLinger,\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          msg.destroy()\r\n          let idx = texts.indexOf(msg)\r\n          if (idx > -1) {\r\n            texts.splice(idx, 1)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n}\r\n","import { Bodies, Body, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport random from 'random'\r\n\r\nlet { TweenLite: { delayedCall, to } } = window\r\n\r\nexport default function Gib ({ position_x, position_y }, { force_x, force_y }, timeToDisappear) {\r\n  let { gameObjects } = window\r\n  let gibs = gameObjects.getKeyValue('gibs')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let body = Bodies.circle(position_x, position_y, 5, {\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  body.label = 'gib'\r\n  World.add(world, body)\r\n\r\n  let getTexturePNG = () => {\r\n    let gibs = [ 'gib.png', 'gib2.png', 'gib3.png', 'gib4.png' ]\r\n    return gibs[ Math.floor( Math.random() * gibs.length ) ]\r\n  }\r\n  \r\n  let partsSheet = gameObjects.getKeyValue('player-parts-sheet')\r\n  let gfc = new Sprite(\r\n    partsSheet.textures[ getTexturePNG() ]\r\n  )\r\n  container.addChild( gfc )\r\n  \r\n  gibs.push( this )\r\n\r\n  gfc.pivot.x = gfc.width * .5\r\n  gfc.pivot.y = gfc.height * .475\r\n\r\n  Body.applyForce(body, { x: position_x, y: position_y }, { x: random.float(force_x * .25, force_x), y: random.float(force_y * .25, force_y) })\r\n  \r\n  this.animate = renderFn => {\r\n    let { x, y, rotation: rot } = renderFn(body)\r\n    gfc.position = { x, y }\r\n    gfc.rotation = rot\r\n  }\r\n\r\n  this.destroy = () => {\r\n    if (gfc) {\r\n      gfc.destroy()\r\n    }\r\n    if (body) {\r\n      World.remove(world, body)\r\n    }\r\n    let idx = gibs.indexOf(this)\r\n    if ( idx > -1 ) {\r\n      gibs.splice( idx, 1 )\r\n    }\r\n    world = null\r\n    body = null\r\n    container = null\r\n    gibs = null\r\n    gameObjects = null\r\n  }\r\n\r\n  delayedCall(timeToDisappear, () => {\r\n    to(gfc, 2, { alpha: 0, onComplete: () => { this.destroy() }})\r\n  })\r\n\r\n  return this\r\n\r\n}\r\n\r\nexport function GibGenerator (count, position, force, timeToDisappear) {\r\n  let { x: position_x, y: position_y } = position\r\n  force = force || { force_x: 0, force_y: 0 }\r\n  let { x: force_x, y: force_y } = force\r\n  // add some gibs for effect!\r\n\tfor (let gibCnt = 0; gibCnt < count; ++gibCnt) {\r\n\t\tnew Gib({ position_x, position_y }, { force_x, force_y }, timeToDisappear)\r\n\t}\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { GibGenerator } from '../items/Gib'\r\n\r\nexport function PlayerRagdollDecap ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 60 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet maskBody = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  // let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n\t// spineToHead really\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  // let spineToLower = Constraint.create({\r\n  //   bodyA: bodyLower,\r\n  //   bodyB: lower_spineLinks[0],\r\n  //   pointA: { x: 0, y: -bLower.h/2 },\r\n  //   pointB: { x: 0, y: -spine.h/2 },\r\n  //   length: 10\r\n  // })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, maskBody, bodyUpper, //bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['head_gore.png'] )\r\n\tskull._id = 'skull'\r\n\tspriteParts.push( skull )\r\n\t\r\n  let mask = new PIXI.Sprite( parts_spritesheet.textures['mask.png'] )\r\n\tmask._id = 'mask'\r\n  spriteParts.push( mask )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\t// lower_spineLinks.forEach(link => {\r\n  //   let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n  //   entrailGfx.push( entrailGfc )\r\n  //   spriteParts.push( entrailGfc )\r\n  // })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_headless.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  // let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\t// torsoLower._id = 'torso lower'\r\n  // spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.mask = maskBody\r\n  this.bodyUpper = bodyUpper\r\n  // this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => {\r\n\t\t\tsprite.destroy()\r\n\t\t\tsprite = null\r\n\t\t})\r\n\t\tWorld.remove(world, this.composite)\r\n\t\tthis.composite = null\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet maskPos = renderFnc(this.mask)\r\n\t\tmask.position = maskPos\r\n\t\tmask.rotation = maskPos.rotation\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a head constraint\r\n\tComposite.remove(this.composite, bodyToHead)\r\n\tBody.applyForce(this.head, this.head.position, { x: 0, y: -0.1 })\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollHalved ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 35 }\r\n\tlet bLower = { w: 45, h: 5 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n  let bodyLower = Bodies.rectangle(x, y, bLower.w, bLower.h)\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = [], entrailGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: bodyUpper,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: bUpper.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  let spineToLower = Constraint.create({\r\n    bodyA: bodyLower,\r\n    bodyB: lower_spineLinks[0],\r\n    pointA: { x: 0, y: -bLower.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper, bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n  Composite.add(this.composite, lower_spineLinks)\r\n  Composite.add(this.composite, lower_spineConstraints)\r\n  Composite.add(this.composite, spineToLower)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\tlower_spineLinks.forEach(link => {\r\n    let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n    entrailGfx.push( entrailGfc )\r\n    spriteParts.push( entrailGfc )\r\n  })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_upper_gore.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\ttorsoLower._id = 'torso lower'\r\n  spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n  this.bodyUpper = bodyUpper\r\n  this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlower_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      entrailGfx[i].position = linkPos\r\n      entrailGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n\r\n    let torsoLowerPos = renderFnc(this.bodyLower)\r\n\t\ttorsoLower.position = torsoLowerPos\r\n\t\ttorsoLower.rotation = torsoLowerPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollMaim ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')  //gameObjects.getKeyValue('zombie-parts-sheet') //gameObjects.getKeyValue('z-parts-spritesheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull_gore.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach arm constraints\r\n\tComposite.remove(this.composite, [ bodyUpperToArmUpperL, bodyUpperToArmUpperR ])\r\n\tBody.applyForce(this.armLowerL, this.armLowerL.position, { x: -0.01, y: -0.1 })\r\n\tBody.applyForce(this.armLowerR, this.armUpperR.position, { x: 0.01, y: -0.1 })\r\n\r\n\t// auto removal\r\n\t// delayedCall(3, this.destroy)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function PlayerRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}","import { World } from 'matter-js'\r\nimport { AnimatedSprite } from 'pixi.js'\r\n\r\nexport const BLOOD_SPURT_TYPE_1 = 'blood spurt type 1'\r\nexport const BLOOD_SPURT_TYPE_2 = 'blood spurt type 2'\r\nexport const BLOOD_SPURT_TYPE_3 = 'blood spurt type 3'\r\n\r\nlet { TweenLite: { set } } = window\r\n\r\nexport default function BloodSpurt (type, position, scale, bodyToDelete) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n\r\n  let chosenSpurt = null\r\n  \r\n  let bloodSpurt1_sheet = gameObjects.getKeyValue('blood-spurt-1')\r\n  let bloodSpurt1 = new AnimatedSprite( bloodSpurt1_sheet.animations['blood_spurt_1'] )\r\n  \r\n  let bloodSpurt2_sheet = gameObjects.getKeyValue('blood-spurt-2')\r\n  let bloodSpurt2 = new AnimatedSprite( bloodSpurt2_sheet.animations['blood_spurt_2'] )\r\n  \r\n  let bloodSpurt3_sheet = gameObjects.getKeyValue('blood-spurt-3')\r\n  let bloodSpurt3 = new AnimatedSprite( bloodSpurt3_sheet.animations['blood_spurt_3'] )\r\n  \r\n  // randomize the returned spurt\r\n  let spurts = [ BLOOD_SPURT_TYPE_1, BLOOD_SPURT_TYPE_2, BLOOD_SPURT_TYPE_3 ]\r\n  let autoChosen = spurts[ Math.floor( Math.random() * spurts.length ) ]\r\n  \r\n  if (!type) {\r\n    type = autoChosen\r\n  }\r\n  \r\n  if (type === BLOOD_SPURT_TYPE_1) {\r\n    chosenSpurt = bloodSpurt1\r\n  } else if (type === BLOOD_SPURT_TYPE_2) {\r\n    chosenSpurt = bloodSpurt2\r\n  } else {\r\n    chosenSpurt = bloodSpurt3\r\n  }\r\n\r\n  chosenSpurt.onComplete = () => {\r\n    chosenSpurt.destroy()\r\n    if (bodyToDelete) {\r\n      World.remove(world, bodyToDelete)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    chosenSpurt = null\r\n    bloodSpurt1 = null\r\n    bloodSpurt1_sheet = null \r\n    bloodSpurt2 = null\r\n    bloodSpurt2_sheet = null \r\n    bloodSpurt3 = null\r\n    bloodSpurt3_sheet = null \r\n    spurts = null\r\n    autoChosen = null\r\n  }\r\n\r\n  chosenSpurt.animationSpeed = .5\r\n  chosenSpurt.pivot.x = chosenSpurt.width * .5\r\n  chosenSpurt.pivot.y = chosenSpurt.height * .5\r\n  if (scale) {\r\n    set(chosenSpurt.scale, { x: scale, y: scale })\r\n  } else {\r\n    set(chosenSpurt.scale, { x: .5, y: .5 })\r\n  }\r\n  chosenSpurt.position = position\r\n  chosenSpurt.loop = false\r\n  chosenSpurt.updateAnchor = true\r\n  chosenSpurt.play()\r\n  container.addChild( chosenSpurt )\r\n\r\n  return chosenSpurt\r\n\r\n}","export const FELL_OFF = 'fell off of ledge'\r\nexport const KILLED_BY_ZOMBIE = 'killed by zombie'","import { Body, World, Bodies } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nlet { getState } = store\r\n\r\nexport default function Rock(position) {\r\n  let { gameObjects, TweenLite: { to, delayedCall } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let rockPieceAssets = [ 'rock-piece1.png', 'rock-piece2.png', 'rock-piece3.png' ]\r\n  const getRandomRockSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        rockPieceAssets[ Math.floor( Math.random() * rockPieceAssets.length ) ]\r\n      ]\r\n  ))\r\n  let rockSprite = getRandomRockSprite()\r\n  const rockScale = () => random.float(.45, .65)\r\n  rockSprite.pivot.x = rockSprite.width * .48\r\n  rockSprite.pivot.y = rockSprite.height * .48\r\n  rockSprite.scale.x = rockScale()\r\n  rockSprite.scale.y = rockScale()\r\n  container.addChild(rockSprite)\r\n  let rockBody = Bodies.rectangle(position.x, position.y - 50, 10, 10, {\r\n    restitution: .25,\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  Body.applyForce(rockBody, rockBody.position, {\r\n    x: random.float(-0.005, 0.005),\r\n    y: random.float(-0.001, -0.0025),\r\n  })\r\n  World.add(world, rockBody)\r\n  this.animate = renderFn => {\r\n    let { x, y } = renderFn(rockBody)\r\n    rockSprite.position = { x, y }\r\n  }\r\n  this.destroy = () => {\r\n    let idx = rocks.indexOf(this)\r\n    World.remove(world, rockBody)\r\n    container.removeChild(rockSprite)\r\n    if (idx > -1) {\r\n      rocks.splice(idx, 1)\r\n    }\r\n    world = null\r\n    rocks = null\r\n    container = null\r\n    rockBody = null\r\n    rockSprite = null\r\n    gameObjects = null\r\n  }\r\n  delayedCall(\r\n    getState().game.lastWaveCountDefeated &&\r\n    getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n    () => {\r\n      to(rockSprite, .5, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    }\r\n  )\r\n  return this\r\n}\r\n","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class WoodPlank {\r\n\r\n  constructor(pos) {\r\n    this.gameObjects = window.gameObjects\r\n    const { to, delayedCall } = window.TweenLite\r\n    let container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let world = this.gameObjects.getKeyValue('world')\r\n    this.woodPlanksSheet = this.gameObjects.getKeyValue('wood-planks-sheet')\r\n    this.woodPlanks = this.gameObjects.getKeyValue('wood-planks')\r\n    this.plankRange = [ '000.png', '001.png', '002.png' ]\r\n    // this.planks = new Array(random.int(4, 8)).fill(1)\r\n    // this.planks.map(plank => this.getPlank())\r\n    let {x,y} = pos\r\n    this.gfc = this.getPlank()\r\n    this.gfc.width = 50\r\n    this.gfc.height = 15\r\n    this.gfcContainer = new PIXI.Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = this.gfcContainer.width * .5\r\n    this.gfcContainer.pivot.y = this.gfcContainer.height * .5\r\n    this.body = new Bodies.rectangle(x,y,50,15,{collisionFilter:playerCollisionOptions})\r\n    this.body.torque = random.float(-0.5, 0.5)\r\n    Body.applyForce(this.body, this.body.position, {\r\n      x: random.float(-0.02, 0.02),\r\n      y: random.float(-0.01, -0.02)\r\n    })\r\n    World.add(world, this.body)\r\n    container.addChild(this.gfcContainer)\r\n    this.destroy = () => {\r\n      let idx = this.woodPlanks.indexOf(this)\r\n      World.remove(world, this.body)\r\n      container.removeChild(this.gfcContainer)\r\n      if (idx > -1) {\r\n        this.woodPlanks.splice(idx, 1)\r\n      }\r\n      world = null\r\n      container = null\r\n      this.gameObjects = null\r\n      this.woodPlanks = null\r\n      this.gfc = null\r\n    }\r\n    delayedCall(4, () => {\r\n      to(this.gfcContainer, 2, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    })\r\n    return this\r\n  }\r\n\r\n  animate(renderFn) {\r\n    let {x,y,rotation:rot} = renderFn(this.body)\r\n    this.gfcContainer.position = {x,y}\r\n    this.gfcContainer.rotation = rot\r\n  }\r\n\r\n  getPlank() {\r\n    return (\r\n      new PIXI.Sprite(\r\n        this.woodPlanksSheet.textures[\r\n          this.plankRange[Math.floor(Math.random() * this.plankRange.length)]\r\n        ]\r\n      )\r\n    )\r\n  }\r\n\r\n}","import { contains } from 'jquery'\r\nimport { AnimatedSprite } from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport { BlurFilter } from '@pixi/filter-blur'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport store from '../../../app/store'\r\n\r\nexport default class ExplosionSprite {\r\n\r\n  constructor(type, renderBody) {\r\n    this.gameObjects = window.gameObjects\r\n    let { to } = window.TweenLite\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let explosionTexture1 = this.gameObjects.getKeyValue('explosion3d1-sheet')\r\n    let explosionTexture2 = this.gameObjects.getKeyValue('explosion3d2-sheet')\r\n    this.explosion1 = new AnimatedSprite( explosionTexture1.animations['explosion3d'] )\r\n    this.explosion2 = new AnimatedSprite( explosionTexture2.animations['explosion3d'] )\r\n    this.explosions = [ this.explosion1, this.explosion2 ]\r\n    this.explosions.forEach(ex => {\r\n      ex.pivot.x = ex.width * .5\r\n      ex.pivot.y = ex.height * .5\r\n      ex.loop = false\r\n      ex.onComplete = () => {\r\n        this.container.removeChild(ex)\r\n        this.container = null\r\n        this.gameObjects = null\r\n        explosionTexture1 = null\r\n        explosionTexture2 = null\r\n        this.explosions = null\r\n      }\r\n    })\r\n    if (type === 1) {\r\n      this.explosion = this.explosion1\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    if (type === 2) {\r\n      this.explosion = this.explosion2\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    // this.container.addChild(this.explosion)\r\n    this.renderBody = renderBody\r\n    let adjustment = new AdjustmentFilter()\r\n    adjustment.brightness = 20.0\r\n    adjustment.saturation = 3.0\r\n    let blur = new BlurFilter()\r\n    blur.blur = .5\r\n    let glow = new GlowFilter({\r\n      outerStrength: 3.0\r\n    })\r\n    this.filters = store.getState().game.filterEffects ? [\r\n      adjustment,\r\n      blur,\r\n      glow\r\n    ] : []\r\n    this.explosion.filters = this.filters\r\n    to(this.explosion, .35, { alpha: 0 })\r\n    to(adjustment, .5, { brightness: 1.0, saturation: 1.5, onUpdate: () => {\r\n      if (store.getState().game.filterEffects) {\r\n        this.explosion.filters = this.filters\r\n      }\r\n    }})\r\n    this.explosion.play()\r\n  }\r\n\r\n  // checkFilters() {\r\n  //   if (store.getState().game.filterEffects) {\r\n  //     this.explosion.filters = this.filters\r\n  //   } else {\r\n  //     this.explosion.filters = []\r\n  //   }\r\n  // }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.explosion.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.explosion) === -1) {\r\n        this.container.addChild(this.explosion)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport WoodPlank from '../items/WoodPlank'\r\nimport ExplosionSprite from './ExplosionSprite'\r\nimport { Howl, Howler } from 'howler'\r\n\r\nexport default function GrenadeExplosion (position, showRocksBool, options) {\r\n  let { gameObjects, TweenLite: { to } } = window\r\n  let explosion1 = window.gameObjects.getKeyValue('explosion1')\r\n  let explosionSound1 = new Howl({\r\n    src: [ explosion1 ]\r\n  })\r\n  let distantExplosion = window.gameObjects.getKeyValue('distant-explosion')\r\n  let distantExplosionSound = new Howl({\r\n    src: [ distantExplosion ]\r\n  })\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionsArray = gameObjects.getKeyValue('explosions')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\r\n  const getRandomSmokeSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        smokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n      ]\r\n  ))\r\n  let positionalBody = Bodies.rectangle(position.x, position.y, 20, 20, {\r\n    restitution: 0,\r\n    collisionFilter: playerCollisionOptions,\r\n    isStatic: true\r\n  })\r\n  World.add(world, positionalBody)\r\n  this.calcRenderedPosition = renderFn => {\r\n    let { x, y } = renderFn(positionalBody)\r\n    this.calculatedPosition = { x, y }\r\n    // if (container && container.children.indexOf(smokeSprite) === -1) {\r\n    //   container.addChild(smokeSprite)\r\n    // }\r\n  }\r\n  explosionsArray.push( this )\r\n  // put it together\r\n  // smoke animation \r\n  let randInt = random.int(5, 10) // reduced from (10, 20)\r\n  for (let s = 0; s < randInt; ++s) {\r\n    let smokeSprite = getRandomSmokeSprite()\r\n    smokeSprite.pivot.x = smokeSprite.width * .5\r\n    smokeSprite.pivot.y = smokeSprite.height * .5\r\n    let duration = 2 // smoke tween duration \r\n    to(smokeSprite, duration, {\r\n      onStart: () => { container.addChild(smokeSprite) },\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        if (s === randInt - 1) {\r\n          World.remove(world, positionalBody)\r\n          let idx1 = explosionsArray.indexOf(this)\r\n          if (idx1 > -1) { explosionsArray.splice(idx1, 1) }\r\n          world = null\r\n          explosionsArray = null\r\n          explosionAssetsSheet = null\r\n          smokeAssets = null\r\n        }\r\n      }\r\n    })\r\n    let randScale = random.int(1, 2)\r\n    to(smokeSprite.scale, .5, { x: randScale, y: randScale })\r\n    let xyval = { x: 0, y: 0 }\r\n    to(xyval, .5, { x: random.int(-100, 100), y: random.int(-50, 50) })\r\n    to(smokeSprite.position, duration, {\r\n      onUpdate: () => {\r\n        if (this.calculatedPosition) {\r\n          smokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n          smokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        smokeSprite.destroy()\r\n        container = null\r\n        gameObjects = null\r\n      }\r\n    })\r\n  }\r\n  let woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n  // rocks \r\n  if (position.y > 300 || showRocksBool) {\r\n    for (let r = 0; r < random.int(4, 7); ++r) {\r\n      if (options && options.showWood) {\r\n        woodPlanks.push(new WoodPlank(position))\r\n      } else {\r\n        rocks.push(new Rock(position))\r\n      }\r\n    }\r\n    woodPlanks = null\r\n    rocks = null\r\n  }\r\n  if (!options || options.showExplosionSprite) {\r\n    // blender explosion sprite\r\n    let explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    explosionSound1.seek(.5)\r\n    explosionSound1.play()\r\n    distantExplosionSound.play()\r\n    explosionSprites.push(\r\n      new ExplosionSprite(random.int(1, 2), positionalBody)\r\n    )\r\n    explosionSprites = null\r\n  }\r\n}","import { Bodies, Constraint, World } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { getBodyHeight, getBodyWidth, makePixiSprite } from '../utils/Utils'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport store from '../../../app/store'\r\n\r\nexport default function WallBarrier (pos, dimensions, type) {\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite:{ delayedCall } } = window\r\n  let barriersSprites = gameObjects.getKeyValue('barriers-sheet')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let buildObjects = gameObjects.getKeyValue('build-objects')\r\n  let {width:w,height:h} = dimensions\r\n  let woodenBarrier = new PIXI.Sprite(barriersSprites.textures['woodenBarrier.png'])\r\n  let stoneBarrier = new PIXI.Sprite(barriersSprites.textures['stoneBarrier.png'])\r\n  let metalBarrier = new PIXI.Sprite(barriersSprites.textures['metalBarrier.png'])\r\n  let explosiveBarrier = makePixiSprite('explosive-barrel')\r\n  this.types = {\r\n    WOOD: 'Wooden',\r\n    STONE: 'Stone',\r\n    METAL: 'Metal',\r\n    EXPLOSIVE: 'Explosive Barrel'\r\n  }\r\n  let {x,y} = pos\r\n  let objBody = Bodies.rectangle(x, y, w, h, {\r\n    inertia: Infinity,\r\n    label: type === this.types.EXPLOSIVE ? 'explosive barrier' : 'barrier'\r\n  })\r\n  // try to attach barrier to the ground\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  let constraint = Constraint.create({\r\n    bodyA: ground,\r\n    bodyB: objBody,\r\n    pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n    pointB: { x: 0, y: getBodyHeight(objBody)/2 },\r\n    length: 0\r\n  })\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n        break;\r\n      case this.types.STONE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 500 : 250\r\n        break;\r\n      case this.types.METAL:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 800 : 400\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 200 : 100\r\n        break;\r\n      default:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n    }\r\n  }\r\n\r\n  objBody.main = this\r\n  this.destroyed = false\r\n\r\n  this.getBody = () => objBody\r\n\r\n  // World.add(world, objBody)\r\n  World.add(world, [constraint, objBody])\r\n\r\n  let barrierSprite\r\n  let txtStyle = { fill: '#ffffff', fontSize: 12 }\r\n  let healthDisplay = new PIXI.Text(objBody.strength, txtStyle)\r\n  healthDisplay.pivot.x = healthDisplay.width * .5\r\n  healthDisplay.pivot.y = healthDisplay.height * .5\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        barrierSprite = woodenBarrier\r\n        break;\r\n      case this.types.STONE:\r\n        barrierSprite = stoneBarrier\r\n        break;\r\n      case this.types.METAL:\r\n        barrierSprite = metalBarrier\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        barrierSprite = explosiveBarrier\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  barrierSprite.width = w\r\n  barrierSprite.height = h\r\n  let sprite = new PIXI.Container()\r\n  sprite.addChild(barrierSprite)\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * .5\r\n  container.addChild(sprite)\r\n  container.addChild(healthDisplay)\r\n\r\n  let player = gameObjects.getKeyValue('player')\r\n  player.sprites.forEach(sprite => { container.addChild(sprite) })\r\n\r\n  this.takeDamage = (dmg) => {\r\n    objBody.strength -= dmg\r\n    healthDisplay.text = objBody.strength\r\n  }\r\n\r\n  this.displayBarrierStrength = (renderFn) => {\r\n    healthDisplay.position = renderFn(objBody)\r\n    barrierSprite.position = renderFn(objBody)\r\n  }\r\n\r\n  objBody.removeSelf = () => {\r\n    this.destroyed = true\r\n    new GrenadeExplosion(objBody.position, true, {\r\n      showWood: type === this.types.WOOD ? true : false,\r\n      showExplosionSprite: type === this.types.EXPLOSIVE ? true : false\r\n    })\r\n    if (type === this.types.EXPLOSIVE) {\r\n      let {x:_x,y:_y} = objBody.position\r\n      let explosionHitbox = Bodies.rectangle(_x, _y, 400, 300)\r\n      explosionHitbox.label = 'barrel explosion'\r\n      World.add(world, explosionHitbox)\r\n      delayedCall(2, () => {\r\n        if (explosionHitbox) {\r\n          World.remove(world, explosionHitbox)\r\n        }\r\n      })\r\n      explosionHitbox.removeSelf = () => {\r\n        World.remove(world, explosionHitbox)\r\n      }\r\n    }\r\n    World.remove(world, [constraint, objBody])\r\n    container.removeChild(healthDisplay)\r\n    container.removeChild(sprite)\r\n    let idx = buildObjects.indexOf(this)\r\n    if (idx > -1) { buildObjects.splice(idx, 1) }\r\n  }\r\n\r\n  return this\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class Landmine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('landmine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'landmine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['landmine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    new GrenadeExplosion(this.body.position, true)\r\n    let { TweenLite: { delayedCall } } = window\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { Bodies, World, Body, Vector } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { radians } from 'radians'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\n\r\nexport default function Grenade (x, y, r, force, fuseTime) {\r\n  this.grenadeDistance = {\r\n    start: x,\r\n    end: null\r\n  }\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite: { delayedCall, from } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let grenades = gameObjects.getKeyValue('grenades')\r\n  let grenadeBody = Bodies.circle(x, y, r, {\r\n    restitution: .8,\r\n    collisionFilter: { category: 3 }\r\n  })\r\n  grenadeBody.label = 'grenade'\r\n  grenadeBody.main = this\r\n  World.add(world, grenadeBody)\r\n  Body.applyForce(grenadeBody, grenadeBody.position, force)\r\n  grenadeBody.torque = .01\r\n  let grenadeGfc = new PIXI.Graphics()\r\n  grenadeGfc.beginFill(0x1F472C)\r\n  grenadeGfc.drawCircle(0, 0, r)\r\n  this.grenadeBody = grenadeBody\r\n  let bevel = new BevelFilter()\r\n  bevel.shadowAlpha = .45\r\n  bevel.lightAlpha = .35\r\n  bevel.thickness = 5\r\n  bevel.shadowColor = 0x0\r\n  bevel.lightColor = 0x208C44\r\n  let noise = new NoiseFilter()\r\n  noise.noise = .1\r\n  noise.seed = .5\r\n  grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise ] : []\r\n  let motionBlur = new MotionBlurFilter({ velocity: { x: 0, y: 0 } })\r\n  from(motionBlur.velocity, .75, { x: 100, y: 10 })\r\n  container.addChild(grenadeGfc)\r\n  this.animate = renderFn => {\r\n    if (grenadeBody && grenadeGfc) {\r\n      let { x, y, rotation: rot } = renderFn(grenadeBody)\r\n      grenadeGfc.position.x = x\r\n      grenadeGfc.position.y = y\r\n      grenadeGfc.rotation = rot\r\n      bevel.rotation = radians(rot)\r\n      grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise, motionBlur ] : []\r\n    }\r\n  }\r\n\r\n  delayedCall(fuseTime ? fuseTime : getState().game.player.weapons.grenadeFuseTime.default, () => {\r\n    if (!this.exploded) {\r\n      this.explode()\r\n    }\r\n  })\r\n  this.exploded = false\r\n  this.explode = (showRocks) => {\r\n    this.grenadeDistance.end = this.grenadeBody.position.x\r\n    this.exploded = true\r\n    new GrenadeExplosion(grenadeBody.position, showRocks ? showRocks : null)\r\n    let explosionSize = getState().game.player.weapons.grenadeExplosionSize\r\n    this.explosionHitbox = Bodies.rectangle(grenadeBody.position.x, grenadeBody.position.y, explosionSize, explosionSize, {\r\n      // isStatic: true\r\n    })\r\n    grenadeBody.distance = this.grenadeDistance\r\n    this.explosionHitbox.label = 'grenade explosion'\r\n    World.remove(world, grenadeBody)\r\n    World.add(world, this.explosionHitbox)\r\n    container.removeChild(grenadeGfc)\r\n    delayedCall(.01, () => {\r\n      this.destroy()\r\n    })\r\n  }\r\n  this.destroy = () => {\r\n    World.remove(world, this.explosionHitbox)\r\n    let idx = grenades.indexOf(this)\r\n    if (idx > -1) {\r\n      grenades.splice(idx, 1)\r\n    }\r\n    // world = null\r\n    // container = null\r\n    // gameObjects = null\r\n    // this.explosionHitbox = null\r\n    // grenadeBody = null\r\n    // grenadeGfc = null\r\n  }\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\nimport Grenade from '../items/Grenade'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Clustermine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('clustermine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'clustermine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['clustermine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    let r = 10, fuseTime = 4\r\n    let { gameObjects } = window\r\n    let grenades = gameObjects.getKeyValue('grenades') // can replace with different red or blue \"cluster bomb\" graphics\r\n    delayedCall(.25, () => {\r\n      let { getState } = store\r\n      let num = getState().game.player.perks['cluck'].owned ? 8 : 4\r\n      let xforce = getState().game.player.perks['cluck'].owned ? random.float(-0.02, 0.02) : random.float(-0.01, 0.01)\r\n      let yforce = getState().game.player.perks['cluck'] ? random.float(-0.025, -0.075) : random.float(-0.01, -0.05)\r\n      for (let i = 0; i < num; ++i) {\r\n        delayedCall(.1 * i, () => {\r\n          let nade = new Grenade(\r\n            this.body.position.x,\r\n            this.body.position.y - 50,\r\n            r,\r\n            {\r\n              x: xforce,\r\n              y: yforce\r\n            },\r\n            fuseTime\r\n          )\r\n          grenades.push( nade )\r\n        })\r\n      }\r\n    })\r\n    // above code expels additional cluster grenades \r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'clustermine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","export const barrierTypes = {\r\n  WOOD: 'Wooden',\r\n  STONE: 'Stone',\r\n  METAL: 'Metal',\r\n  EXPLOSIVE: 'Explosive Barrel'\r\n}\r\n\r\nexport const trapTypes = {\r\n  LANDMINE: 'Landmine',\r\n  CLUSTER_BOMB: 'Cluster Bomb',\r\n  REMOTE_MINE: 'Remote Mine',\r\n  TURRET: 'Machine Gun Turret'\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class RemoteMine {\r\n\r\n  constructor(pos, mineNumber) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.buildObjects = gameObjects.getKeyValue('build-objects')\r\n    this.remoteMines = gameObjects.getKeyValue('remote-mines')\r\n    this.remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n    let landmineSheet = gameObjects.getKeyValue('remote-mine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5, { collisionFilter: playerCollisionOptions })\r\n    this.body.label = 'remote mine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['remote-mine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n\r\n    // attach a number to the mine to know which key to press to detonate it\r\n    let txtStyle = { fill: '#00FFFF', fontSize: 12 }\r\n    this.num = new Text(`[ ${mineNumber} ]: detonate`, txtStyle)\r\n    this.num.pivot.x = this.num.width * .5\r\n    this.num.pivot.y = this.num.height * .5\r\n    this.container.addChild(this.num)\r\n    \r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n    this.num.position = { x, y: y - 50 }\r\n  }\r\n\r\n  detonate() {\r\n    this.destroy()\r\n  }\r\n\r\n  updateNumber(num) {\r\n    this.num.text = `[ ${num} ]: detonate`\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      this.container.removeChild(this.num)\r\n      let idx = this.buildObjects.indexOf(this)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n      let ridx = this.remoteMinesArr.indexOf(this)\r\n      if (ridx > -1) {\r\n        this.remoteMinesArr.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { World, Body, Bodies, Vector } from 'matter-js'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS, LESS_THAN_PLAYER_Y_POS } from '../constants/mouseStates'\r\nimport { PISTOL_BULLET_REMOVAL_TIMEOUT, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX,\r\n  WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET, WEAPON_TYPE_SHOTGUN\r\n } from '../constants/weapons'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport { calcBulletAngle, getBodyWidth, getBodyHeight, getPlayerBody, getPlayerPartByType } from '../utils/Utils'\r\nimport { createGenericMessage, createTextMessage } from '../createMessages'\r\nimport { setLastShot, StatsDefs } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { increaseStats } from '../gameSlice'\r\nimport { radians } from 'radians'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const calcPistolDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_PISTOL]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcTurretDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_TURRET]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcSMGDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SMG]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcShotgunDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SHOTGUN]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\n// bullet impact\r\nexport function BulletImpact (surfaceType, position, scale) {\r\n\tlet {x,y} = position\r\n\tlet { gameObjects, TweenLite: { to, set, from } } = window\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n\tWorld.add(world, positionalBody)\r\n\r\n\tlet explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n\tlet smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\tconst getRandomSmokeSprite = () => (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\texplosionAssetsSheet.textures[\r\n\t\t\t\tsmokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n\t\t\t]\r\n\t))\r\n\tlet randInt = 2 //random.int(2, 4)\r\n\tfor (let i = 0; i < randInt; ++i) {\r\n\t\tlet smokeSprite = getRandomSmokeSprite()\r\n\t\tif (surfaceType === 'enemy') {\r\n\t\t\tsmokeSprite.tint = 0xFF0000\r\n\t\t}\r\n\t\tsmokeSprite.pivot.x = smokeSprite.width * .5\r\n\t\tsmokeSprite.pivot.y = smokeSprite.height * .5\r\n\t\tto(smokeSprite, scale && scale.alphaDuration ? scale.alphaDuration : .5, {\r\n\t\t\talpha: 0,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tif (i === randInt - 1) {\r\n\t\t\t\t\tWorld.remove(world, positionalBody)\r\n\t\t\t\t\tworld = null \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet randScale\r\n\t\tif (scale && scale.rand && scale.rand.min && scale.rand.max) {\r\n\t\t\trandScale = random.float(scale.rand.min, scale.rand.max)\r\n\t\t} else {\r\n\t\t\trandScale = random.float(.25, .5)\r\n\t\t}\r\n\t\tset(smokeSprite.scale, {\r\n\t\t\tx: scale && scale.set ? scale.set : .1,\r\n\t\t\ty: scale && scale.set ? scale.set : .1\r\n\t\t})\r\n\t\tto(smokeSprite.scale, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: randScale,\r\n\t\t\ty: randScale\r\n\t\t})\r\n\t\tlet xyval = { x: 0, y: 0 }\r\n\t\tto(xyval, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-10, 10),\r\n\t\t\ty: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-50, 0)\r\n\t\t})\r\n\t\tto(smokeSprite.position, 3, {\r\n\t\t\tonUpdate: () => {\r\n\t\t\t\tif (this.calculatedPosition) {\r\n\t\t\t\t\tsmokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n\t\t\t\t\tsmokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n\t\t\t\t\tif (container && container.children.indexOf(smokeSprite) < 0) {\r\n\t\t\t\t\t\tcontainer.addChild(smokeSprite)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tsmokeSprite.destroy()\r\n\t\t\t\tcontainer = null\r\n\t\t\t\tgameObjects = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tthis.renderPosition = (renderFn) => {\r\n\t\tthis.calculatedPosition = renderFn(positionalBody)\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\n// bullet shell\r\nexport function PistolShell(x, y, gameObjects, changeLabelString, overrideOptions) {\r\n\tlet world, container, shells\r\n\tlet { game: { mouseState, player: { weapons: { equipped, shellEjectionForce, shellRemovalTimeout } } } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!shells) { shells = gameObjects.getKeyValue('pistol-shells') }\r\n\t// matter\r\n\tthis.body = overrideOptions && overrideOptions.body\r\n\t? overrideOptions.body\r\n\t: Bodies.rectangle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 30\r\n      : x - 30\r\n    ,\r\n    mouseState.y === LESS_THAN_PLAYER_Y_POS ? y - 40 : y - 20\r\n    , 7, 4, {\r\n\t\trestitution: 0.75,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.body.label = changeLabelString !== undefined ? `player ${changeLabelString} shell` : 'player pistol shell'\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.body.label = 'shotgun shell'\r\n\t}\r\n\tWorld.add(world, this.body)\r\n\tBody.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.force ? overrideOptions.force : {\r\n\t\tx: mouseState.x === GREATER_THAN_PLAYER_X_POS ? random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max) : random.float(shellEjectionForce[equipped].min, shellEjectionForce[equipped].max),\r\n\t\ty: random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max)\r\n\t})\r\n\tBody.setAngularVelocity(this.body, random.float(-PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, -PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX))\r\n\t// pixi\r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(equipped === WEAPON_TYPE_SHOTGUN ? 0xB00000 : 0xAB931E)\r\n\t// if (!shellWd) {\r\n\t// }\r\n\tlet shellWd = getBodyWidth(this.body)\r\n\tlet shellHt = getBodyHeight(this.body)\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 1)\r\n\t} else {\r\n\t\tif (equipped === WEAPON_TYPE_SMG) {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 2)\r\n\t\t} else {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellWd, shellHt)\r\n\t\t}\r\n\t}\r\n\tthis.gfc.endFill()\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.beginFill(0xCCB64D)\r\n\t\tthis.gfc.drawRect(0, shellWd + 1, shellHt, 3)\r\n\t\t// this.gfc.rotation = radians(45)\r\n\t}\r\n\tif (!window.gameObjects.getKeyValue('bullet-shell-bevel')) {\r\n\t\twindow.gameObjects.setKeyValue('bullet-shell-bevel', new BevelFilter({ lightAlpha: 0.5, shadowAlpha: 0.5 }))\r\n\t}\r\n\tlet filters = [ window.gameObjects.getKeyValue('bullet-shell-bevel') ]\r\n\tthis.gfc.filters = getState().game.filterEffects ? filters : []\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tshells.push(this)\r\n\t// methods\r\n\tthis.destroy = function () {\r\n\t\tcontainer.removeChild(this.gfc)\r\n\t\tWorld.remove(world, this.body)\r\n\t\tthis.body = null\r\n\t\tthis.gfc = null\r\n\t\tshells.splice(shells.indexOf(this), 1)\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t\tshells = null\r\n\t}\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), shellRemovalTimeout[equipped])\r\n\treturn this\r\n}\r\n\r\nexport function PistolBullet(x, y, gameObjects, changeLabelString, overrideOptions, extraDamageBool) {\r\n\tlet world, container\r\n\tlet arm, bullets, bulletWd\r\n\tarm = getPlayerPartByType('arm', gameObjects) \r\n  let { game: { mouseRelativeToPlayerPosition, mouseState } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!bullets) { bullets = gameObjects.getKeyValue('pistol-bullets') }\r\n  this.body = overrideOptions && overrideOptions.overrideBody ? overrideOptions.overrideBody : Bodies.circle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 50\r\n      : x - 50\r\n    ,\r\n    y, 4, {\r\n\t\trestitution: 0.3\r\n  })\r\n\r\n\tthis.body.label = (\r\n\t\textraDamageBool ? 'extra damage bullet'\r\n\t\t:\r\n\t\t\tchangeLabelString !== undefined && changeLabelString !== null ?\r\n\t\t\t`player ${changeLabelString} bullet`\r\n\t\t\t:  'player pistol bullet'\r\n\t)\r\n\tthis.body.main = this\r\n  World.add(world, this.body)\r\n\tBody.setAngle(this.body, overrideOptions && overrideOptions.overrideAngle ? overrideOptions.overrideAngle : Vector.angle(this.body.position, mouseRelativeToPlayerPosition))\r\n  Body.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.overrideForce ? overrideOptions.overrideForce : calcBulletAngle(arm.position, mouseRelativeToPlayerPosition))\r\n\r\n\t// pixi \r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(0xFFFFFF)\r\n\tif (!bulletWd) { bulletWd = getBodyWidth(this.body) }\r\n\tthis.gfc.drawRect(0, 0, bulletWd, (bulletWd/3))\r\n\tthis.gfc.endFill()\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tbullets.push(this)\r\n\t// // add bullet trail\r\n  // let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n\t// this.bulletTrail = new PIXI.Graphics()\r\n\t// this.bulletTrail.lineStyle(\r\n\t// \t2,\r\n\t// \t(\r\n\t// \t\toverrideOptions ? 0xFFFFFF\r\n\t// \t\t:\r\n\t// \t\t\ttier === 1 ? 0xFFFFFF\r\n\t// \t\t\t:\r\n\t// \t\t\t\ttier === 2 ? 0xFFD100\r\n\t// \t\t\t\t:\r\n\t// \t\t\t\t\ttier === 3 ? 0xFF6D00\r\n\t// \t\t\t\t\t:\r\n\t// \t\t\t\t\t\ttier === 4 ? 0xFF0000\r\n\t// \t\t\t\t\t\t: 0xFFFFFF\r\n\t// \t),\r\n\t// \t0.8\r\n\t// )\r\n\t// this.linePoints = []\r\n\t// this.lineDrawn = false\r\n\t// this.drawLine = () => {\r\n\t// \tif (this.lineDrawn === false && getState().game.player.weapons.equipped !== WEAPON_TYPE_SHOTGUN) {\r\n\t// \t\tsetTimeout(() => {\r\n\t// \t\t\tif (this.linePoints) {\r\n\t// \t\t\t\tthis.linePoints.forEach((p, i) => {\r\n\t// \t\t\t\t\tif (this.linePoints[i+1]) {\r\n\t// \t\t\t\t\t\tthis.bulletTrail.moveTo(p.x, p.y)\r\n\t// \t\t\t\t\t\tthis.bulletTrail.lineTo(this.linePoints[i+1].x, this.linePoints[i+1].y)\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t}\r\n\t// \t\t}, 200)\r\n\t// \t\tthis.lineDrawn = true\r\n\t// \t}\r\n\t// }\r\n\t// container.addChild(this.bulletTrail)\r\n\r\n\t// methods\r\n\tthis.addImpactEffect = (surfaceType, pos) => {\r\n\t\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\t\tlet impact = new BulletImpact(surfaceType, pos)\r\n\t\tbulletImpacts.push(impact)\r\n\t}\r\n\r\n\tthis.destroyed = false\r\n\tthis.destroy = function (surfaceType) {\r\n\t\tif (!this.destroyed) {\r\n\t\t\tlet bulletLastPos = this.body.position\r\n\t\t\tthis.destroyed = true\r\n\t\t\tcontainer.removeChild(this.gfc)\r\n\t\t\tcontainer.removeChild(this.bulletTrail)\r\n\t\t\tWorld.remove(world, this.body)\r\n\t\t\tthis.linePoints = null\r\n\t\t\tthis.body = null\r\n\t\t\tthis.gfc = null\r\n\t\t\tif (bullets.indexOf(this) > -1) {\r\n\t\t\t\tbullets.splice(bullets.indexOf(this), 1)\r\n\t\t\t}\r\n\t\t\tif (surfaceType) {\r\n\t\t\t\t// add bullet collision impact effect depending on the surface hit\r\n\t\t\t\tthis.addImpactEffect(surfaceType, bulletLastPos)\r\n\t\t\t}\r\n\t\t\tworld = null\r\n\t\t\tcontainer = null\r\n\t\t\tgameObjects = null \r\n\t\t}\r\n\t}\r\n\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), PISTOL_BULLET_REMOVAL_TIMEOUT)\r\n\treturn this\r\n}\r\n\r\nconst fireEquippedWeapon = (gameObjects) => {\r\n\tlet world, weaponsUI, player, playerBody, playerBodyWd, playerBodyHt, arm\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n  if (!weaponsUI) { weaponsUI = gameObjects.getKeyValue('weapons-ui') }\r\n  if (!player) { player = gameObjects.getKeyValue('player') }\r\n\tlet { game: { player: { weapons: { lastShot, totalAmmo, equipped, shotLimiter } } } } = getState()\r\n\tif (JSON.parse(lastShot[equipped]) + shotLimiter[equipped] < Date.now() && !weaponsUI.checkEmpty(equipped) && !weaponsUI.reloading && totalAmmo[equipped] > 0) {\r\n\t\tdispatch( setLastShot(equipped, JSON.stringify(Date.now())) )\r\n\t\tdispatch( increaseStats( StatsDefs.bulletsFired ) )\r\n    weaponsUI.fireBullet(equipped)\r\n    player.fireWeaponAnimation()\r\n\t\tif (!playerBody) { playerBody = getPlayerBody(gameObjects) }\r\n\t\tif (!playerBodyWd) { playerBodyWd = getBodyWidth(playerBody) }\r\n\t\tif (!playerBodyHt) { playerBodyHt = getBodyHeight(playerBody) }\r\n\t\tif (!arm) { arm = getPlayerPartByType('arm', gameObjects) }\r\n\t\tlet extraDmg = (\r\n\t\t\tweaponsUI.lastBulletByWepType[equipped] && getState().game.player.perks['lastBullet'].owned ? true : false\r\n\t\t)\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tnew PistolShell(0, 0, gameObjects, null, {\r\n\t\t\t\tbody: Bodies.rectangle(playerBody.position.x, arm.position.y, 10, 4, { collisionFilter: playerCollisionOptions })\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tnew PistolShell(playerBody.position.x, arm.position.y, gameObjects, (\r\n\t\t\t\tequipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined\r\n\t\t\t))\r\n\t\t}\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\t\tnew PistolBullet(arm.position.x, arm.position.y, gameObjects, 'shotgun', extraDmg)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnew PistolBullet(\r\n\t\t\t\tarm.position.x,\r\n\t\t\t\tarm.position.y,\r\n\t\t\t\tgameObjects,\r\n\t\t\t\t(equipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined),\r\n\t\t\t\tnull,\r\n\t\t\t\textraDmg\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tworld = null \r\n\t\tweaponsUI = null\r\n\t\tplayer = null\r\n\t\tplayerBody = null\r\n\t\tplayerBodyWd = null\r\n\t\tplayerBodyHt = null\r\n\t\tarm = null \r\n\r\n\t} else if (totalAmmo[equipped] === 0 && getState().game.showingMessage === false) {\r\n\t\t// createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n\t\t// make click noise or some other indicator\r\n\t\tif (!weaponsUI.shaking) {\r\n\t\t\tweaponsUI.changeTextForEmptyShake('EMPTY')\r\n\t\t\tweaponsUI.emptyMagShake()\r\n\t\t}\r\n\t} else if (weaponsUI.checkEmpty(equipped) && getState().game.showingMessage === false) {\r\n\t\tif (!weaponsUI.reloading) {\r\n\t\t\t// createGenericMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// createTextMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// make empty mag sound or shake weapon UI\r\n\t\t\tif (!weaponsUI.shaking) {\r\n\t\t\t\tweaponsUI.changeTextForEmptyShake('RELOAD')\r\n\t\t\t\tweaponsUI.emptyMagShake()\r\n\t\t\t}\r\n    }\r\n\t}\r\n}\r\n\r\nexport const firePistol = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireSMG = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireShotgun = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n","import random from 'random'\r\nimport * as PIXI from 'pixi.js'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport store from '../../../app/store'\r\n\r\nexport default class MuzzleFlashFX {\r\n\r\n  constructor() {\r\n    let { gameObjects } = window\r\n    this.to = window.TweenLite.to\r\n    this.set = window.TweenLite.set\r\n    let container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.container = container\r\n    let muzzleFlashesSheet = gameObjects.getKeyValue('muzzle-flashes-sheet')\r\n    let muzzleFlash001 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash1.png']\r\n    )\r\n    let muzzleFlash002 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash2.png']\r\n    )\r\n    let muzzleFlash003 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash3.png']\r\n    )\r\n    let muzzleFlash004 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash4.png']\r\n    )\r\n    let muzzleFlash005 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash5.png']\r\n\t\t)\r\n\t\tlet muzzleFlashes = [\r\n\t\t\tmuzzleFlash001,\r\n\t\t\tmuzzleFlash002,\r\n\t\t\tmuzzleFlash003,\r\n\t\t\tmuzzleFlash004,\r\n\t\t\tmuzzleFlash005\r\n\t\t]\r\n    container.addChild(muzzleFlash001)\r\n    container.addChild(muzzleFlash002)\r\n    container.addChild(muzzleFlash003)\r\n    container.addChild(muzzleFlash004)\r\n    container.addChild(muzzleFlash005)\r\n    muzzleFlash001.visible = false\r\n    muzzleFlash002.visible = false\r\n    muzzleFlash003.visible = false\r\n    muzzleFlash004.visible = false\r\n    muzzleFlash005.visible = false\r\n    // muzzle fire FX \r\n    this.muzzleScale = .65\r\n    this.blurFilter = new PIXI.filters.BlurFilter()\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n    this.blurFilter.quality = 5\r\n    this.glowFilter = new GlowFilter()\r\n    this.glowFilter.innerStrength = 0.1\r\n    this.glowFilter.outerStrength = random.float(1.0, 1.5)\r\n    // this.glowFilter.color = 0xFFFFFF\r\n    this.adjustmentFilter = new AdjustmentFilter()\r\n    this.adjustmentFilter.brightness = 2.0\r\n    this.adjustmentFilter.saturation = 2.0\r\n    this.flashes = []\r\n    muzzleFlashes.forEach(flash => {\r\n      flash.updateAnchor = true\r\n      flash.scale = { x: this.muzzleScale, y: this.muzzleScale }\r\n      flash.filters = store.getState().game.filterEffects ? [\r\n        this.blurFilter,\r\n        this.adjustmentFilter,\r\n        this.glowFilter\r\n      ] : []\r\n      this.flashes.push( flash )\r\n    })\r\n  }\r\n\r\n  get muzzleScale () {\r\n    return this._muzzleScale\r\n  }\r\n\r\n  set muzzleScale (scale) {\r\n    this._muzzleScale = scale\r\n  }\r\n\r\n  fireEffect(pos) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let randFlash = this.getRandomFlash()\r\n    randFlash.visible = true\r\n    if (pos) {\r\n      randFlash.position = pos\r\n    }\r\n    if (store.getState().game.filterEffects) {\r\n      this.adjustmentFilter.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      this.glowFilter.color = (\r\n        tier === 1 ? 0xFFF500\r\n          :\r\n            tier === 2 ? 0xFFD100\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF3800\r\n                : 0xFFFFFF\r\n      )\r\n    }\r\n    randFlash.filters = store.getState().game.filterEffects ? [\r\n      this.glowFilter,\r\n      this.adjustmentFilter,\r\n      this.blurFilter\r\n    ] : []\r\n    this.container.addChild( randFlash )\r\n    this.set(randFlash, { alpha: 1 })\r\n    this.set(randFlash.scale, { x: this.muzzleScale })\r\n    this.to(randFlash, .1, { alpha: 0 })\r\n    this.to(randFlash.scale, .1, { x: this.muzzleScale * 2, onComplete: () => {\r\n      randFlash.visible = false\r\n    }})\r\n  }\r\n\r\n  setMuzzleRotations(rotation) {\r\n    this.flashes.forEach(flash => {\r\n      flash.rotation = rotation\r\n    })\r\n    this.rotation = rotation\r\n  }\r\n\r\n  getRandomBlur() {\r\n    return random.float(0.5, 4.0)\r\n  }\r\n\r\n  changeBlurAmount() {\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n  }\r\n\r\n  getFlashes() {\r\n    return this.flashes\r\n  }\r\n\r\n  getRandomFlash() {\r\n    return this.flashes[ Math.floor( Math.random() * this.flashes.length) ]\r\n  }\r\n\r\n}","import { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { Bodies, World, Constraint } from 'matter-js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { PistolShell, PistolBullet } from '../player/fireWeapons'\r\nimport { radians, degrees } from 'radians'\r\nimport { getBodyHeight, getBodyWidth } from '../utils/Utils'\r\nimport store from '../../../app/store'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport random from 'random'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class MachineGunTurret {\r\n\r\n  constructor(position) {\r\n    let {x,y} = position\r\n    this.delayedCall = window.TweenLite.delayedCall\r\n    this.gameObjects = window.gameObjects\r\n    this.world = this.gameObjects.getKeyValue('world')\r\n    this.buildObjects = this.gameObjects.getKeyValue('build-objects')\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    this.scanAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-scan-sheet').animations['turretScan']\r\n    )\r\n    this.scanAnim.visible = true\r\n    this.scanAnim.loop = true\r\n    this.scanAnim.play()\r\n    this.shootAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-shoot-sheet').animations['turretShoot']\r\n    )\r\n    this.shootAnim.loop = false\r\n    this.shootAnim.onFrameChange = () => {\r\n      // if (this.shootAnim.currentFrame === 2) {\r\n      //   this.fireBullet()\r\n      // }\r\n    }\r\n    this.shootAnim.onComplete = () => {\r\n      this.shootAnim.gotoAndStop(0)\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n    this.shootAnim.visible = false\r\n    this.scanAnim.width = 150\r\n    this.scanAnim.height = 150\r\n    this.scanAnim.pivot.x = this.scanAnim.width * .5\r\n    this.scanAnim.pivot.y = this.scanAnim.height\r\n    this.shootAnim.width = 150\r\n    this.shootAnim.height = 150\r\n    this.shootAnim.pivot.x = this.shootAnim.width * .5\r\n    this.shootAnim.pivot.y = this.shootAnim.height\r\n    this.turret = new Container()\r\n    this.turret.addChild(this.scanAnim, this.shootAnim)\r\n    this.container.addChild(this.turret)\r\n\r\n    this.turret.children.forEach(child => {\r\n    })\r\n\r\n    this.body = Bodies.rectangle(x, y, 50, 50, {\r\n      label: 'turret barrier',\r\n      main: this\r\n    })\r\n    this.body.removeSelf = () => {\r\n      this.destroy()\r\n    }\r\n    let ground = this.gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + position.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n    \r\n    this.body.strength = 250\r\n    this.healthDisplay = new Text(`health: ${this.body.strength}`, { fontSize: 12, fill: 0xFFFFFF })\r\n    this.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n    this.container.addChild(this.healthDisplay)\r\n\r\n    this.direction = 'right'\r\n\r\n    // re-add player sprites on-top\r\n    let player = this.gameObjects.getKeyValue('player')\r\n    if (!player.dead) {\r\n      player.sprites.forEach(s => { this.container.addChild(s) })\r\n    }\r\n\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  takeDamage(dmg) {\r\n    this.body.strength -= dmg\r\n    this.healthDisplay.text = `health: ${this.body.strength}`\r\n  }\r\n\r\n  displayBarrierStrength(renderFn) {\r\n    let {x,y} = renderFn(this.body)\r\n    this.healthDisplay.position = { x, y: y - 100 }\r\n    this.turret.position = { x, y }\r\n  }\r\n\r\n  updateDirection(direction) {\r\n    this.turret.scale.x = direction === 'left' ? -1 : 1\r\n    this.direction = direction\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  resumeScan() {\r\n    if (!this.scanning) {\r\n      this.scanning = true\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n  }\r\n\r\n  fireBullet() {\r\n    if (!this.destroyed) {\r\n      if (!this.muzzleFlashFX) {\r\n        this.muzzleFlashFX = new MuzzleFlashFX()\r\n        this.muzzleFlashFX.setMuzzleRotations(this.direction === 'left' ? degrees(-92) : degrees(92))\r\n      }\r\n      // fire bullet\r\n      let { game: { player: { weapons: { bulletForce } } } } = store.getState()\r\n      let { x, y } = this.body.position\r\n      this.muzzleFlashFX.fireEffect(\r\n        this.direction == 'left'\r\n        ? { x: this.turret.position.x - 100, y: this.turret.position.y - 25 }\r\n        : { x: this.turret.position.x + 100, y: this.turret.position.y - 25  }\r\n      )\r\n      let overrideBody = Bodies.circle(x, y - 25, 5)\r\n      let _ejectY = random.float(-0.0005, -0.00075)\r\n      new PistolShell(0, 0, this.gameObjects, null, {\r\n        body: Bodies.rectangle(x, y - 50, 7, 4, { collisionFilter: playerCollisionOptions }),\r\n        force: this.direction === 'right' ?\r\n        {\r\n          \"x\": random.float(-0.00035, -0.00075),\r\n          \"y\": _ejectY\r\n        } : {\r\n          \"x\": random.float(0.00035, 0.00075),\r\n          \"y\": _ejectY\r\n        },\r\n      })\r\n      new PistolBullet(0, 0, this.gameObjects, 'turret', {\r\n        overrideBody,\r\n        overrideForce: this.direction === 'left' ?\r\n        {\r\n          \"x\": -0.01,\r\n          \"y\": -0.00075\r\n        } : {\r\n          \"x\": 0.01,\r\n          \"y\": -0.00075\r\n        },\r\n        overrideAngle: this.direction === 'left' ? -3.0 : 0.1\r\n      })\r\n    }\r\n  }\r\n\r\n  shoot() {\r\n    if (!this.shooting && !this.destroyed) {\r\n      let { game: { traps: { turret: { cooldown } } } } = store.getState()\r\n      this.fireBullet()\r\n      this.shooting = true\r\n      this.scanAnim.visible = false\r\n      this.shootAnim.visible = true\r\n      this.shootAnim.play()\r\n      this.delayedCall(cooldown, () => {\r\n        this.shooting = false\r\n      })\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      new GrenadeExplosion(this.body.position, true)\r\n      this.container.removeChild(this.turret, this.healthDisplay)\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      let idx = this.buildObjects.indexOf(this, 1)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { AnimatedSprite } from 'pixi.js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Spark {\r\n\r\n  constructor (type, renderBody, options) {\r\n    let spark1 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('sparks-sheet').animations['spark-particle']\r\n    )\r\n    let spark2 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('muzzle-sparks-sheet').animations['muzzleSparks']\r\n    )\r\n    let sparks = [ spark1, spark2 ]\r\n    sparks.forEach(spark => {\r\n      let scale = options && options.scale ? options.scale : 1.0\r\n      if (scale !== 1.0) {\r\n        spark.scale.x = scale\r\n        spark.scale.y = scale\r\n      }\r\n      spark.pivot.x = spark.width  * .5\r\n      spark.pivot.y = spark.height * .5\r\n      spark.loop = false\r\n      spark.animationSpeed = options && options.animationSpeed ? options.animationSpeed : 1.0\r\n      spark.onComplete = () => {\r\n        this.container.removeChild(spark)\r\n        this.container = null\r\n        spark = null\r\n        spark1 = null\r\n        spark2 = null\r\n        sparks = null\r\n      }\r\n    })\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    switch (type) {\r\n      case 1:\r\n        this.spark = spark1\r\n        if (options && options.tint) {\r\n          this.spark.tint = options.tint\r\n        }\r\n        break;\r\n      case 2:\r\n        this.spark = spark2\r\n        this.blurFilter = new PIXI.filters.BlurFilter(random.float(0.5, 0.75), 5)\r\n        this.adjFilter = new AdjustmentFilter()\r\n        this.glowFilter = new GlowFilter()\r\n        this.adjFilter.saturation = 2.0\r\n        this.adjFilter.brightness = 1.5\r\n        // glowFilter.outerStrength = 1.0\r\n        this.glowFilter.color = 0xFFFFFF //0xFFD100 //0xFF9C00 //0xFFFFFF\r\n        this.filters = store.getState().game.filterEffects ? [\r\n          this.blurFilter,\r\n          this.adjFilter,\r\n          this.glowFilter\r\n        ] : []\r\n        this.spark.filters = this.filters\r\n        break;\r\n        default:\r\n    }\r\n    if (options && options.scale) {\r\n      let sparkContainer = new PIXI.Container()\r\n      this.spark.scale.x = options.scale\r\n      this.spark.scale.y = options.scale\r\n      sparkContainer.addChild(this.spark)\r\n      sparkContainer.pivot.x = sparkContainer.width * (options.scale * .5)\r\n      sparkContainer.pivot.y = sparkContainer.height * (options.scale * .5)\r\n      this.spark = sparkContainer\r\n    }\r\n\r\n    this.renderBody = renderBody\r\n    if (!options || (options && !options.stop)) {\r\n      if (this.spark.play) {\r\n        this.spark.play()\r\n      }\r\n      if (this.spark.children && this.spark.children[0]) {\r\n        this.spark.children[0].play()\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  getFilters() {\r\n    return {\r\n      glow: this.glowFilter,\r\n      adjust: this.adjFilter,\r\n      blur: this.blurFilter\r\n    }\r\n  }\r\n\r\n  updateFilters(filters) {\r\n    this.filters = filters\r\n    this.spark.filters = this.filters\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.spark.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.spark) === -1) {\r\n        this.container.addChild(this.spark)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import store from '../../../app/store'\r\nimport { MOUSE_UP } from '../constants/mouseStates'\r\nimport { setMouseButtonState, unsetAllKeys } from '../gameSlice'\r\n\r\nconst { dispatch } = store\r\n\r\nexport default () => {\r\n  dispatch( unsetAllKeys() )\r\n  dispatch( setMouseButtonState(MOUSE_UP) )\r\n  if (localStorage) {\r\n    localStorage.setItem('ZombieChamber-GameSave', JSON.stringify(store.getState().game))\r\n  }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { CustomMenuButton, Inline } from './ShopMenu'\r\nimport { gameStateTransition, incrementWave } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport saveGame from '../utils/saveGame'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nposition: absolute;\r\nmargin: auto;\r\ntop: 40px;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nbackground-color: #222;\r\nopacity: .5;\r\n`\r\n\r\nexport const nextWave = () => {\r\n  let { dispatch, getState } = store\r\n  let { waveNum:wave, lvlToWin, gameState, gameSubState } = getState().game\r\n  let screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  if (wave < lvlToWin) {\r\n    saveGame()\r\n    screenUI.unpause()\r\n    // dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  } else {\r\n    alert('You win!')\r\n  }\r\n}\r\n\r\nexport default function ShopQuery () {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const wave = useSelector(state => state.game.waveNum)\r\n  const lvlToWin = useSelector(state => state.game.lvlToWin)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  \r\n  const gotoShop = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.SHOP_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n  \r\n  const gotoBuildMenu = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoShop }>Shop</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoBuildMenu }>Build Barriers/Traps</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n          <MenuButtonSpacer padding={2}>\r\n            <CustomMenuButton width={400} height={40} onClick={ nextWave }>\r\n              {\r\n                wave < lvlToWin ? 'Next Wave' : 'Submit your score!'\r\n              }\r\n            </CustomMenuButton>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { degrees } from 'radians'\r\nimport { World, Body, Bodies, Constraint, Composite, Vector } from 'matter-js'\r\nimport { setMousePosition, setPlayerCompositeId, setKeyPress,\r\n\tremoveKeyPress, setJumping, setMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot, setWeaponEquipped, setCompositeBodyIds, decrementGrenadeCount,\r\n   gameStateTransition, unsetAllKeys, resetPlayerVariables, addToTotalAmmo, addToTotalCredits,\r\n   updatePlayerHealth, subtractFromTotalCredits, setRightMouseDown, setLastMagDropped, increaseStats, StatsDefs, setAchievementOwned, AchievementDefs, setBarrierTypePlaced, setTrapTypePlaced, increaseStatsByAmount } from '../gameSlice'\r\nimport { getPlayerBody, getPlayerComposite, getBodyWidth, getBodyHeight, makePixiSprite } from '../utils/Utils'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS,\r\n\tLESS_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_Y_POS,\r\n\tMOUSE_DOWN, MOUSE_UP } from '../constants/mouseStates'\r\nimport { WEAPON_TYPE_GRENADE, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { batch } from 'react-redux'\r\nimport { createTextMessage } from '../createMessages'\r\nimport PlayerRagdoll, { PlayerRagdollHalved, PlayerRagdollDecap, PlayerRagdollMaim } from './PlayerRagdoll'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { KILLED_BY_ZOMBIE, FELL_OFF } from '../constants/DeathTypes'\r\nimport { calcGrenadeAngle } from '../utils/Utils'\r\nimport WallBarrier from '../BuildItems/WallBarrier'\r\nimport random from 'random'\r\nimport Landmine from '../BuildItems/Landmine'\r\nimport Grenade from '../items/Grenade'\r\nimport Clustermine from '../BuildItems/Clustermine'\r\nimport { trapTypes } from '../constants/buildTypes'\r\nimport RemoteMine from '../BuildItems/RemoteMine'\r\nimport MachineGunTurret from '../BuildItems/MachineGunTurret'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport Spark from '../FX/Sparks'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { Howl, Howler } from 'howler'\r\nimport { updateScore, subtractScore } from '../utils/updateScore'\r\nimport { nextWave } from '../ReactComponents/ShopQuery'\r\n\r\nexport class EnhancedMuzzleSpark {\r\n  constructor(renderBody) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let to = window.TweenLite.to\r\n    let gameObjects = window.gameObjects\r\n    let muzzleSpark = new Spark(2, renderBody)\r\n    let sparks = gameObjects.getKeyValue('spark-sprites')\r\n    muzzleSpark.spark.scale.x = .5 //random.float(.5, 1.0)\r\n    muzzleSpark.spark.scale.y = .5\r\n    sparks.push( muzzleSpark )\r\n    muzzleSpark.spark.gotoAndPlay( random.int(10, 15) )\r\n    if (store.getState().game.filterEffects) {\r\n      let { adjust, glow, blur } = muzzleSpark.getFilters()\r\n      adjust.brightness = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          : \r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 3.5\r\n              : 1.0\r\n      )\r\n      adjust.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      glow.color = (\r\n        tier === 1 ? 0xFFFFFF\r\n          :\r\n            tier === 2 ? 0xFFF500\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF6D00\r\n                : 0xFFFFFF\r\n      )\r\n      muzzleSpark.updateFilters([ glow, blur, adjust ])\r\n    }\r\n\r\n    to(muzzleSpark.spark.scale, .1, { x: 0.55, y: 0.55 })\r\n    return muzzleSpark\r\n  }\r\n}\r\n\r\nexport default function Player() {\r\n\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet { getState, dispatch } = store\r\n\tlet { game: { width: gameWidth, height: gameHeight, player: { constants: { width: wd, height: ht } } } } = getState()\r\n\tlet { TweenLite } = window\r\n\tlet { delayedCall, to, from, set } = TweenLite\r\n\r\n\tthis.body = Bodies.rectangle(400, 200, wd, ht, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.arm = Bodies.rectangle(400, 200, 30, 15, {\r\n\t\tfriction: 0,\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n  })\r\n  // this.armPointBody = Bodies.rectangle(400, 200, 10, 10, {\r\n  //   friction: 0,\r\n  //   inertia: Infinity,\r\n  //   collisionFilter: playerCollisionOptions\r\n  // })\r\n  // this.armPoint = Constraint.create({\r\n  //   bodyA: this.arm,\r\n  //   bodyB: this.armPointBody,\r\n  //   pointA: { x: -60, y: 0 },\r\n  //   pointB: { x: 0, y: 0 },\r\n  //   length: 0,\r\n  //   // stiffness: 1\r\n  // })\r\n\tthis.armAttach = Constraint.create({\r\n\t\tbodyA: this.arm,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 12, y: 0 },\r\n\t\tpointB: { x: 0, y: -80 },\r\n\t\tlength: 0\r\n\t})\r\n\t// head\r\n\tthis.head = Bodies.rectangle(400, 200, 20, 24, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.headAttach = Constraint.create({\r\n\t\tbodyA: this.head,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 0, y: 10 },\r\n\t\tpointB: { x: 0, y: -((ht/2) + 5) },\r\n\t\tlength: 0\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n\t\t// bodies\r\n\t\tthis.body,\r\n\t\tthis.arm,\r\n\t\tthis.head,\r\n\t\t// constraints\r\n\t\t// this.armPoint,\r\n\t\tthis.armAttach,\r\n\t\tthis.headAttach\r\n\t])\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.label = 'player character'\r\n\t\tbody.main = this\r\n\t})\r\n\tdispatch(setPlayerCompositeId(this.composite.id))\r\n\tdispatch(setCompositeBodyIds({\r\n\t\tbodyId: this.body.id,\r\n\t\theadId: this.head.id,\r\n\t\tarmId: this.arm.id\r\n  }))\r\n  dispatch(\r\n    setLastMagDropped( JSON.stringify(Date.now()) )\r\n  )\r\n\r\n\tthis.composite.body = this.body\r\n\tthis.composite.arm = this.arm\r\n\r\n\tWorld.add(world, this.composite)\r\n\r\n\tdispatch( setLastShot(WEAPON_TYPE_PISTOL, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SMG, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SHOTGUN, JSON.stringify(Date.now())) )\r\n\r\n\t// create player lifebar UI\r\n\tthis.life = 100\r\n  \r\n\tlet lifebarOutline = new PIXI.Graphics()\r\n\tlifebarOutline.lineStyle(1.0, 0x202D0A)\r\n\tlifebarOutline.drawRect(0, 0, gameWidth * .75, 12)\r\n  container.addChild(lifebarOutline)\r\n\r\n  let lifebarGreen = 0x00FA9A\r\n  let damageRed = 0xDD0E0E\r\n\tlet lifebar = new PIXI.Graphics()\r\n  lifebar.beginFill(0xFFFFFF)\r\n  lifebar.tint = lifebarGreen\r\n  lifebar.drawRect(0, 0, (gameWidth * .75) - 2, 10)\r\n  let bevel = new BevelFilter({ thickness: 5, lightAlpha: .5, lightColor: 0xffffff, shadowAlpha: .4, shadowColor: 0x0 })\r\n  lifebar.filters = getState().game.filterEffects ? [ bevel ] : []\r\n\tcontainer.addChild(lifebar)\r\n\tthis.initialLifebarWidth = lifebar.width\r\n\r\n\tlifebarOutline.position.x = 50\r\n\tlifebarOutline.position.y = gameHeight - 60\r\n\tlifebar.position.x = lifebarOutline.position.x + 1\r\n  lifebar.position.y = lifebarOutline.position.y + 1\r\n  let lifebarDefaultPosition = lifebar.position\r\n\r\n  //-- Reloading weapons\r\n  // this.reloading = false\r\n  // reload pistol anim\r\n  let charReloadPistolSpritesheet = gameObjects.getKeyValue('char-reload-pistol-sheet')\r\n  let charReloadPistolSprite = new PIXI.AnimatedSprite(charReloadPistolSpritesheet.animations['char_reload_pistol'])\r\n  charReloadPistolSprite.loop = false\r\n  charReloadPistolSprite.animationSpeed = .5\r\n  charReloadPistolSprite.updateAnchor = true\r\n  charReloadPistolSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadPistolSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadPistolSprite.visible = false\r\n  charReloadPistolSprite.onComplete = () => {\r\n    charReloadPistolSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadPistolSprite)\r\n\r\n  // reload smg anim\r\n  let charReloadSMGSpritesheet = gameObjects.getKeyValue('char-reload-smg-sheet')\r\n  let charReloadSMGSprite = new PIXI.AnimatedSprite(charReloadSMGSpritesheet.animations['char_reload_smg'])\r\n  charReloadSMGSprite.loop = false\r\n  charReloadSMGSprite.animationSpeed = .5\r\n  charReloadSMGSprite.updateAnchor = true\r\n  charReloadSMGSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadSMGSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadSMGSprite.visible = false\r\n  charReloadSMGSprite.onComplete = () => {\r\n    charReloadSMGSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadSMGSprite)\r\n  \r\n  // reload shotgun anim\r\n  let charReloadShotgunSpritesheet = gameObjects.getKeyValue('char-reload-shotgun-sheet')\r\n  let charReloadShotgunSprite = new PIXI.AnimatedSprite(charReloadShotgunSpritesheet.animations['shotgunReload'])\r\n  charReloadShotgunSprite.loop = false\r\n  charReloadShotgunSprite.animationSpeed = .5\r\n  charReloadShotgunSprite.updateAnchor = true\r\n  charReloadShotgunSprite.pivot.x = charReloadShotgunSprite.width * .725\r\n  charReloadShotgunSprite.pivot.y = charReloadShotgunSprite.height * .5\r\n  charReloadShotgunSprite.visible = false\r\n  this.shotgunShellLoadIterations = 0\r\n  this.gotoToEndOfShotgunReload = true\r\n  charReloadShotgunSprite.onComplete = () => {\r\n    charReloadShotgunSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n    this.shotgunShellLoadIterations = 0\r\n    this.gotoToEndOfShotgunReload = true\r\n  }\r\n  container.addChild(charReloadShotgunSprite)\r\n\r\n  this.reloadAnimsByType = {\r\n    'pistol weapon': charReloadPistolSprite,\r\n    'smg weapon': charReloadSMGSprite,\r\n    'shotgun weapon': charReloadShotgunSprite\r\n  }\r\n\r\n  this.reloadAnims = [\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite\r\n  ]\r\n\r\n  //-- Melee anims\r\n  let motionBlur = new MotionBlurFilter()\r\n  motionBlur.kernelSize = 5\r\n  motionBlur.velocity.x = 30\r\n  motionBlur.velocity.y = 40\r\n  // pistol melee\r\n  let meleePistolSpritesheet = gameObjects.getKeyValue('melee-pistol-sheet')\r\n  let meleePistolAnim = new PIXI.AnimatedSprite(meleePistolSpritesheet.animations['melee_pistol'])\r\n  meleePistolAnim.loop = false\r\n  meleePistolAnim.animationSpeed = .75\r\n  meleePistolAnim.updateAnchor = true\r\n  meleePistolAnim.pivot.x = meleePistolAnim.width * .5\r\n  meleePistolAnim.pivot.y = meleePistolAnim.height * .5\r\n  meleePistolAnim.visible = false\r\n  meleePistolAnim.onComplete = () => {\r\n    meleePistolAnim.gotoAndStop(0)\r\n    meleePistolAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleePistolAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleePistolAnim.currentFrame > 12 && meleePistolAnim.currentFrame < 15) {\r\n      meleePistolAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleePistolAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleePistolAnim)\r\n  \r\n  // ump melee\r\n  let meleeUMPSpritesheet = gameObjects.getKeyValue('melee-ump-sheet')\r\n  let meleeUMPAnim = new PIXI.AnimatedSprite(meleeUMPSpritesheet.animations['melee_ump'])\r\n  meleeUMPAnim.loop = false\r\n  meleeUMPAnim.animationSpeed = .75\r\n  meleeUMPAnim.updateAnchor = true\r\n  meleeUMPAnim.pivot.x = meleeUMPAnim.width * .5\r\n  meleeUMPAnim.pivot.y = meleeUMPAnim.height * .5\r\n  meleeUMPAnim.visible = false\r\n  meleeUMPAnim.onComplete = () => {\r\n    meleeUMPAnim.gotoAndStop(0)\r\n    meleeUMPAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeUMPAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeUMPAnim.currentFrame > 11 && meleeUMPAnim.currentFrame < 14) {\r\n      meleeUMPAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeUMPAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeUMPAnim)\r\n\r\n  // shotgun melee\r\n  let meleeShotgunSpritesheet = gameObjects.getKeyValue('melee-shotgun-sheet')\r\n  let meleeShotgunAnim = new PIXI.AnimatedSprite(meleeShotgunSpritesheet.animations['meleeShotgun'])\r\n  meleeShotgunAnim.loop = false\r\n  meleeShotgunAnim.animationSpeed = .5\r\n  meleeShotgunAnim.updateAnchor = true\r\n  meleeShotgunAnim.pivot.x = meleeShotgunAnim.width * .75\r\n  meleeShotgunAnim.pivot.y = meleeShotgunAnim.height * .5\r\n  meleeShotgunAnim.visible = false\r\n  meleeShotgunAnim.onComplete = () => {\r\n    meleeShotgunAnim.gotoAndStop(0)\r\n    meleeShotgunAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeShotgunAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeShotgunAnim.currentFrame > 6 && meleeShotgunAnim.currentFrame < 9) {\r\n      meleeShotgunAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeShotgunAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeShotgunAnim)\r\n\r\n  this.meleeSprites = [\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim\r\n  ]\r\n\r\n  //-- Grenade throws \r\n  this.grenadeThrowInProgress = false\r\n  this.grenadeForce = { x: 0.001, y: 0.001 }\r\n  this.chargingGrenade = false\r\n  this.chargeGrenade = () => {\r\n    this.chargeGrenadeSound = gameObjects.getKeyValue('charging-grenade-sound')\r\n    if (this.chargeGrenadeSound && !this.chargingGrenade) {\r\n      this.chargeGrenadeSound.play()\r\n    }\r\n    container.addChild(this.meter)\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.chargingGrenade = true\r\n    if (this.grenadeForce.x <= this.grenadeUpperForceThreshold) {\r\n      this.grenadeForce.x += this.grenadeChargeRate\r\n      this.grenadeForce.y += this.grenadeChargeRate\r\n    }\r\n  }\r\n\r\n  const createGrenadeChargeMeter = () => {\r\n    this.meter = new PIXI.Graphics()\r\n    this.meter.beginFill(0xffa23f)\r\n    this.meter.drawRect(0, 0, 100, 10)\r\n    container.addChild(this.meter)\r\n  }\r\n  createGrenadeChargeMeter()\r\n\r\n  this.renderGrenadeChargeMeter = renderFn => {\r\n    let { x, y } = renderFn(this.body)\r\n    this.grenadeUpperForceThreshold = getState().game.player.weapons.grenadeUpperForceThreshold\r\n    if (this.meter && this.chargingGrenade) {\r\n      this.meter.position.x = x - this.meter.width/2\r\n      this.meter.position.y = y - getBodyHeight(this.body) * .75\r\n      this.meter.width = this.grenadeForce.x/this.grenadeUpperForceThreshold * 100\r\n    } else {\r\n      this.meter.width = 0\r\n    }\r\n  }\r\n  \r\n  this.createGrenade = () => {\r\n    let r = 8\r\n    let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.updateGrenadeIcons()\r\n    let grenades = gameObjects.getKeyValue('grenades')\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.calculatedGrenadeForce = calcGrenadeAngle(this.arm.position, getState().game.mouseRelativeToPlayerPosition, this.grenadeForce)\r\n    grenades.push(\r\n      new Grenade(\r\n        getState().game.mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) : this.body.position.x - getBodyWidth(this.body),\r\n        this.body.position.y - (getBodyHeight(this.body)/2),\r\n        r,\r\n        this.calculatedGrenadeForce\r\n      )\r\n    )\r\n    this.grenadeForce = { x: 0.001, y: 0.001 }\r\n    this.chargingGrenade = false\r\n  }\r\n\r\n  this.throwGrenade = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (grenadeThrowPistolAnim.currentFrame < 1) {\r\n          grenadeThrowPistolAnim.visible = true\r\n          grenadeThrowPistolAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (grenadeThrowUMPAnim.currentFrame < 1) {\r\n          grenadeThrowUMPAnim.visible = true\r\n          grenadeThrowUMPAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (grenadeThrowShotgunAnim.currentFrame < 1) {\r\n          grenadeThrowShotgunAnim.visible = true\r\n          grenadeThrowShotgunAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n    }\r\n    if (!this.grenadeThrowInProgress) {\r\n      if (this.chargeGrenadeSound) {\r\n        this.chargeGrenadeSound.stop()\r\n      }\r\n      delayedCall(.2, () => {\r\n        let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n        _throw.play()\r\n        this.createGrenade()\r\n      })\r\n      this.chargingGrenade = false\r\n      this.grenadeThrowInProgress = true\r\n      if (attacks[equipped]) {\r\n        attacks[equipped]()\r\n        batch(() => {\r\n          dispatch( decrementGrenadeCount() )\r\n          dispatch( increaseStats( StatsDefs.grenadesThrown ) )\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // pistol equpped - 'nade throw\r\n  let grenadeThrowPistolSpritesheet = gameObjects.getKeyValue('grenade-pistol-sheet')\r\n  let grenadeThrowPistolAnim = new PIXI.AnimatedSprite(grenadeThrowPistolSpritesheet.animations['grenade_throw_pistol'])\r\n  grenadeThrowPistolAnim.loop = false\r\n  grenadeThrowPistolAnim.animationSpeed = 1.00\r\n  grenadeThrowPistolAnim.updateAnchor = true\r\n  grenadeThrowPistolAnim.pivot.x = grenadeThrowPistolAnim.width * .5\r\n  grenadeThrowPistolAnim.pivot.y = grenadeThrowPistolAnim.height * .5\r\n  grenadeThrowPistolAnim.visible = false\r\n  grenadeThrowPistolAnim.onComplete = () => {\r\n    grenadeThrowPistolAnim.gotoAndStop(0)\r\n    grenadeThrowPistolAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowPistolAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowPistolAnim.currentFrame > 22) {\r\n      if (!this.grenadeThrown) {\r\n        // this.createGrenade()\r\n        this.grenadeThrown = true\r\n        delayedCall(.5, () => { this.grenadeThrown = false })\r\n      }\r\n    }\r\n    if (grenadeThrowPistolAnim.currentFrame > 27) {\r\n      grenadeThrowPistolAnim.gotoAndStop(0)\r\n      grenadeThrowPistolAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowPistolAnim)\r\n  // ump equipped - 'nade throw\r\n  let grenadeThrowUMPSpritesheet = gameObjects.getKeyValue('grenade-ump-sheet')\r\n  let grenadeThrowUMPAnim = new PIXI.AnimatedSprite(grenadeThrowUMPSpritesheet.animations['grenade_throw_ump'])\r\n  grenadeThrowUMPAnim.loop = false\r\n  grenadeThrowUMPAnim.animationSpeed = 1.00\r\n  grenadeThrowUMPAnim.updateAnchor = true\r\n  grenadeThrowUMPAnim.pivot.x = grenadeThrowUMPAnim.width * .5\r\n  grenadeThrowUMPAnim.pivot.y = grenadeThrowUMPAnim.height * .5\r\n  grenadeThrowUMPAnim.visible = false\r\n  grenadeThrowUMPAnim.onComplete = () => {\r\n    grenadeThrowUMPAnim.gotoAndStop(0)\r\n    grenadeThrowUMPAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowUMPAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowUMPAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowUMPAnim.currentFrame > 27) {\r\n      grenadeThrowUMPAnim.gotoAndStop(0)\r\n      grenadeThrowUMPAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowUMPAnim)\r\n  // shotgun equipped - 'nade throw\r\n  let grenadeThrowShotgunSpritesheet = gameObjects.getKeyValue('grenade-shotgun-sheet')\r\n  let grenadeThrowShotgunAnim = new PIXI.AnimatedSprite(grenadeThrowShotgunSpritesheet.animations['shotgunGrenadeThrow'])\r\n  grenadeThrowShotgunAnim.loop = false\r\n  grenadeThrowShotgunAnim.animationSpeed = 1.00\r\n  grenadeThrowShotgunAnim.updateAnchor = true\r\n  grenadeThrowShotgunAnim.pivot.x = grenadeThrowShotgunAnim.width * .5\r\n  grenadeThrowShotgunAnim.pivot.y = grenadeThrowShotgunAnim.height * .5\r\n  grenadeThrowShotgunAnim.visible = false\r\n  grenadeThrowShotgunAnim.onComplete = () => {\r\n    grenadeThrowShotgunAnim.gotoAndStop(0)\r\n    grenadeThrowShotgunAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowShotgunAnim.onFrameChange = () => {\r\n    if (grenadeThrowShotgunAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowShotgunAnim.currentFrame > 27) {\r\n      grenadeThrowShotgunAnim.gotoAndStop(0)\r\n      grenadeThrowShotgunAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowShotgunAnim)\r\n\r\n  this.grenadeSprites = [\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n\r\n  this.grenadeSpritesByEquipped = {\r\n    'pistol weapon': grenadeThrowPistolAnim,\r\n    'smg weapon': grenadeThrowUMPAnim,\r\n    'shotgun weapon': grenadeThrowShotgunAnim\r\n  }\r\n  \r\n  this.ejectedMags = []\r\n\r\n  this.reloadMagazineActionsByType = {\r\n    'pistol weapon': () => {\r\n      let { game: { player: { weapons: { equipped, reloadSpeed }, perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y, 7, 20, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n        })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.0025, 0.005) : random.float(-0.0025, -0.005)),\r\n          y: random.float(-0.0025, -0.005)\r\n        })\r\n      // make some simple magazing gfx\r\n      let pistolMag = new PIXI.Graphics()\r\n      pistolMag.beginFill(0x333333)\r\n      pistolMag.drawRect(0, 0, 7, 20)\r\n      pistolMag.pivot.x = pistolMag.width/2\r\n      pistolMag.pivot.y = pistolMag.height/2\r\n      let magObj = {\r\n        gfx: pistolMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(pistolMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        pistolMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'smg weapon': () => {\r\n      let { game: { player: { perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y - (getBodyHeight(this.body)/2), 7, 42, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n      })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.004, 0.01) : random.float(-0.004, -0.01)),\r\n          y: random.float(-0.0015, -0.01)\r\n        })\r\n      // make some simple magazing gfx\r\n      let smgMag = new PIXI.Graphics()\r\n      smgMag.beginFill(0x333333)\r\n      smgMag.drawRect(0, 0, 7, 42)\r\n      smgMag.pivot.x = smgMag.width/2\r\n      smgMag.pivot.y = smgMag.height/2\r\n      let magObj = {\r\n        gfx: smgMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(smgMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        smgMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'shotgun weapon': () => {\r\n      const reloadShell = () => {\r\n        delayedCall(.3, () => {\r\n          if (this.shotgunShellLoadIterations > 5) {\r\n            charReloadShotgunSprite.gotoAndPlay(21)\r\n          } else {\r\n            charReloadShotgunSprite.gotoAndPlay(10)\r\n            this.shotgunShellLoadIterations++\r\n            reloadShell()\r\n          }\r\n        })\r\n      }\r\n      reloadShell()\r\n    }\r\n  }\r\n\r\n  this.updateEjectedMagPositions = (renderFn) => {\r\n    this.ejectedMags.forEach(mag => {\r\n      let { x, y, rotation: rot } = renderFn(mag.body)\r\n      mag.gfx.position = { x, y }\r\n      mag.gfx.rotation = rot\r\n    })\r\n  }\r\n\r\n  this.reloadWeapon = () => {\r\n    // this.reloading = true\r\n    let { game: { player: { weapons: { reloadSpeed, reloadAnimationFrames, equipped } } } } = getState()\r\n    this.reloadAnimsByType[equipped].animationSpeed = reloadSpeed[equipped]\r\n    this.reloadAnimsByType[equipped].gotoAndPlay(1)\r\n    delayedCall(\r\n      equipped === WEAPON_TYPE_PISTOL ? reloadSpeed[equipped]/4 //1\r\n      : equipped === WEAPON_TYPE_SMG ? (reloadSpeed[equipped] * 2) + (reloadSpeed[equipped]/2) //1.00\r\n      : equipped === WEAPON_TYPE_SHOTGUN ? reloadSpeed[equipped] + (reloadSpeed[equipped]/4) //.5\r\n      : 0\r\n    , () => {\r\n      if (this.reloadAnimsByType[equipped].visible === true) {\r\n        dispatch( increaseStats( StatsDefs.timesReloaded ) )\r\n        this.reloadMagazineActionsByType[equipped]()\r\n      }\r\n    })\r\n  }\r\n  \r\n  // fire pistol right arm\r\n  let charRightArmFirePistolSpritesheet = gameObjects.getKeyValue('right-arm-pistol-fire-sheet')\r\n  let charRightArmFirePistolSprite = new PIXI.AnimatedSprite(charRightArmFirePistolSpritesheet.animations['right_char_arm_pistol_fire'])\r\n  charRightArmFirePistolSprite.play()\r\n  charRightArmFirePistolSprite.loop = false\r\n  charRightArmFirePistolSprite.animationSpeed = .35\r\n  charRightArmFirePistolSprite.updateAnchor = true\r\n  charRightArmFirePistolSprite.pivot.x = charRightArmFirePistolSprite.width * .6\r\n  charRightArmFirePistolSprite.pivot.y = charRightArmFirePistolSprite.height * .4\r\n  charRightArmFirePistolSprite.onComplete = () => {\r\n    charRightArmFirePistolSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFirePistolSprite)\r\n\r\n  // fire smg right arm\r\n  let charRightArmFireSMGSpritesheet = gameObjects.getKeyValue('right-arm-smg-fire-sheet')\r\n  let charRightArmFireSMGSprite = new PIXI.AnimatedSprite(charRightArmFireSMGSpritesheet.animations['char_right_arm_smg_fire'])\r\n  charRightArmFireSMGSprite.play()\r\n  charRightArmFireSMGSprite.loop = false\r\n  charRightArmFireSMGSprite.animationSpeed = .35\r\n  charRightArmFireSMGSprite.updateAnchor = true\r\n  charRightArmFireSMGSprite.pivot.x = charRightArmFireSMGSprite.width * .6\r\n  charRightArmFireSMGSprite.pivot.y = charRightArmFireSMGSprite.height * .4\r\n  charRightArmFireSMGSprite.onComplete = () => {\r\n    charRightArmFireSMGSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireSMGSprite)\r\n\r\n  // fire shotgun right arm\r\n  let charArmsFireShotgunSpritesheet = gameObjects.getKeyValue('arms-fire-shotgun-sheet')\r\n  let charRightArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['rightArmFireShotgun'])\r\n  charRightArmFireShotgunSprite.play()\r\n  charRightArmFireShotgunSprite.loop = false\r\n  charRightArmFireShotgunSprite.animationSpeed = .5\r\n  charRightArmFireShotgunSprite.updateAnchor = true\r\n  charRightArmFireShotgunSprite.pivot.x = charRightArmFireShotgunSprite.width * .6\r\n  charRightArmFireShotgunSprite.pivot.y = charRightArmFireShotgunSprite.height * .4\r\n  charRightArmFireShotgunSprite.onComplete = () => {\r\n    charRightArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireShotgunSprite)\r\n\r\n  // head sprite\r\n  let headSprite = makePixiSprite('char-head')\r\n  container.addChild(headSprite)\r\n  this.positionHeadSprite = renderObj => {\r\n    let { game: { keys, mouseState: { x: _mx }, mousePosition, player: { variables: { jumping, currentDirection }, weapons: { equipped } } } } = getState()\r\n    let { mx, my, fn: renderFn } = renderObj\r\n    let { x, y } = renderFn(this.head)\r\n    if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n      if (currentDirection === 'right') {\r\n        if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x + 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      } else if (currentDirection === 'left') {\r\n        if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x - 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      }\r\n    } else {\r\n      headSprite.position.x = x\r\n    }\r\n    \r\n    headSprite.position.y = y + 12\r\n\r\n    if (!jumping) {\r\n      if (my === LESS_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => { sprite.pivot.y = sprite.height * .45 })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = 2.5\r\n        }\r\n        else {\r\n          headSprite.rotation = 0.9570\r\n        }\r\n      } else if (my === GREATER_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .65\r\n          sprite.pivot.y = sprite.height * .45\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x > 550 && mousePosition.x < 650) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x < 750 && mousePosition.y > 250 && mx === GREATER_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -2.7230\r\n      } else if (mousePosition.x > 450 && mousePosition.y > 250 && mx === LESS_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -0.5532\r\n      } else {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .6\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = charLeftArmFirePistolSprite.rotation\r\n      }\r\n    } else {\r\n      this.armsSpritesByType[equipped].forEach(sprite => {\r\n        sprite.pivot.x = sprite.width * .6\r\n        sprite.pivot.y = sprite.height * .47\r\n      })\r\n    }\r\n  }\r\n  headSprite.pivot.x = headSprite.width * .52\r\n  headSprite.pivot.y = headSprite.height * .17\r\n  this.headSprite = headSprite\r\n \r\n  // run anim\r\n  let charRunSpritesheet = gameObjects.getKeyValue('char-run-sheet')\r\n  let charRunSprite = new PIXI.AnimatedSprite(charRunSpritesheet.animations['char_run'])\r\n  charRunSprite.loop = true\r\n  charRunSprite.animationSpeed = 1.0\r\n  charRunSprite.updateAnchor = true\r\n  charRunSprite.pivot.x = charRunSprite.width * .52\r\n  charRunSprite.pivot.y = charRunSprite.height * .5\r\n  container.addChild(charRunSprite)\r\n \r\n  // idle anim\r\n  let charIdleSpritesheet = gameObjects.getKeyValue('char-idle-sheet')\r\n  let charIdleSprite = new PIXI.AnimatedSprite(charIdleSpritesheet.animations['char_idle'])\r\n  charIdleSprite.play()\r\n  charIdleSprite.loop = true\r\n  charIdleSprite.animationSpeed = .1\r\n  charIdleSprite.updateAnchor = true\r\n  charIdleSprite.pivot.x = charIdleSprite.width * .52\r\n  charIdleSprite.pivot.y = charIdleSprite.height * .5\r\n  container.addChild(charIdleSprite)\r\n  \r\n  // jump anim\r\n  let charJumpSpritesheet = gameObjects.getKeyValue('char-jump-sheet')\r\n  let charJumpSprite = new PIXI.AnimatedSprite(charJumpSpritesheet.animations['char_jump'])\r\n  charJumpSprite.loop = false\r\n  charJumpSprite.animationSpeed = .35\r\n  charJumpSprite.updateAnchor = true\r\n  charJumpSprite.pivot.x = charJumpSprite.width * .52\r\n  charJumpSprite.pivot.y = charJumpSprite.height * .5\r\n  //  set(charJumpSprite.scale, { x: .5, y: 1.0 })\r\n  charJumpSprite.visible = false\r\n  container.addChild(charJumpSprite)\r\n \r\n  this.stopJumpAnimation = () => {\r\n    charJumpSprite.gotoAndStop(0)\r\n    charJumpSprite.visible = false\r\n  }\r\n\r\n  charJumpSprite.onComplete = () => {\r\n    let { jumping } = getState().game.player.variables\r\n    if (!jumping) {\r\n      this.stopJumpAnimation()\r\n    } else {\r\n      this.resumeJumpAnimation()\r\n    }\r\n  }\r\n\r\n  let jumpMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.resumeJumpAnimation = () => {\r\n  charJumpSprite.gotoAndPlay(3)\r\n  charJumpSprite.visible = true\r\n  charRunSprite.visible = false\r\n  charIdleSprite.visible = false\r\n  // charJumpSprite.animationSpeed = .1\r\n  }\r\n\r\n  this.playJumpAnimation = () => {\r\n    if (getState().game.filterEffects) {\r\n      charJumpSprite.filters = [ jumpMotionBlur ]\r\n      from(jumpMotionBlur.velocity, .35, {\r\n        y: 50,\r\n        onUpdate: () => {\r\n          charJumpSprite.filters = [ jumpMotionBlur ]\r\n        }\r\n      })\r\n    }\r\n    charJumpSprite.gotoAndPlay(0)\r\n    charJumpSprite.visible = true\r\n    charRunSprite.visible = false\r\n    charIdleSprite.visible = false\r\n  }\r\n\r\n  // motion blur\r\n  let charLeftArmFirePistolSpritesheet = gameObjects.getKeyValue('left-arm-pistol-fire-sheet')\r\n  let charLeftArmFirePistolSprite = new PIXI.AnimatedSprite(charLeftArmFirePistolSpritesheet.animations['left_char_arm_pistol_fire'])\r\n  charLeftArmFirePistolSprite.play()\r\n  charLeftArmFirePistolSprite.loop = false\r\n  charLeftArmFirePistolSprite.animationSpeed = .35\r\n  charLeftArmFirePistolSprite.updateAnchor = true\r\n  charLeftArmFirePistolSprite.pivot.x = charLeftArmFirePistolSprite.width * .6\r\n  charLeftArmFirePistolSprite.pivot.y = charLeftArmFirePistolSprite.height * .4\r\n  charLeftArmFirePistolSprite.onComplete = () => {\r\n    charLeftArmFirePistolSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFirePistolSprite)\r\n   \r\n  // fire smg left arm (front)\r\n  let charLeftArmFireSMGSpritesheet = gameObjects.getKeyValue('left-arm-smg-fire-sheet')\r\n  let charLeftArmFireSMGSprite = new PIXI.AnimatedSprite(charLeftArmFireSMGSpritesheet.animations['char_left_arm_smg_fire'])\r\n  charLeftArmFireSMGSprite.play()\r\n  charLeftArmFireSMGSprite.loop = false\r\n  charLeftArmFireSMGSprite.animationSpeed = .35\r\n  charLeftArmFireSMGSprite.updateAnchor = true\r\n  charLeftArmFireSMGSprite.pivot.x = charLeftArmFireSMGSprite.width * .6\r\n  charLeftArmFireSMGSprite.pivot.y = charLeftArmFireSMGSprite.height * .4\r\n  charLeftArmFireSMGSprite.onComplete = () => {\r\n    charLeftArmFireSMGSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFireSMGSprite)\r\n\r\n  // fire shotgun left arm (front)\r\n  let charLeftArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['leftArmFireShotgun'])\r\n  charLeftArmFireShotgunSprite.play()\r\n  charLeftArmFireShotgunSprite.loop = false\r\n  charLeftArmFireShotgunSprite.animationSpeed = .5\r\n  charLeftArmFireShotgunSprite.updateAnchor = true\r\n  charLeftArmFireShotgunSprite.pivot.x = charLeftArmFireShotgunSprite.width * .6\r\n  charLeftArmFireShotgunSprite.pivot.y = charLeftArmFireShotgunSprite.height * .4\r\n  charLeftArmFireShotgunSprite.onComplete = () => {\r\n    charLeftArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charLeftArmFireShotgunSprite)\r\n\r\n  let weaponSwapMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.armsSprites = [\r\n    charLeftArmFirePistolSprite,\r\n    charRightArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charRightArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite,\r\n    charRightArmFireShotgunSprite\r\n  ]\r\n\r\n  this.armsSpritesByType = {\r\n    'pistol weapon': [ charLeftArmFirePistolSprite, charRightArmFirePistolSprite ],\r\n    'smg weapon': [ charLeftArmFireSMGSprite, charRightArmFireSMGSprite ],\r\n    'shotgun weapon': [ charLeftArmFireShotgunSprite, charRightArmFireShotgunSprite ]\r\n  }\r\n\r\n  let muzzleFlashFX = new MuzzleFlashFX()\r\n\r\n  let _9mm1 = window.gameObjects.getKeyValue('9mm-sound1')\r\n  let _9mm2 = window.gameObjects.getKeyValue('9mm-sound2')\r\n  let pistolSound1 = new Howl({\r\n    src: [ _9mm1 ],\r\n  })\r\n  let pistolSound2 = new Howl({\r\n    src: [ _9mm2 ],\r\n    sprite: {\r\n      _1: [ 500, 1000 ]\r\n    }\r\n  })\r\n  let pistolReloadSnd = window.gameObjects.getKeyValue('pistol-reload-sound')\r\n  let pistolReloadSound = new Howl({ src: [ pistolReloadSnd ], volume: .25 })\r\n  let jumpSound = gameObjects.getKeyValue('jump-sound')\r\n  let pain1Snd = gameObjects.getKeyValue('pain1-sound')\r\n  let pain2Snd = gameObjects.getKeyValue('pain2-sound')\r\n  let deathRip = gameObjects.getKeyValue('death-rip-sound')\r\n  let playerDeathSnd = gameObjects.getKeyValue('player-death-sound')\r\n  let hitImpact = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n  let smgFire = gameObjects.getKeyValue('smg-fire-sound')\r\n  let shotgunFire = gameObjects.getKeyValue('shotgun-blast-sound')\r\n\r\n  this.fireWeaponAnimation = () => {\r\n    let { game: { mouseState, player: { weapons: { equipped } } } } = getState()\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.visible = true })\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.gotoAndPlay(0) })\r\n    muzzleFlashFX.fireEffect()\r\n    // position muzzle spark particles sprite \r\n    let mSpark = new EnhancedMuzzleSpark(this.arm)\r\n    this.currentMuzzleSpark = mSpark\r\n    // sound\r\n    if (equipped === WEAPON_TYPE_PISTOL) {\r\n      pistolSound1.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SMG) {\r\n      smgFire.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SHOTGUN) {\r\n      shotgunFire.play()\r\n    }\r\n  }\r\n\r\n  this.charRunSprite = charRunSprite\r\n  this.charIdleSprite = charIdleSprite\r\n  this.charJumpSprite = charJumpSprite\r\n  // weapons specific\r\n  this.charReloadPistolSprite = charReloadPistolSprite\r\n  this.charReloadSMGSprite = charReloadSMGSprite\r\n  this.charReloadShotgunSprite = charReloadShotgunSprite\r\n\r\n  this.bodySprites = [\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n  \r\n  this.sprites = [\r\n    charRightArmFirePistolSprite,\r\n    charRightArmFireSMGSprite,\r\n    charRightArmFireShotgunSprite,\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n    charLeftArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite\r\n  ]\r\n\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 60, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n  blur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      this.shadow.alpha = .85\r\n      this.shadow.filters = [blur]\r\n      lifebar.filters = [bevel]\r\n    } else {\r\n      this.shadow.alpha = .45\r\n      this.shadow.filters = []\r\n      lifebar.filters = []\r\n    }\r\n  }\r\n\r\n  this.setBodySpritesPositions = obj => {\r\n    let { fn } = obj\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.bodySprites.forEach(sprite => {\r\n      sprite.position.x = x\r\n      sprite.position.y = y - 15\r\n    })\r\n    if (container && container.children.indexOf(this.shadow) === -1) {\r\n      container.addChild(this.shadow)\r\n    }\r\n    this.shadow.position.x = x\r\n    this.shadow.position.y = this.bodySprites[0].position.y + this.bodySprites[0].height/2 - 5\r\n  }\r\n\r\n  this.setArmsSpritePosition = obj => {\r\n    // .125 is a rotation adjustment so that the arms sprite lines up more accurately with where the bullet is coming from\r\n    let { game: { keys, mouseState: { x: _mx, y: _my }, player: { variables: { jumping, currentDirection } } } } = getState()\r\n    let { fn } = obj\r\n    let { x, y, rotation: rot } = fn(this.arm)\r\n    this.armsSprites.forEach(sprite => {\r\n      // sprite.x = x\r\n      if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n        if (currentDirection === 'right') {\r\n          if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n            sprite.x = x + 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        } else if (currentDirection === 'left') {\r\n          if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n            sprite.x = x - 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        }\r\n      } else {\r\n        sprite.x = x\r\n      }\r\n\r\n      if (jumping) {\r\n        if (_my === LESS_THAN_PLAYER_Y_POS) {\r\n          sprite.y = y - 10\r\n        } else {\r\n          sprite.y = y\r\n        }\r\n      } else {\r\n        sprite.y = y\r\n      }\r\n\r\n      sprite.rotation = rot\r\n    })\r\n    // keep muzzle flashes aligned with gun arm\r\n    let fpos, frot\r\n    muzzleFlashFX.getFlashes().forEach(flash => {\r\n      flash.position = charRightArmFirePistolSprite.position\r\n      flash.rotation = rot - degrees(90)\r\n      flash.pivot.x = -flash.width * .05\r\n      flash.pivot.y = getState().game.player.weapons.equipped === WEAPON_TYPE_SHOTGUN ? flash.height * 3.25 : flash.height * 2.25\r\n      fpos = flash.position\r\n      frot = flash.rotation\r\n    })\r\n    if (this.currentMuzzleSpark) {\r\n      this.currentMuzzleSpark.spark.pivot.x = -this.currentMuzzleSpark.spark.width\r\n      this.currentMuzzleSpark.spark.position = fpos\r\n      this.currentMuzzleSpark.spark.rotation = rot - degrees(180)\r\n    }\r\n  }\r\n\r\n  this.meleeAttackInProgress = false\r\n\r\n  this.createMeleeHitbox = () => {\r\n    let { mouseState, player: { weapons: {equipped} } } = getState().game\r\n    let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n    _throw.play()\r\n    this.meleeHitbox = Bodies.rectangle(\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) * 1.75 : this.body.position.x - getBodyWidth(this.body) * 1.75,\r\n      this.body.position.y - getBodyHeight(this.body)/2,\r\n      getBodyWidth(this.body) * 2,\r\n      getBodyHeight(this.body), {\r\n        isStatic: true\r\n      })\r\n    this.meleeHitbox.main = this\r\n    this.meleeHitbox.label = `melee hitbox ${equipped}`\r\n    World.add(world, this.meleeHitbox)\r\n  }\r\n  this.removeMeleeHitbox = () => {\r\n    if (this.meleeHitbox) {\r\n      World.remove(world, this.meleeHitbox)\r\n    }\r\n  }\r\n\r\n  this.meleeAttack = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (meleePistolAnim.currentFrame < 1) {\r\n          meleePistolAnim.visible = true\r\n          meleePistolAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (meleeUMPAnim.currentFrame < 1) {\r\n          meleeUMPAnim.visible = true\r\n          meleeUMPAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (meleeShotgunAnim.currentFrame < 1) {\r\n          meleeShotgunAnim.visible = true\r\n          meleeShotgunAnim.gotoAndPlay(1)\r\n        }\r\n      }\r\n    }\r\n    if (!this.meleeAttackInProgress) {\r\n      this.meleeAttackInProgress = true\r\n      delayedCall(.35, () => {\r\n        if (!this.dead) {\r\n          this.createMeleeHitbox()\r\n        }\r\n        delayedCall(.1, () => {\r\n          this.removeMeleeHitbox()\r\n        })\r\n      })\r\n      attacks[equipped]()\r\n    }\r\n  }\r\n\r\n  this.collectHealth = (amount) => {\r\n    this.life += amount\r\n    if (this.life > 100) {\r\n      this.life = 100\r\n    }\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    updateScore( getState().game.scoreAmounts.collectHealth )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.collectCredits = (amount) => {\r\n    dispatch(\r\n      addToTotalCredits(amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectCredit )\r\n  }\r\n\r\n  this.collectAmmo = (wepType, amount) => {\r\n    createTextMessage(`+${amount} ${wepType} ammo`, '#32BD6A', .35, 1)\r\n    dispatch(\r\n      addToTotalAmmo(wepType, amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectAmmo )\r\n  }\r\n\r\n\tthis.playerHit = false\r\n\tthis.resetPlayerHit = () => {\r\n\t\tthis.playerHit = true\r\n\t\tdelayedCall(1, () => {\r\n\t\t\tthis.playerHit = false\r\n\t\t})\r\n  }\r\n  \r\n  this.blinkAlpha = () => {\r\n    this.headSprite.alpha = .25\r\n    this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n    this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    delayedCall(.1, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.2, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.3, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.35, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.4, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.45, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.5, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n  }\r\n\r\n\tthis.takeDamage = dmg => {\r\n    let { game: { player: { variables: { defense } } } } = getState()\r\n    this.life -= (dmg - defense)\r\n    subtractScore( getState().game.scoreAmounts.penalties.damageTaken )\r\n    batch(() => {\r\n      dispatch( updatePlayerHealth(this.life) )\r\n      dispatch( increaseStatsByAmount( StatsDefs.damageTaken, dmg ) )\r\n    })\r\n    let randomNum = [ 1, 2 ][Math.floor( Math.random() * 2 )]\r\n    if (randomNum === 1) {\r\n      pain1Snd.play()\r\n    } else {\r\n      pain2Snd.play()\r\n    }\r\n    hitImpact.play()\r\n    lifebar.tint = damageRed\r\n    to(lifebar, .2, { width: (this.life/100 * this.initialLifebarWidth) })\r\n    to(lifebar, .1, {\r\n      y: lifebar.position.y + 2,\r\n      onComplete: () => {\r\n        to(lifebar, .1, {\r\n          y: lifebar.position.y - 3,\r\n          onComplete: () => {\r\n            to(lifebar, .1, {\r\n              y: lifebar.position.y + 1,\r\n              onComplete: () => {\r\n                lifebar.tint = lifebarGreen\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n    let bloodSpurtPos = {\r\n      x: random.float(this.bodySprites[0].position.x - 5, this.bodySprites[0].position.x + 20),\r\n      y: random.float(this.bodySprites[0].position.y, this.bodySprites[0].position.y - 60)\r\n    }\r\n    createTextMessage(`-${dmg}`, '#FF0000', .35, 1, 12)\r\n    new BloodSpurt(null, bloodSpurtPos, .75)\r\n    this.blinkAlpha()\r\n\t\tthis.resetPlayerHit()\r\n\t\tif (this.life <= 0) {\r\n\t\t\tthis.kill()\r\n\t\t}\r\n  }\r\n  \r\n  this.acceptHealth = amt => {\r\n    this.life = amt\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.addSpritesInOrder = () => {\r\n    container.addChild(this.headSprite)\r\n    this.armsSprites.forEach(sprite => container.addChild(sprite))\r\n    this.bodySprites.forEach(sprite => container.addChild(sprite))\r\n    // move front arms back on top\r\n    container.addChild(charLeftArmFirePistolSprite)\r\n    container.addChild(charLeftArmFireSMGSprite)\r\n    container.addChild(charLeftArmFireShotgunSprite)\r\n    container.addChild(lifebar)\r\n  }\r\n\r\n\tthis.respawn = () => {\r\n    engine.timing.timeScale = 1.0\r\n    if (this.playerRagdoll) {\r\n      this.playerRagdoll.destroy()\r\n      this.playerRagdoll = null\r\n    }\r\n    dispatch( increaseStats( StatsDefs.timesRespawned ) )\r\n    subtractScore( getState().game.scoreAmounts.penalties.respawn )\r\n    this.addSpritesInOrder()\r\n\t\tthis.life = 100\r\n\t\tlifebar.width = this.initialLifebarWidth\r\n\t\tthis.dead = false\r\n    lifebar.visible = lifebarOutline.visible = true\r\n    if (this.lastDeathType === FELL_OFF) {\r\n      // place our character back on-stage if he's fallen off\r\n      if (this.lastBodyPosition.x < 0) {\r\n        while (this.body.position.x < 200 && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: 100, y: -100 })\r\n        }\r\n      } else {\r\n        while (this.body.position.x > getState().game.width && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: -100, y: -100 })\r\n        }\r\n      }\r\n    }\r\n    World.add(world, this.composite)\r\n    if (getState().game.lastGameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n      )\r\n    } else {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_RESPAWN)\r\n      )\r\n    }\r\n  }\r\n\r\n\tthis.dead = false\r\n\tthis.kill = (deathType) => {\r\n    if (this.dead === false) {\r\n      if (deathType) {\r\n        this.lastDeathType = deathType\r\n      } else {\r\n        deathRip.play()\r\n        this.lastDeathType = KILLED_BY_ZOMBIE\r\n      }\r\n      dispatch( increaseStats( StatsDefs.timesKilled ) )\r\n      subtractScore( getState().game.scoreAmounts.penalties.killed )\r\n      playerDeathSnd.play()\r\n      engine.timing.timeScale = .5\r\n      lifebar.visible = lifebarOutline.visible = false\r\n      this.life = 0\r\n      this.dead = true\r\n      this.removeMeleeHitbox()\r\n      this.lastBodyPosition = this.body.position\r\n      World.remove(world, this.composite)\r\n      if (this.bodySprites && this.armsSprites) {\r\n        container.removeChild(this.headSprite)\r\n        this.bodySprites.forEach(sprite => container.removeChild(sprite))\r\n        this.armsSprites.forEach(sprite => container.removeChild(sprite))\r\n      }\r\n      let force = {\r\n        x: engine.timing.timeScale === 1\r\n        ? charIdleSprite.scale.x === 1 ? 0.1 : -0.1\r\n        : charIdleSprite.scale.x === 1 ? 0.25 : -0.25\r\n        ,\r\n        y: engine.timing.timeScale === 1\r\n        ? -0.25\r\n        : -0.75\r\n      }\r\n      let parts = [ 'head', 'body', 'limb', 'none' ]\r\n      let partLastDamaged = parts[ Math.floor( Math.random() * parts.length ) ]\r\n      \r\n      if (partLastDamaged === 'head') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollDecap({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'body') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollHalved({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'limb') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollMaim({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdoll({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      }\r\n  \r\n      batch(() => {\r\n        dispatch(unsetAllKeys())\r\n        dispatch(resetPlayerVariables())\r\n        dispatch(setMouseButtonState(MOUSE_UP))\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      })\r\n    }\r\n\t}\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumpForce, jumping } } } } = getState()\r\n\r\n    // jump\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        \r\n        if (e.keyCode === 87 && !jumping && !this.chargingGrenade) {\r\n            dispatch(setJumping(true))\r\n            jumpSound.play()\r\n            this.playJumpAnimation()\r\n            Body.applyForce(this.body, this.body.position, { x: 0, y: jumpForce })\r\n        } else {\r\n            if (keys.indexOf(e.keyCode) < 0) {\r\n              dispatch(setKeyPress(e.keyCode))\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    // melee \r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !jumping && !this.grenadeThrowInProgress) {\r\n        if (e.key === 'f' || e.key === 'F') {\r\n          this.meleeAttack()\r\n        }\r\n      }\r\n    }\r\n\r\n    // Shop / Continue / Build \r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (e.key === 'Enter') {\r\n        nextWave()\r\n      }\r\n    }\r\n    // done with build placement\r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (e.key === 'b' || e.key === 'B') {\r\n        let arrow = gameObjects.getKeyValue('object-placement-arrow')\r\n        arrow.changeBack = true\r\n        dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n        dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n      }\r\n    }\r\n\r\n    // cycle weapon [spacebar]\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if (e.keyCode === 32) {\r\n        if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n          let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // remote mine detonation [numbers 1 thru 9]\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      let numKeys = [ '1', '2', '3', '4', '5', '6', '7', '8', '9' ]\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let idx = numKeys.indexOf(e.key.toString())\r\n      console.log(e.key)\r\n      if (idx > -1) {\r\n        if (remoteMines[e.key.toString()]) {\r\n          remoteMines[e.key.toString()].detonate()\r\n          delete remoteMines[e.key.toString()]\r\n        }\r\n      }\r\n    }\r\n    \r\n    // turret placement direction\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (getState().game.traps.selectedTrap === trapTypes.TURRET) {\r\n        let currentTurret = gameObjects.getKeyValue('current-turret')\r\n        if (currentTurret) {\r\n          if (e.key === 'ArrowLeft') {\r\n            currentTurret.updateDirection('left')\r\n          }\r\n          if (e.key === 'ArrowRight') {\r\n            currentTurret.updateDirection('right')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    // reload weapon [R]\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (e.keyCode === 82 && !this.meleeAttackInProgress) {\r\n        let { game: { showingMessage, player: { weapons: { equipped, totalAmmo } } } } = getState()\r\n        if (totalAmmo[equipped] === 0 && showingMessage === false) {\r\n          createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n        } else if (!weaponsUI.reloading && !jumping && !this.dead) {  //&& !this.reloading) {\r\n          this.reloadWeapon()\r\n          weaponsUI.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n\t}\r\n\r\n\tconst handleKeyUp = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumping } } } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tlet idx = keys.indexOf(e.keyCode)\r\n\t\t\t\tif (idx > -1) {\r\n\t\t\t\t\tdispatch(removeKeyPress(e.keyCode))\r\n        }\r\n        // grenade [G]\r\n        if ((e.key === 'g' || e.key === 'G') && getState().game.player.weapons.totalAmmo[WEAPON_TYPE_GRENADE] > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n          if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n            this.throwGrenade()\r\n          }\r\n        }\r\n      }\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMouseDown = e => {\r\n    console.log(e)\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (!this.dead && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        if (e.buttons === 1) {\r\n          dispatch(setMouseButtonState(MOUSE_DOWN))\r\n        } else if (e.buttons === 2) {\r\n          dispatch(setRightMouseDown(true))\r\n          console.log('should charge')\r\n        }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n  \r\n\tconst handleMouseUp = e => {\r\n    let { game: { gameState } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      console.log(e)\r\n      dispatch(setMouseButtonState(MOUSE_UP))\r\n      if (getState().game.rightMouseDown) {\r\n        dispatch(setRightMouseDown(false))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const handleMouseWheel = e => {\r\n    // console.log(e)\r\n    let { gameState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU || gameState !== GameStates.SCORES_VIEW) {\r\n      e.preventDefault()\r\n    }\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n        if (e.deltaY < 0) {\r\n          if (list[list.indexOf(equipped) - 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx - 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[list.length - 1]))\r\n          }\r\n        } else if (e.deltaY > 0) {\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tlet playerBody = getPlayerBody(gameObjects)\r\n\tlet playerArm = getPlayerComposite(gameObjects).bodies[1]\r\n\tlet bh = getBodyHeight(this.body)\r\n\r\n\tconst handleMouseMove = e => {\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (e.target && e.target === document.getElementsByTagName('canvas')[1] && e.target.getBoundingClientRect) {\r\n\t\t\t\tlet armAngle\r\n\t\t\t\tlet mouseX, mouseY\r\n        let rect = e.target.getBoundingClientRect()\r\n        // console.log(e.target)\r\n\t\t\t\tlet x = e.clientX - rect.left\r\n\t\t\t\tlet y = e.clientY - rect.top\r\n\t\t\t\tlet { game: { mouseRelativeToPlayerPosition: mPosRel } } = getState()\r\n\t\t\t\tdispatch(setMousePosition({ x, y }))\r\n\r\n\t\t\t\tif (mPosRel.x > playerBody.position.x) {\r\n\t\t\t\t\tmouseX = GREATER_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.x < playerBody.position.x) {\r\n\t\t\t\t\tmouseX = LESS_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y > playerBody.position.y + bh/2) {\r\n\t\t\t\t\tmouseY = GREATER_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y < playerBody.position.y - bh) {\r\n\t\t\t\t\tmouseY = LESS_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarmAngle = Vector.angle(mPosRel, playerArm.position)\r\n\t\t\t\tBody.setAngle(playerArm, armAngle)\r\n\r\n\t\t\t\tdispatch(setMouseStateX(mouseX))\r\n\t\t\t\tdispatch(setMouseStateY(mouseY))\r\n\t\t\t}\r\n    }\r\n\r\n  }\r\n  \r\n  const handleMouseClick = e => {\r\n    let {game:{player:{credits},mouseRelativeToPlayerPosition,gameSubState,traps:{selectedTrap, costToBuild:costToBuild_trap},barriers:{selectedBarrier,costToBuild:costToBuild_barrier}}} = getState()\r\n    if (gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      let _y = 360\r\n      let position = {\r\n        x: mouseRelativeToPlayerPosition.x,\r\n        y: _y\r\n      }\r\n      let width = 50\r\n      let height = 100\r\n      let buildNewLocation = true\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let buildObjects = gameObjects.getKeyValue('build-objects')\r\n      let placeObjectSound = gameObjects.getKeyValue('place-object-sound')\r\n      let cancelSound = gameObjects.getKeyValue('button-cancel-sound')\r\n      const buildObjectPlacementComparison = (obj) => (position.x + (width/2) < obj.getBody().position.x - getBodyWidth(obj.getBody())/2) ||\r\n      (obj.getBody().position.x + getBodyWidth(obj.getBody())/2 < position.x - (width/2))\r\n      let checkAllowArray = buildObjects.map(obj => {\r\n        if (buildObjectPlacementComparison(obj)) {\r\n          return 'allow placement'\r\n        } else {\r\n          return 'place next to'\r\n        }\r\n      })\r\n\r\n      // find closest build object\r\n      let closestX\r\n      if (buildObjects.length > 0) {\r\n        let buildObjectXPositions = buildObjects.map(obj => obj.getBody().position.x)\r\n        closestX = buildObjectXPositions.reduce((prev, curr) => (\r\n          (Math.abs(curr - position.x) < Math.abs(prev - position.x) ? curr : prev)\r\n        ))\r\n        console.log( closestX )\r\n      }\r\n      \r\n      let idx = checkAllowArray.indexOf('place next to')  //.indexOf('deny')\r\n      if (idx > -1) {\r\n        buildNewLocation = false\r\n      }\r\n      \r\n      if (selectedBarrier) {\r\n        let barrier\r\n        if (credits >= costToBuild_barrier[selectedBarrier]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            barrier = new WallBarrier(position, { width, height }, selectedBarrier)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              barrier = new WallBarrier({ x: closestX - width, y: position.y}, { width, height }, selectedBarrier)\r\n            } else {\r\n              barrier = new WallBarrier({ x: closestX + width, y: position.y}, { width, height }, selectedBarrier)\r\n            }\r\n          }\r\n          if (barrier) {\r\n            batch(() => {\r\n              dispatch( setBarrierTypePlaced( selectedBarrier ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_barrier[selectedBarrier]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.barrierTypesPlaced) {\r\n                // console.log( getState().game.barrierTypesPlaced )\r\n                if (Object.keys(getState().game.barrierTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.BARRICADE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.BARRICADE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_barrier[selectedBarrier]}`, 0xFF0000, .5, .75)\r\n            buildObjects.push(barrier)\r\n            placeObjectSound.play()\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n\r\n      const buildTrap = (trapPosition) => {\r\n        switch (selectedTrap) {\r\n          case trapTypes.LANDMINE:\r\n            return new Landmine(trapPosition)\r\n          case trapTypes.CLUSTER_BOMB:\r\n            return new Clustermine(trapPosition)\r\n          case trapTypes.REMOTE_MINE:\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            return new RemoteMine(trapPosition, remoteMinesArr.length + 1)\r\n          case trapTypes.TURRET:\r\n            return new MachineGunTurret(trapPosition)\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (selectedTrap) {\r\n        let trap\r\n        if (credits >= costToBuild_trap[selectedTrap]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            trap = buildTrap(position)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              trap = buildTrap({ x: closestX - width, y: position.y })\r\n            } else {\r\n              trap = buildTrap({ x: closestX + width, y: position.y })\r\n            }\r\n          }\r\n          if (trap) {\r\n            batch(() => {\r\n              dispatch( setTrapTypePlaced( selectedTrap ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_trap[selectedTrap]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.trapTypesPlaced) {\r\n                // console.log( getState().game.trapTypesPlaced )\r\n                if (Object.keys(getState().game.trapTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.TRAPHOUSE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.TRAPHOUSE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_trap[selectedTrap]}`, 0xFF0000, .5, .75)\r\n            placeObjectSound.play()\r\n            buildObjects.push(trap)\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            if (selectedTrap === trapTypes.REMOTE_MINE) {\r\n              if (remoteMinesArr.length < 10) {\r\n                let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n                remoteMinesArr.push( trap )\r\n                remoteMinesArr.forEach((mine, i) => {\r\n                  remoteMines[i + 1] = mine\r\n                  mine.updateNumber(i + 1)\r\n                })\r\n              } else {\r\n                cancelSound.play()\r\n                createTextMessage('can hold up to 9 remote mines at a time', 0xFF0000, .5, .75)\r\n              }\r\n            }\r\n            if (selectedTrap === trapTypes.TURRET) {\r\n              createTextMessage('Press Left or Right arrow to change turret direction', 0xFFFFFF, .75, 2)\r\n              gameObjects.setKeyValue('current-turret', trap)\r\n            }\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleRightClick = e => {\r\n    // console.log(e)\r\n    e.preventDefault()\r\n    let { game: { gameState, gameSubState, player: { variables: {jumping}, weapons:{ totalAmmo:{ grenades:grenadesCount } }} } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (grenadesCount > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n          this.throwGrenade()\r\n          console.log('throw!')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tif (!window.keydownListenersAdded) {\r\n\t\twindow.addEventListener('keydown', handleKeyDown)\r\n\t\twindow.addEventListener('keyup', handleKeyUp)\r\n\t\twindow.addEventListener('mousemove', handleMouseMove)\r\n\t\twindow.addEventListener('mousedown', handleMouseDown)\r\n    window.addEventListener('mouseup', handleMouseUp)\r\n    window.addEventListener('click', handleMouseClick)\r\n    window.addEventListener('contextmenu', handleRightClick)\r\n    window.addEventListener('wheel', handleMouseWheel)\r\n\t\twindow.keydownListenersAdded = true\r\n  }\r\n  \r\n  this.pause = () => {\r\n    if (this.charRunSprite.currentFrame !== 0) {\r\n      this.charRunSprite.play()\r\n    }\r\n    if (this.charReloadPistolSprite.currentFrame !== 0) {\r\n      this.charReloadPistolSprite.play()\r\n    }\r\n    if (this.charReloadSMGSprite.currentFrame !== 0) {\r\n      this.charReloadSMGSprite.play()\r\n    }\r\n    if (charJumpSprite.currentFrame !== 0) {\r\n      charJumpSprite.play()\r\n    }\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.charRunSprite.stop()\r\n    this.charReloadPistolSprite.stop()\r\n    this.charReloadSMGSprite.stop()\r\n    charJumpSprite.stop()\r\n    dispatch( setJumping(false) )\r\n    // charJumpSprite.animationSpeed = .35\r\n  }\r\n\r\n\treturn this\r\n\r\n}\r\n","import * as PIXI from 'pixi.js'\r\n\r\nconst { TweenLite: { to, from, kill } } = window\r\n\r\nexport default function Crosshairs(gameObjects) {\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tthis.crosshair = new PIXI.Container()\r\n\tthis.cross = new PIXI.Graphics()\r\n\tthis.cross.lineStyle(2, 0xB00000, 0.75)\r\n\tthis.cross.moveTo(0, -15)\r\n\tthis.cross.lineTo(0, 15)\r\n\tthis.cross.moveTo(-15, 0)\r\n\tthis.cross.lineTo(15, 0)\r\n\tthis.crosshair.addChild(this.cross)\r\n\tthis.circle = new PIXI.Graphics()\r\n\tthis.circle.lineStyle(1, 0xB00000, 0.75)\r\n\tthis.circle.drawCircle(0, 0, 10)\r\n\tthis.crosshair.addChild(this.circle)\r\n  this.changed = false\r\n  this.changeBack = false\r\n\tthis._new = null\r\n  container.addChild(this.crosshair)\r\n\r\n\tthis.crosshair.buildArrow = (color) => {\r\n\t\tlet crosshair = gameObjects.getKeyValue('crosshair')\r\n    container.removeChild(crosshair)\r\n    let _new = new PIXI.Graphics()\r\n    _new.lineStyle(2, color, 1.0)\r\n    _new.beginFill(0x777777, 0.0)\r\n    _new.moveTo(0,0)\r\n    _new.lineTo(20, 0)\r\n    _new.lineTo(20, 30)\r\n    _new.lineTo(30, 30)\r\n    _new.lineTo(10, 45)\r\n    _new.lineTo(-10, 30)\r\n    _new.lineTo(0, 30)\r\n    _new.lineTo(0, 0)\r\n    _new.endFill()\r\n    _new.pivot.x = _new.width * .5\r\n    _new.pivot.y = _new.height * .5\r\n    container.addChild(_new)\r\n    this._new = _new\r\n    crosshair._new = _new\r\n    crosshair.changed = true\r\n    gameObjects.setKeyValue('object-placement-arrow', _new)\r\n    // animated arrow loop\r\n    this.animationLoop = () => {\r\n      to(_new.scale, .5, {\r\n        x: 1.2,\r\n        y: .75,\r\n        onComplete: () => {\r\n          to(_new.scale, .5, {\r\n            x: .9,\r\n            y: 1.2,\r\n            onComplete: this.animationLoop\r\n          })\r\n        }\r\n      })\r\n    }\r\n    this.animationLoop()\r\n\r\n\t\treturn _new\r\n\t}\r\n\r\n\treturn this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport random from 'random'\r\n\r\nexport default function GroundEffect (pos, type, bodyPart) {\r\n  let {x,y} = pos\r\n  let {gameObjects,TweenLite:{to,delayedCall}} = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n  let fxSheet = gameObjects.getKeyValue('ground-fx-sheet')\r\n  let bulletTextures = [\r\n    'bullet-impact1.png',\r\n    'bullet-impact2.png'\r\n  ]\r\n  let groundBloodSpatters = [\r\n    'ground-blood-spatter1.png',\r\n    'ground-blood-spatter2.png',\r\n    'ground-blood-spatter3.png',\r\n  ]\r\n  const getRandomRoundBulletImpact = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        bulletTextures[ Math.floor( Math.random() * bulletTextures.length ) ]\r\n      ]\r\n  ))\r\n  const getRandomBloodSpatter = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        groundBloodSpatters[ Math.floor( Math.random() * groundBloodSpatters.length ) ]\r\n      ]\r\n  ))\r\n  \r\n  let sprite\r\n  if (type === 'bullet impact') {\r\n    sprite = getRandomRoundBulletImpact()\r\n  }\r\n  if (type === 'blood spatter') {\r\n    sprite = getRandomBloodSpatter()\r\n  }\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * (bodyPart ? .2 : .5)\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  if (\r\n    sprite.position.x - sprite.width > ground.bounds.min.x ||\r\n    sprite.position.x + (sprite.width/2) < ground.bounds.max.x\r\n    ) {\r\n  }\r\n  // re-add player sprites on-top\r\n  let player = gameObjects.getKeyValue('player')\r\n  if (!player.dead) {\r\n    player.sprites.forEach(s => { container.addChild(s) })\r\n  }\r\n\r\n  let positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n  World.add(world, positionalBody)\r\n\r\n  this.renderPosition = renderFn => {\r\n    sprite.position = renderFn(positionalBody)\r\n    if (container && container.children.indexOf(sprite) === -1) {\r\n      container.addChild(sprite)\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    World.remove(world, positionalBody)\r\n    container.removeChild(sprite)\r\n    let idx = groundFx.indexOf(this)\r\n    if (idx > -1) {\r\n      groundFx.splice(idx, 1)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    groundFx = null\r\n    fxSheet = null\r\n    bulletTextures = null\r\n    groundBloodSpatters = null\r\n    positionalBody = null\r\n  }\r\n\r\n  const tweenOut = () => {\r\n    to(sprite, .5, {\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        this.destroy()\r\n      }\r\n    })\r\n  }\r\n  delayedCall(1, tweenOut)\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { Body, Render, World } from 'matter-js'\r\nimport { getBodyWidth, getBodyHeight, getPlayerPartByType, makePixiSprite } from './utils/Utils'\r\nimport { setLastDirection, setCurrentDirection, setJumping, setLastMagDropped, setMouseRelativeToPlayerPosition, setPlayerPosition, setZombiesOnLeft, setZombiesOnRight, setAchievementOwned, AchievementDefs } from './gameSlice'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET } from './constants/weapons'\r\nimport { MOUSE_DOWN, GREATER_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_X_POS } from './constants/mouseStates'\r\nimport { firePistol, fireSMG, fireShotgun, calcPistolDamage, calcShotgunDamage, calcSMGDamage, calcTurretDamage } from './player/fireWeapons'\r\nimport Crosshairs from './player/crosshairs'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { FELL_OFF } from './constants/DeathTypes'\r\nimport store from '../../app/store'\r\nimport GroundEffect from './FX/GroundEffect'\r\nimport Spark from './FX/Sparks'\r\nimport { degrees } from 'radians'\r\nimport WallTile from './WallTile'\r\nimport { updateScore } from './utils/updateScore'\r\n\r\nconst { getState, dispatch } = store\r\nlet { width, height } = getState().game\r\nconst { TweenLite: { delayedCall } } = window\r\n\r\nconst createCollision = (e, i, { body1_label, body2_label, callback }) => {\r\n  let bodies = {}\r\n  if (e.pairs[i].bodyA.label.indexOf(body1_label) > -1 && e.pairs[i].bodyB.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyA\r\n    bodies.body2 = e.pairs[i].bodyB\r\n    callback(bodies)\r\n  } else if (e.pairs[i].bodyB.label.indexOf(body1_label) > -1 && e.pairs[i].bodyA.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyB\r\n    bodies.body2 = e.pairs[i].bodyA\r\n    callback(bodies)\r\n  }\r\n}\r\n\r\nconst calculateDamageAmount = (weapon_str, body) => {\r\n  if (weapon_str === WEAPON_TYPE_PISTOL) { return calcPistolDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SMG) { return calcSMGDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SHOTGUN) { return calcShotgunDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_TURRET) { return calcTurretDamage(body) }\r\n  return calcPistolDamage(body)\r\n}\r\n\r\nexport const checkCollisionStart = (e, i, gameObjects) => {\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ground',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'barrier',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'gib',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter'))\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'zombie body part',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let zombieBodyPartBool = true\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter', zombieBodyPartBool))      \r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'player character',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let world = gameObjects.getKeyValue('world')\r\n      World.remove(world, bodies.body1)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'turret bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_TURRET, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part, null, null, 'turret')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_PISTOL, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SMG, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SHOTGUN, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'extra damage bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { max } = getState().game.player.weapons.damage[\r\n          getState().game.player.weapons.equipped\r\n        ]\r\n        bodies.body2.main.takeDamage(max * 3, 'head', 'critical')\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (getState().game.lastMagDropped && JSON.parse(getState().game.lastMagDropped) + 200 < Date.now()) {\r\n        let snd = gameObjects.getKeyValue('mag-drop-sound')\r\n        snd.play()\r\n      }\r\n      dispatch(\r\n        setLastMagDropped( JSON.stringify(Date.now()) )\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.takeDamage(20, 'head')\r\n      }\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF7500 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox',\r\n    body2_label: 'enemy zombie body',\r\n    callback: bodies => {\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF0000 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n      // apply extra knockback\r\n      let direction = getState().game.player.variables.currentDirection \r\n      let x = 0\r\n      let knockback = getState().game.player.upgradeTiers.melee.current * 3\r\n      while(x < 10) {\r\n        x++\r\n        Body.translate(bodies.body2, {\r\n          x: direction === 'right' ? -knockback : knockback,\r\n          y: -0.25\r\n        })\r\n      }\r\n      // increase score\r\n      updateScore( getState().game.scoreAmounts.meleeConnect )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox pistol',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_PISTOL]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox smg',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SMG]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox shotgun',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SHOTGUN]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'clustermine explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrel explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'barrel explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'grenade explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'enemy',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        delayedCall(.1, () => {\r\n          bodies.body2.main.explode()\r\n          if (\r\n            bodies.body2.distance.start - bodies.body2.distance.end > 2000 ||\r\n            bodies.body2.distance.end - bodies.body2.distance.start > 2000\r\n            ) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.FROM_DOWNTOWN )\r\n            )\r\n            updateScore( getState().game.scoreAmounts.achievement )\r\n          }\r\n        })\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.takeDamage) {\r\n        let dmg = getState().game.enemies.zombies.attackDmg, player = bodies.body1.main\r\n        if (!player.playerHit) {\r\n          player.takeDamage(dmg)\r\n        }\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'explosive barrier',\r\n    body2_label: 'bullet',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n      gameObjects.getKeyValue('spark-sprites').push(\r\n        new Spark(1, bodies.body2, { scale: .5, animationSpeed: 2.0 })\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrier',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'health drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectHealth) {\r\n        player.collectHealth(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ammo drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectAmmo) {\r\n        player.collectAmmo(bodies.body2.ammo_type, bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('ammo-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'currency drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectCredits) {\r\n        player.collectCredits(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('coin-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'shotgun shell',\r\n    callback: bodies => {\r\n      let snd = gameObjects.getKeyValue('shot-shell-sound')\r\n      snd.play()\r\n      snd.fade(1, 0, 200)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      let grenadeClink = gameObjects.getKeyValue('grenade-clink-sound')\r\n      grenadeClink.play()\r\n      grenadeClink.fade(1, 0, 500)\r\n    }\r\n  })\r\n}\r\n\r\nlet gameTickVarsDefined = false\r\nlet weaponsUI, render, groundTex, groundBody, groundFx, player, playerBody, acceleration ,pistolBullets, pistolBulletWd, pistolBulletHt, bulletImpacts,\r\npistolShells, pistolShellWd, pistolShellHt, ammoDrops, pistolAmmoDrops, smgAmmoDrops, shotgunAmmoDrops, creditDrops, crosshair, crosshairs, zombies, zombieRags,\r\nbuildObjects, gibs, grenades, explosions, rocks, woodPlanks, container, gameWidth, leftEnemyCount, rightEnemyCount, leftEnemyCountDisplay, rightEnemyCountDisplay,\r\nexplosionSprites, sparkSprites, healthdrops, wallTile\r\n\r\nconst getZombieRadarTextStyle = (count) => ({\r\n  fill: count === 0  ? '#00e595' : '#FF0000',\r\n  fontSize: 12\r\n})\r\n\r\nexport const gameTickHandler = (e, gameObjects) => {\r\n\r\n  if (!gameTickVarsDefined) {\r\n    render = gameObjects.getKeyValue('render')\r\n    container = gameObjects.getKeyValue('container')\r\n    gameWidth = gameObjects.getKeyValue('game-width')\r\n    weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    groundTex = gameObjects.getKeyValue('ground-texture')\r\n    groundBody = gameObjects.getKeyValue('ground')\r\n    groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n    acceleration = getState().game.player.variables.acceleration.min\r\n    // zombies left / right counters\r\n    leftEnemyCountDisplay = new PIXI.Text('')\r\n    leftEnemyCountDisplay.position = { x: 10, y: 5 }\r\n    rightEnemyCountDisplay = new PIXI.Text('zombies on right: 0')\r\n    rightEnemyCountDisplay.pivot.x = rightEnemyCountDisplay.width * .075\r\n    rightEnemyCountDisplay.position = { x: gameWidth, y: 5 }\r\n    // player \r\n    player = gameObjects.getKeyValue('player')\r\n    playerBody = getPlayerPartByType('body', gameObjects)\r\n    crosshairs = new Crosshairs(gameObjects)\r\n    crosshair = crosshairs.crosshair\r\n    gameObjects.setKeyValue('crosshair-shape', crosshairs.crosshair)\r\n    gameObjects.setKeyValue('crosshair', crosshair)\r\n    // items\r\n    gibs = gameObjects.getKeyValue('gibs')\r\n    grenades = gameObjects.getKeyValue('grenades')\r\n    explosions = gameObjects.getKeyValue('explosions')\r\n    rocks = gameObjects.getKeyValue('rocks')\r\n    woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n    buildObjects = gameObjects.getKeyValue('build-objects')\r\n    explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n    // container\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n    wallTile = new WallTile()\r\n    let gradientAlpha = gameObjects.getKeyValue('gradient-alpha')\r\n    gradientAlpha.alpha = .75\r\n    container.addChild( wallTile, gradientAlpha, groundTex )\r\n    player.addSpritesInOrder()\r\n    container.addChild( leftEnemyCountDisplay )\r\n    container.addChild( rightEnemyCountDisplay )\r\n    // vars declared?\r\n    gameTickVarsDefined = true\r\n  }\r\n\r\n  // enemies\r\n  zombies = gameObjects.getKeyValue('zombies')\r\n  zombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n  // items \r\n  pistolShells = gameObjects.getKeyValue('pistol-shells')\r\n  pistolBullets = gameObjects.getKeyValue('pistol-bullets')\r\n  bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n  ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n  creditDrops = gameObjects.getKeyValue('currency-drops')\r\n  healthdrops = gameObjects.getKeyValue('health-drops')\r\n  pistolAmmoDrops = ammoDrops[WEAPON_TYPE_PISTOL]\r\n  smgAmmoDrops = ammoDrops[WEAPON_TYPE_SMG]\r\n  shotgunAmmoDrops = ammoDrops[WEAPON_TYPE_SHOTGUN]\r\n\r\n  let {\r\n    game: {\r\n      keys,\r\n      // width: gameWidth,\r\n      // height: gameHeight,\r\n      gameState,\r\n      gameSubState,\r\n      mouseState,\r\n      mousePosition,\r\n      player: {\r\n        variables: { magnetism, magnetismSpeed, currentDirection, jumping, acceleration: { max: accelMax }, deceleration },\r\n        weapons: { laser: laserSight, equipped, totalAmmo: { grenades: grenadesCount } }\r\n      },\r\n      enemies: {\r\n        zombies: {\r\n          zombieAttackLimiter,\r\n          zombieAttackDistance\r\n        }\r\n      },\r\n      traps: {\r\n        turret: { fireDistance }\r\n      },\r\n      mouseState: { x: mx, y: my, btn: mouseButtonState }\r\n    }\r\n  } = getState()\r\n  let mPosRel = {\r\n    x: mousePosition.x + playerBody.position.x - (width / 2),\r\n    y: mousePosition.y + playerBody.position.y - (height / 2)\r\n  }\r\n  dispatch(setMouseRelativeToPlayerPosition({ x: mPosRel.x, y: mPosRel.y }))\r\n\r\n  // Render pixi graphics in-line with matter objects\r\n  const renderPositionFn = part => {\r\n    return {\r\n      x: part.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration),\r\n      y: part.position.y - playerBody.position.y + (height / 2),\r\n      rotation: part.angle\r\n    }\r\n  }\r\n\r\n  if (gameState === GameStates.GAMEPLAY) {\r\n\r\n    // render tile bg\r\n    wallTile.renderPosition(renderPositionFn, playerBody, acceleration)\r\n    // wallTile.onUpdate()\r\n\r\n    // Player weapons\r\n    // check if firing\r\n    if (mouseButtonState === MOUSE_DOWN && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // check weapon type\r\n      if (equipped === WEAPON_TYPE_PISTOL) { firePistol(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SMG) { fireSMG(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SHOTGUN) { fireShotgun(gameObjects) }\r\n    }\r\n\r\n    // console.log(width, height)\r\n\r\n    // Set render view to follow player\r\n    Render.lookAt(render, {\r\n      min: { x: playerBody.position.x + (width / 2), y: playerBody.position.y - (height / 2) },\r\n      max: { x: playerBody.position.x - (width / 2), y: playerBody.position.y + (height / 2) }\r\n    })\r\n\r\n    // Player movement / controls\r\n    Body.setAngle(playerBody, 0)\r\n\r\n    if (!weaponsUI.reloading && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // movement\r\n      if (keys.indexOf(68) > -1 || keys.indexOf(65) > -1) {\r\n        if (acceleration < accelMax) {\r\n          acceleration += .25\r\n        }\r\n      } else {\r\n        dispatch(setLastDirection(currentDirection))\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1 && keys.indexOf(65) > -1) {\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1) {\r\n        dispatch(setCurrentDirection('right'))\r\n        Body.translate(playerBody, { x: acceleration, y: 0 })\r\n      }\r\n      if (keys.indexOf(65) > -1) {\r\n        dispatch(setCurrentDirection('left'))\r\n        Body.translate(playerBody, { x: -acceleration, y: 0 })\r\n      }\r\n\r\n      // grenades\r\n      if (keys.indexOf(71) > -1 && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n        }\r\n      }\r\n      if (getState().game.rightMouseDown && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n          console.log('should charge grenade from engineHandlers')\r\n        }\r\n      }\r\n    }\r\n\r\n    let { x: playerPosX, y: playerPosY } = renderPositionFn(playerBody)\r\n    dispatch(setPlayerPosition({ x: playerPosX, y: playerPosY }))\r\n\r\n    // render health drops\r\n    healthdrops.forEach(health => {\r\n      health.renderPosition(renderPositionFn)\r\n    })\r\n\r\n    // render ammo boxes\r\n    pistolAmmoDrops.concat(\r\n      smgAmmoDrops\r\n    ).concat(\r\n      shotgunAmmoDrops\r\n    ).forEach(box => {\r\n      box.positionAmmoBox(renderPositionFn)\r\n      if (box.body && box.body.position.y > 500) {\r\n        box.destroy()\r\n      }\r\n      if (box.body) {\r\n        if (playerBody.position.x > box.body.position.x && ((playerBody.position.x - box.body.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: magnetismSpeed, y: 0 })\r\n        }\r\n        if (playerBody.position.x < box.body.position.x && ((box.body.position.x - playerBody.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: -magnetismSpeed, y: 0 })\r\n        }\r\n      }\r\n    })\r\n\r\n    // render currency drops\r\n    creditDrops.forEach(coin => {\r\n      coin.positionCreditGfx(renderPositionFn)\r\n      if (coin.creditBody && coin.creditBody.position.y > 500) {\r\n        coin.destroy()\r\n      }\r\n      if (coin.creditBody) {\r\n        if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: (magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n        if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: -(magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: -magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // render player graphics\r\n    player.setBodySpritesPositions({ mx, fn: renderPositionFn })\r\n    player.setArmsSpritePosition({ mx, my, fn: renderPositionFn })\r\n    player.positionHeadSprite({ mx, my, fn: renderPositionFn })\r\n    player.renderGrenadeChargeMeter(renderPositionFn)\r\n\r\n    if (player.charRunSprite && player.charIdleSprite && player.charJumpSprite) {\r\n\r\n      if (keys.indexOf(65) > -1 || keys.indexOf(68) > -1) {\r\n        if (!jumping) {\r\n          player.charRunSprite.play()\r\n          player.charRunSprite.visible = true\r\n          player.charIdleSprite.visible = false\r\n          player.stopJumpAnimation()\r\n        }\r\n      } else {\r\n        player.charRunSprite.stop()\r\n        player.charRunSprite.visible = false\r\n        player.charIdleSprite.visible = true\r\n        // added below lines to stop sprites overlapping\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnims.forEach(sprite => { sprite.visible = false })\r\n      }\r\n\r\n      if (\r\n        (keys.indexOf(65) > -1 && mouseState.x === GREATER_THAN_PLAYER_X_POS) ||\r\n        (keys.indexOf(68) > -1 && mouseState.x === LESS_THAN_PLAYER_X_POS)\r\n      ) {\r\n        player.charRunSprite.animationSpeed = -1\r\n      } else {\r\n        player.charRunSprite.animationSpeed = 1\r\n      }\r\n\r\n      if (mouseState.x === GREATER_THAN_PLAYER_X_POS) {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = -1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = -1 })\r\n        player.headSprite.scale.y = -1\r\n      } else {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = 1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = 1 })\r\n        player.headSprite.scale.y = 1\r\n      }\r\n\r\n      if (weaponsUI.reloading) {\r\n        player.bodySprites.forEach(sprite => { sprite.visible = false })\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnimsByType[equipped].visible = true\r\n        player.charIdleSprite.visible = false\r\n      } else {\r\n        if (player.armsSpritesByType[equipped]) {\r\n          player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.visible = true\r\n          })\r\n          player.reloadAnimsByType[equipped].visible = false\r\n        }\r\n      }\r\n\r\n      if (jumping || weaponsUI.reloading || player.meleeAttackInProgress || player.grenadeThrowInProgress) {\r\n        player.headSprite.visible = false\r\n      } else {\r\n        player.headSprite.visible = true\r\n      }\r\n\r\n      if (!jumping) {\r\n        player.stopJumpAnimation()\r\n      } else {\r\n        player.charIdleSprite.visible = false\r\n        if (player.charJumpSprite.currentFrame < 2) {\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.y += 80\r\n          })\r\n        }\r\n      }\r\n\r\n      if (player.meleeAttackInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.meleeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n      if (player.grenadeThrowInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.grenadeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    // render player ragdoll\r\n    if (gameObjects.getKeyValue('player-ragdoll') !== null) {\r\n      let playerRag = gameObjects.getKeyValue('player-ragdoll')\r\n      if (playerRag && playerRag.animateRagParts) {\r\n        playerRag.animateRagParts(renderPositionFn)\r\n      }\r\n    }\r\n\r\n  } // -- end if gameState === GameState.GAMEPLAY\r\n\r\n  if (player.body.position.y > 500) {\r\n    player.kill(FELL_OFF)\r\n  }\r\n\r\n  // render pistol shells\r\n  for (let i = 0; i < pistolShells.length; ++i) {\r\n    if (!pistolShellWd) { pistolShellWd = getBodyWidth(pistolShells[i].body) }\r\n    if (!pistolShellHt) { pistolShellHt = getBodyHeight(pistolShells[i].body) }\r\n    pistolShells[i].gfc.position.x = pistolShells[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolShells[i].gfc.position.y = pistolShells[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolShells[i].gfc.rotation = equipped === WEAPON_TYPE_SHOTGUN ? pistolShells[i].body.angle + degrees(90) : pistolShells[i].body.angle\r\n  }\r\n  // render pistol bullets\r\n  for (let i = 0; i < pistolBullets.length; ++i) {\r\n    if (!pistolBulletWd) { pistolBulletWd = getBodyWidth(pistolBullets[i].body) }\r\n    if (!pistolBulletHt) { pistolBulletHt = getBodyHeight(pistolBullets[i].body) }\r\n    pistolBullets[i].gfc.position.x = pistolBullets[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolBullets[i].gfc.position.y = pistolBullets[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolBullets[i].gfc.rotation = pistolBullets[i].body.angle\r\n  }\r\n\r\n  // render grenades\r\n  grenades.forEach(grenade => {\r\n    grenade.animate(renderPositionFn)\r\n  })\r\n\r\n  // explosions tracking\r\n  explosions.forEach(explosion => {\r\n    explosion.calcRenderedPosition(renderPositionFn)\r\n  })\r\n  rocks.forEach(rock => { rock.animate(renderPositionFn) })\r\n  woodPlanks.forEach(wood => { wood.animate(renderPositionFn) })\r\n\r\n  // update ejected mags\r\n  player.updateEjectedMagPositions(renderPositionFn)\r\n\r\n  // render gibs / guts \r\n  gibs.forEach(gib => {\r\n    gib.animate(renderPositionFn)\r\n  })\r\n\r\n  // for zombie count radar\r\n  leftEnemyCount = 0\r\n  rightEnemyCount = 0\r\n\r\n  // keep zombie arm angle inline with player position\r\n  zombies.forEach(zombie => {\r\n    zombie.setPlayerVars({ player, playerDirection: currentDirection, playerBody })\r\n    if (!zombie.paused) {\r\n      zombie.walk()\r\n    }\r\n    Body.setAngle(zombie.body, 0)\r\n    zombie.setSpritesPositions(renderPositionFn)\r\n    // kill zombies who fall off the ledge\r\n    if (zombie.body.position.y > 500) {\r\n      let killType = 'fell off'\r\n      zombie.kill(null, null, killType)\r\n    }\r\n    // trigger zombie attack\r\n    if (\r\n      (playerBody.position.x > zombie.body.position.x && ((playerBody.position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n      (playerBody.position.x < zombie.body.position.x && ((zombie.body.position.x - playerBody.position.x) < zombieAttackDistance))) {\r\n      if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n        zombie.attack()\r\n      }\r\n    }\r\n    // trigger attack if next to a wall\r\n    buildObjects.forEach(obj => {\r\n      if (obj && !obj.destroyed && obj.getBody().label !== 'remote mine trap') {\r\n        // zombie attack barrier control \r\n        if (\r\n          (obj.getBody().position.x > zombie.body.position.x && ((obj.getBody().position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n          (obj.getBody().position.x < zombie.body.position.x && ((zombie.body.position.x - obj.getBody().position.x) < zombieAttackDistance))) {\r\n          if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n            if (obj.getBody().label !== 'landmine trap') {\r\n              zombie.attack()\r\n            }\r\n          }\r\n        }\r\n        // turret fire control\r\n        if (\r\n          obj.direction && obj.direction === 'right' && zombie.body.position.x > obj.getBody().position.x - 10 && zombie.body.position.x - obj.getBody().position.x < fireDistance ||\r\n          obj.direction && obj.direction === 'left' && zombie.body.position.x < obj.getBody().position.x - 10 && obj.getBody().position.x - zombie.body.position.x < fireDistance\r\n          ) {\r\n            obj.shoot()\r\n        }\r\n      }\r\n    })\r\n    // count zombies on left and right side of player\r\n    if (!zombie.dead) {\r\n      if (zombie.body.position.x < playerBody.position.x) {\r\n        leftEnemyCount += 1\r\n      }\r\n      if (zombie.body.position.x > playerBody.position.x) {\r\n        rightEnemyCount += 1\r\n      }\r\n    }\r\n  })\r\n  \r\n  // build traps and barriers\r\n  buildObjects.forEach(obj => {\r\n    if (obj && !obj.destroyed && obj.displayBarrierStrength) {\r\n      obj.displayBarrierStrength(renderPositionFn)\r\n    }\r\n    if (obj.updatePosition) {\r\n      obj.updatePosition(renderPositionFn)\r\n    }\r\n  })\r\n\r\n  // double-check in case radar counts are inaccurate\r\n  if (getState().game.waveCountToDefeat === 0 || getState().game.waveCountToDefeat === null) {\r\n    // for zombie count radar\r\n    leftEnemyCount = 0\r\n    rightEnemyCount = 0\r\n  }\r\n\r\n  // update zombie count on sides of player\r\n  leftEnemyCountDisplay.text = `${leftEnemyCount}`\r\n  leftEnemyCountDisplay.style = getZombieRadarTextStyle(leftEnemyCount)\r\n  rightEnemyCountDisplay.text = `${rightEnemyCount}`\r\n  rightEnemyCountDisplay.style = getZombieRadarTextStyle(rightEnemyCount)\r\n\r\n  zombieRags.forEach(rag => {\r\n    rag.animateRagParts(renderPositionFn)\r\n  })\r\n\r\n  // render crosshair\r\n  if (gameSubState !== SubStates.PLAYER_DEATH) {\r\n    crosshair.position = mousePosition\r\n  }\r\n\r\n  if (crosshair.changed) {\r\n    crosshair = crosshair._new\r\n    crosshair.changed = false\r\n  }\r\n\r\n  // if crosshair is an arrow..\r\n  if (crosshair.changeBack) {\r\n    container.removeChild(crosshair)\r\n    crosshair = crosshairs.crosshair\r\n    container.addChild(crosshairs.crosshair)\r\n    crosshair.changeBack = false\r\n  }\r\n\r\n  // ground\r\n  groundTex.position = renderPositionFn(groundBody)\r\n\r\n  // bullet impacts\r\n  bulletImpacts.forEach(impact => { impact.renderPosition(renderPositionFn) })\r\n  groundFx.forEach(fx => { fx.renderPosition(renderPositionFn) })\r\n\r\n  // fx\r\n  explosionSprites.forEach(ex => { ex.renderPosition(renderPositionFn) })\r\n  sparkSprites.forEach(spark => { spark.renderPosition(renderPositionFn) })\r\n\r\n  // keep cursor on top\r\n  container.addChild(crosshairs.crosshair)\r\n\r\n}\r\n","import { Texture } from '@pixi/core'\r\nimport { TilingSprite } from '@pixi/sprite-tiling'\r\nimport store from '../../app/store'\r\n\r\nexport default class WallTile extends TilingSprite {\r\n    constructor() {\r\n        // console.log(gameObjects)\r\n        const texture = Texture.from(\r\n          window.gameObjects.getKeyValue('wall-tile')\r\n        )\r\n        super(texture, 1, texture.height) //width 1 because we will call onResize from App anyway\r\n        this.width = window.gameObjects.getKeyValue('game-width')\r\n        this.height = window.gameObjects.getKeyValue('game-height')\r\n        this.alpha = .2\r\n    }\r\n\r\n    onResize(width, height) {\r\n        // this.width = width\r\n    }\r\n\r\n    onUpdate(delta) {\r\n    \tthis.tilePosition.x -= delta * 4\r\n    }\r\n\r\n    renderPosition(renderFn, body, acceleration) {\r\n      let { x, y } = renderFn(body)\r\n      let { getState } = store\r\n      let { game: { keys, player: { variables: { currentDirection, jumping } } } } = getState()\r\n      if (currentDirection === 'right' && keys.indexOf(68) > -1) {\r\n        this.tilePosition.x -= .35 //(acceleration * .25)\r\n      }\r\n      if (currentDirection === 'left' && keys.indexOf(65) > -1) {\r\n        this.tilePosition.x += .35 //(acceleration * .25)\r\n      }\r\n      if (jumping) {\r\n        this.tilePosition.y += .25\r\n      }\r\n      // let player = window.gameObjects.getKeyValue('player')\r\n      // console.log( player.body )\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { makePixiSprite } from '../utils/Utils'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { decrementTotalAmmo, setWeaponEquipped } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport GameStates from '../constants/GameStates'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow'\r\n \r\nconst { getState, dispatch } = store\r\n\r\nconst { TweenLite: { to, from } } = window\r\n\r\nexport default function WeaponsUI () {\r\n\tlet { gameObjects } = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tlet pistolIcon = makePixiSprite('weapon-ui-icon-pistol')\r\n\tlet smgIcon = makePixiSprite('weapon-ui-icon-smg')\r\n\tlet shotgunIcon = makePixiSprite('weapon-ui-icon-shotgun')\r\n  let icons = []\r\n\r\n  let mags\r\n  \r\n  let weaponShadow = new DropShadowFilter({ distance: 3.0, alpha: 1.0 })\r\n  let bulletShadow = new DropShadowFilter({ distance: 1.0, alpha: 2.0 })\r\n\r\n  let iconBG = new PIXI.Graphics()\r\n  iconBG.beginFill(0x425041)\r\n  iconBG.drawRect(0, 0, 120, 90)\r\n  iconBG.alpha = .65\r\n  iconBG.position.x = gameWidth - iconBG.width - 20\r\n  iconBG.position.y = gameHeight - iconBG.height - 20\r\n  // iconBG.filters = [ bulletShadow ]\r\n  container.addChild(iconBG)\r\n\r\n\tpistolIcon.width = pistolIcon.width/2\r\n\tpistolIcon.height = pistolIcon.height/2\r\n\ticons.push(pistolIcon)\r\n\r\n\tsmgIcon.width = smgIcon.width/2\r\n\tsmgIcon.height = smgIcon.height/2\r\n  icons.push(smgIcon)\r\n  \r\n  shotgunIcon.width = shotgunIcon.width/2\r\n\tshotgunIcon.height = shotgunIcon.height/2\r\n  icons.push(shotgunIcon)\r\n\r\n\ticons.forEach(icon => {\r\n\t\ticon.position.x = gameWidth - (icon.width + 20)\r\n\t\ticon.position.y = gameHeight - (icon.height + 10)\r\n    icon.alpha = 0\r\n    // icon.filters = [ weaponShadow ]\r\n\t\tcontainer.addChild(icon)\r\n  })\r\n\r\n  this.keepOnTop = () => {\r\n    container.addChild(iconBG)\r\n    icons.forEach(icon => { container.addChild(icon) })\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL]\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG]\r\n    )\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    )\r\n    .forEach(b => { container.addChild(b) })\r\n    this.grenades.forEach(g => { container.addChild(g) })\r\n    if (this.shaking && !this.reloading) {\r\n      container.addChild(this.emptyText)\r\n    }\r\n  }\r\n  setInterval(this.keepOnTop, 1000)\r\n\r\n  let magazinesByWeaponType = {\r\n\t\t'pistol weapon': null,\r\n\t\t'smg weapon': null,\r\n\t\t'shotgun weapon': null,\r\n  }\r\n\r\n  let bulletMask = new PIXI.Graphics()\r\n  bulletMask.beginFill(0xffffff)\r\n  bulletMask.drawRect(pistolIcon.position.x, pistolIcon.position.y, pistolIcon.width, pistolIcon.height)\r\n  container.addChild(bulletMask)\r\n\r\n  if (!window.gameObjects.getKeyValue('bullet-shell-bevel-ui')) {\r\n    window.gameObjects.setKeyValue('bullet-shell-bevel-ui', new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 }))\r\n  }\r\n  let bulletBevel = window.gameObjects.getKeyValue('bullet-shell-bevel-ui')\r\n\r\n  let makePistolMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL] = magazinesByWeaponType[WEAPON_TYPE_PISTOL].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xBFA522)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 27 - pistolIcon.width/magazinesByWeaponType[WEAPON_TYPE_PISTOL].length * i\r\n      bulletGfc.position.y = pistolIcon.position.y + pistolIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeSMGMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG] = magazinesByWeaponType[WEAPON_TYPE_SMG].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xCEC182)\r\n      bulletGfc.drawRect(0, 0, 2, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5 })\r\n      // bulletGfc.filters = [ bevel ]\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 24 - smgIcon.width/magazinesByWeaponType[WEAPON_TYPE_SMG].length * i\r\n      bulletGfc.position.y = smgIcon.position.y + smgIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeShotgunMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN] = magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x3E1313)\r\n      bulletGfc.beginFill(0xB00000)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      bulletGfc.beginFill(0xBCA845)\r\n      bulletGfc.drawRect(0, 8, 4, 3)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .25 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 32 - shotgunIcon.width/magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].length * i\r\n      bulletGfc.position.y = shotgunIcon.position.y + shotgunIcon.height - 26\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      // SMG bullets too small for bevel filter\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [ bulletBevel ] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [ bulletBevel ] })\r\n      if (this.grenades && this.gbevel && this.gnoise) {\r\n        this.grenades.forEach(g => { g.filters = [ this.gbevel, this.gnoise ] })\r\n      }\r\n    } else {\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [] })\r\n      if (this.grenades) {\r\n        this.grenades.forEach(g => { g.filters = [] })\r\n      }\r\n    }\r\n  }\r\n  \r\n  let makeMagByType = {\r\n    'pistol weapon': makePistolMag,\r\n    'smg weapon': makeSMGMag,\r\n    'shotgun weapon': makeShotgunMag,\r\n  }\r\n\r\n\tlet weaponIcons = {\r\n\t\t'pistol weapon': pistolIcon,\r\n\t\t'smg weapon': smgIcon,\r\n\t\t'shotgun weapon': shotgunIcon,\r\n  }\r\n\r\n  this.updateMagazine = type => {\r\n    let { game: { player: { weapons: { ammoCapacity } } } } = getState()\r\n    if (magazinesByWeaponType[type]) {\r\n      magazinesByWeaponType[type].forEach(b => { b.destroy() })\r\n      magazinesByWeaponType[type] = null\r\n    }\r\n    magazinesByWeaponType[type] = new Array(ammoCapacity[type]).fill(1)\r\n    makeMagByType[type]()\r\n  }\r\n\r\n  // initialize magazines\r\n  this.updateMagazine(WEAPON_TYPE_PISTOL)\r\n  this.updateMagazine(WEAPON_TYPE_SMG)\r\n  this.updateMagazine(WEAPON_TYPE_SHOTGUN)\r\n  mags = [\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n  ]\r\n\r\n  this.swapSwap = (wep) => {\r\n    let { list, equipped } = getState().game.player.weapons\r\n    magazineIndexes[wep] = 0\r\n    let idx = list.indexOf(wep)\r\n    if (idx > -1) {\r\n      this.select(\r\n        list[idx + 1] ?\r\n        list[idx + 1] :\r\n        list[0]\r\n      )\r\n    }\r\n    window.TweenLite.delayedCall(.05, () => {\r\n      this.select(equipped)\r\n    })\r\n  }\r\n\r\n  this.updateWeaponMagazines = wep => {\r\n    let { list } = getState().game.player.weapons\r\n    mags.forEach(mag => { mag.forEach(b => { container.removeChild(b) }) })\r\n    list.forEach(wep => { this.updateMagazine(wep) })\r\n    mags = [\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    ]\r\n    this.reload(true)\r\n    dispatch( setWeaponEquipped(wep) )\r\n    this.swapSwap(wep) // switch to another weapon, the switch back to correct the ammo display\r\n  }\r\n\r\n\tlet magazineIndexes = {\r\n\t\t'pistol weapon': 0,\r\n\t\t'smg weapon': 0,\r\n\t\t'shotgun weapon': 0,\r\n\t}\r\n\r\n\tlet magEmptyBools = {\r\n\t\t'pistol weapon': false,\r\n\t\t'smg weapon': false,\r\n\t\t'shotgun weapon': false,\r\n  }\r\n\r\n  this.checkEmpty = weapon_str => magEmptyBools[weapon_str]\r\n  \r\n  const doTheWiggle = (icon, defaultPos, callback) => {\r\n    to(icon, .1, {\r\n      x: defaultPos + 10,\r\n      onComplete: () => {\r\n        to(icon, .1, {\r\n          x: defaultPos - 10,\r\n          onComplete: () => {\r\n            to(icon, .1, {\r\n              x: defaultPos + 5,\r\n              onComplete: () => {\r\n                to(icon, .1, {\r\n                  x: defaultPos - 5,\r\n                  onComplete: () => {\r\n                    to(icon, .1, {\r\n                      x: defaultPos + 3,\r\n                      onComplete: () => {\r\n                        to(icon, .1, {\r\n                          x: defaultPos - 2,\r\n                          onComplete: () => {\r\n                            to(icon, .1, {\r\n                              x: defaultPos + 1,\r\n                              onComplete: () => {\r\n                                to(icon, .1, {\r\n                                  x: defaultPos,\r\n                                  onComplete: () => {\r\n                                    this.shaking = false\r\n                                    callback()\r\n                                  }\r\n                                })\r\n                              }\r\n                            })\r\n                          }\r\n                        })\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  this.textForEmptyShake = 'RELOAD'\r\n  this.changeTextForEmptyShake = str => {\r\n    this.textForEmptyShake = str\r\n    this.emptyText.text = str\r\n  }\r\n\r\n  this.emptyText = new PIXI.Text(this.textForEmptyShake, { fill: 0xB00000, fontSize: '15px', fontWeight: 'bold' })\r\n  this.emptyText.pivot.x = this.emptyText.width * .5\r\n  this.emptyText.pivot.y = this.emptyText.height * .5\r\n  this.emptyText.position.x = iconBG.position.x + iconBG.width * .5\r\n  this.emptyText.position.y = iconBG.position.y + iconBG.height * .8\r\n  this.removeEmptyText = () => {\r\n    container.removeChild(this.emptyText)\r\n  }\r\n\r\n  this.shaking = false\r\n  this.emptyMagShake = () => {\r\n    container.addChild(this.emptyText)\r\n    if (!this.shaking) {\r\n      this.shaking = true\r\n      icons.forEach(icon => {\r\n        let defaultPos = icon.position.x\r\n        doTheWiggle(icon, defaultPos, this.removeEmptyText)\r\n      })\r\n      doTheWiggle(iconBG, iconBG.position.x, this.removeEmptyText)\r\n    }\r\n  }\r\n\r\n\tthis.reloading = false\r\n\tthis.reload = (forceReload) => {\r\n\t\tif (!this.reloading || forceReload) {\r\n\t\t\tlet { game: { player: { weapons: { reloadAnimationFrames, equipped, totalAmmo } } } } = getState()\r\n      this.removeEmptyText()\r\n      if (magazineIndexes[equipped] !== 0 && totalAmmo[equipped] !== 0 || forceReload) {\r\n        if (forceReload) { magazineIndexes[equipped] = 0 }\r\n        this.reloading = true\r\n\t\t\t\tlet ammoCheck = totalAmmo[equipped] < magazinesByWeaponType[equipped].length\r\n\t\t\t\tmagazinesByWeaponType[equipped].forEach((b, i) => { b.alpha = 0 })\r\n\t\t\t\tfor (let i = 0, limit = (ammoCheck ? totalAmmo[equipped] : magazinesByWeaponType[equipped].length); i < limit; ++i) {\r\n\t\t\t\t\tlet b = magazinesByWeaponType[equipped][i]\r\n\t\t\t\t\tb.alpha = 1\r\n\t\t\t\t\tfrom(b, reloadAnimationFrames[equipped]/60, {\r\n\t\t\t\t\t\tx: gameWidth - (b.width * i),\r\n\t\t\t\t\t\tonComplete: (_i) => {\r\n\t\t\t\t\t\t\tif (_i === limit-1) {\r\n\t\t\t\t\t\t\t\tmagazineIndexes[equipped] = 0\r\n                magEmptyBools[equipped] = false\r\n                this.lastBulletByWepType[equipped] = false\r\n                if (forceReload) {\r\n                  this.reloading = false\r\n                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (totalAmmo[equipped] === 0) {\r\n\t\t\t\t\t\t\t\tthis.reloading = false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonCompleteParams: [i]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  // forceWepEquipped is a weapon type string\r\n\tthis.select = (forceWepEquipped) => {\r\n    let { game: { player: { weapons: { totalAmmo, equipped } } } } = getState()\r\n    icons.forEach(icon => { icon.alpha = 0 })\r\n\t\tmags.forEach(m => {\r\n      m.forEach(b => {\r\n        if (b && b.hasOwnProperty('alpha')) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    })\r\n\t\tweaponIcons[forceWepEquipped ? forceWepEquipped : equipped].alpha = 1\r\n\t\tlet ammoCheck = totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] < magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length\r\n\t\tif (totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] !== 0) {\r\n\t\t\tlet limit = (ammoCheck\r\n\t\t\t\t? totalAmmo[forceWepEquipped ? forceWepEquipped : equipped]\r\n\t\t\t\t: magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped])\r\n\t\t\tlet lastMagIdx = ammoCheck ? magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] : 0\r\n\t\t\tif (ammoCheck) { magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped] = lastMagIdx }\r\n\t\t\tfor (let i = 0; i < limit; ++i) {\r\n\t\t\t\tmagazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped][magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length-1 - i].alpha = 1\r\n\t\t\t}\r\n    }\r\n    // added this code to hide bullets when last mag is less than ammo cap. \r\n    if (magEmptyBools[equipped]) {\r\n      magazinesByWeaponType[equipped].forEach(b => {\r\n        if (!forceWepEquipped) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    }\r\n\t}\r\n\r\n  this.lastBulletByWepType = {\r\n    'pistol weapon': false,\r\n    'smg weapon': false,\r\n    'shotgun weapon': false,\r\n  }\r\n\r\n\tthis.fireBullet = weapon_str => {\r\n\t\tif (magazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]]) {\r\n\t\t\tmagazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]].alpha = 0\r\n\t\t\tmagazineIndexes[weapon_str]++\r\n\t\t\tdispatch( decrementTotalAmmo(weapon_str) )\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n        this.lastBulletByWepType[weapon_str] = true\r\n      }\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n\t\t\t\tmagEmptyBools[weapon_str] = true\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n  \r\n  const makeGrenadeIcon = () => {\r\n    this.gbevel = new BevelFilter()\r\n    this.gnoise = new NoiseFilter()\r\n    this.gbevel.shadowAlpha = .45\r\n    this.gbevel.lightAlpha = .35\r\n    this.gbevel.thickness = 5\r\n    this.gbevel.shadowColor = 0x0\r\n    this.gbevel.lightColor = 0x208C44\r\n    this.gnoise.noise = .1\r\n    this.gnoise.seed = .5\r\n    let grenadeGfc = new PIXI.Graphics()\r\n    grenadeGfc.lineStyle(1, 0x0)\r\n    grenadeGfc.beginFill(0x1F472C)\r\n    grenadeGfc.drawCircle(0, 0, 6)\r\n    grenadeGfc.filters = getState().game.filterEffects ? [ this.gbevel, this.gnoise ] : []\r\n    container.addChild(grenadeGfc)\r\n    \r\n    return grenadeGfc\r\n  }\r\n\r\n  this.grenades = []\r\n\r\n  this.updateGrenadeIcons = () => {\r\n    if (this.grenades) { this.grenades.forEach(g => { g.destroy() }) }\r\n    this.grenades = []\r\n    let grenadeCount = getState().game.player.weapons.totalAmmo['grenades']\r\n    for (let i = 0; i < grenadeCount; ++i) {\r\n      let gnade = makeGrenadeIcon()\r\n      this.grenades.push( gnade )\r\n    }\r\n    this.grenades.forEach((g, i) => {\r\n      g.position.x = getState().game.width - 25 - ((g.width * 1.5) * i)\r\n      g.position.y = getState().game.height - 110 - g.height\r\n      from(g, (.1 * i), { y: g.position.y - 10, alpha: 0 })\r\n    })\r\n  }\r\n\r\n  this.updateGrenadeIcons()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const updateWeaponsUI = () => {\r\n  let { gameObjects } = window\r\n  let { game: { gameState } } = getState()\r\n\tif (gameObjects) {\r\n\t\tlet weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\t\tif (weaponsUI && (!weaponsUI.reloading || gameState === GameStates.SHOP_MENU)) {\r\n      weaponsUI.select()\r\n      gameObjects = null\r\n\t\t}\r\n\t}\r\n}\r\n","import { Graphics } from 'pixi.js'\r\nimport { Bodies, Body, World } from 'matter-js'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport store from '../../../app/store'\r\n\r\nexport default class HealthDrop {\r\n\r\n  constructor(amt, pos) {\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    let _amt = amt * 3\r\n    this.gfc = new Graphics()\r\n    this.gfc.lineStyle(2, 0x0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.gfc.lineStyle(0, 0x0, 0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.bevel = new BevelFilter({ thickness: 3, lightAlpha: .5, shadowAlpha: .5, shadowColor: 0x247F4D })\r\n    this.glow = new GlowFilter({ outerStrength: .5 })\r\n    this.gfc.filters = store.getState().game.filterEffects ? [\r\n      this.glow, this.bevel,\r\n    ] : []\r\n\r\n    this.body = Bodies.rectangle(pos.x, pos.y, _amt, _amt, {\r\n      restitution: .65,\r\n      collisionFilter: itemCollisionOptions\r\n    })\r\n    this.body.main = this\r\n    this.body.amount = amt\r\n    this.body.label = 'health drop'\r\n    World.add(window.gameObjects.getKeyValue('world'), this.body)\r\n    window.gameObjects.getKeyValue('health-drops').push( this )\r\n    \r\n    return this\r\n  }\r\n\r\n  checkFilters() {\r\n    if (this.gfc && store.getState().game.filterEffects) {\r\n      this.gfc.filters = [ this.bevel, this.glow ]\r\n    } else {\r\n      if (this.gfc) {\r\n        this.gfc.filters = []\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    let idx = healths.indexOf(this)\r\n    if (idx > -1) { healths.splice(idx, 1) }\r\n    this.gfc.destroy()\r\n    this.gfc = null\r\n    World.remove(window.gameObjects.getKeyValue('world'), this.body)\r\n    this.body = null\r\n    healths = null\r\n    idx = null\r\n    this.container = null\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.container && this.container.children.indexOf(this.gfc) === -1) {\r\n      this.container.addChild(this.gfc)\r\n    }\r\n    this.gfc.position = renderFn(this.body)\r\n  }\r\n\r\n}","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Text, Container, filters } from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\n\r\nexport default function AmmoDrop (position, weaponType, amount) {\r\n  let { BlurFilter } = filters  \r\n  let { gameObjects } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n\r\n  let colors = {\r\n    'pistol weapon': 0x0254FF,\r\n    'smg weapon': 0xFF9D02,\r\n    'shotgun weapon': 0xA52121,\r\n  }\r\n\r\n  let text = {\r\n    'pistol weapon': 'PISTOL',\r\n    'smg weapon': 'SMG',\r\n    'shotgun weapon': 'SHOTGUN',\r\n  }\r\n  \r\n  let props = {\r\n    x: position.x, y: position.y,\r\n    w: 50, h: 20\r\n  }\r\n\r\n  let ammoBox = Bodies.rectangle(props.x, props.y, props.w, props.h, {\r\n    collisionFilter: itemCollisionOptions\r\n  })\r\n  ammoBox.label = 'ammo drop'\r\n  ammoBox.ammo_type = weaponType\r\n  ammoBox.amount = amount\r\n  let world = gameObjects.getKeyValue('world')\r\n  World.add(world, ammoBox)\r\n\r\n  ammoBox.main = this\r\n\r\n  let ammoGfc = new Container()\r\n\r\n  let boxGfc = new Graphics()\r\n  boxGfc.beginFill(colors[weaponType])\r\n  boxGfc.drawRect(0, 0, props.w, props.h)\r\n  boxGfc.pivot.x = boxGfc.width * .5\r\n  boxGfc.pivot.y = boxGfc.height * .5\r\n  let bevelFilter = new BevelFilter()\r\n  bevelFilter.thickness = 5\r\n  bevelFilter.lightColor = 0xffffff\r\n  bevelFilter.lightAlpha = 0.25\r\n  bevelFilter.shadowColor = 0x0\r\n  bevelFilter.shadowAlpha = 0.25\r\n  boxGfc.filters = store.getState().game.filterEffects ? [\r\n    bevelFilter\r\n  ] : []\r\n\r\n  let blurGfc, blurFilter\r\n  blurGfc = new Graphics()\r\n  blurGfc.beginFill(0x000000)\r\n  blurGfc.drawRect(0, props.h/2, props.w, props.h/2)\r\n  blurGfc.pivot.x = blurGfc.width * .5\r\n  blurGfc.pivot.y = blurGfc.height * .5\r\n  blurFilter = new BlurFilter(5, 3)\r\n  blurGfc.alpha = .85\r\n  blurGfc.filters = store.getState().game.filterEffects ? [\r\n    blurFilter\r\n  ] : []\r\n  // if (store.getState().game.filterEffects) {\r\n  // }\r\n\r\n  let mask = new Graphics()\r\n  mask.beginFill(colors[weaponType])\r\n  mask.drawRect(0, 0, props.w, props.h)\r\n  mask.pivot.x = mask.width * .5\r\n  mask.pivot.y = mask.height * .5\r\n  blurGfc.mask = mask\r\n\r\n  if (store.getState().game.filterEffects) {\r\n    ammoGfc.addChild(boxGfc, blurGfc, mask)\r\n  } else {\r\n    ammoGfc.addChild(boxGfc, mask)\r\n  }\r\n\r\n  let boxTxt = new Text(text[weaponType], { fontSize: '9px', fill: '#FFF', fontWeight: 'bold' })\r\n  boxTxt.pivot.x = boxTxt.width * .5\r\n  boxTxt.pivot.y = boxTxt.height * .5\r\n  let glow = new GlowFilter()\r\n  glow.color = 0x0\r\n  glow.outerStrength = 1.0\r\n  boxTxt.filters = store.getState().game.filterEffects ? [ glow ] : []\r\n  ammoGfc.addChild(boxTxt)\r\n\r\n  // container.addChild(ammoGfc)\r\n\r\n  this.gfc = ammoGfc\r\n  this.body = ammoBox\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      ammoGfc.addChild(blurGfc, boxTxt)\r\n      boxGfc.filters = [ bevelFilter ]\r\n      blurGfc.filters = [ blurFilter ]\r\n      boxTxt.filters = [ glow ]\r\n    } else {\r\n      if (ammoGfc.children.indexOf(blurGfc) > -1) {\r\n        ammoGfc.removeChild(blurGfc)\r\n      }\r\n      boxGfc.filters = []\r\n      blurGfc.filters = []\r\n      boxTxt.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    const idx = ammoDrops[weaponType].indexOf(this)\r\n    if (idx > -1) {\r\n      ammoDrops[weaponType].splice(idx, 1)\r\n      ammoGfc.destroy()\r\n      World.remove(world, ammoBox)\r\n    }\r\n  }\r\n  \r\n  // auto time-out to destroy self \r\n  setTimeout(() => {\r\n    this.destroy()\r\n  }, 20000)\r\n\r\n  ammoDrops[weaponType].push(this)\r\n\r\n  this.positionAmmoBox = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(ammoBox)\r\n    ammoGfc.position = { x, y }\r\n    ammoGfc.rotation = rot\r\n    if (container && container.children.indexOf(this.gfc) === -1) {\r\n      container.addChild(ammoGfc)\r\n    }\r\n  }\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { getBodyHeight } from '../utils/Utils'\r\nimport { decrementWaveCountToDefeat, increaseScore, incrementZombiesOnStage,\r\n\tupdatePrevScore, setZombieLastKilled, setLastGrenadeKill, resetConsecutiveGrenadeKills, setAchievementOwned, increaseStats, StatsDefs } from '../gameSlice'\r\nimport { GibGenerator } from '../items/Gib'\r\nimport store from '../../../app/store'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { BulletImpact } from '../player/fireWeapons'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport HealthDrop from '../items/HealthDrop'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { degrees } from 'radians'\r\nimport { createTextMessage } from '../createMessages'\r\nimport { AchievementDefs } from '../gameSlice'\r\nimport AchievementsView from '../ReactComponents/AchievementsView'\r\n\r\nexport function ZombieRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { TweenLite: { delayedCall, to } } = window\r\n\tlet world, container, zombieRags\r\n\tlet { gameObjects } = window\r\n\tif (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n\tif (!container) {\r\n\t\tcontainer = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tif (!zombieRags) {\r\n\t\tzombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n\t}\r\n\tlet bloodSmack = gameObjects.getKeyValue('death-rip-sound')\r\n\tbloodSmack.play()\r\n\tlet deathSnd = gameObjects.getKeyValue('zombie-death-sound')\r\n\tdeathSnd.play()\r\n\r\n\tlet b = { w: 40, h: 90 }\r\n  let h = { w: 20, h: 30 }\r\n\tlet a = { w: 15, h: 40 }\r\n\tlet l = { w: 15, h: 40 }\r\n\tlet hnd = { w: 15, h: 35 }\r\n\tlet f = { w: 15, h: 35 }\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: -b.w/4, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n  this.composite = Composite.create()\r\n  this.bodies = [\r\n    head,\r\n    armUpperL, armUpperR,\r\n    armLowerL, armLowerR,\r\n    legUpperL, legUpperR,\r\n    legLowerL, legLowerR,\r\n    footL, footR\r\n\t]\r\n\tthis.bodies.forEach(body => { body.label = 'zombie body part' })\r\n\tbodyUpper.label = 'torso'\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\tthis.constraints = [\r\n\t\tbodyToHead,\r\n\t\thandToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t]\r\n\r\n\tWorld.add(world, this.composite)\r\n  Body.applyForce(bodyUpper, bodyUpper.position, force)\r\n  this.bodies.forEach(_body => {\r\n    Body.applyForce(_body, _body.position, { x: random.float(-0.01, -0.05), y: random.float(-0.01, -0.05) })\r\n  })\r\n\tzombieRags.push(this)\r\n\r\n\t// add sprites\r\n\tlet z_parts_spritesheet = gameObjects.getKeyValue('zombie-parts-gored-sheet')\r\n\r\n  const getSkullTex = () => {\r\n    let skulls = [ 'skull_gored.png', 'skull_gored2.png', 'skull_gored3.png' ]\r\n    return skulls[Math.floor(Math.random() * skulls.length)]\r\n  }\r\n\tlet skull = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[ getSkullTex() ]\r\n  )\r\n\tskull._id = 'skull'\r\n\tlet torso = new PIXI.Sprite( z_parts_spritesheet.textures['torso_whole_gored.png'] )\r\n\ttorso._id = 'torso'\r\n\t\r\n\tlet spriteParts = []\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_leg_lower_gored.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_arm_hand_gored.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_arm_forearm_gored.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n  \r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_leg_upper_gored.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n\tlet foot2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_leg_foot_gored.png']\r\n\t)\r\n\tfoot2._id = 'foot 2'\r\n\tspriteParts.push( foot2 )\r\n  \r\n  spriteParts.push( torso, skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_leg_lower_gored.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\t\r\n\tlet hand1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_arm_hand_gored.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n\tlet arm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_forearm_gored.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tlet foot1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_leg_foot_gored.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n\t\tpart.updateAnchor = true\r\n\t\tpart.pivot.x = part.width * .5\r\n\t\tpart.pivot.y = part.height * .5\r\n\t\tcontainer.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = (\r\n    force ? \r\n      force.x < 0 ?\r\n      { x: -0.002 }\r\n      : { x: 0.002 }\r\n    : { x: random.float(-0.002, 0.002) }\r\n  )\r\n\tgibForce.y = -0.005\r\n\t\r\n\tnew GibGenerator(\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? random.int(5, 10) : 3,  //random.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 2 : 1\r\n  )\r\n\r\n\tthis.destroy = () => {\r\n\t\tspriteParts.forEach((sprite, i) => {\r\n      to(sprite, getState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 1 : .5, {\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          container.removeChild(sprite)\r\n          if (i === spriteParts.length - 1) {\r\n            World.remove(world, this.composite)\r\n\t\t\t\t\t\tzombieRags.splice(zombieRags.indexOf(this), 1)\r\n\t\t\t\t\t\tzombieRags = null\r\n\t\t\t\t\t\tworld = null\r\n\t\t\t\t\t\t// container = null\r\n\t\t\t\t\t\tthis.bodies.forEach(b => { b = null })\r\n\t\t\t\t\t\tthis.constraints.forEach(c => { c = null })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\t}\r\n  \r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n\t\tskull.rotation = skullPos.rotation\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a random constraint\r\n\tconst randomConstraintToRemove = () => this.constraints[ Math.floor( Math.random() * this.constraints.length ) ]\r\n\tlet parts = new Array(random.int(1, 10)).fill(1)\r\n  parts = parts.map((item, i) => {\r\n    let rand\r\n    const getARandomConstraint = () => {\r\n      rand = randomConstraintToRemove()\r\n      if (parts.indexOf(rand) > -1) {\r\n        getARandomConstraint()\r\n      } else {\r\n        return rand\r\n      }\r\n    }\r\n    return getARandomConstraint()\r\n  })\r\n  parts.forEach(part => { Composite.remove(this.composite, part) })\r\n\r\n\t// auto removal\r\n\tdelayedCall(\r\n\t\t!getState().game.lastWaveCountDefeated || getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n\t\tthis.destroy\r\n\t)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function Zombie(x, y) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { Power2, TweenLite: { delayedCall, to, set } } = window\r\n\tlet world, zombies, container\r\n\tlet { gameObjects } = window\r\n  if (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n  if (!zombies) {\r\n    zombies = gameObjects.getKeyValue('zombies')\r\n  }\r\n  if (!container) {\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\r\n  dispatch( incrementZombiesOnStage() )\r\n\t\r\n  let b = { w: 60, h: 125 }\r\n\tlet h = { w: 40, h: 60 }\r\n\t// let zombieWalkSpeed = .65\r\n\tlet zombieWalkSpeed = getState().game.enemies.zombies.walkSpeed\r\n\r\n  let body = Bodies.rectangle(x, y, b.w, b.h, { collisionFilter: enemyCollisionOptions })\r\n  let head = Bodies.rectangle(x, y, h.w, h.h, { collisionFilter: enemyCollisionOptions, inertia: Infinity })\r\n  \r\n\tbody.label = 'enemy zombie body'\r\n\thead.label = 'enemy zombie head'\r\n\r\n  let headToBody = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: body,\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -b.h/2 },\r\n    length: 0,\r\n  })\r\n\r\n  let zombie = Composite.create()\r\n\r\n  this.composite = zombie\r\n  this.body = body\r\n  this.head = head\r\n\r\n  Composite.add(zombie, [\r\n    body, head,\r\n    headToBody\r\n  ])\r\n  World.add(world, zombie)\r\n\r\n  // pixi stuff\r\n  let zWalkSheet = gameObjects.getKeyValue('zombie-walk-sheet') //gameObjects.getKeyValue('z-walk-spritesheet')\r\n\tlet zAttackSheet = gameObjects.getKeyValue('zombie-attack1-sheet')  // gameObjects.getKeyValue('z-attack-spritesheet')\r\n\tlet idleSheet = gameObjects.getKeyValue('zombie-idle-sheet')\r\n\tlet idleAnim = new PIXI.AnimatedSprite( idleSheet.animations['idle'] )\r\n\tlet zWalk = new PIXI.AnimatedSprite(zWalkSheet.animations['walkcycle'])\r\n\tlet zAttack = new PIXI.AnimatedSprite(zAttackSheet.animations['attack1'])\r\n\tlet zAttack2 = new PIXI.AnimatedSprite(gameObjects.getKeyValue('zombie-attack2-sheet').animations['attackTwo'])\r\n\t\r\n\t// slash fx \r\n\tlet slashFX = gameObjects.getKeyValue('zombie-slash-fx-sheet')\r\n  let slashAnim = new PIXI.AnimatedSprite( slashFX.animations['slash'] )\r\n\t\r\n\tslashAnim.loop = false\r\n\tslashAnim.animationSpeed = .5\r\n\tslashAnim.updateAnchor = true\r\n\tslashAnim.pivot.x = slashAnim.width * .5\r\n\tslashAnim.pivot.y = slashAnim.height * .5\r\n\tslashAnim.visible = false\r\n\tslashAnim.onComplete = () => {\r\n\t\tslashAnim.visible = false\r\n\t}\r\n  container.addChild(slashAnim)\r\n  \r\n  // shadow\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 80, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n\tblur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n  if (container && container.children.indexOf(this.shadow) === -1) {\r\n    container.addChild(this.shadow)\r\n  }\r\n\r\n\tidleAnim.loop = true\r\n\tidleAnim.animationSpeed = .5\r\n\tidleAnim.updateAnchor = true\r\n\tidleAnim.pivot.x = idleAnim.width * .5\r\n\tidleAnim.pivot.y = idleAnim.height * .6\r\n\tcontainer.addChild(idleAnim)\r\n\r\n  zWalk.loop = true\r\n  zWalk.animationSpeed = 0.5\r\n  zWalk.updateAnchor = true\r\n  zWalk.pivot.x = zWalk.width * .5\r\n  zWalk.pivot.y = zWalk.height * .6\r\n  container.addChild(zWalk)\r\n\r\n\tzAttack.loop = false\r\n  zAttack.animationSpeed = 0.65\r\n  zAttack.updateAnchor = true\r\n  zAttack.pivot.x = zAttack.width * .5\r\n  zAttack.pivot.y = zAttack.height * .6\r\n  container.addChild(zAttack)\r\n\tzAttack.visible = false\r\n\t\r\n\tzAttack2.loop = false\r\n  zAttack2.animationSpeed = 0.65\r\n  zAttack2.updateAnchor = true\r\n  zAttack2.pivot.x = zAttack2.width * .5\r\n  zAttack2.pivot.y = zAttack2.height * .6\r\n  container.addChild(zAttack2)\r\n\tzAttack2.visible = false\r\n\r\n\tthis.walkAnim = zWalk\r\n\tthis.attackAnim = zAttack\r\n\tthis.attackAnim2 = zAttack2\r\n\tthis.idleAnim = idleAnim\r\n\r\n\tthis.anims = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim\r\n\t]\r\n\tthis.anims.forEach(anim => {\r\n\t\twindow.TweenLite.from(\r\n\t\t\tanim, 1, { alpha: 0 }\r\n\t\t)\r\n\t})\r\n\r\n\tthis.playerBodyPosition = null\r\n\r\n\tthis.playSlashAnim = () => {\r\n\t\tif (this.attackAnim.visible) {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = 1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x\r\n\t\t\tslashAnim.rotation = degrees(0)\r\n\t\t} else {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = -1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x * -1\r\n\t\t\tslashAnim.rotation = degrees(180)\r\n\t\t}\r\n\t\tslashAnim.visible = true\r\n\t\tslashAnim.gotoAndPlay(0)\r\n\t}\r\n\r\n\tthis.setSpritesPositions = fn => {\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.shadow.position.x = x\r\n\t\tthis.shadow.position.y = y + this.walkAnim.height/4 + 10\r\n\t\tthis.walkAnim.position.x = x\r\n\t\tthis.walkAnim.position.y = y\r\n\t\tthis.attackAnim.position.x = x\r\n\t\tthis.attackAnim.position.y = y\r\n\t\tthis.attackAnim2.position.x = x\r\n\t\tthis.attackAnim2.position.y = y\r\n\t\tthis.idleAnim.position.x = x\r\n\t\tthis.idleAnim.position.y = y\t\r\n\t\t// set timescale according to whether player is alive\r\n\t\tif (this.player.dead) {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.2\r\n\t\t\tthis.idleAnim.animationSpeed = 0.2\r\n\t\t\tslashAnim.animationSpeed = 0.2\r\n\t\t} else {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.5\r\n\t\t\tthis.attackAnim.animationSpeed = 0.65\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.65\r\n\t\t\tthis.idleAnim.animationSpeed = 0.5\r\n\t\t\tslashAnim.animationSpeed = 0.5\r\n\t\t}\r\n\t\tif (this.shouldDisplayHealth && this.healthDisplay !== undefined) {\r\n\t\t\tthis.moveLifeDisplay( fn(this.body) )\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setPlayerVars = ({ player, playerDirection, playerBody }) => {\r\n\t\tthis.player = player\r\n\t\tthis.playerBodyPosition = playerBody.position\r\n\t\tthis.playerBody = playerBody\r\n\t\tthis.playerDirection = playerDirection\r\n\t}\r\n\t\r\n\tconst zombieFarFromPlayer = (distance) => {\r\n\t\treturn (this.playerBody.position.x - (distance ? distance : 120) > this.body.position.x || this.playerBody.position.x + (distance ? distance : 120) < this.body.position.x)\r\n\t}\r\n\r\n\tthis.playIdleAnim = () => {\r\n\t\tif (!zAttack.playing && !zAttack2.playing && !this.walkAnimPlaying) {\r\n\t\t\tidleAnim.play()\r\n\t\t\tidleAnim.visible = true\r\n\t\t}\r\n\t}\r\n\r\n\tthis.stopIdleAnim = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\r\n\tthis.walkAnimPlaying = false\r\n\tthis.playWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === false) {\r\n\t\t\tthis.stopIdleAnim()\r\n\t\t\tthis.walkAnim.visible = true\r\n\t\t\tthis.walkAnim.play()\r\n\t\t\tthis.walkAnimPlaying = true\r\n\t\t} else {\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n\tthis.stopWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === true) {\r\n\t\t\tthis.walkAnim.stop()\r\n\t\t\tthis.walkAnim.gotoAndStop(0)\r\n\t\t\tthis.walkAnimPlaying = false\r\n\t\t\tthis.walkAnim.visible = false\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n  this.playWalkAnim()\r\n  \r\n  this.healthOffsetY = 160\r\n  this.damageDisplayOptions = {\r\n    fill: '#FF0000',\r\n    fontSize: 11\r\n  }\r\n  this.healthDisplayOptions = {\r\n    fill: '#FFFF00',\r\n    fontSize: 11\r\n  }\r\n\tthis.healthDisplay = new PIXI.Text(this.health, this.healthDisplayOptions)\r\n\tthis.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n\tif (getState().game.displayZombieHealth) {\r\n\t\tthis.shouldDisplayHealth = true\r\n\t\tcontainer.addChild(this.healthDisplay)\r\n\t}\r\n\r\n  this.moveLifeDisplay = (renderFnResult) => {\r\n\t\tif (this.shouldDisplayHealth) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tthis.healthDisplay.text = this.health\r\n\t\t\t} else {\r\n\t\t\t\tthis.healthDisplay.text = 0\r\n\t\t\t}\r\n\t\t\tthis.healthDisplay.position = {\r\n\t\t\t\tx: renderFnResult.x,\r\n\t\t\t\ty: renderFnResult.y - this.healthOffsetY\r\n\t\t\t}\r\n\t\t} else if (container.children.indexOf(this.healthDisplay) > -1) {\r\n\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t}\r\n  }\r\n\r\n  // runs via the engine loop, so will repeat 30-60 times a second\r\n  this.walk = () => {\r\n\t\tlet comparison = (this.playerBody.position.x < this.body.position.x)\r\n\t\tif (zombieFarFromPlayer() && !zAttack.playing && !zAttack2.playing && !this.player.dead) {\r\n\t\t\tthis.playWalkAnim()\r\n      if (comparison) {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = 1 })\r\n      } else {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = -1 })\r\n      }\r\n      let alteredWalkSpeed\r\n      if (zombieFarFromPlayer(800)) {\r\n        zWalk.animationSpeed = 1.00\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(2.8, 3.2)\r\n      } else if (zombieFarFromPlayer(400)) {\r\n        zWalk.animationSpeed = .75\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(1.8, 2.2)\r\n      } else {\r\n        zWalk.animationSpeed = 0.5\r\n        alteredWalkSpeed = zombieWalkSpeed\r\n      }\r\n      Body.translate(this.body, { x: comparison ? -alteredWalkSpeed : alteredWalkSpeed, y: 0 })\r\n\t\t} else {\r\n\t\t\tthis.stopWalkAnim()\r\n\t\t}\r\n  }\r\n\r\n\tthis.health = getState().game.enemies.zombies.startingHealth\r\n\r\n\tthis.checkFilters = () => {\r\n\t\t// if (getState().game.filterEffects) {\r\n\t\t// \tthis.shadow.filters = [ blur ]\r\n\t\t// \tthis.shadow.alpha = 1.0\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = [ this.criticalGlow ]\r\n\t\t// \t}\r\n\t\t// } else {\r\n\t\t// \tthis.shadow.filters = []\r\n\t\t// \tthis.shadow.alpha = .5\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = []\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\t// this.shouldDisplayHealth = true\r\n\tthis.displayHealth = bool => {\r\n\t\tthis.shouldDisplayHealth = bool\r\n\t\tif (bool) {\r\n\t\t\tcontainer.addChild(this.healthDisplay)\r\n\t\t} else {\r\n\t\t\tif (container.children.indexOf(this.healthDisplay)) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.sprites = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim,\r\n    slashAnim\r\n\t]\r\n\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.main = this\r\n\t})\r\n\r\n\tthis.dead = false\r\n\r\n  this.dmgTxts = []\r\n\tthis.dmgIterator = 0\r\n\tthis.tintAmounts = {\r\n\t\t1: 0xFF9C00,\r\n\t\t2: 0xFF2E00,\r\n\t\t3: 0xFF0000,\r\n\t\t4: 0xB7000F\r\n\t}\r\n\tthis.takeDamage = (dmg, partDamaged, isCritical, isMelee, attackType) => {\r\n\t\t// randomize relative position of blood spurt \r\n\t\tlet spurtPos\r\n\t\tlet spurtPosLow = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y, this.walkAnim.position.y + 50)\r\n\t\t}\r\n\t\tlet spurtPosHi = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y - 100, this.walkAnim.position.y - 50)\r\n\t\t}\r\n\t\tif (!partDamaged || partDamaged === 'head') {\r\n\t\t\tspurtPos = spurtPosHi\r\n\t\t} else {\r\n\t\t\tspurtPos = spurtPosLow\r\n\t\t}\r\n\t\tnew BloodSpurt( null, spurtPos )\r\n\t\tthis.health -= dmg\r\n\t\tthis.directionX = this.playerBodyPosition ? this.playerBodyPosition.x > this.body.position.x : false\r\n\t\tif (this.health <= 0 && !this.dead) {\r\n\t\t\tif (attackType === 'turret') {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tthis.kill(partDamaged, null, attackType ? attackType : null)\r\n      if (isMelee) {\r\n        dispatch(\r\n          increaseStats( StatsDefs.meleeKills )\r\n        )\r\n        setTimeout(() => {\r\n          if (getState().game.stats.meleeKills === 5 && !getState().game.achievements[ AchievementDefs.PILEDRIVE ].owned) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.PILEDRIVE )\r\n            )\r\n          }\r\n        }, 0)\r\n      }\r\n\t\t}\r\n\t\tthis.sprites.forEach(sprite => {\r\n\t\t\tif (sprite !== slashAnim) {\r\n\t\t\t\tif (this.health < 25) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[3]\r\n\t\t\t\t}\r\n\t\t\t\tif (this.health < 10) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[4]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n  }\r\n  \r\n  this.removeZombieFromMatterWorld = () => {\r\n    this.dead = true\r\n    // remove attack hit box in case the zombie was killed on that exact frame and\r\n\t\t// attack box didn't get removed \r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (this.healthDisplay) {\r\n      container.removeChild(this.healthDisplay)\r\n    }\r\n\t\t// if health is depleted, remove all enemy sprites and bodies\r\n\t\tthis.sprites.forEach(sprite => { container.removeChild(sprite) })\r\n    if (this.attackHitbox) { World.remove(world, this.attackHitbox) }\r\n\t\tWorld.remove(world, this.composite)\r\n    return 'zombie removed'\r\n  }\r\n\r\n  this.removeZombieFromZombiesArray = () => {\r\n    let idx = zombies.indexOf(this)\r\n    if (idx > -1) {\r\n      zombies.splice(idx, 1)\r\n    }\r\n  }\r\n  \r\n\tthis.kill = (partLastDamaged, skipZombieRag, killType) => {\r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (!this.dead) {\r\n      this.dead = true\r\n\t\t\tthis.health = 0\r\n\t\t\tif (this.healthDisplay) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n      }\r\n      // if (this.criticalText) {\r\n      //   container.removeChild(this.criticalText)\r\n      // }\r\n      if (this.shadow) {\r\n        container.removeChild(this.shadow)\r\n      }\r\n\t\t\tcontainer.removeChild(this.shadow)\r\n      this.removeZombieFromMatterWorld()\r\n      this.removeZombieFromZombiesArray()\r\n      let force = { x: this.directionX ? -0.2 : 0.2, y: -0.25 }\r\n\t\t\tlet dropPos = {\r\n\t\t\t\tx: this.directionX ? this.body.position.x - 20 : this.body.position.x + 20,\r\n\t\t\t\ty: this.body.position.y - 60\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n\t\t\t\tGenerateRandomCreditDrops(dropPos)\r\n\t\t\t\tif (getState().game.player.perks['ammoDropper'].owned) {\r\n\t\t\t\t\tlet { list } = getState().game.player.weapons\r\n\t\t\t\t\tnew AmmoDrop(dropPos, list[Math.floor(Math.random() * list.length)], random.int(4, 16))\r\n\t\t\t\t}\r\n\t\t\t\tif (getState().game.player.perks['healthDropper'].owned) {\r\n\t\t\t\t\tnew HealthDrop(random.int(2, 6), dropPos)\r\n\t\t\t\t}\r\n\t\t\t\tbulletImpacts.push(\r\n\t\t\t\t\tnew BulletImpact('enemy', this.body.position, {\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\talphaDuration: 3,\r\n\t\t\t\t\t\tset: 1,\r\n\t\t\t\t\t\trand: {\r\n\t\t\t\t\t\t\tmin: 1, max: 4\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n        dispatch(decrementWaveCountToDefeat())\r\n\t\t\t\tlet scoreAmt = getState().game.scoreAmounts.zombie\r\n\t\t\t\tif (partLastDamaged === 'head') {\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.headShot\r\n\t\t\t\t}\r\n\t\t\t\tif (Date.now() - JSON.parse(getState().game.zombieLastKilled) < 1000) {\r\n\t\t\t\t\tcreateTextMessage('kill streak bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieStreakBonus\r\n\t\t\t\t}\r\n\t\t\t\tif (killType && killType === 'fell off') {\r\n\t\t\t\t\tif (!getState().game.achievements[AchievementDefs.THIS_IS_SPARTA].owned) {\r\n\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.THIS_IS_SPARTA ))\r\n\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcreateTextMessage('knockoff bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieKnockedOffStage\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tsetZombieLastKilled( JSON.stringify(Date.now()) )\r\n\t\t\t\t)\r\n\t\t\t\tif (killType === 'grenade explosion') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tsetLastGrenadeKill( JSON.stringify(Date.now()) )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (Date.now() - JSON.parse(getState().game.lastGrenadeKill < 100)) {\r\n\t\t\t\t\t\t\tif (getState().game.consecutiveGrenadeKills > 2) {\r\n\t\t\t\t\t\t\t\tif (!getState().game.achievements[ AchievementDefs.FIRE_IN_THE_HOLE ].owned) {\r\n\t\t\t\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.FIRE_IN_THE_HOLE ))\r\n\t\t\t\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdispatch( resetConsecutiveGrenadeKills() )\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'landmine') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.mineKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.mineKills > 2 && !getState().game.achievements[ AchievementDefs.MINER ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.MINER))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'turret') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.turretKills > 9 && !getState().game.achievements[ AchievementDefs.GUNNA ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.GUNNA))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\t\tgetState().game.player.variables.jumping &&\r\n\t\t\t\t\t\t!getState().game.achievements[ AchievementDefs.THE_JUMP_SHOT ].owned &&\r\n\t\t\t\t\t\tkillType !== 'grenade explosion' &&\r\n\t\t\t\t\t\tkillType !== 'landmine' &&\r\n\t\t\t\t\t\tkillType !== 'landmine explosion' &&\r\n\t\t\t\t\t\tkillType !== 'clustermine explosion'\r\n\t\t\t\t\t) {\r\n          \tdispatch(\r\n            \tsetAchievementOwned( AchievementDefs.THE_JUMP_SHOT )\r\n          \t)\r\n        }\r\n\t\t\t\tupdateScore( scoreAmt )\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.zombiesKilled )\r\n\t\t\t\t)\r\n\t\t\t\tnew ZombieRagdoll({\r\n\t\t\t\t\tx: this.body.position.x,\r\n\t\t\t\t\ty: this.body.position.y - getBodyHeight(this.body)\r\n\t\t\t\t}, force, partLastDamaged)\r\n\t\t\t}\r\n      if (this.attackHitbox) {\r\n        World.remove(world, this.attackHitbox)\r\n      }\r\n\t\t\tzombies = 1\r\n\t\t\tzombies = null\r\n      // container = 1\r\n\t\t\t// container = null\r\n    }\r\n\t}\r\n\r\n\t// const getRandomInt = () => random.int(2, 5)\r\n\r\n\tconst makeAttackHitbox = (num) => {\r\n\t\tif (this.playerBodyPosition) {\r\n\t\t\tlet comparison = (this.playerBodyPosition.x > this.body.position.x)\r\n\t\t\tlet compareResult = comparison ? 80 : -80\r\n\t\t\treturn Bodies.rectangle(this.body.position.x + compareResult, this.body.position.y - getBodyHeight(this.body)/2, num === 2 ? 120 : 100, 150, {\r\n\t\t\t\tlabel: 'enemy zombie attack',\r\n\t\t\t\tisStatic: true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// zAttack.onFrameChange = () => {\r\n\t// \tif (zAttack.currentFrame === 6) {\r\n\t// \t\tthis.playSlashAnim()\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 8) {\r\n\t// \t\tWorld.add(world, this.attackHitbox)\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 9) {\r\n\t// \t\tWorld.remove(world, this.attackHitbox)\r\n\t// \t\t// this.attackHitbox = null\r\n\t// \t}\r\n\t// }\r\n\tzAttack.onFrameChange = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\tzAttack.onComplete = () => {\r\n\t\tzAttack.gotoAndStop(0)\r\n\t\tzAttack.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\tzAttack2.onComplete = () => {\r\n\t\tzAttack2.gotoAndStop(0)\r\n\t\tzAttack2.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\t//hitbox will be a matter body that appears for a few frames\r\n\tthis.timeSinceLastAttack = Date.now() + 500\r\n\tlet zombieGrowl = gameObjects.getKeyValue('zombie-growl-sound')\r\n\tthis.attack = () => {\r\n\t\tif (!this.paused && zombies.indexOf(this) > -1 && !this.player.dead && !this.dead) {\r\n\t\t\tthis.timeSinceLastAttack = Date.now()\r\n\t\t\tlet oneOfTwo = [ 1, 2 ][ Math.floor( Math.random() * 2 ) ]\r\n\t\t\tthis.attackHitbox = makeAttackHitbox(oneOfTwo)\r\n\t\t\tzombieGrowl.play()\r\n\t\t\t// change frames to an attack animation here\r\n\t\t\tzWalk.visible = false\r\n\t\t\tif (oneOfTwo === 1) {\r\n\t\t\t\tzAttack.visible = true\r\n\t\t\t\tzAttack.play()\r\n\t\t\t} else {\r\n\t\t\t\tzAttack2.visible = true\r\n\t\t\t\tzAttack2.play()\r\n\t\t\t}\r\n\t\t\tidleAnim.visible = false\r\n\t\t\tdelayedCall(.15, () => {\r\n\t\t\t\tthis.playSlashAnim()\r\n\t\t\t})\r\n\t\t\tdelayedCall(.2, () => {\r\n\t\t\t\tWorld.add(world, this.attackHitbox)\r\n\t\t\t\tdelayedCall(.1, () => {\r\n\t\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tif (this.attackHitbox) {\r\n\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t// this.attackHitbox = null\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  this.pause = () => {\r\n    this.paused = true\r\n    // this.stopWalkAnim()\r\n    idleAnim.stop()\r\n    this.walkAnim.stop()\r\n    this.attackAnim.stop()\r\n    this.attackAnim2.stop()\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.paused = false\r\n    this.walkAnim.play()\r\n    if (zAttack.currentFrame !== 0) {\r\n      zAttack.play()\r\n    }\r\n  }\r\n\r\n  zombies.push(this)\r\n\r\n  return this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Container, filters} from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport store from '../../../app/store'\r\n\r\nexport default function CreditDrop (position, amount) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let currencyDrops = gameObjects.getKeyValue('currency-drops')\r\n  let { x: _x, y: _y } = position\r\n\r\n  // init\r\n  // matter body \r\n  let creditBody = Bodies.circle(_x, _y, amount * .25, { restitution: .5, collisionFilter: itemCollisionOptions })\r\n  creditBody.label = 'currency drop'\r\n  creditBody.amount = amount\r\n  // console.log(creditBody.amount)\r\n  World.add(world, creditBody)\r\n  // gfx -- blurred\r\n  let creditContainer = new Container()\r\n  let creditBlur = new Graphics()\r\n  creditBlur.beginFill(0x0eead8)\r\n  creditBlur.drawCircle(0, 0, amount * .25)\r\n  let blurFilter = new filters.BlurFilter()\r\n  blurFilter.blur = 3\r\n  creditBlur.filters = store.getState().game.filterEffects ? [ blurFilter ] : []\r\n  creditBlur.pivot.x = (creditBlur.width * .25) * .5\r\n  creditBlur.pivot.y = (creditBlur.height * .25) * .5\r\n  creditBlur.scale.x = 1.1\r\n  creditBlur.scale.y = 1.1\r\n  creditContainer.addChild(creditBlur)\r\n  // gfx -- clear\r\n  let creditGfc = new Graphics()\r\n  creditGfc.beginFill(0x0eead8)\r\n  creditGfc.drawCircle(0, 0, amount * .25)\r\n  creditGfc.pivot.x = (creditGfc.width * .25) * .5\r\n  creditGfc.pivot.y = (creditGfc.height * .25) * .5\r\n  creditContainer.addChild(creditGfc)\r\n  let bevel = new BevelFilter()\r\n  bevel.lightColor = 0xffffff\r\n  bevel.lightAlpha = .3\r\n  bevel.shadowColor = 0x0\r\n  bevel.shadowAlpha = .3\r\n  creditContainer.filters = store.getState().game.filterEffects ? [ bevel ] : []\r\n  // add to stage\r\n  container.addChild(creditContainer)\r\n  \r\n  currencyDrops.push(this)\r\n\r\n  creditBody.main = this\r\n\r\n  this.creditBody = creditBody\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      creditContainer.filters = [bevel]\r\n      creditBlur.filters = [blurFilter]\r\n    } else {\r\n      creditContainer.filters = []\r\n      creditBlur.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroyed = false\r\n  this.destroy = () => {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      let idx = currencyDrops.indexOf(this)\r\n      if (idx > -1) {\r\n        currencyDrops.splice(idx, 1)\r\n        creditContainer.destroy()\r\n        World.remove(world, creditBody)\r\n        world = null\r\n        container = null\r\n        currencyDrops = null\r\n        gameObjects = null\r\n        creditBody = null\r\n        this.creditBody = null\r\n        creditContainer = null\r\n      }\r\n    }\r\n  }\r\n\r\n  setTimeout(() => { this.destroy() }, 20000)\r\n\r\n  this.positionCreditGfx = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(creditBody)\r\n    creditContainer.position = { x, y }\r\n    creditContainer.rotation = rot\r\n  }\r\n\r\n  return this\r\n\r\n} ","import Zombie from '../enemies/Zombie'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport CreditDrop from '../items/CurrencyCredit'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\n\r\nconst { getState } = store\r\nconst { TweenLite: { delayedCall } } = window\r\nconst yStartPos = getState().game.height/2\r\n\r\nexport const GenerateZombies = (count) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  \r\n  const startZombieCreation = () => {\r\n    let numOnStage = (\r\n      getState().game.waveNum > 20 ? 4\r\n      : getState().game.waveNum > 10 ? 3\r\n      : 2\r\n    )\r\n    for (let i = 0; i < count; ++i) {\r\n      const getAZombie = () => {\r\n        if (\r\n          getState().game.zombiesOnStage < numOnStage &&\r\n          getState().game.gameState !== GameStates.PAUSE &&\r\n          getState().game.gameState !== GameStates.MAIN_MENU &&\r\n          (getState().game.gameSubState === SubStates.WAVE_STARTED || getState().game.gameSubState === SubStates.PLAYER_RESPAWN)\r\n          ) {\r\n          console.log('should create a zombo')\r\n          if (getState().game.gameSubState !== SubStates.WAVE_DEFEATED) {\r\n            new Zombie(random.int(buffer, width - buffer), yStartPos)\r\n          }\r\n        } else {\r\n          setTimeout(() => { getAZombie() }, 2000)\r\n        }\r\n      }\r\n      getAZombie()\r\n    }\r\n  }\r\n  startZombieCreation()\r\n  \r\n}\r\n\r\nexport const GenerateRandomAmmoDrops = (position, amountLimits, overrideCount) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let { game: { player: { weapons: { list, ammoCapacity } } } } = getState()\r\n  let randCount = overrideCount ? overrideCount : random.int(1, 2)\r\n  let type = list[Math.floor(Math.random() * list.length)]\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new AmmoDrop(\r\n      position ? position : { x: random.int(buffer, width - buffer), y: 200 },\r\n      type,\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : random.int(5, ammoCapacity[type]))\r\n  }\r\n}\r\n\r\nexport const GenerateRandomCreditDrops = (position, amountLimits) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let randCount = getState().game.player.perks['creditDropper'].owned ? random.int(5, 8) : random.int(4, 5)\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new CreditDrop(\r\n      position ?\r\n        { x: position.x, y: position.y - random.int(0, 75) }\r\n        : { x: random.int(buffer, width - buffer), y: 200 - random.int(0, 75) },\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : getState().game.player.perks['creditDropper'].owned ? random.int(15, 30) : random.int(5, 20)\r\n    )\r\n  }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { applyGsapHover } from '../utils/Utils'\r\nimport { gameStateTransition, unsetAllKeys } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { createGenericMessage } from '../createMessages'\r\nimport { FELL_OFF } from '../constants/DeathTypes'\r\nimport random from 'random'\r\n\r\nconst { dispatch, getState } = store\r\n\r\nfunction RespawnButton () {\r\n\tlet container = new PIXI.Container()\r\n\tlet btn = new PIXI.Graphics()\r\n\tbtn.beginFill(0x555555)\r\n\tbtn.drawRect(0, 0, 150, 50)\r\n\tcontainer.addChild(btn)\r\n\r\n\tconst text = new PIXI.Text('Respawn?', { font: 'Arial', fill: '#FFFFFF', fontSize: 20, fontWeight: 'bold' })\r\n\ttext.position.x = btn.width/2 - text.width/2\r\n\ttext.position.y = btn.height/2 - text.height/2\r\n\tcontainer.addChild(text)\r\n\r\n\treturn container\r\n}\r\n\r\nexport default function ScreenUI () {\r\n\tlet { gameObjects, TweenLite: { from }, Bounce } = window\r\n  let gameContainer = gameObjects.getKeyValue('game-pixi-container')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n\r\n  // let zombies = gameObjects.getKeyValue('zombies')\r\n\r\n\tthis.respawnButton = new RespawnButton()\r\n\tgameContainer.addChild(this.respawnButton)\r\n\tthis.respawnButton.visible = false\r\n\tthis.respawnButton.interactive = true\r\n\tthis.respawnButton.pivot.x = this.respawnButton.width/2\r\n\tthis.respawnButton.pivot.y = this.respawnButton.height/2\r\n\tthis.respawnButton.position.x = (this.respawnButton.width/2) + 20\r\n\tthis.respawnButton.position.y = (this.respawnButton.height/2) + 20\r\n\r\n  this.respawn = () => {\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.respawn()\r\n    createGenericMessage('Still alive!', 0xFFFFFF, .5, .75)\r\n    if (player.lastDeathType !== FELL_OFF) {\r\n      GenerateRandomAmmoDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      },\r\n      {\r\n        min: 10, max: getState().game.player.weapons.ammoCapacity[getState().game.player.weapons.equipped] * 2\r\n      },\r\n      random.int(1, 2))\r\n      GenerateRandomCreditDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      })\r\n    }\r\n  }\r\n\r\n\tthis.respawnButton.on('click', () => {\r\n\t\tthis.respawn()\r\n\t\tthis.respawnButton.visible = false\r\n\t})\r\n\r\n\tapplyGsapHover(this.respawnButton)\r\n\r\n\tthis.showRespawnButton = () => {\r\n\t\tthis.respawnButton.visible = true\r\n\t\tfrom(this.respawnButton.scale, 1.5, { x: .5, y: .5, ease: Bounce.easeOut })\r\n  }\r\n\r\n  const unpause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    // player \r\n    let player = gameObjects.getKeyValue('player')\r\n    player.pause()\r\n    // zombies \r\n    zombies.forEach(zombie => {\r\n      zombie.unpause()\r\n    })\r\n    // resume physics engine\r\n    engine.timing.timeScale = 1\r\n  }\r\n\r\n  const pause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    dispatch( unsetAllKeys() )\r\n    // character\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.unpause()\r\n    // zombies\r\n    zombies.forEach(zombie => {\r\n      zombie.pause()\r\n    })\r\n    // pause physics engine\r\n    engine.timing.timeScale = 0.05\r\n  }\r\n\r\n  this.unpause = unpause\r\n  this.pause = pause\r\n  \r\n  this.togglePause = () => {\r\n    let { gameState, gameSubState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU && gameState !== GameStates.SHOP_MENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameState !== GameStates.BUILD_MENU && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.WAVE_DEFEATED) {\r\n      let player = gameObjects.getKeyValue('player')\r\n      if (!player.dead) {\r\n        if (gameState !== GameStates.PAUSE && gameSubState !== SubStates.WAITING) {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.PAUSE) )\r\n          pause()\r\n        } else {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.GAMEPLAY) )\r\n          if (gameSubState === SubStates.WAVE_STARTED) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAVE_STARTED) )\r\n          } else if (gameSubState === SubStates.NEUTRAL) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n          }\r\n          unpause()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // add a pause listener to the screen UI ('P' (80) or ESC (27) key)\r\n  document.body.addEventListener('keydown', e => {\r\n    if (e.key === 'p' || e.key === 'P' || e.key === 'Escape') {\r\n      console.log('pause key was pressed')\r\n      this.togglePause()\r\n    }\r\n  })\r\n\r\n\treturn this\r\n\r\n}\r\n","// Matter and Custom\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { makePixiSprite, setUpMatter, setUpPixi } from './utils/Utils'\r\nimport { World, Bodies, Events } from 'matter-js'\r\nimport Player from './player/Player'\r\nimport createGameObjects from './createGameObjects'\r\nimport { setTexturePath, gameStateTransition, setZombiesOnStage, setWaveCountToDefeat, loadLocalStorageState } from './gameSlice'\r\nimport { gameTickHandler, checkCollisionStart } from './engineHandlers'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport WeaponsUI from './ui/WeaponsUI'\r\nimport ScreenUI from './ui/ScreenUI'\r\n// images\r\nimport weaponUI_pistolIcon from '../../images/pistol-icon.png'\r\nimport weaponUI_smgIcon from '../../images/smg-icon.png'\r\nimport weaponUI_shotgunIcon from '../../images/shotgun-icon.png'\r\n// environment textures \r\nimport groundTexture from '../../images/GroundTexture_Optimized.png'\r\nimport wallTile from '../../images/wallTile.png'\r\nimport gradientAlpha from '../../images/gradient-layer-mask.png'\r\n// game cover art\r\nimport coverArt from '../../images/GameCover.png'\r\n// explosive barrel \r\nimport explosiveBarrel from '../../images/explosiveBarrier.png'\r\n// player head\r\nimport charHead from '../../images/head-sprite.png'\r\n// Sound FX\r\nimport { Howl, Howler } from 'howler'\r\nimport _9mm1 from '../../sounds/9mm1.wav'\r\nimport _9mm2 from '../../sounds/9mm2.mp3'\r\nimport explosion1 from '../../sounds/explosion1.wav'\r\nimport distant_explosion from '../../sounds/explosion_distant.wav' \r\nimport pistolReloadSnd from '../../sounds/pistolReload.wav'\r\nimport bulletImpact_body from '../../sounds/bodyBulletImpact.wav'\r\nimport grenadeClink from '../../sounds/grenadeClink.wav'\r\nimport throwSound from '../../sounds/throw.wav'\r\nimport coinCollectSound from '../../sounds/coinCollect.wav'\r\nimport ammoCollectSound from '../../sounds/collectAmmo.wav'\r\nimport itemCollectSound from '../../sounds/collectItem.wav'\r\nimport bloodSquash from '../../sounds/bloodSquash.flac'\r\nimport bloodSquish from '../../sounds/bloodSquish.wav'\r\nimport bloodSmack from '../../sounds/bloodSmack.wav'\r\nimport deathRipSound from '../../sounds/deathRipSound.wav'\r\nimport jumpLandingSound from '../../sounds/jumpLanding.wav'\r\nimport dirtImpactSound from '../../sounds/dirtImpact.wav'\r\nimport zombieHurtSound from '../../sounds/zombieHurt.wav'\r\nimport zombieDeathSound from '../../sounds/zombieDeath.wav'\r\nimport pain1Sound from '../../sounds/pain1.wav'\r\nimport pain2Sound from '../../sounds/pain2.wav'\r\nimport playerDeathSound from '../../sounds/playerDeath.wav'\r\nimport buttonAddSound from '../../sounds/buttonAdd.wav'\r\nimport buttonSubtractSound from '../../sounds/buttonSubtract.wav'\r\nimport buttonClickSound from '../../sounds/buttonClick.wav'\r\nimport buttonHoverSound from '../../sounds/buttonHover.wav'\r\nimport placeObjectSound from '../../sounds/placeObject.flac'\r\nimport buttonCancelSound from '../../sounds/cancelSound.wav'\r\nimport purchaseSound from '../../sounds/moneySound.wav'\r\nimport confirmSound from '../../sounds/purchase.wav'\r\nimport shellImpactSound from '../../sounds/shellImpact.wav'\r\nimport healthPickupSound from '../../sounds/health.wav'\r\nimport zombieGrowl from '../../sounds/zombieGrowl.wav'\r\nimport smgFire from '../../sounds/smgFire.wav'\r\nimport magDrop from '../../sounds/magDrop.wav'\r\nimport shotShell from '../../sounds/shotShell.wav'\r\nimport shotgunBlast from '../../sounds/shotgunBlast.wav'\r\nimport achievement1 from '../../sounds/achievement1.wav'\r\nimport achievement2 from '../../sounds/achievement2.mp3'\r\nimport achievement3 from '../../sounds/achievement3.wav'\r\nimport jumpSound from '../../sounds/jumpSound.wav'\r\nimport chargingNade from '../../sounds/grenadeCharge.wav'\r\nimport { gotoMainMenu } from './ReactComponents/PauseMenu'\r\n\r\n// spritesheets in /public folder to use pixi .loader, not webpack \r\nconst zombieWalkcycleTest = './spritesheet-assets/zombie_walkcycle_test.json'\r\nconst z_walk_spritesheet = './spritesheet-assets/z_walk/z_walk.json'\r\nconst z_attack_spritesheet = './spritesheet-assets/z_attack/z_attack.json'\r\nconst z_parts_spritesheet = './spritesheet-assets/z_parts/limbs.json'\r\nconst muzzle_flashes_spritesheet = './spritesheet-assets/FX/muzzle_flashes/muzzle-flashes.json'\r\n// updated zombie sprites\r\nconst zomb_idle_sheet = './spritesheet-assets/enemy-spritesheets/zombie/idle/idle.json'\r\nconst zomb_walk_sheet = './spritesheet-assets/enemy-spritesheets/zombie/walkcycle/walkcycle.json'\r\nconst zomb_attack1_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack1/attack1.json'\r\nconst zomb_attack2_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack2/attack2.json'\r\nconst zomb_parts_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts.json'\r\nconst zomb_parts_gored_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts_gored.json'\r\nconst zomb_slash_fx_sheet = './spritesheet-assets/enemy-spritesheets/zombie/slash_fx/slash_fx.json'\r\n\r\n// barriers\r\nconst barriers_sheet = './spritesheet-assets/barriers/barriers.json'\r\n\r\n// updated character sprites \r\nconst char_parts = './spritesheet-assets/character-spritesheets/parts/player_parts.json'\r\nconst char_idle_sheet = './spritesheet-assets/character-spritesheets/idle/char_idle_anim.json'\r\nconst char_run_sheet = './spritesheet-assets/character-spritesheets/run/char_run_anim.json'\r\nconst char_jump_sheet = './spritesheet-assets/character-spritesheets/jump/char_jump_anim.json'\r\nconst char_reload_pistol_sheet = './spritesheet-assets/character-spritesheets/reloadPistol/char_reload_pistol_anim.json'\r\nconst char_reload_smg_sheet = './spritesheet-assets/character-spritesheets/reloadSMG/char_reload_smg_anim.json'\r\nconst left_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmPistolFire/char_left_arm_pistol_fire.json'\r\nconst right_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmPistolFire/char_right_arm_pistol_fire.json'\r\nconst left_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmSMGFire/char_left_arm_smg_fire.json'\r\nconst right_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmSMGFire/char_right_arm_smg_fire.json'\r\nconst melee_pistol_sheet = './spritesheet-assets/character-spritesheets/melee/melee_pistol/melee_pistol.json'\r\nconst melee_ump_sheet = './spritesheet-assets/character-spritesheets/melee/melee_ump/melee_ump.json'\r\nconst melee_shotgun_sheet = './spritesheet-assets/character-spritesheets/melee/melee_shotgun/melee_shotgun.json'\r\nconst grenade_pistol_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/pistolEquipped/grenade_throw_pistol.json'\r\nconst grenade_ump_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/umpEquipped/grenade_throw_ump.json'\r\nconst grenade_shotgun_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/shotgunEquipped/grenade_throw_shotgun.json'\r\nconst arms_fire_shotgun = './spritesheet-assets/character-spritesheets/armsFireShotgun/arms_fire_shotgun_anim.json'\r\nconst char_reload_shotgun_sheet = './spritesheet-assets/character-spritesheets/reloadShotgun/reloadShotgun.json'\r\n\r\n// blood effects\r\nconst blood_spurt_1 = './spritesheet-assets/FX/blood_fx/blood_spurt_1/blood_spurt_1.json'\r\nconst blood_spurt_2 = './spritesheet-assets/FX/blood_fx/blood_spurt_2/blood_spurt_2.json'\r\nconst blood_spurt_3 = './spritesheet-assets/FX/blood_fx/blood_spurt_3/blood_spurt_3.json'\r\n\r\n// landmine\r\nconst landmine_sheet = './spritesheet-assets/landmine/landmine.json'\r\nconst clustermine_sheet = './spritesheet-assets/clustermine/clustermine.json'\r\nconst remote_mine_sheet = './spritesheet-assets/remote-mine/remote-mine.json'\r\n\r\n// turret\r\nconst turret_scan_sheet = './spritesheet-assets/turret/sheets/turret_scan.json'\r\nconst turret_shoot_sheet = './spritesheet-assets/turret/sheets/turret_shoot.json'\r\n\r\n// explosion assts\r\nconst explosion_assets_sheet = './spritesheet-assets/FX/explosion_fx/explosion_assets.json'\r\nconst wood_planks_sheet = './spritesheet-assets/FX/wood_planks/wood_planks.json'\r\n\r\n// ground spatters \r\nconst ground_effects_sheet = './spritesheet-assets/FX/ground_fx/ground_fx.json'\r\n\r\n// FX\r\nconst explosion3d1_sheet = './spritesheet-assets/FX/explosion3d/explosion3d1.json'\r\nconst explosion3d2_sheet = './spritesheet-assets/FX/explosion3d/explosion3d2.json'\r\nconst sparks_sheet = './spritesheet-assets/FX/spark-particle/spark_particle.json'\r\nconst muzzle_sparks_sheet = './spritesheet-assets/FX/muzzle-sparks/muzzle_sparks.json'\r\n\r\nlet { dispatch, getState } = store\r\n\r\nlet { TweenLite: { to } } = window\r\n\r\nconst { world, render, engine, width, height, worldWidth } = setUpMatter('app-container', true)\r\n\r\nconst { app, loader } = setUpPixi('app-container')\r\n\r\nconst addGround = () => {\r\n\tlet ground = Bodies.rectangle(worldWidth/2, height, worldWidth, height/2, { \r\n    isStatic: true,\r\n    collisionFilter: {\r\n      mask: 3\r\n    }\r\n  })\r\n\tground.label = 'ground'\r\n\tWorld.add(world, ground)\r\n\t// dispatch(setGroundId(ground.id))\r\n\treturn ground\r\n}\r\n\r\nexport default function buildGame() {\r\n\r\n\twindow.onload = () => {\r\n\t\tsetTimeout(() => {\r\n      dispatch(\r\n        loadLocalStorageState()\r\n\t\t\t)\r\n\t\t\tif (getState().game.gameState === GameStates.GAMEPLAY || getState().game.gameState === GameStates.SHOP_MENU || getState().game.gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n\t\t\t\tgotoMainMenu()\r\n\t\t\t}\r\n    }, 1000)\r\n\t}\r\n\r\n\tloader\r\n\t.add(gradientAlpha)\r\n\t.add(wallTile)\r\n\t.add(char_reload_shotgun_sheet)\r\n\t.add(arms_fire_shotgun)\r\n\t.add(sparks_sheet)\r\n\t.add(muzzle_sparks_sheet)\r\n\t.add(explosion3d1_sheet)\r\n\t.add(explosion3d2_sheet)\r\n  .add(turret_scan_sheet)\r\n  .add(turret_shoot_sheet)\r\n\t.add(remote_mine_sheet)\r\n\t.add(clustermine_sheet)\r\n\t.add(landmine_sheet)\r\n\t.add(explosiveBarrel)\r\n  .add(barriers_sheet)\r\n\t.add(groundTexture)\r\n\t.add(zombieWalkcycleTest)\r\n\t.add(z_walk_spritesheet)\r\n\t.add(z_attack_spritesheet)\r\n\t.add(z_parts_spritesheet)\r\n\t.add(zomb_idle_sheet)\r\n\t.add(zomb_walk_sheet)\r\n\t.add(zomb_attack1_sheet)\r\n\t.add(zomb_attack2_sheet)\r\n\t.add(zomb_parts_sheet)\r\n\t.add(zomb_parts_gored_sheet)\r\n\t.add(zomb_slash_fx_sheet)\r\n\t.add(muzzle_flashes_spritesheet)\r\n\t.add(blood_spurt_1)\r\n\t.add(blood_spurt_2)\r\n  .add(blood_spurt_3)\r\n\t.add(explosion_assets_sheet)\r\n\t.add(wood_planks_sheet)\r\n\t.add(ground_effects_sheet)\r\n\t.add(char_parts)\r\n  .add(char_idle_sheet)\r\n  .add(char_run_sheet)\r\n  .add(char_jump_sheet)\r\n  .add(char_reload_pistol_sheet)\r\n  .add(char_reload_smg_sheet)\r\n  .add(melee_pistol_sheet)\r\n\t.add(melee_ump_sheet)\r\n\t.add(melee_shotgun_sheet)\r\n  .add(grenade_pistol_sheet)\r\n  .add(grenade_ump_sheet)\r\n  .add(grenade_shotgun_sheet)\r\n  .add(left_arm_pistol_fire_sheet)\r\n  .add(right_arm_pistol_fire_sheet)\r\n  .add(left_arm_smg_fire_sheet)\r\n  .add(right_arm_smg_fire_sheet)\r\n  .add(charHead)\r\n\t.add(weaponUI_pistolIcon)\r\n\t.add(weaponUI_smgIcon)\r\n\t.add(weaponUI_shotgunIcon)\r\n\t.load(setUp)\r\n\r\n\tfunction setUp () {\r\n\r\n\t\twindow.gameObjects = createGameObjects()\r\n\t\tlet { gameObjects } = window\r\n\r\n\t\t// images\r\n\t\tdispatch(setTexturePath('game-cover', coverArt))\r\n\t\tdispatch(setTexturePath('char-head', charHead))\r\n\t\tdispatch(setTexturePath('gradient-alpha', gradientAlpha))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-pistol', weaponUI_pistolIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-smg', weaponUI_smgIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-shotgun', weaponUI_shotgunIcon))\r\n\t\tdispatch(setTexturePath('ground-texture', groundTexture))\r\n\t\tdispatch(setTexturePath('explosive-barrel', explosiveBarrel))\r\n\t\t// env textures\r\n    let groundTex = makePixiSprite('ground-texture')\r\n    groundTex.pivot.x = groundTex.width * .5\r\n\t\tgroundTex.pivot.y = groundTex.height * .425\r\n\t\tlet gradientAlphaImg = makePixiSprite('gradient-alpha')\r\n\t\tgradientAlphaImg.width = width\r\n\t\tgradientAlphaImg.height = height\r\n\t\tgameObjects.setKeyValue('gradient-alpha', gradientAlphaImg)\r\n\t\tlet gameCover = makePixiSprite('game-cover')\r\n\t\tgameObjects.setKeyValue('game-cover-art', gameCover)\r\n\t\t// set sound fx\r\n\t\tgameObjects.setKeyValue('9mm-sound1', _9mm1)\r\n\t\tgameObjects.setKeyValue('9mm-sound2', _9mm2)\r\n\t\tgameObjects.setKeyValue('explosion1', explosion1)\r\n\t\tgameObjects.setKeyValue('distant-explosion', distant_explosion)\r\n\t\tgameObjects.setKeyValue('pistol-reload-sound', pistolReloadSnd)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body', bulletImpact_body)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body-sound', new Howl({src:[bulletImpact_body]}))\r\n\t\tgameObjects.setKeyValue('grenade-clink-sound', new Howl({ src: [grenadeClink] }))\r\n\t\tgameObjects.setKeyValue('throw-sound', new Howl({ src: [throwSound] }))\r\n\t\tgameObjects.setKeyValue('confirm-sound', new Howl({ src: [ confirmSound ] }))\r\n\t\tgameObjects.setKeyValue('coin-collect-sound', new Howl({ src: [ coinCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('ammo-collect-sound', new Howl({ src: [ ammoCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('item-collect-sound', new Howl({ src: [ itemCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('blood-squish-sound', new Howl({ src: [ bloodSquish ] }))\r\n\t\tgameObjects.setKeyValue('blood-squash-sound', new Howl({ src: [ bloodSquash ] }))\r\n\t\tgameObjects.setKeyValue('blood-smack-sound', new Howl({ src: [ bloodSmack ] }))\r\n\t\tgameObjects.setKeyValue('death-rip-sound', new Howl({ src: [ deathRipSound ] }))\r\n\t\tgameObjects.setKeyValue('jump-landing-sound', new Howl({ src: [ jumpLandingSound ] }))\r\n\t\tgameObjects.setKeyValue('dirt-impact-sound', new Howl({ src: [ dirtImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-hurt-sound', new Howl({ src: [ zombieHurtSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('zombie-death-sound', new Howl({ src: [ zombieDeathSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('pain1-sound', new Howl({ src: [ pain1Sound ] }))\r\n\t\tgameObjects.setKeyValue('pain2-sound', new Howl({ src: [ pain2Sound ] }))\r\n\t\tgameObjects.setKeyValue('player-death-sound', new Howl({ src: [ playerDeathSound ] }))\r\n\t\tgameObjects.setKeyValue('button-add-sound', new Howl({ src: [ buttonAddSound ] }))\r\n\t\tgameObjects.setKeyValue('button-subtract-sound', new Howl({ src: [ buttonSubtractSound ] }))\r\n\t\tgameObjects.setKeyValue('button-hover-sound', new Howl({ src: [ buttonHoverSound ] }))\r\n\t\tgameObjects.setKeyValue('button-click-sound', new Howl({ src: [ buttonClickSound ] }))\r\n\t\tgameObjects.setKeyValue('place-object-sound', new Howl({ src: [ placeObjectSound ] }))\r\n\t\tgameObjects.setKeyValue('button-cancel-sound', new Howl({ src: [ buttonCancelSound ] }))\r\n\t\tgameObjects.setKeyValue('purchase-sound', new Howl({ src: [ purchaseSound ] }))\r\n\t\tgameObjects.setKeyValue('shell-impact-sound', new Howl({ src: [ shellImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('health-pickup-sound', new Howl({ src: [ healthPickupSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-growl-sound', new Howl({ src: [ zombieGrowl ] }))\r\n\t\tgameObjects.setKeyValue('smg-fire-sound', new Howl({ src: [ smgFire ] }))\r\n\t\tgameObjects.setKeyValue('mag-drop-sound', new Howl({ src: [ magDrop ] }))\r\n\t\tgameObjects.setKeyValue('shot-shell-sound', new Howl({ src: [ shotShell ] }))\r\n\t\tgameObjects.setKeyValue('shotgun-blast-sound', new Howl({ src: [ shotgunBlast ] }))\r\n\t\tgameObjects.setKeyValue('achievement1-sound', new Howl({ src: [ achievement1 ] }))\r\n\t\tgameObjects.setKeyValue('achievement2-sound', new Howl({ src: [ achievement2 ] }))\r\n\t\tgameObjects.setKeyValue('achievement3-sound', new Howl({ src: [ achievement3 ] }))\r\n\t\tgameObjects.setKeyValue('charging-grenade-sound', new Howl({ src: [ chargingNade ] }))\r\n\t\tgameObjects.setKeyValue('jump-sound', new Howl({ src: [ jumpSound ] }))\r\n\t\t// updated zombie sprites\r\n\t\tgameObjects.setKeyValue('zombie-idle-sheet', loader.resources[zomb_idle_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-walk-sheet', loader.resources[zomb_walk_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack1-sheet', loader.resources[zomb_attack1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack2-sheet', loader.resources[zomb_attack2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-sheet', loader.resources[zomb_parts_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-gored-sheet', loader.resources[zomb_parts_gored_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-slash-fx-sheet', loader.resources[zomb_slash_fx_sheet].spritesheet)\r\n    gameObjects.setKeyValue('muzzle-flashes', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('sparks-sheet', loader.resources[sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('muzzle-sparks-sheet', loader.resources[muzzle_sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d1-sheet', loader.resources[explosion3d1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d2-sheet', loader.resources[explosion3d2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-1', loader.resources[blood_spurt_1].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-2', loader.resources[blood_spurt_2].spritesheet)\r\n    gameObjects.setKeyValue('blood-spurt-3', loader.resources[blood_spurt_3].spritesheet)\r\n    gameObjects.setKeyValue('explosion-assets-sheet', loader.resources[explosion_assets_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('wood-planks-sheet', loader.resources[wood_planks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('remote-mine-sheet', loader.resources[remote_mine_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('landmine-sheet', loader.resources[landmine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('clustermine-sheet', loader.resources[clustermine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-scan-sheet', loader.resources[turret_scan_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-shoot-sheet', loader.resources[turret_shoot_sheet].spritesheet)\r\n    gameObjects.setKeyValue('barriers-sheet', loader.resources[barriers_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('ground-fx-sheet', loader.resources[ground_effects_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('player-parts-sheet', loader.resources[char_parts].spritesheet)\r\n    gameObjects.setKeyValue('char-idle-sheet', loader.resources[char_idle_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-run-sheet', loader.resources[char_run_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-jump-sheet', loader.resources[char_jump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-pistol-sheet', loader.resources[char_reload_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-smg-sheet', loader.resources[char_reload_smg_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-shotgun-sheet', loader.resources[char_reload_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('left-arm-pistol-fire-sheet', loader.resources[left_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-pistol-fire-sheet', loader.resources[right_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('left-arm-smg-fire-sheet', loader.resources[left_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-smg-fire-sheet', loader.resources[right_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-pistol-sheet', loader.resources[melee_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-ump-sheet', loader.resources[melee_ump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-shotgun-sheet', loader.resources[melee_shotgun_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-pistol-sheet', loader.resources[grenade_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-ump-sheet', loader.resources[grenade_ump_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('grenade-shotgun-sheet', loader.resources[grenade_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('arms-fire-shotgun-sheet', loader.resources[arms_fire_shotgun].spritesheet)\r\n\t\t\r\n\t\t\r\n    let container = new PIXI.Container()\r\n\t\tcontainer.interactive = true\r\n\t\tcontainer.width = width\r\n\t\tcontainer.height = height\r\n\t\t\r\n    // make dedicated muzzle flashes for re-use instead of making a new image each time\r\n\t\tgameObjects.setKeyValue('muzzle-flashes-sheet', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n    \r\n\t\tlet ground = addGround()\r\n\t\tapp.stage.interactive = true\r\n\t\tapp.stage.addChild(container)\r\n\t\tcontainer.addChild(groundTex)\r\n    \r\n\t\tgameObjects.setKeyValue('pixi-app', app)\r\n\t\tgameObjects.setKeyValue('game-pixi-container', container)\r\n\t\t\r\n    gameObjects.setKeyValue('ammo-drops-by-type', {\r\n\t\t\t'pistol weapon': [],\r\n      'smg weapon': [],\r\n      'shotgun weapon': [],\r\n    })\r\n    gameObjects.setKeyValue('text-messages', [])\r\n    gameObjects.setKeyValue('reload-text-messages', [])\r\n\t\tgameObjects.setKeyValue('gibs', [])\r\n    gameObjects.setKeyValue('grenades', [])\r\n    gameObjects.setKeyValue('explosions', [])\r\n    gameObjects.setKeyValue('rocks', [])\r\n    gameObjects.setKeyValue('currency-drops', [])\r\n\t\tgameObjects.setKeyValue('pistol-shells', [])\r\n\t\tgameObjects.setKeyValue('pistol-bullets', [])\r\n\t\tgameObjects.setKeyValue('build-objects', [])\r\n\t\tgameObjects.setKeyValue('bullet-impacts', [])\r\n\t\tgameObjects.setKeyValue('wood-planks', [])\r\n\t\tgameObjects.setKeyValue('spark-sprites', [])\r\n\t\tgameObjects.setKeyValue('explosion-sprites', [])\r\n\t\tgameObjects.setKeyValue('remote-mines', {})\r\n\t\tgameObjects.setKeyValue('remote-mines-array', [])\r\n\t\tgameObjects.setKeyValue('static-ground-effects', [])\r\n\t\tgameObjects.setKeyValue('zombie-ragdolls', [])\r\n\t\tgameObjects.setKeyValue('zombies', [])\r\n\t\tgameObjects.setKeyValue('health-drops', [])\r\n\t\t\r\n\t\tgameObjects.setKeyValue('wall-tile', wallTile)\r\n\t\tgameObjects.setKeyValue('ground', ground)\r\n\t\tgameObjects.setKeyValue('ground-texture', groundTex)\r\n\t\tgameObjects.setKeyValue('game-width', width)\r\n\t\tgameObjects.setKeyValue('game-height', height)\r\n\t\tgameObjects.setKeyValue('world-width', worldWidth)\r\n\t\tgameObjects.setKeyValue('world', world)\r\n\t\tgameObjects.setKeyValue('render', render)\r\n\t\tgameObjects.setKeyValue('engine', engine)\r\n\t\tlet screenUI = new ScreenUI()\r\n\t\tlet weaponsUI = new WeaponsUI()\r\n\t\tgameObjects.setKeyValue('screen-ui', screenUI)\r\n\t\tgameObjects.setKeyValue('weapons-ui', weaponsUI)\r\n\t\tlet player = new Player()\r\n\t\tgameObjects.setKeyValue('player', player)\r\n\r\n\t\t// window.onload = () => {\r\n\t\t// \tsetTimeout(() => {\r\n\t\t// \t\tdispatch(\r\n\t\t// \t\t\tloadLocalStorageState()\r\n\t\t// \t\t)\r\n\t\t// \t\tweaponsUI.updateGrenadeIcons()\r\n\t\t// \t\tweaponsUI.updateWeaponMagazines()\r\n\t\t// \t}, 1000)\r\n\t\t// }\r\n\t\t\r\n\t\tfunction buildMenu () {\r\n\t\t\t// create a PIXI menu\r\n\t\t\tlet menu = new PIXI.Container()\r\n\t\t\tgameCover.pivot.x = gameCover.width *  .5\r\n\t\t\tgameCover.pivot.y = gameCover.height *  .5\r\n\t\t\tgameCover.scale.x = .51\r\n\t\t\tgameCover.scale.y = .51\r\n\t\t\tcontainer.alpha = 0\r\n\t\t\tmenu.addChild(\r\n\t\t\t\tgameCover\r\n\t\t\t)\r\n\t\t\tcontainer.alpha = 1\r\n\t\t\tmenu.interactive = true\r\n\t\t\tlet playBtn = new PIXI.Container()\r\n\t\t\tlet playBtnGfc = new PIXI.Graphics()\r\n\t\t\tplayBtnGfc.beginFill(0x555555)\r\n\t\t\tplayBtnGfc.drawRect(0, 0, 250, 80)\r\n\t\t\tlet playBtnTxt = new PIXI.Text('Play', {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 36,\r\n\t\t\t\tfill: 0xFFFFFF\r\n\t\t\t})\r\n\t\t\tplayBtn.addChild(playBtnGfc, playBtnTxt)\r\n\t\t\tfunction positionPlayButton() {\r\n\t\t\t\tplayBtn.position.x = width/2 - playBtn.width/2\r\n\t\t\t\tplayBtn.position.y = height/2 - playBtn.height/2\r\n\t\t\t}\r\n\t\t\tpositionPlayButton()\r\n\t\t\tplayBtnTxt.position.x = playBtn.width/2 - playBtnTxt.width/2\r\n\t\t\tplayBtnTxt.position.y = playBtn.height/2 - playBtnTxt.height/2\r\n\t\t\tplayBtn.interactive = true\r\n\t\t\tplayBtn.on('click', () => {\r\n\t\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\tdispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n\t\t\t\tdispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseover', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.05, y: 1.05, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseout', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.00, y: 1.00, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\t// menu.addChild(playBtn) -- remove pixi main menu button \r\n\t\t\tapp.stage.addChild(menu)\r\n\t\t\tgameObjects.setKeyValue('main-menu', menu)\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmenu\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet { menu: mainMenu } = buildMenu()\r\n\r\n\t\tEvents.on(engine, 'tick', e => {\r\n\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\r\n\t\t\tif (window.gameObjects && mainMenu.visible === true) {\r\n\t\t\t\tmainMenu.visible = false\r\n\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t// app.view.style.opacity = .75\r\n\t\t\t}\r\n\t\t\tif (window.gameObjects && gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW) {\r\n        if (mainMenu.visible === false) {\r\n          mainMenu.visible = true\r\n\t\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t\t// app.view.style.opacity = .85\r\n\t\t\t\t}\r\n      }\r\n      if (window.gameObjects && gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW || gameState === GameStates.PAUSE || gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameState === GameStates.SHOP_MENU || gameState === GameStates.BUILD_MENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n\t\t\t\tif (document.getElementsByClassName('App')[0]) {\r\n\t\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t\tdocument.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n\t\t\t\t}\r\n      } else {\r\n\t\t\t\tif (document.getElementsByClassName('App')[0]) {\r\n\t        document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n\t\t\t\t}\r\n\t\t\t}\r\n      if (gameState === GameStates.GAMEPLAY && window.gameObjects) {\r\n        if (gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n          document.body.style.cursor = 'auto'\r\n        } else {\r\n          document.body.style.cursor = 'none'\r\n        }\r\n\t\t\t}\r\n      \r\n      gameTickHandler(e, gameObjects)\r\n\r\n\t\t})\r\n\r\n\t\tEvents.on(engine, 'collisionStart', e => {\r\n\t\t\tlet { game: { gameState } } = getState()\r\n\t\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\t\tfor (let i = 0; i < e.pairs.length; ++i) {\r\n\t\t\t\t\tcheckCollisionStart(e, i, gameObjects)\r\n\t\t\t\t}\r\n\t\t\t}\r\n    })\r\n    \r\n\t}\r\n\r\n}\r\n","// anything that we can't manage with redux will go here,\r\n// meaning full objects and functions with methods for\r\n// manipulating Matter objects\r\nexport default function createGameObjects() {\r\n\tlet state = new State()\r\n\tfunction State() {\r\n\t\tthis.state = {}\r\n\t\tthis.getKeyValue = key => {\r\n      if (this.state[key]) {\r\n        return this.state[key]\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n\t\tthis.setKeyValue = (key, value) => {\r\n      this.state[key] = value\r\n      return this.state[key]\r\n    }\r\n\t\tthis.getFullState = () => { return this.state }\r\n\t\tthis.setFullState = (obj) => { this.state = obj }\r\n\t}\r\n\treturn state\r\n}\r\n","import { batch } from 'react-redux'\r\nimport store from '../../../app/store'\r\nimport { setZombiesOnStage, incrementWave, setWaveCountToDefeat, decrementZombieAttackTimeLimit, incrementZombieHealth, updateZombieWalkSpeed, updateZombieAttackDmg } from '../gameSlice'\r\nimport { createWaveMessage } from '../createMessages'\r\nimport { GenerateZombies } from '../items/ItemGenerators'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { resetWave } from '../ReactComponents/PauseMenu'\r\nimport saveGame from '../utils/saveGame'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const startWave = () => {\r\n\r\n  if (getState().game.waveNum === 0) {\r\n    dispatch(incrementWave())\r\n  }\r\n\r\n  const start = () => {\r\n    let { waveNum } = getState().game\r\n    batch(() => {\r\n      dispatch( updateZombieWalkSpeed( waveNum ) )\r\n      dispatch( updateZombieAttackDmg( waveNum ) )\r\n      dispatch( decrementZombieAttackTimeLimit( waveNum ) )\r\n      dispatch( incrementZombieHealth( waveNum ) )\r\n      dispatch( setWaveCountToDefeat( waveNum ) )\r\n    })\r\n    GenerateZombies( waveNum )\r\n  }\r\n\r\n  if (\r\n    getState().game.gameState === GameStates.GAMEPLAY &&\r\n    getState().game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU &&\r\n    getState().game.gameSubState !== SubStates.WAVE_DEFEATED\r\n    ) {\r\n    start()\r\n    setTimeout(() => {\r\n      if (getState().game.zombiesOnStage === 0) {\r\n        start()\r\n      }\r\n    }, 1000)\r\n  } else {\r\n    setTimeout(start, 3000)\r\n  }\r\n\r\n}\r\n\r\nconst clearGameObjects = () => {\r\n  // destroy current renderable objects \r\n  let { gameObjects } = window\r\n  let credits = gameObjects.getKeyValue('currency-drops')\r\n  let healthdrops = gameObjects.getKeyValue('health-drops')\r\n  let pistolAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_PISTOL]\r\n  let smgAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SMG]\r\n  let shotgunAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SHOTGUN]\r\n  credits.forEach(credit => { credit.destroy() })\r\n  pistolAmmoDrops\r\n    .concat(smgAmmoDrops)\r\n    .concat(shotgunAmmoDrops)\r\n    .forEach(ammo => { ammo.destroy() })\r\n  healthdrops.forEach(health => { health.destroy() })\r\n}\r\n\r\nexport const waveDefeated = () => {\r\n  dispatch( setZombiesOnStage(0) )\r\n  dispatch( setWaveCountToDefeat(null) )\r\n  createWaveMessage('Wave Defeated!')\r\n  updateScore( getState().game.scoreAmounts.waveCompleted * getState().game.waveNum )\r\n  dispatch(incrementWave())\r\n  saveGame()\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { SubStates } from '../constants/GameStates'\r\nimport { addPurchase, decrementWave, setZombiesOnStage, gameStateTransition, setWaveCountToDefeat, subtractFromTotalCredits } from '../gameSlice'\r\nimport MenuComponents from './MenuComponents'\r\nimport { gotoMainMenu, resetWave } from './PauseMenu'\r\nimport { CustomMenuButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n  \r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const lastGameSubState = useSelector(state => state.game.lastGameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const respawnCost = useSelector(state => state.game.respawnCost)\r\n  const respawnToShopCost = useSelector(state => state.game.respawnToShopCost)\r\n  const waveNum = useSelector(state => state.game.waveNum)\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>\r\n          {\r\n            credits >= respawnToShopCost ? 'Respawn Menu'\r\n            : 'Game Over'\r\n          }\r\n        </MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n          {\r\n            credits >= respawnCost || lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={240}\r\n              onClick={() => {\r\n                screenUI.respawn()\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU && lastGameSubState !== SubStates.PLAYER_RESPAWN && lastGameSubState !== SubStates.WAVE_STARTED) {\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n                }\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n                  dispatch( subtractFromTotalCredits(respawnCost) )\r\n                }\r\n                dispatch( addPurchase('Respawn', respawnCost) )\r\n              }}>\r\n                Respawn? { lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ? '' : `$${respawnCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          {\r\n            credits >= respawnToShopCost && waveNum > 0 && lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={360}\r\n              onClick={() => {\r\n                resetWave()\r\n                batch(() => {\r\n                  dispatch( setZombiesOnStage(0) )\r\n                  dispatch( setWaveCountToDefeat(null) )\r\n                  dispatch( decrementWave() )\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU) )\r\n                  dispatch( subtractFromTotalCredits(respawnToShopCost) )\r\n                  dispatch( addPurchase('Shop Respawn', respawnToShopCost) )\r\n                })\r\n              }}>\r\n                Restart Current Wave from Shop? { `$${respawnToShopCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          <MenuComponents.MenuButtonSpacer>\r\n            <CustomMenuButton\r\n            onClick={gotoMainMenu}>\r\n              Go to Main Menu\r\n            </CustomMenuButton>\r\n          </MenuComponents.MenuButtonSpacer>\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\nimport { gameStateTransition, setSelectedBarrierToBuild, setSelectedTrapToBuild } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { barrierTypes, trapTypes } from '../constants/buildTypes'\r\nimport { CustomMenuButton, BackButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const BuildMenuStates = {\r\n    MAIN: 'main',\r\n    BARRIERS: 'barriers',\r\n    TRAPS: 'traps'\r\n  }\r\n  const [buildMenuState, setBuildMenuState] = React.useState(BuildMenuStates.MAIN)\r\n  const barrierCosts = useSelector(state => state.game.barriers.costToBuild)\r\n  const trapCosts = useSelector(state => state.game.traps.costToBuild)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const showBarriersSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.BARRIERS\r\n    )\r\n  }\r\n\r\n  const showTrapsSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.TRAPS\r\n    )\r\n  }\r\n\r\n  const backToBuildMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.MAIN\r\n    )\r\n  }\r\n\r\n  const gotoPlacementMode = () => {\r\n    let screenUI = gameObjects.getKeyValue('screen-ui')\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.BUILD_PLACEMENT_MODE)\r\n    )\r\n  }\r\n\r\n  const replaceCursorWithObjectToPlace = () => {\r\n    let crosshair = gameObjects.getKeyValue('crosshair')\r\n    crosshair.buildArrow(0xFFFFFF)\r\n  }\r\n  \r\n  const chooseBarrier = filteredType => {\r\n    if (credits >= barrierCosts[filteredType]) {\r\n      dispatch( setSelectedBarrierToBuild(filteredType) )\r\n      dispatch( setSelectedTrapToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n  \r\n  const chooseTrap = filteredType => {\r\n    if (credits >= trapCosts[filteredType]) {\r\n      dispatch( setSelectedTrapToBuild(filteredType) )\r\n      dispatch( setSelectedBarrierToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        {\r\n          buildMenuState === BuildMenuStates.TRAPS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Traps</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.BARRIERS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Barriers</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                <MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.MAIN ?\r\n            <>\r\n              <MenuComponents.MenuTitle>Build Menu</MenuComponents.MenuTitle>\r\n              <MenuComponents.MenuButtonContainer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showBarriersSubMenu }>\r\n                        Barriers\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showTrapsSubMenu }>\r\n                        Traps\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToShopQuery }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n              </MenuComponents.MenuButtonContainer>\r\n            </>\r\n          : null\r\n        }\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nposition: absolute;\r\nbottom: 0;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nbackground-color: #333;\r\nopacity: .8;\r\n`\r\n\r\nexport default () => {\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <MenuButton bgcolor={'#555'} width={500} height={40}>Done Placing Barriers/Traps: Press [ B ]</MenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","// React\r\nimport React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport buildGame from './buildGame'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { startWave, waveDefeated } from './waves/waveManager'\r\nimport { updateWeaponsUI } from './ui/WeaponsUI'\r\nimport { createGenericMessage } from './createMessages'\r\nimport { addToTotalCredits, gameStateTransition, setWeaponEquipped, loadLocalStorageState } from './gameSlice'\r\nimport PauseMenu, { gotoMainMenu } from './ReactComponents/PauseMenu'\r\nimport ShopMenu, { CornerBackButton, Inline } from './ReactComponents/ShopMenu'\r\nimport ShopQuery from './ReactComponents/ShopQuery'\r\nimport RespawnMenu from './ReactComponents/RespawnMenu'\r\nimport BuildMenu from './ReactComponents/BuildMenu'\r\nimport DoneBarrierPlacementBanner from './ReactComponents/DoneBarrierPlacementBanner'\r\nimport MenuComponents from './ReactComponents/MenuComponents'\r\nimport { NoTransitionButton } from './ReactComponents/PauseMenu'\r\nimport AchievementsView from './ReactComponents/AchievementsView'\r\nimport { motion } from 'framer-motion'\r\nimport Axios from 'axios'\r\nimport saveGame from './utils/saveGame';\r\n\r\nconst useScores = (initial) => {\r\n\r\n  const [scores, setScores] = React.useState(initial)\r\n\r\n  return [\r\n    scores,\r\n    setScores\r\n  ]\r\n\r\n}\r\n\r\nexport const ScoresView = (scores) => {\r\n\r\n  return (\r\n    <MenuComponents.Container>\r\n      <MenuComponents.MenuTitle>Top 100 Scores of All-time</MenuComponents.MenuTitle>\r\n      <MenuComponents.MenuButtonContainer\r\n      style={{\r\n        height: 470,\r\n        overflow: 'scroll',\r\n      }}\r\n      >\r\n        {\r\n          scores && scores.scores && scores.scores\r\n          .sort((a, b) => b.score - a.score)\r\n          .map(score => (\r\n            <>\r\n              <NoTransitionButton\r\n              bgcolor={ 'rgba(0, 0, 0, 0.25)' }\r\n              hovercolor={ 'rgba(0, 0, 0, 0.35)' }\r\n              bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n              hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n              >\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    { score.name }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: 0,\r\n                    right: 0,\r\n                  }}>\r\n                    { score.score }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    right: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    {\r\n                      (() => {\r\n                        let date = score.time.substr(0, score.time.indexOf('T'))\r\n                        let year = date.substr(0, score.time.indexOf('-'))\r\n                        let dateNoYear = date.substr(score.time.indexOf('-') + 1, date.length)\r\n                        return (\r\n                          `${dateNoYear} - ${year}`\r\n                        )\r\n                      })()\r\n                    }\r\n                  </div>\r\n                </Inline>\r\n              </NoTransitionButton>            \r\n            </>\r\n          ))\r\n        }\r\n      </MenuComponents.MenuButtonContainer>\r\n      <MenuComponents.MenuButtonContainer>\r\n        <CornerBackButton\r\n        marginTop={'-60px'}\r\n        onClick={ gotoMainMenu } />\r\n      </MenuComponents.MenuButtonContainer>\r\n    </MenuComponents.Container>\r\n  )\r\n\r\n}\r\n\r\nexport default function Game () {\r\n\r\n\tconst { gameObjects, TweenLite: { delayedCall } } = window\r\n\tconst dispatch = useDispatch()\r\n\tconst game = useSelector(state => state.game)\r\n  const weaponEquipped = useSelector(state => state.game.player.weapons.equipped)\r\n  const waitInterval = React.useRef(null)\r\n  const cancelWaveStart = React.useRef(false)\r\n  const [scores, setScores] = useScores([])\r\n  const [animateScore, setAnimateScore] = useState(false)\r\n  // const [upgradeToggleAnimate, setUpgradeToggleAnimate] = useState(false)\r\n  const [runUpgraded, setRunUpgraded] = useState(false)\r\n  const [reloadUpgraded, setReloadUpgraded] = useState(false)\r\n  const [jumpUpgraded, setJumpUpgraded] = useState(false)\r\n  const [meleeUpgraded, setMeleeUpgraded] = useState(false)\r\n  const [defenseUpgraded, setDefenseUpgraded] = useState(false)\r\n  // const equipped = useSelector(state => state.game.player.weapons.equipped)\r\n\r\n\t// one-time methods and non-react code will go here\r\n\tReact.useEffect(() => {\r\n\r\n    buildGame()\r\n\r\n  }, []) // do once\r\n  \r\n  // React.useEffect(() => {\r\n\r\n  //   let weaponsUI = window.gameObjects.getKeyValue('weapons-ui')\r\n  //   weaponsUI.updateWeaponMagazines()\r\n  //   weaponsUI.updateGrenadeIcons()\r\n\r\n  // }, [ game.player.weapons.totalAmmo ])\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\t// on weapon toggle change..\r\n\t\tupdateWeaponsUI()\r\n\r\n\t}, [weaponEquipped])\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_STARTED) {\r\n\t\t\tconsole.log('wave starting..')\r\n      startWave()\r\n\t\t}\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_DEFEATED) {\r\n\t\t\tconsole.log('wave defeated')\r\n\t\t\twaveDefeated()\r\n    }\r\n    \r\n    if (game.gameSubState === SubStates.WAITING) {\r\n      let countdown = 3, timeInt = 500\r\n      cancelWaveStart.current = false\r\n      waitInterval.current = setInterval(() => {\r\n        createGenericMessage(`${countdown}`, '#FFFFFF', .25, .5)\r\n        countdown -= 1\r\n      }, timeInt)\r\n      delayedCall((timeInt/1000) * 4, () => {\r\n        if (!cancelWaveStart.current) {\r\n          clearInterval(waitInterval.current)\r\n          dispatch(gameStateTransition('sub', game.gameSubState, SubStates.WAVE_STARTED))\r\n        }\r\n      })\r\n    }\r\n\r\n    if (game.gameSubState === SubStates.PLAYER_DEATH) {\r\n      clearInterval(waitInterval.current)\r\n      cancelWaveStart.current = true\r\n\t\t\tcreateGenericMessage('You died.', '#FF0000', .75, 3)\r\n    }\r\n    \r\n  }, [game.gameSubState, delayedCall, dispatch])\r\n  \r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.waveCountToDefeat === 0 && game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n\t\t\twaveDefeated()\r\n\t\t}\r\n\r\n\t}, [game.waveCountToDefeat, game.lastGameSubState, game.gameSubState, dispatch])\r\n\t\r\n\tReact.useEffect(() => {\r\n\r\n    console.log('Game state has changed')\r\n\r\n    if (game.gameState === GameStates.SHOP_MENU || game.gameState === GameStates.BUILD_MENU) {\r\n      let screenUI = gameObjects.getKeyValue('screen-ui')\r\n      screenUI.pause()\r\n    }\r\n    \r\n    if (game.gameState === GameStates.MAIN_MENU || game.gameState === GameStates.GAMEPLAY) {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n    } else {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n    }\r\n\r\n\t\tif (game.gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (game.player.weapons.equipped === null) {\r\n\t\t\t\tdispatch(setWeaponEquipped('pistol weapon'))\r\n\t\t\t}\r\n    }\r\n\r\n  }, [game.gameState, game.player.weapons.equipped, gameObjects, dispatch])\r\n\r\n  React.useEffect(() => {\r\n    if (game.purchases !== null && game.lastPurchase && game.lastPurchase.item !== null && game.lastPurchase.amount > 0) {\r\n      let snd = window.gameObjects.getKeyValue('purchase-sound')\r\n      snd.play()\r\n      let confirm = window.gameObjects.getKeyValue('confirm-sound')\r\n      confirm.play()\r\n      toast.dark(`You bought ${game.lastPurchase.item} for $${game.lastPurchase.amount}`, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n      saveGame()\r\n    }\r\n    console.log(game.lastPurchase)\r\n  }, [ game.purchases, game.lastPurchase ])\r\n\r\n  React.useEffect(() => {\r\n    if (game.lastAchievementEarned !== null) {\r\n      let snd = window.gameObjects.getKeyValue('achievement2-sound')\r\n      snd.play()\r\n      toast.warning(`Achievement Earned: ${game.lastAchievementEarned}`, {\r\n        position: \"top-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n      dispatch(\r\n        addToTotalCredits( 500 )\r\n      )\r\n      saveGame()\r\n    }\r\n  }, [ game.achievements, game.lastAchievementEarned ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    let isErr\r\n    if (game.gameState === GameStates.SCORES_VIEW) {\r\n      Axios.get('http://localhost:8080/scores')\r\n      .catch(err => {\r\n        console.log(err)\r\n        isErr = true\r\n      })\r\n      .then(scores => {\r\n        if (isErr) {\r\n          console.log('api is on a different port, use yarn build to view working scores')\r\n        } else {\r\n          setScores( scores.data )\r\n        }\r\n      })\r\n    }\r\n\r\n  }, [ game.gameState ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    setAnimateScore(true)\r\n    delayedCall(.1, () => { setAnimateScore(false) })\r\n\r\n  }, [ game.scoreToggle ])\r\n\r\n  React.useEffect(() => {\r\n    setRunUpgraded(true)\r\n    delayedCall(.25, () => { setRunUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.run.current ])\r\n\r\n  React.useEffect(() => {\r\n    setReloadUpgraded(true)\r\n    delayedCall(.25, () => { setReloadUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.reload.current ])\r\n\r\n  React.useEffect(() => {\r\n    setJumpUpgraded(true)\r\n    delayedCall(.25, () => { setJumpUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.jump.current ])\r\n\r\n  React.useEffect(() => {\r\n    setMeleeUpgraded(true)\r\n    delayedCall(.25, () => { setMeleeUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.melee.current ])\r\n\r\n  React.useEffect(() => {\r\n    setDefenseUpgraded(true)\r\n    delayedCall(.25, () => { setDefenseUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.defense.current ])\r\n\r\n\treturn (\r\n\t\t<>\r\n      <ToastContainer />\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SCORES_VIEW ?\r\n          <ScoresView scores={ scores } />\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.MAIN_MENU && window.gameObjects ?\r\n          <>\r\n            <PauseMenu\r\n            margintop={ true }\r\n            hidetitle={ true }\r\n            hidebg={ false }\r\n            bgcolor={ '#222' }\r\n            playbtn={ true }\r\n            />\r\n          </>\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.BUILD_PLACEMENT_MODE && game.gameState === GameStates.GAMEPLAY\r\n          ?\r\n            <>\r\n              <DoneBarrierPlacementBanner />\r\n            </>\r\n          : null \r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          gameObjects && game.gameState === GameStates.PAUSE\r\n          ? <PauseMenu shop-query-visibility={ game.gameSubState === SubStates.SHOP_QUERY_SUBMENU } />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SHOP_MENU\r\n          ? <ShopMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.BUILD_MENU\r\n          ? <BuildMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.SHOP_QUERY_SUBMENU\r\n          ? <ShopQuery />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.PLAYER_DEATH\r\n          ? <RespawnMenu />\r\n          : null\r\n        }\r\n      </>\r\n      \r\n      <>\r\n        {\r\n          /* Wave count and zombies to defeat */\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div\r\n          style={{\r\n            backgroundColor: '#333',\r\n            position: 'absolute',\r\n            margin: 'auto',\r\n            width: '50%',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n            top: '4px',\r\n            left: 0, right: 0,\r\n            textAlign: 'center',\r\n            borderRadius: '2px'\r\n          }}>\r\n            <div style={{ display: 'inline-block' }} className='debug-ui'>\r\n              wave no: {game.waveNum}\r\n            </div>\r\n            <div style={{ marginLeft: '100px', display: 'inline-block' }} className='debug-ui'>\r\n              enemies to defeat: {game.waveCountToDefeat}\r\n            </div>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <motion.div\r\n            className='game-score'\r\n            animate={{\r\n              scale: animateScore ? [ 1.35, 1.0 ] : 1.0\r\n            }}\r\n            transition={{\r\n              duration: .35\r\n            }}\r\n            >\r\n              {\r\n                <span\r\n                style={{\r\n                  color: (\r\n                    game.score < game.prevScore ? 'red'\r\n                    : game.score > game.prevScore ? '#00FF61'\r\n                    : 'white'\r\n                  )\r\n                }}>\r\n                  {\r\n                    game.score\r\n                  }\r\n                </span>\r\n              }\r\n            </motion.div>\r\n          : null\r\n        }\r\n        <div\r\n        className={ game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ? 'player-attributes' : '' }>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <>\r\n            <div className={ reloadUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Reload Lvl. { game.player.upgradeTiers['reload'].current }\r\n            </div>\r\n            <div className={ runUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Run Lvl. { game.player.upgradeTiers['run'].current }\r\n            </div>\r\n            <div className={ jumpUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Jump Lvl. { game.player.upgradeTiers['jump'].current }\r\n            </div>\r\n            <div className={ defenseUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Defense Lvl. { game.player.upgradeTiers['defense'].current }\r\n            </div>\r\n            <div className={ meleeUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Melee Lvl. { game.player.upgradeTiers['melee'].current }\r\n            </div>\r\n          </>\r\n          : null\r\n        }\r\n        </div>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <div className='total-ammo-count-ui'>\r\n              {\r\n                game.player.weapons.totalAmmo[\r\n                  game.player.weapons.equipped\r\n                ]\r\n              }\r\n            </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div className='total-credits-ui'>\r\n            credits: <span style={{ color: '#71DD4D' }}>${ game.player.credits }</span>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW && weaponEquipped ?\r\n          <div className='weapon-stats'>\r\n            <div className='weapon-stats-item'>ROF: { game.player.modTiers['rof'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>PWR: { game.player.modTiers['powder'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>ACC: { game.player.modTiers['sight'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>CAP: { game.player.modTiers['mag'][weaponEquipped].current }</div>\r\n          </div>\r\n          : null\r\n        }\r\n      </>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n","import React from 'react';\r\nimport Game from './features/game/Game'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\t\t\t\t<Game />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}