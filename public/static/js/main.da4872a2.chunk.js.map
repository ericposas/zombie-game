{"version":3,"sources":["images/pistol-icon.png","images/smg-icon.png","images/shotgun-icon.png","images/GroundTexture_Optimized.png","images/wallTile.png","images/gradient-layer-mask.png","images/explosiveBarrier.png","images/head-sprite.png","sounds/bodyBulletImpact.wav","images/GameCover.png","sounds/9mm1.wav","sounds/9mm2.mp3","sounds/explosion1.wav","sounds/explosion_distant.wav","sounds/pistolReload.wav","sounds/grenadeClink.wav","sounds/throw.wav","sounds/coinCollect.wav","sounds/collectAmmo.wav","sounds/collectItem.wav","sounds/bloodSquash.flac","sounds/bloodSquish.wav","sounds/bloodSmack.wav","sounds/deathRipSound.wav","sounds/jumpLanding.wav","sounds/dirtImpact.wav","sounds/zombieHurt.wav","sounds/zombieDeath.wav","sounds/pain1.wav","sounds/pain2.wav","sounds/playerDeath.wav","sounds/buttonAdd.wav","sounds/buttonSubtract.wav","sounds/buttonClick.wav","sounds/buttonHover.wav","sounds/placeObject.flac","sounds/cancelSound.wav","sounds/moneySound.wav","sounds/purchase.wav","sounds/shellImpact.wav","sounds/health.wav","sounds/zombieGrowl.wav","sounds/smgFire.wav","sounds/magDrop.wav","sounds/shotShell.wav","sounds/shotgunBlast.wav","sounds/achievement1.wav","sounds/achievement2.mp3","sounds/achievement3.wav","sounds/jumpSound.wav","sounds/grenadeCharge.wav","features/game/constants/GameStates.js","app/initialState.js","features/game/constants/weapons.js","features/game/gameSlice.js","app/store.js","features/game/utils/Utils.js","features/game/constants/mouseStates.js","features/game/collisionOptions.js","features/game/ReactComponents/MenuComponents.js","features/game/utils/updateScore.js","features/game/ReactComponents/ShopMenu.js","features/game/ReactComponents/AchievementsView.js","features/game/ReactComponents/PauseMenu.js","features/game/createMessages.js","features/game/items/Gib.js","features/game/player/PlayerRagdoll.js","features/game/FX/BloodSpurt.js","features/game/constants/DeathTypes.js","features/game/items/Rock.js","features/game/items/WoodPlank.js","features/game/FX/ExplosionSprite.js","features/game/FX/GrenadeExplosion.js","features/game/BuildItems/WallBarrier.js","features/game/BuildItems/Landmine.js","features/game/items/Grenade.js","features/game/BuildItems/Clustermine.js","features/game/constants/buildTypes.js","features/game/BuildItems/RemoteMine.js","features/game/player/fireWeapons.js","features/game/FX/MuzzleFlashFX.js","features/game/BuildItems/MachineGunTurret.js","features/game/FX/Sparks.js","features/game/ReactComponents/ShopQuery.js","features/game/player/Player.js","features/game/player/crosshairs.js","features/game/FX/GroundEffect.js","features/game/engineHandlers.js","features/game/WallTile.js","features/game/ui/WeaponsUI.js","features/game/items/HealthDrop.js","features/game/items/AmmoDrop.js","features/game/enemies/Zombie.js","features/game/items/CurrencyCredit.js","features/game/items/ItemGenerators.js","features/game/ui/ScreenUI.js","features/game/buildGame.js","features/game/createGameObjects.js","features/game/waves/waveManager.js","features/game/ReactComponents/RespawnMenu.js","features/game/ReactComponents/BuildMenu.js","features/game/ReactComponents/DoneBarrierPlacementBanner.js","features/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SubStates","GameStates","MAIN_MENU","GAMEPLAY","PAUSE","IN_GAME_MENU","GAMEOVER","SHOP_MENU","BUILD_MENU","SCORES_VIEW","width","height","keys","score","prevScore","lvlToWin","scoreToggle","scoreAmounts","zombie","meleeConnect","zombieStreakBonus","zombieKnockedOffStage","headShot","collectCredit","collectHealth","collectAmmo","waveCompleted","achievement","penalties","respawn","killed","damageTaken","achievements","owned","description","stats","zombiesKilled","bulletsFired","timesReloaded","grenadesThrown","timesKilled","timesRespawned","itemsPickedUp","creditsEarned","storePurchases","trapsBuilt","barriersBuilt","meleeKills","mineKills","trapsPlaced","barriersPlaced","turretKills","damageDealt","trapTypesPlaced","barrierTypesPlaced","lastAchievementEarned","lastMagDropped","consecutiveGrenadeKills","lastGrenadeKill","zombieLastKilled","filterEffects","displayZombieHealth","rightMouseDown","mouseState","x","y","btn","mousePosition","mouseRelativeToPlayerPosition","textures","gameState","lastGameState","gameSubState","lastGameSubState","waveNum","waveCountToDefeat","zombiesOnStage","showingMessage","respawnCost","respawnToShopCost","purchases","lastPurchase","item","amount","player","perks","magnetism","cost","magDmg","lastBullet","creditDropper","ammoDropper","healthDropper","quickTurret","barrierPlus","cluck","health","credits","position","compositeId","composite","headId","bodyId","armId","weapons","list","equipped","grenadeChargeRate","grenadeUpperForceThreshold","grenadeFuseTime","default","grenadeExplosionSize","laser","meleeDamage","damage","min","max","shotLimiter","ammoCapacity","totalAmmo","ammoCostPerBox","lastShot","reloadSpeed","reloadAnimationFrames","bulletVariance","bulletForce","shellEjectionForce","shellRemovalTimeout","buyWeapons","constants","variables","magnetismSpeed","currentDirection","lastDirection","jumping","jumpForce","defense","acceleration","deceleration","upgradeTiers","run","current","jump","reload","melee","upgradeCosts","upgradeAmounts","modTiers","rof","powder","sight","mag","modCosts","modAmounts","barriers","selectedBarrier","costToBuild","traps","turret","fireDistance","cooldown","selectedTrap","enemies","zombies","attackDmg","attackDmgDefault","attackIncrementer","walkSpeed","walkSpeedDefault","walkSpeedIncrementer","zombieAttackLimiter","zombieAttackDefaultLimiter","zombieAttackLimiterDecrementer","zombieAttackDistance","defaultHealth","startingHealth","healthIncrementer","onRight","onLeft","consumables","healthkit","full","AchievementDefs","THIS_IS_SPARTA","FROM_DOWNTOWN","FIRE_IN_THE_HOLE","WEAPONS_COLLECTOR","PISTOL_MODDER","SMG_MODDER","SHOTGUN_MODDER","MOD_AFICIONADO","THE_JUMP_SHOT","PILEDRIVE","TRAPHOUSE","BARRICADE","MINER","GUNNA","StatsDefs","gameSlice","createSlice","name","initialState","reducers","loadLocalStorageState","state","localStorage","getItem","JSON","parse","setTrapTypePlaced","action","payload","setBarrierTypePlaced","setLastMagDropped","increaseStats","increaseStatsByAmount","reducer","type","prepare","setLastGrenadeKill","resetConsecutiveGrenadeKills","setZombieLastKilled","flipScoreToggle","increaseScore","decreaseScore","updatePrevScore","addPurchase","setZombiesOnLeft","setZombiesOnRight","setRightMouseDown","attachMod","modType","wepType","Math","round","setPlayerCompositeId","console","log","setKeyPress","push","removeKeyPress","splice","indexOf","parseInt","setLastDirection","setCurrentDirection","setJumping","setGroundId","groundId","setMousePosition","setMouseStateX","setMouseStateY","setMouseButtonState","setWeaponEquipped","setLastShot","dateTimeObject","weapon","setMouseRelativeToPlayerPosition","setCompositeBodyIds","setStaticGunAngle","staticGunAngle","setStaticGunAngleState","staticGun","setTexturePath","textureName","texturePath","gameStateTransition","from","to","incrementWave","decrementWave","setWaveCountToDefeat","incrementWaveCountToDefeat","decrementWaveCountToDefeat","setWeaponsList","setShowingMessage","unsetAllKeys","resetPlayerVariables","Object","assign","decrementTotalAmmo","addToTotalAmmo","updateAmmoCapacity","newCapacityAmount","setPlayerPosition","addToTotalCredits","subtractFromTotalCredits","upgradeRunSpeed","upgradeReloadSpeed","upgradeJumpForce","upgradeDefense","upgradeMelee","updatePlayerHealth","decrementGrenadeCount","incrementGrenadeCount","updateZombieWalkSpeed","incrementer","updateZombieAttackDmg","decrementZombieAttackTimeLimit","showLaserSight","incrementZombieHealth","setSelectedBarrierToBuild","setSelectedTrapToBuild","setLastWaveCountDefeated","lastWaveCountDefeated","incrementZombiesOnStage","setZombiesOnStage","updateWeaponsList","setPlayerMagnetism","range","speed","setPlayerMagDamage","setPlayerLastBullet","setPlayerCreditDropper","setPlayerAmmoDropper","setPlayerHealthDropper","setPlayerQuickTurret","setPlayerBarrierPlus","setPlayerFusterCluck","toggleFilterEffects","toggleZombieHealthDisplay","setAchievementOwned","actions","store","configureStore","game","subscribe","setItem","stringify","getState","window","TweenLite","makePixiSprite","stringIdentifier","PIXI","getBodyWidth","body","bounds","getBodyHeight","getPlayerPartByType","gameObjects","gunId","world","getKeyValue","Composite","get","getPlayerBody","GREATER_THAN_PLAYER_X_POS","playerCollisionOptions","group","category","mask","enemyCollisionOptions","itemCollisionOptions","Container","styled","div","props","Backing","opacity","bgcolor","MenuTitle","MenuButtonContainer","MenuButton","cancelTransition","MenuButtonSpacer","updateScore","dispatch","delayedCall","subtractScore","MenuComponents","Inline","IncrementDecrement","AmmoCount","CustomMenuButton","bordercolor","hovercolor","hoverborder","style","onClick","play","onMouseOver","children","BackButton","borderRadius","arrowOnly","fontSize","CornerBackButton","top","right","marginTop","Modal","label","labelClr","clickConfirmHandler","clickCancelHandler","boxShadow","color","space-top","display","marginRight","AmmoSubMenu","toDefaultSubMenu","toAmmoSubMenu","toStandardMenu","useDispatch","useSelector","ammoCap","React","useReducer","ammo","ammoInCart","dispatchAmmoInCart","useState","dollarCost","setDollarCost","fontWeight","left","weaponsUI","updateGrenadeIcons","select","PlayerAttributesMenuButton","subMenuType","setSubMenuType","upgradeTypes","getAttrName","length","ModSubMenu","getWepText","wepTxt","getModDescription","mod","selectedMod","setSelectedMod","selectedType","setSelectedType","marginLeft","modPurchaseName","updateWeaponMagazines","map","i","Fragment","key","ShopMenu","menuType","setMenuType","w","h","screenUI","toAmmoMenu","backToStandardMenu","openAmmoSubMenu","getHealthkitCostStyle","kitType","useEffect","WEAPONS_EXPERT","unpause","acceptHealth","data-tip","data-for","id","batch","backBtnFn","achievementsKeys","resetWave","forEach","z","kill","setKeyValue","dead","gotoMainMenu","NoTransitionButton","Stat","stat","padding","PauseMenu","pauseMenuStates","showDefault","setPauseMenuState","pauseMenuState","effectFilters","margintop","hidebg","hidetitle","playbtn","togglePause","AchievementsView","checkFilters","ammos","concat","credit","displayHealth","createGenericMessage","txt","fillColor","durationMotion","durationLinger","fill","Power1","container","gameWidth","gameHeight","text","font","pivot","addChild","alpha","onStart","onComplete","delay","ease","easeIn","removeChild","createTextMessage","set","texts","playerBody","msg","playerPosition","initialY","destroy","idx","Gib","timeToDisappear","position_x","position_y","force_x","force_y","gibs","Bodies","circle","collisionFilter","World","add","partsSheet","gfc","Sprite","floor","random","getTexturePNG","this","Body","applyForce","float","animate","renderFn","rot","rotation","remove","GibGenerator","count","force","gibCnt","PlayerRagdollDecap","partLastDamaged","bUpper","a","l","hnd","f1","f2","spine","bodyUpper","rectangle","head","maskBody","armUpperL","armUpperR","handL","armLowerL","armLowerR","handR","legUpperL","legUpperR","legLowerL","legLowerR","footL","footR","bodyToHead","Constraint","create","bodyA","bodyB","pointA","pointB","bodyUpperToArmUpperL","bodyUpperToArmUpperR","armUpperLToArmLowerL","armUpperRToArmLowerR","handToLowerL","handToLowerR","bodyLowerToLegUpperL","bodyLowerToLegUpperR","legUpperLToLegLowerL","legUpperRToLegLowerR","footLToLowerLegL","footRToLowerLegR","spineGfx","spineLinks","_si","spineLink","spineConstraints","makeSpine","upper_spineLinks","upper_spineConstraints","spineToUpper","gibForce","int","parts_spritesheet","spriteParts","foot2","_id","leg2","hand2","arm2","upperArm2","foot1","upperLeg2","skull","leg1","upperLeg1","link","spineGfc","torsoUpper","hand1","arm1","upperArm1","part","updateAnchor","sprite","animateRagParts","renderFnc","linkPos","maskPos","skullPos","torsoUpperPos","arm1Pos","upperArm1Pos","hand1Pos","upperLeg1Pos","leg1Pos","foot1Pos","arm2Pos","upperArm2Pos","hand2Pos","upperLeg2Pos","leg2Pos","foot2Pos","PlayerRagdollHalved","bLower","bodyLower","entrailGfx","lower_spineLinks","lower_spineConstraints","spineToLower","entrailGfc","torsoLower","torsoLowerPos","PlayerRagdollMaim","b","bodyUpperToLegUpperL","bodyUpperToLegUpperR","torso","torsoPos","PlayerRagdoll","BloodSpurt","scale","bodyToDelete","chosenSpurt","bloodSpurt1_sheet","bloodSpurt1","AnimatedSprite","animations","bloodSpurt2_sheet","bloodSpurt2","bloodSpurt3_sheet","bloodSpurt3","spurts","autoChosen","animationSpeed","loop","FELL_OFF","Rock","rocks","explosionAssetsSheet","rockPieceAssets","rockSprite","rockScale","rockBody","restitution","WoodPlank","pos","woodPlanksSheet","woodPlanks","plankRange","getPlank","gfcContainer","torque","ExplosionSprite","renderBody","explosionTexture1","explosionTexture2","explosion1","explosion2","explosions","ex","explosion","adjustment","AdjustmentFilter","brightness","saturation","blur","BlurFilter","glow","GlowFilter","outerStrength","filters","onUpdate","GrenadeExplosion","showRocksBool","options","explosionSound1","Howl","src","distantExplosion","distantExplosionSound","explosionsArray","smokeAssets","positionalBody","isStatic","calcRenderedPosition","calculatedPosition","randInt","s","smokeSprite","idx1","randScale","xyval","r","showWood","showExplosionSprite","explosionSprites","seek","WallBarrier","dimensions","barriersSprites","buildObjects","woodenBarrier","stoneBarrier","metalBarrier","explosiveBarrier","types","WOOD","STONE","METAL","EXPLOSIVE","barrierSprite","objBody","inertia","Infinity","ground","constraint","strength","main","destroyed","getBody","healthDisplay","sprites","takeDamage","dmg","displayBarrierStrength","removeSelf","_x","_y","explosionHitbox","Landmine","landmines","landmineSheet","hitbox","Grenade","fuseTime","grenadeDistance","start","end","grenades","grenadeBody","grenadeGfc","beginFill","drawCircle","bevel","BevelFilter","shadowAlpha","lightAlpha","thickness","shadowColor","lightColor","noise","NoiseFilter","seed","motionBlur","MotionBlurFilter","velocity","radians","exploded","explode","showRocks","explosionSize","distance","Clustermine","num","xforce","yforce","nade","barrierTypes","trapTypes","LANDMINE","CLUSTER_BOMB","REMOTE_MINE","TURRET","RemoteMine","mineNumber","remoteMines","remoteMinesArr","Text","calcPistolDamage","BulletImpact","surfaceType","tint","alphaDuration","rand","duration","renderPosition","PistolShell","changeLabelString","overrideOptions","shells","undefined","setAngularVelocity","shellWd","shellHt","drawRect","endFill","setTimeout","bind","PistolBullet","extraDamageBool","arm","bullets","bulletWd","overrideBody","setAngle","overrideAngle","Vector","angle","overrideForce","position1","position2","cos","sin","calcBulletAngle","addImpactEffect","bulletImpacts","impact","bulletLastPos","bulletTrail","linePoints","fireEquippedWeapon","playerBodyWd","playerBodyHt","Date","now","checkEmpty","reloading","fireBullet","fireWeaponAnimation","extraDmg","lastBulletByWepType","split","shaking","changeTextForEmptyShake","emptyMagShake","MuzzleFlashFX","muzzleFlashesSheet","muzzleFlash001","muzzleFlash002","muzzleFlash003","muzzleFlash004","muzzleFlash005","muzzleFlashes","visible","muzzleScale","blurFilter","getRandomBlur","quality","glowFilter","innerStrength","adjustmentFilter","flashes","flash","tier","randFlash","getRandomFlash","_muzzleScale","MachineGunTurret","scanAnim","shootAnim","onFrameChange","gotoAndStop","child","direction","scanning","muzzleFlashFX","setMuzzleRotations","degrees","fireEffect","_ejectY","shooting","Spark","spark1","spark2","sparks","spark","adjFilter","sparkContainer","stop","adjust","BottomBanner","Back","nextWave","wave","alert","ShopQuery","className","EnhancedMuzzleSpark","muzzleSpark","gotoAndPlay","getFilters","updateFilters","Player","engine","wd","ht","friction","armAttach","headAttach","bodies","life","lifebarOutline","lineStyle","lifebar","initialLifebarWidth","charReloadPistolSpritesheet","charReloadPistolSprite","charReloadSMGSpritesheet","charReloadSMGSprite","charReloadShotgunSpritesheet","charReloadShotgunSprite","shotgunShellLoadIterations","gotoToEndOfShotgunReload","reloadAnimsByType","reloadAnims","kernelSize","meleePistolSpritesheet","meleePistolAnim","meleeAttackInProgress","removeMeleeHitbox","currentFrame","meleeUMPSpritesheet","meleeUMPAnim","meleeShotgunSpritesheet","meleeShotgunAnim","meleeSprites","grenadeThrowInProgress","grenadeForce","chargingGrenade","chargeGrenade","chargeGrenadeSound","meter","renderGrenadeChargeMeter","createGrenade","calculatedGrenadeForce","calcGrenadeAngle","throwGrenade","attacks","grenadeThrowPistolAnim","grenadeThrowUMPAnim","grenadeThrowShotgunAnim","grenadeThrowPistolSpritesheet","grenadeThrown","grenadeThrowUMPSpritesheet","grenadeThrowShotgunSpritesheet","grenadeSprites","grenadeSpritesByEquipped","ejectedMags","reloadMagazineActionsByType","magDmgOwned","mx","pistolReloadSound","fade","_d","magBody","pistolMag","magObj","gfx","unshift","pop","smgMag","reloadShell","updateEjectedMagPositions","reloadWeapon","charRightArmFirePistolSpritesheet","charRightArmFirePistolSprite","charRightArmFireSMGSpritesheet","charRightArmFireSMGSprite","charArmsFireShotgunSpritesheet","charRightArmFireShotgunSprite","headSprite","positionHeadSprite","renderObj","_mx","my","fn","armsSpritesByType","charLeftArmFirePistolSprite","charRunSpritesheet","charRunSprite","charIdleSpritesheet","charIdleSprite","charJumpSpritesheet","charJumpSprite","stopJumpAnimation","resumeJumpAnimation","jumpMotionBlur","playJumpAnimation","charLeftArmFirePistolSpritesheet","charLeftArmFireSMGSpritesheet","charLeftArmFireSMGSprite","charLeftArmFireShotgunSprite","armsSprites","_9mm1","_9mm2","pistolSound1","pistolReloadSnd","_1","volume","jumpSound","pain1Snd","pain2Snd","deathRip","playerDeathSnd","hitImpact","smgFire","shotgunFire","mSpark","currentMuzzleSpark","bodySprites","shadow","drawEllipse","setBodySpritesPositions","obj","setArmsSpritePosition","fpos","_my","getFlashes","createMeleeHitbox","meleeHitbox","meleeAttack","collectCredits","playerHit","resetPlayerHit","blinkAlpha","bloodSpurtPos","amt","addSpritesInOrder","timing","timeScale","playerRagdoll","lastDeathType","lastBodyPosition","translate","deathType","parts","playerArm","getPlayerComposite","bh","keydownListenersAdded","addEventListener","e","keyCode","changeBack","toString","detonate","currentTurret","updateDirection","target","document","getElementsByTagName","getBoundingClientRect","armAngle","mouseX","mouseY","rect","clientX","clientY","mPosRel","buttons","costToBuild_trap","costToBuild_barrier","closestX","barrier","buildNewLocation","placeObjectSound","cancelSound","checkAllowArray","buildObjectPlacementComparison","reduce","prev","curr","abs","trap","buildTrap","trapPosition","mine","updateNumber","preventDefault","grenadesCount","deltaY","pause","Crosshairs","crosshair","cross","moveTo","lineTo","changed","_new","buildArrow","animationLoop","GroundEffect","bodyPart","groundFx","fxSheet","bulletTextures","groundBloodSpatters","render","groundTex","groundBody","pistolBullets","pistolBulletWd","pistolBulletHt","pistolShells","pistolShellWd","pistolShellHt","ammoDrops","pistolAmmoDrops","smgAmmoDrops","shotgunAmmoDrops","creditDrops","crosshairs","zombieRags","leftEnemyCount","rightEnemyCount","leftEnemyCountDisplay","rightEnemyCountDisplay","sparkSprites","healthdrops","wallTile","WallTile","texture","Texture","delta","tilePosition","TilingSprite","createCollision","body1_label","body2_label","callback","pairs","body1","body2","calculateDamageAmount","weapon_str","calcSMGDamage","calcShotgunDamage","calcTurretDamage","checkCollisionStart","snd","knockback","ammo_type","grenadeClink","gameTickVarsDefined","getZombieRadarTextStyle","gameTickHandler","gradientAlpha","accelMax","mouseButtonState","renderPositionFn","firePistol","fireSMG","fireShotgun","Render","lookAt","playerPosX","playerPosY","box","positionAmmoBox","coin","positionCreditGfx","creditBody","playerRag","grenade","rock","wood","gib","setPlayerVars","playerDirection","paused","walk","setSpritesPositions","timeSinceLastAttack","attack","shoot","updatePosition","rag","fx","WeaponsUI","mags","pistolIcon","smgIcon","shotgunIcon","icons","iconBG","DropShadowFilter","icon","keepOnTop","magazinesByWeaponType","g","emptyText","setInterval","bulletMask","bulletBevel","gbevel","gnoise","makeMagByType","bullet","bulletGfc","weaponIcons","updateMagazine","Array","swapSwap","wep","magazineIndexes","magEmptyBools","doTheWiggle","defaultPos","textForEmptyShake","str","removeEmptyText","forceReload","ammoCheck","limit","_i","onCompleteParams","forceWepEquipped","m","hasOwnProperty","lastMagIdx","makeGrenadeIcon","grenadeCount","gnade","HealthDrop","_amt","Graphics","healths","AmmoDrop","weaponType","colors","ammoBox","ammoGfc","boxGfc","blurGfc","bevelFilter","boxTxt","ZombieRagdoll","f","constraints","_body","z_parts_spritesheet","skulls","getSkullTex","c","getARandomConstraint","Zombie","Power2","zombieWalkSpeed","headToBody","zWalkSheet","zAttackSheet","idleSheet","idleAnim","zWalk","zAttack","zAttack2","slashFX","slashAnim","walkAnim","attackAnim","attackAnim2","anims","anim","playerBodyPosition","playSlashAnim","shouldDisplayHealth","moveLifeDisplay","zombieFarFromPlayer","playIdleAnim","playing","walkAnimPlaying","stopIdleAnim","playWalkAnim","stopWalkAnim","healthOffsetY","damageDisplayOptions","healthDisplayOptions","renderFnResult","alteredWalkSpeed","comparison","bool","dmgTxts","dmgIterator","tintAmounts","1","2","3","4","partDamaged","isCritical","isMelee","attackType","spurtPosLow","spurtPosHi","directionX","removeZombieFromMatterWorld","attackHitbox","removeZombieFromZombiesArray","skipZombieRag","killType","dropPos","GenerateRandomCreditDrops","scoreAmt","zombieGrowl","oneOfTwo","compareResult","makeAttackHitbox","CreditDrop","currencyDrops","creditContainer","creditBlur","creditGfc","yStartPos","amountLimits","randCount","RespawnButton","ScreenUI","pixiElt","Bounce","gameContainer","respawnButton","interactive","overrideCount","GenerateRandomAmmoDrops","on","showRespawnButton","easeOut","muzzle_flashes_spritesheet","zomb_idle_sheet","zomb_walk_sheet","zomb_attack1_sheet","zomb_attack2_sheet","zomb_parts_sheet","zomb_parts_gored_sheet","zomb_slash_fx_sheet","barriers_sheet","char_parts","char_idle_sheet","char_run_sheet","char_jump_sheet","char_reload_pistol_sheet","char_reload_smg_sheet","left_arm_pistol_fire_sheet","right_arm_pistol_fire_sheet","left_arm_smg_fire_sheet","right_arm_smg_fire_sheet","melee_pistol_sheet","melee_ump_sheet","melee_shotgun_sheet","grenade_pistol_sheet","grenade_ump_sheet","grenade_shotgun_sheet","arms_fire_shotgun","char_reload_shotgun_sheet","blood_spurt_1","blood_spurt_2","blood_spurt_3","landmine_sheet","wood_planks_sheet","sparks_sheet","elementId","mouseConstraintBool","Engine","element","getElementById","pixelRatio","runner","Runner","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","stiffness","worldWidth","setUpMatter","app","antialias","resolution","ROUND_PIXELS","appendChild","view","loader","setUpPixi","buildGame","onload","explosiveBarrel","groundTexture","charHead","weaponUI_pistolIcon","weaponUI_smgIcon","weaponUI_shotgunIcon","load","value","getFullState","setFullState","coverArt","gradientAlphaImg","gameCover","distant_explosion","bulletImpact_body","throwSound","confirmSound","coinCollectSound","ammoCollectSound","itemCollectSound","bloodSquish","bloodSquash","bloodSmack","deathRipSound","jumpLandingSound","dirtImpactSound","zombieHurtSound","zombieDeathSound","pain1Sound","pain2Sound","playerDeathSound","buttonAddSound","buttonSubtractSound","buttonHoverSound","buttonClickSound","buttonCancelSound","purchaseSound","shellImpactSound","healthPickupSound","magDrop","shotShell","shotgunBlast","achievement1","achievement2","achievement3","chargingNade","resources","spritesheet","addGround","stage","mainMenu","menu","playBtn","playBtnGfc","playBtnTxt","fontFamily","positionPlayButton","buildMenu","Events","cursor","getElementsByClassName","pointerEvents","startWave","numOnStage","getAZombie","startZombieCreation","GenerateZombies","waveDefeated","chars","transitionToShopQuery","waveMsgOutro","waveMsgIntro","createWaveMessage","BuildMenuStates","buildMenuState","setBuildMenuState","barrierCosts","trapCosts","backToBuildMenu","gotoPlacementMode","replaceCursorWithObjectToPlace","chooseBarrier","filteredType","chooseTrap","filter","ScoresView","scores","overflow","sort","date","time","substr","year","dateNoYear","Game","weaponEquipped","waitInterval","useRef","cancelWaveStart","initial","useScores","setScores","animateScore","setAnimateScore","runUpgraded","setRunUpgraded","reloadUpgraded","setReloadUpgraded","jumpUpgraded","setJumpUpgraded","meleeUpgraded","setMeleeUpgraded","defenseUpgraded","setDefenseUpgraded","updateWeaponsUI","countdown","timeInt","clearInterval","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warning","isErr","Axios","catch","err","then","data","DoneBarrierPlacementBanner","shop-query-visibility","BuildMenu","RespawnMenu","backgroundColor","margin","lineHeight","textAlign","transition","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,iCCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.da4872a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pistol-icon.7f31cd11.png\";","module.exports = __webpack_public_path__ + \"static/media/smg-icon.3a3ac587.png\";","module.exports = __webpack_public_path__ + \"static/media/shotgun-icon.0cd5d683.png\";","module.exports = __webpack_public_path__ + \"static/media/GroundTexture_Optimized.b017db2f.png\";","module.exports = __webpack_public_path__ + \"static/media/wallTile.c21abdef.png\";","module.exports = __webpack_public_path__ + \"static/media/gradient-layer-mask.2be09341.png\";","module.exports = __webpack_public_path__ + \"static/media/explosiveBarrier.4f1da0f2.png\";","module.exports = __webpack_public_path__ + \"static/media/head-sprite.0a5881b1.png\";","module.exports = __webpack_public_path__ + \"static/media/bodyBulletImpact.94466266.wav\";","module.exports = __webpack_public_path__ + \"static/media/GameCover.82b711ae.png\";","module.exports = __webpack_public_path__ + \"static/media/9mm1.604f7da7.wav\";","module.exports = __webpack_public_path__ + \"static/media/9mm2.c11c6dad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/explosion1.9434e92f.wav\";","module.exports = __webpack_public_path__ + \"static/media/explosion_distant.d9a90524.wav\";","module.exports = __webpack_public_path__ + \"static/media/pistolReload.915ac0e1.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeClink.e7168e2c.wav\";","module.exports = __webpack_public_path__ + \"static/media/throw.e7ed00d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/coinCollect.b65cb627.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectAmmo.b05c1059.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectItem.a7bd5386.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquash.6c1046e0.flac\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquish.508e6483.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSmack.eb606367.wav\";","module.exports = __webpack_public_path__ + \"static/media/deathRipSound.733ed512.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpLanding.f703082d.wav\";","module.exports = __webpack_public_path__ + \"static/media/dirtImpact.de2bbd17.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieHurt.2e807e84.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieDeath.0ac25f1f.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain1.e6646ac7.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain2.defb4bdf.wav\";","module.exports = __webpack_public_path__ + \"static/media/playerDeath.e8c5712d.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonAdd.8db1c8cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonSubtract.b240a4d0.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonClick.10d30b9f.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonHover.e0064aca.wav\";","module.exports = __webpack_public_path__ + \"static/media/placeObject.fa092176.flac\";","module.exports = __webpack_public_path__ + \"static/media/cancelSound.0d1ffcde.wav\";","module.exports = __webpack_public_path__ + \"static/media/moneySound.1bae50c5.wav\";","module.exports = __webpack_public_path__ + \"static/media/purchase.4979dc37.wav\";","module.exports = __webpack_public_path__ + \"static/media/shellImpact.8075d182.wav\";","module.exports = __webpack_public_path__ + \"static/media/health.29ff687c.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieGrowl.4792280f.wav\";","module.exports = __webpack_public_path__ + \"static/media/smgFire.b1f03f38.wav\";","module.exports = __webpack_public_path__ + \"static/media/magDrop.1547e6a9.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotShell.f90e6de6.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotgunBlast.4118af72.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement1.dd62d37e.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement2.7a014c29.mp3\";","module.exports = __webpack_public_path__ + \"static/media/achievement3.23db76c0.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpSound.ccaa05f0.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeCharge.31709a11.wav\";","const GameStates = {\r\n  MAIN_MENU: 'main menu',\r\n  GAMEPLAY: 'gameplay',\r\n  PAUSE: 'pause',\r\n  IN_GAME_MENU: 'in-game menu',\r\n  GAMEOVER: 'gameover',\r\n  SHOP_MENU: 'in-game shop menu',\r\n  BUILD_MENU: 'build menu',\r\n  SCORES_VIEW: 'scores view',\r\n}\r\n\r\nexport const SubStates = {\r\n\tNEUTRAL: 'neutral',\r\n\tWAITING: 'waiting',\r\n\tWAVE_STARTED: 'wave started',\r\n\tWAVE_DEFEATED: 'wave defeated',\r\n\tWAVE_CHANGE: 'wave change',\r\n\tPLAYER_DEATH: 'player death',\r\n  PLAYER_RESPAWN: 'player respawn',\r\n  SHOP_QUERY_SUBMENU: 'shop query sub-menu',\r\n  BUILD_PLACEMENT_MODE: 'build trap placement mode'\r\n}\r\n\r\nexport default GameStates\r\n","import GameStates, { SubStates } from '../features/game/constants/GameStates'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_GRENADE } from '../features/game/constants/weapons'\r\n\r\nexport default {\r\n  width: 1200,\r\n  height: 550,\r\n  keys: [],\r\n  score: 0,\r\n  prevScore: 0,\r\n  lvlToWin: 30,\r\n  scoreToggle: false,\r\n  scoreAmounts: {\r\n    zombie: 500,\r\n    meleeConnect: 100,\r\n    zombieStreakBonus: 250,\r\n    zombieKnockedOffStage: 500,\r\n    headShot: 100,\r\n    collectCredit: 10,\r\n    collectHealth: 10,\r\n    collectAmmo: 10,\r\n    waveCompleted: 1000,\r\n    achievement: 5000,\r\n    penalties: {\r\n      respawn: 1000,\r\n      killed: 500,\r\n      damageTaken: 20\r\n    }\r\n  },\r\n  achievements: {\r\n    'SPARTA': { owned: false, description: 'Kicking a zombie off-stage' },\r\n    'Downtown': { owned: false, description: 'Throwing a grenade 2000 ft. and hitting a zombie' },\r\n    'Triplets': { owned: false, description: 'Killing 3 Zombies with one grenade' },\r\n    'Collector': { owned: false, description: 'Buying both the Shotgun and the SMG from the Shop' },\r\n    'P.Modder': { owned: false, description: 'Purchasing all pistol modifications' },\r\n    'SMG Modder': { owned: false, description: 'Purchasing all SMG modifications' },\r\n    'S.Modder': { owned: false, description: 'Purchasing all Shotgun modifications' },\r\n    'Aficionado': { owned: false, description: 'Buying all mods in available' },\r\n    'Jumpshot': { owned: false, description: 'Jumping in the air and firing the final killshot' },\r\n    'Piledrive': { owned: false, description: 'Killing 5 zombies with melee attacks as the final strike' },\r\n    'Traphouse': { owned: false, description: 'Building and placing 3 different traps' },\r\n    'Barricade': { owned: false, description: 'Building and placing 3 different barrier types' },\r\n    'Miner': { owned: false, description: 'Killing at least 3 zombies with landmines' },\r\n    'Gunna': { owned: false, description: 'Killing at least 10 zombies with turrets' }\r\n  },\r\n  stats: {\r\n    zombiesKilled: 0,\r\n    bulletsFired: 0,\r\n    timesReloaded: 0,\r\n    grenadesThrown: 0,\r\n    timesKilled: 0,\r\n    timesRespawned: 0,\r\n    itemsPickedUp: 0,\r\n    creditsEarned: 0,\r\n    storePurchases: 0,\r\n    trapsBuilt: 0,\r\n    barriersBuilt: 0,\r\n    meleeKills: 0,\r\n    mineKills: 0,\r\n    trapsPlaced: 0,\r\n    barriersPlaced: 0,\r\n    turretKills: 0,\r\n    damageTaken: 0,\r\n    damageDealt: 0,\r\n  },\r\n  trapTypesPlaced: {},\r\n  barrierTypesPlaced: {},\r\n  lastAchievementEarned: null, // name of achievement\r\n  lastMagDropped: null, // time\r\n  consecutiveGrenadeKills: 0,\r\n  lastGrenadeKill: null, // time\r\n  zombieLastKilled: null, // time\r\n  filterEffects: false,\r\n  displayZombieHealth: true,\r\n  rightMouseDown: false,\r\n  mouseState: { x: '', y: '', btn: '' },\r\n  mousePosition: { x: 0, y: 0},\r\n  mouseRelativeToPlayerPosition: { x: 0, y: 0},\r\n  textures: {},\r\n  gameState: GameStates.MAIN_MENU,\r\n  lastGameState: null,\r\n  gameSubState: SubStates.NEUTRAL,\r\n  lastGameSubState: null,\r\n  waveNum: 0,\r\n  waveCountToDefeat: null,\r\n  zombiesOnStage: 0,\r\n  showingMessage: false,\r\n  respawnCost: 300,\r\n  respawnToShopCost: 150,\r\n  purchases: 0,\r\n  lastPurchase: {\r\n    item: null,\r\n    amount: null,\r\n  },\r\n  player: {\r\n    perks: {\r\n      magnetism: {\r\n        cost: 750,\r\n        owned: false\r\n      },\r\n      magDmg: {\r\n        cost: 750,\r\n        owned: false\r\n      },\r\n      lastBullet: {\r\n        cost: 750,\r\n        owned: false\r\n      },\r\n      creditDropper: {\r\n        cost: 1250,\r\n        owned: false\r\n      },\r\n      ammoDropper: {\r\n        cost: 1250,\r\n        owned: false\r\n      },\r\n      healthDropper: {\r\n        cost: 1250,\r\n        owned: false\r\n      },\r\n      quickTurret: {\r\n        cost: 1000,\r\n        owned: false\r\n      },\r\n      barrierPlus: {\r\n        cost: 1000,\r\n        owned: false\r\n      },\r\n      cluck: {\r\n        cost: 1000,\r\n        owned: false\r\n      }\r\n    },\r\n    health: 100,\r\n    credits: 500,\r\n    position: { x: 0, y: 0 },\r\n    compositeId: '',\r\n    composite: {\r\n      headId: '',\r\n      bodyId: '',\r\n      armId: ''\r\n    },\r\n    weapons: {\r\n      list: [ WEAPON_TYPE_PISTOL ],\r\n      equipped: null,\r\n      grenadeChargeRate: 0.00035,\r\n      grenadeUpperForceThreshold: 0.025,\r\n      grenadeFuseTime: {\r\n        default: 3\r\n      },\r\n      grenadeExplosionSize: 450,\r\n      laser: {\r\n        'pistol weapon': false,\r\n        'smg weapon': false,\r\n        'shotgun weapon': false,\r\n      },\r\n      meleeDamage: {\r\n        'pistol weapon': 10,\r\n        'smg weapon': 15,\r\n        'shotgun weapon': 20,\r\n      },\r\n      damage: {\r\n        'pistol weapon': { 'min': 4, 'max': 10 },\r\n        'smg weapon': { 'min': 3, 'max': 7 },\r\n        'shotgun weapon': { 'min': 4, 'max': 8 },\r\n        'turret weapon': { min: 4, max: 6 }\r\n      },\r\n      shotLimiter: {\r\n        'pistol weapon': 300,\r\n        'smg weapon': 100,\r\n        'shotgun weapon': 500,\r\n      },\r\n      ammoCapacity: {\r\n        'pistol weapon': 9,\r\n        'smg weapon': 19,\r\n        'shotgun weapon': 6,\r\n        'grenades': 1\r\n      },\r\n      totalAmmo: {\r\n        'pistol weapon': 9 * 5,\r\n        'smg weapon': 19 * 5,\r\n        'shotgun weapon': 6 * 5,\r\n        'grenades': 3\r\n      },\r\n      ammoCostPerBox: {\r\n        'pistol weapon': 10,\r\n        'smg weapon': 20,\r\n        'shotgun weapon': 20,\r\n        'grenades': 80\r\n      },\r\n      lastShot: {\r\n        'pistol weapon': null,\r\n        'smg weapon': null,\r\n        'shotgun weapon': null,\r\n      },\r\n      reloadSpeed: {\r\n        'pistol weapon': .4,\r\n        'smg weapon': .4,\r\n        'shotgun weapon': .4,\r\n      },\r\n      reloadAnimationFrames: {\r\n        'pistol weapon': 55,\r\n        'smg weapon': 60,\r\n        'shotgun weapon': 80,\r\n      },\r\n      bulletVariance: {\r\n        'pistol weapon': 0.0004,\r\n        'smg weapon': 0.001,\r\n        'shotgun weapon': 0.002,\r\n      },\r\n      bulletForce: {\r\n        'pistol weapon': .0075,\r\n        'smg weapon': .0075,\r\n        'shotgun weapon': .0075,\r\n        'turret': .01\r\n      },\r\n      shellEjectionForce: {\r\n        'pistol weapon': { 'min': 0.0003, 'max': 0.0007 },\r\n        'smg weapon': { 'min': 0.0003, 'max': 0.0010 },\r\n        'shotgun weapon': { 'min': 0.0008, 'max': 0.0012 },\r\n      },\r\n      shellRemovalTimeout: {\r\n        'pistol weapon': 2000,\r\n        'smg weapon': 2000,\r\n        'shotgun weapon': 2000,\r\n      },\r\n      buyWeapons: {\r\n        'smg weapon': 1500,\r\n        'shotgun weapon': 2750\r\n      },\r\n    },\r\n    constants: {\r\n      width: 50,\r\n      height: 180\r\n    },\r\n    variables: {\r\n      magnetism: 400,\r\n      magnetismSpeed: 1,\r\n      currentDirection: '',\r\n      lastDirection: '',\r\n      jumping: false,\r\n      jumpForce: -0.4,\r\n      defense: 0,\r\n      acceleration: {\r\n        min: 2,\r\n        max: 5\r\n      },\r\n      deceleration: 0.5\r\n    },\r\n    upgradeTiers: {\r\n      run: { min: 1, current: 1, max: 4 },\r\n      jump: { min: 1, current: 1, max: 4 },\r\n      reload: { min: 1, current: 1, max: 4 },\r\n      defense: { min: 1, current: 1, max: 4 },\r\n      melee: { min: 1, current: 1, max: 4 }\r\n    },\r\n    upgradeCosts: {\r\n      run: 200,\r\n      jump: 200,\r\n      reload: 300,\r\n      defense: 400,\r\n      melee: 400\r\n    },\r\n    upgradeAmounts: {\r\n      run: 1,\r\n      jump: -0.1,\r\n      reload: .1,\r\n      defense: 7,\r\n      melee: {\r\n        'pistol weapon': 5,\r\n        'smg weapon': 6,\r\n        'shotgun weapon': 8,\r\n      }\r\n    },\r\n    modTiers: {\r\n      rof: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      },\r\n      powder: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      },\r\n      sight: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      },\r\n      mag: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      }\r\n    },\r\n    modCosts: {\r\n      rof: {\r\n        'pistol weapon': 300,\r\n        'smg weapon': 400,\r\n        'shotgun weapon': 500,\r\n      },\r\n      powder: {\r\n        'pistol weapon': 400,\r\n        'smg weapon': 550,\r\n        'shotgun weapon': 750,\r\n      },\r\n      sight: {\r\n        'pistol weapon': 200,\r\n        'smg weapon': 300,\r\n        'shotgun weapon': 300,\r\n      },\r\n      mag: {\r\n        'pistol weapon': 350,\r\n        'smg weapon': 600,\r\n        'shotgun weapon': 600,\r\n      }\r\n    },\r\n    modAmounts: {\r\n      rof: {\r\n        'pistol weapon': 20,\r\n        'smg weapon': 15,\r\n        'shotgun weapon': 25,\r\n      },\r\n      powder: {\r\n        'pistol weapon': 3,\r\n        'smg weapon': 2,\r\n        'shotgun weapon': 3,\r\n      },\r\n      sight: {\r\n        'pistol weapon': 0.0001,\r\n        'smg weapon': 0.0002,\r\n        'shotgun weapon': 0.0003,\r\n      },\r\n      mag: {\r\n        'pistol weapon': 3,\r\n        'smg weapon': 5,\r\n        'shotgun weapon': 1,\r\n      }\r\n    }\r\n  },\r\n  barriers: {\r\n    selectedBarrier: null,\r\n    costToBuild: {\r\n      'Wooden': 150,\r\n      'Stone': 250,\r\n      'Metal': 350,\r\n      'Explosive Barrel': 400\r\n    }\r\n  },\r\n  traps: {\r\n    turret: {\r\n      fireDistance: 500,\r\n      cooldown: .5\r\n    },\r\n    selectedTrap: null,\r\n    costToBuild: {\r\n      'Landmine': 250,\r\n      'Remote Mine': 400,\r\n      'Machine Gun Turret': 750,\r\n      'Cluster Bomb': 500\r\n    },\r\n  },\r\n  enemies: {\r\n    zombies: {\r\n      attackDmg: 20,\r\n      attackDmgDefault: 20,\r\n      attackIncrementer: .25,\r\n      walkSpeed: 1.5,\r\n      walkSpeedDefault: 1.5,\r\n      walkSpeedIncrementer: 0.015,\r\n      zombieAttackLimiter: 2000,\r\n      zombieAttackDefaultLimiter: 2000,\r\n      zombieAttackLimiterDecrementer: 15,\r\n      zombieAttackDistance: 150,\r\n      defaultHealth: 100,\r\n      startingHealth: 100,\r\n      healthIncrementer: .5,\r\n      onRight: 0,\r\n      onLeft: 0\r\n    }\r\n  },\r\n  consumables: {\r\n    healthkit: {\r\n      '20': { cost: 40 },\r\n      '50': { cost: 80 },\r\n      full: { cost: 150 },\r\n    }\r\n  }\r\n}","export const WEAPON_TYPE_PISTOL = 'pistol weapon'\r\nexport const WEAPON_TYPE_GRENADE = 'grenades'\r\nexport const WEAPON_TYPE_SMG = 'smg weapon'\r\nexport const WEAPON_TYPE_TURRET = 'turret weapon'\r\nexport const WEAPON_TYPE_SHOTGUN = 'shotgun weapon'\r\n\r\nexport const PISTOL_BULLET_REMOVAL_TIMEOUT = 500\r\nexport const PISTOL_SHELL_REMOVAL_TIMEOUT = 2000\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MIN = 0.0003\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MAX = 0.0007\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN = 0.5\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX = 1.0\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_GRENADE } from './constants/weapons'\r\n// import { original } from 'immer'\r\nimport initialState from '../../app/initialState'\r\n\r\nexport const AchievementDefs = {\r\n  THIS_IS_SPARTA: 'SPARTA',\r\n  FROM_DOWNTOWN: 'Downtown',\r\n  FIRE_IN_THE_HOLE: 'Triplets',\r\n  WEAPONS_COLLECTOR: 'Collector',\r\n  PISTOL_MODDER: 'P.Modder',\r\n  SMG_MODDER: 'SMG Modder',\r\n  SHOTGUN_MODDER: 'S.Modder',\r\n  MOD_AFICIONADO: 'Aficionado',\r\n  THE_JUMP_SHOT: 'Jumpshot',\r\n  PILEDRIVE: 'Piledrive',\r\n  TRAPHOUSE: 'Traphouse',\r\n  BARRICADE: 'Barricade',\r\n  MINER: 'Miner',\r\n  GUNNA: 'Gunna',\r\n}\r\n\r\nexport const StatsDefs = {\r\n  zombiesKilled: 'zombiesKilled',\r\n  bulletsFired: 'bulletsFired',\r\n  timesReloaded: 'timesReloaded',\r\n  grenadesThrown: 'grenadesThrown',\r\n  timesKilled: 'timesKilled',\r\n  timesRespawned: 'timesRespawned',\r\n  itemsPickedUp: 'itemsPickedUp',\r\n  creditsEarned: 'creditsEarned',\r\n  storePurchases: 'storePurchases',\r\n  meleeKills: 'meleeKills',\r\n  mineKills: 'mineKills',\r\n  trapsPlaced: 'trapsPlaced',\r\n  barriersPlaced: 'barriersPlaced',\r\n  turretKills: 'turretKills',\r\n  damageTaken: 'damageTaken',\r\n  damageDealt: 'damageDealt',\r\n}\r\n\r\n// for flattened data game state\r\nexport const gameSlice = createSlice({\r\n\tname: 'game',\r\n  // initialState: {},\r\n  initialState: initialState, //JSON.parse(localStorage.getItem('ZombieChamber-GameSave')) || ,\r\n\treducers: {\r\n    loadLocalStorageState: state => {\r\n      if (localStorage && localStorage.getItem('ZombieChamber-GameSave')) {\r\n        return JSON.parse(localStorage.getItem('ZombieChamber-GameSave'))\r\n      } else {\r\n        return state\r\n      }\r\n    },\r\n    setTrapTypePlaced: (state, action) => ({\r\n      ...state,\r\n      trapTypesPlaced: {\r\n        ...state.trapTypesPlaced,\r\n        [ action.payload ]: state.trapTypesPlaced[ action.payload ] ? state.trapTypesPlaced[ action.payload ] + 1 : 1\r\n      },\r\n    }),\r\n    setBarrierTypePlaced: (state, action) => ({\r\n      ...state,\r\n      barrierTypesPlaced: {\r\n        ...state.barrierTypesPlaced,\r\n        [ action.payload ]: state.barrierTypesPlaced[ action.payload ] ? state.barrierTypesPlaced[ action.payload ] + 1 : 1\r\n      }\r\n    }),\r\n    setLastMagDropped: (state, action) => {\r\n      state.lastMagDropped = action.payload\r\n    },\r\n    increaseStats: (state, action) => {\r\n      state.stats[ action.payload ] += 1\r\n    },\r\n    increaseStatsByAmount: {\r\n      reducer: (state, action) => {\r\n        state.stats[ action.payload.type ] += action.payload.amount\r\n      },\r\n      prepare: (type, amount) => ({ payload: { type, amount } })\r\n    },\r\n    setLastGrenadeKill: (state, action) => {\r\n      state.lastGrenadeKill = action.payload\r\n      state.consecutiveGrenadeKills += 1\r\n    },\r\n    resetConsecutiveGrenadeKills: state => { state.consecutiveGrenadeKills = 0 },\r\n    setZombieLastKilled: (state, action) => {\r\n      state.zombieLastKilled = action.payload\r\n    },\r\n    flipScoreToggle: state => { state.scoreToggle = !state.scoreToggle },\r\n    increaseScore: (state, action) => {\r\n      state.score += action.payload\r\n    },\r\n    decreaseScore: (state, action) => {\r\n      state.score -= action.payload\r\n    },\r\n    updatePrevScore: (state) => {\r\n      state.prevScore = state.score\r\n    },\r\n    addPurchase: {\r\n      reducer: (state, action) => {\r\n        state.purchases += 1\r\n        state.lastPurchase = action.payload\r\n      },\r\n      prepare: (item, amount) => ({ payload: { item, amount } })\r\n    },\r\n    setZombiesOnLeft: (state, action) => { state.enemies.zombies.onLeft = action.payload },\r\n    setZombiesOnRight: (state, action) => { state.enemies.zombies.onRight = action.payload },\r\n    setRightMouseDown: (state, action) => {\r\n      state.rightMouseDown = action.payload\r\n    },\r\n    attachMod: {\r\n      reducer: (state, action) => {\r\n        let { modType, wepType } = action.payload\r\n        switch (modType) {\r\n          case 'rof':\r\n          state.player.modTiers.rof[wepType].current += 1\r\n          state.player.weapons.shotLimiter[wepType] -= state.player.modAmounts.rof[wepType]\r\n          break;\r\n          case 'powder':\r\n          state.player.modTiers.powder[wepType].current += 1\r\n          state.player.weapons.damage[wepType].min += Math.round(state.player.modAmounts.powder[wepType] * .5)\r\n          state.player.weapons.damage[wepType].max += Math.round(state.player.modAmounts.powder[wepType])\r\n          break;\r\n          case 'sight':\r\n          state.player.modTiers.sight[wepType].current += 1\r\n          state.player.weapons.bulletVariance[wepType] -= state.player.modAmounts.sight[wepType]\r\n          break;\r\n          case 'mag':\r\n          state.player.modTiers.mag[wepType].current += 1\r\n          state.player.weapons.ammoCapacity[wepType] += state.player.modAmounts.mag[wepType]\r\n          break;\r\n          default:\r\n        }\r\n      },\r\n      prepare: (modType, wepType) => ({ payload: { modType, wepType } })\r\n    },\r\n    setPlayerCompositeId: (state, action) => { console.log(action.type); state.player.compositeId = action.payload },\r\n\t\tsetKeyPress: (state, action) => { state.keys.push(action.payload) },\r\n\t\tremoveKeyPress: (state, action) => { state.keys.splice(state.keys.indexOf(parseInt(action.payload)), 1) },\r\n\t\tsetLastDirection: (state, action) => { state.player.variables.lastDirection = action.payload },\r\n\t\tsetCurrentDirection: (state, action) => { state.player.variables.currentDirection = action.payload },\r\n\t\tsetJumping: (state, action) => { state.player.variables.jumping = action.payload },\r\n\t\tsetGroundId: (state, action) => { state.groundId = action.payload },\r\n\t\tsetMousePosition: (state, action) => { state.mousePosition = action.payload },\r\n\t\tsetMouseStateX: (state, action) => { state.mouseState.x = action.payload },\r\n\t\tsetMouseStateY: (state, action) => { state.mouseState.y = action.payload },\r\n\t\tsetMouseButtonState: (state, action) => { state.mouseState.btn = action.payload },\r\n\t\tsetWeaponEquipped: (state, action) => { state.player.weapons.equipped = action.payload },\r\n\t\tsetLastShot: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tlet { player: { weapons: { lastShot, equipped } } } = state\r\n\t\t\t\tlastShot[equipped] = action.payload.dateTimeObject\r\n\t\t\t},\r\n\t\t\tprepare: (weapon, dateTimeObject) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: { weapon, dateTimeObject }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetMouseRelativeToPlayerPosition: (state, action) => { state.mouseRelativeToPlayerPosition = action.payload },\r\n\t\tsetCompositeBodyIds: (state, action) => {\r\n\t\t\tstate.player.composite = action.payload\r\n\t\t},\r\n\t\tsetStaticGunAngle: (state, action) => { state.staticGunAngle = action.payload },\r\n\t\tsetStaticGunAngleState: (state, action) => { state.staticGun = action.payload },\r\n\t\tsetTexturePath: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tstate.textures[action.payload.textureName] = action.payload.texturePath\r\n\t\t\t},\r\n\t\t\tprepare: (textureName, texturePath) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttextureName,\r\n\t\t\t\t\t\ttexturePath\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgameStateTransition: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tswitch (action.payload.type) {\r\n\t\t\t\t\tcase 'sub':\r\n\t\t\t\t\tstate.lastGameSubState = action.payload.from\r\n\t\t\t\t\tstate.gameSubState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'main':\r\n\t\t\t\t\tstate.lastGameState = action.payload.from\r\n\t\t\t\t\tstate.gameState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare: (type, from, to) => ({ payload: { type, from, to } })\r\n\t\t},\r\n\t\tincrementWave: (state) => { state.waveNum += 1 },\r\n\t\tdecrementWave: (state) => { state.waveNum -= 1 },\r\n\t\tsetWaveCountToDefeat: (state, action) => { state.waveCountToDefeat = action.payload },\r\n\t\tincrementWaveCountToDefeat: (state, action) => { state.waveCountToDefeat += 1 },\r\n\t\tdecrementWaveCountToDefeat: (state, action) => {\r\n      state.waveCountToDefeat -= 1\r\n      state.zombiesOnStage -= 1\r\n    },\r\n\t\tsetWeaponsList: (state, action) => { state.player.weapons.list = action.payload },\r\n\t\tsetShowingMessage: (state, action) => { state.showingMessage = action.payload },\r\n\t\tunsetAllKeys: (state, action) => { state.keys = [] },\r\n\t\tresetPlayerVariables: state => {\r\n\t\t\tlet _state = Object.assign({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentDirection: '',\r\n\t\t\t\t\tlastDirection: '',\r\n\t\t\t\t\tjumping: false\r\n\t\t\t\t}\r\n      }, state)\r\n      state = _state\r\n\t\t},\r\n\t\tdecrementTotalAmmo: (state, action) => {\r\n\t\t\tlet { player: { weapons: { totalAmmo } } } = state\r\n\t\t\t// original() from the immer package helps us to see values in redux arrays/objects\r\n\t\t\ttotalAmmo[action.payload] -= 1\r\n    },\r\n    addToTotalAmmo: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { totalAmmo } } } = state\r\n        totalAmmo[action.payload.wepType] += action.payload.amount\r\n      },\r\n      prepare: (wepType, amount) => ({ payload: { wepType, amount } })\r\n    },\r\n    updateAmmoCapacity: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { ammoCapacity } } } = state\r\n        ammoCapacity[action.payload.wepType] = action.payload.newCapacityAmount\r\n      },\r\n      prepare: (wepType, newCapacityAmount) => ({ payload: { wepType, newCapacityAmount } })\r\n    },\r\n    setPlayerPosition: (state, action) => { state.player.position = action.payload },\r\n    addToTotalCredits: (state, action) => { state.player.credits += action.payload },\r\n    subtractFromTotalCredits: (state, action) => { state.player.credits -= action.payload },\r\n    upgradeRunSpeed: (state) => {\r\n      state.player.upgradeTiers.run.current += 1\r\n      state.player.variables.acceleration.max = state.player.variables.acceleration.max + state.player.upgradeAmounts.run\r\n    },\r\n    upgradeReloadSpeed: (state) => {\r\n      state.player.upgradeTiers.reload.current += 1\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] = state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] + state.player.upgradeAmounts.reload\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] = state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] + state.player.upgradeAmounts.reload\r\n    },\r\n    upgradeJumpForce: (state) => {\r\n      state.player.upgradeTiers.jump.current += 1\r\n      state.player.variables.jumpForce = state.player.variables.jumpForce + state.player.upgradeAmounts.jump\r\n    },\r\n    upgradeDefense: (state) => {\r\n      state.player.upgradeTiers.defense.current += 1\r\n      state.player.variables.defense = state.player.variables.defense + state.player.upgradeAmounts.defense\r\n    },\r\n    upgradeMelee: (state) => {\r\n      state.player.upgradeTiers.melee.current += 1\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_PISTOL] += state.player.upgradeAmounts.melee[WEAPON_TYPE_PISTOL]\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_SMG] += state.player.upgradeAmounts.melee[WEAPON_TYPE_SMG]\r\n    },\r\n    updatePlayerHealth: (state, action) => {\r\n      state.player.health = action.payload\r\n    },\r\n    decrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] -= 1 },\r\n    incrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] += 1 },\r\n    updateZombieWalkSpeed: (state, action) => {\r\n      let walkSpeedDefault = state.enemies.zombies.walkSpeedDefault\r\n      let incrementer = state.enemies.zombies.walkSpeedIncrementer\r\n      state.enemies.zombies.walkSpeed = walkSpeedDefault + (action.payload * incrementer)\r\n    },\r\n    updateZombieAttackDmg: (state, action) => {\r\n      state.enemies.zombies.attackDmg = Math.round(\r\n        (action.payload * state.enemies.zombies.attackIncrementer) +\r\n        state.enemies.zombies.attackDmgDefault\r\n      )\r\n    },\r\n    decrementZombieAttackTimeLimit: (state, action) => {\r\n      state.enemies.zombies.zombieAttackLimiter = state.enemies.zombies.zombieAttackDefaultLimiter - (action.payload * state.enemies.zombies.zombieAttackLimiterDecrementer)\r\n      console.log(\r\n        state.enemies.zombies.zombieAttackLimiter\r\n      )\r\n    },\r\n    showLaserSight: (state, action) => {\r\n      state.player.weapons.laser[action.payload] = true\r\n    },\r\n    incrementZombieHealth: (state, action) => {\r\n      state.enemies.zombies.startingHealth = Math.round(state.enemies.zombies.defaultHealth + (state.enemies.zombies.healthIncrementer * action.payload))\r\n    },\r\n    setSelectedBarrierToBuild: (state, action) => {\r\n      state.barriers.selectedBarrier = action.payload\r\n    },\r\n    setSelectedTrapToBuild: (state, action) => {\r\n      state.traps.selectedTrap = action.payload\r\n    },\r\n    setLastWaveCountDefeated: (state) => { state.lastWaveCountDefeated = state.waveCountToDefeat },\r\n    incrementZombiesOnStage: state => { state.zombiesOnStage += 1 },\r\n    setZombiesOnStage: (state, action) => { state.zombiesOnStage = action.payload },\r\n    updateWeaponsList: (state, action) => {\r\n      state.player.weapons.list.push(action.payload)\r\n    },\r\n    // Perks\r\n    setPlayerMagnetism: {\r\n      reducer: (state, action) => {\r\n        state.player.variables.magnetism = action.payload.range\r\n        state.player.variables.magnetismSpeed = action.payload.speed\r\n        state.player.perks.magnetism.owned = true\r\n      },\r\n      prepare: (range, speed) => ({ payload: { range, speed } })\r\n    },\r\n    setPlayerMagDamage: (state) => {\r\n      state.player.perks.magDmg.owned = true\r\n    },\r\n    setPlayerLastBullet: (state) => {\r\n      state.player.perks.lastBullet.owned = true\r\n    },\r\n    setPlayerCreditDropper: state => { state.player.perks.creditDropper.owned = true },\r\n    setPlayerAmmoDropper: state => { state.player.perks.ammoDropper.owned = true },\r\n    setPlayerHealthDropper: state => { state.player.perks.healthDropper.owned = true },\r\n    setPlayerQuickTurret: state => {\r\n      state.player.perks.quickTurret.owned = true\r\n      state.traps.turret.cooldown = .25\r\n      state.traps.turret.fireDistance = 600\r\n    },\r\n    setPlayerBarrierPlus: state => {\r\n      state.player.perks.barrierPlus.owned = true\r\n    },\r\n    setPlayerFusterCluck: state => {\r\n      state.player.perks.cluck.owned = true\r\n    },\r\n    toggleFilterEffects: (state, action) => {\r\n      state.filterEffects = action.payload\r\n    },\r\n    toggleZombieHealthDisplay: (state, action) => {\r\n      state.displayZombieHealth = action.payload\r\n    },\r\n    setAchievementOwned: (state, action) => {\r\n      state.achievements[action.payload].owned = true\r\n      state.lastAchievementEarned = action.payload\r\n    }\r\n\t},\r\n})\r\n\r\nexport const {\r\n  loadLocalStorageState,\r\n  increaseStatsByAmount,\r\n  setTrapTypePlaced,\r\n  setBarrierTypePlaced,\r\n  setLastMagDropped,\r\n  increaseStats,\r\n  setAchievementOwned,\r\n  resetConsecutiveGrenadeKills,\r\n  setLastGrenadeKill,\r\n  setZombieLastKilled,\r\n  flipScoreToggle,\r\n  updatePrevScore,\r\n  increaseScore,\r\n  decreaseScore,\r\n  toggleZombieHealthDisplay,\r\n  toggleFilterEffects,\r\n  setPlayerFusterCluck,\r\n  setPlayerBarrierPlus,\r\n  setPlayerQuickTurret,\r\n  setPlayerHealthDropper,\r\n  setPlayerAmmoDropper,\r\n  setPlayerCreditDropper,\r\n  setPlayerLastBullet,\r\n  setPlayerMagDamage,\r\n  setPlayerMagnetism,\r\n  addPurchase,\r\n  setZombiesOnLeft,\r\n  setZombiesOnRight,\r\n  setRightMouseDown,\r\n\tresetPlayerVariables,\r\n\tunsetAllKeys,\r\n\tsetPlayerCompositeId,\r\n\tsetKeyPress, removeKeyPress,\r\n\tsetLastDirection, setCurrentDirection,\r\n\tsetJumping, setGroundId, setMousePosition,\r\n\tsetMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot,\r\n\tsetWeaponEquipped,\r\n\tsetMouseRelativeToPlayerPosition,\r\n\tsetCompositeBodyIds,\r\n\tsetTexturePath,\r\n\tgameStateTransition,\r\n  incrementWave,\r\n  decrementWave,\r\n  incrementWaveCountToDefeat,\r\n\tsetWaveCountToDefeat,\r\n\tdecrementWaveCountToDefeat,\r\n\tsetWeaponsList,\r\n\tsetShowingMessage,\r\n  decrementTotalAmmo,\r\n  addToTotalAmmo,\r\n  updateAmmoCapacity,\r\n  addToTotalCredits,\r\n  subtractFromTotalCredits,\r\n  setPlayerPosition,\r\n  upgradeRunSpeed,\r\n  upgradeReloadSpeed,\r\n  upgradeJumpForce,\r\n  upgradeDefense,\r\n  upgradeMelee,\r\n  updatePlayerHealth,\r\n  attachMod,\r\n  incrementGrenadeCount,\r\n  decrementGrenadeCount,\r\n  updateZombieWalkSpeed,\r\n  updateZombieAttackDmg,\r\n  decrementZombieAttackTimeLimit,\r\n  showLaserSight,\r\n  incrementZombieHealth,\r\n  setSelectedBarrierToBuild,\r\n  setSelectedTrapToBuild,\r\n  lastWaveCountDefeated,\r\n  incrementZombiesOnStage,\r\n  setZombiesOnStage,\r\n  updateWeaponsList\r\n} = gameSlice.actions\r\n\r\nexport default gameSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport game from '../features/game/gameSlice'\r\nimport initialState from './initialState'\r\n\r\n\r\nlet persistedState = (\r\n  localStorage && localStorage.getItem('ZombieChamber-GameSave') ? JSON.parse(localStorage.getItem('ZombieChamber-GameSave'))\r\n  : initialState\r\n)\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    game\r\n  },\r\n  // preloadedState: {\r\n  //   persistedState\r\n  // }\r\n})\r\n\r\nstore.subscribe(() => {\r\n  if (localStorage) {\r\n    localStorage.setItem('ZombieChamber-GameSave', JSON.stringify(store.getState().game))\r\n  }\r\n})\r\n\r\n\r\nexport default store\r\n","import * as PIXI from 'pixi.js'\r\nimport { Mouse, MouseConstraint, World, Engine, Render, Runner, Composite, Vector } from 'matter-js'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\n\r\nconst width = 1200, height = 550\r\nconst worldWidth = 6000\r\n\r\nconst { getState } = store\r\n\r\nconst { TweenLite: { to } } = window\r\n\r\nexport const applyGsapHover = pixiElt => {\r\n\tpixiElt.on('mouseover', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.05, y: 1.05 })\r\n\t})\r\n\tpixiElt.on('mouseout', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.00, y: 1.00 })\r\n\t})\r\n}\r\n\r\nexport const makePixiSprite = (stringIdentifier) => {\r\n\treturn (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\tPIXI.Texture.from(\r\n\t\t\t\tgetState().game.textures[stringIdentifier]\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport const calcBulletAngle = (position1, position2) => {\r\n  let { game: { player: { weapons: { bulletVariance, equipped, bulletForce } } } } = getState()\r\n\tlet angle = Vector.angle(position1, position2)\r\n\tlet bulletAngle = {\r\n\t\tx: Math.cos(angle) * bulletForce[equipped],\r\n\t\ty: (Math.sin(angle) * bulletForce[equipped]) + random.float(-bulletVariance[equipped], bulletVariance[equipped])\r\n\t}\r\n\treturn bulletAngle\r\n}\r\n\r\nexport const calcGrenadeAngle = (position1, position2, force) => {\r\n  let angle = Vector.angle(position1, position2)\r\n\tlet grenadeAngle = {\r\n\t\tx: Math.cos(angle) * force.x,\r\n\t\ty: Math.sin(angle) * force.y\r\n\t}\r\n\treturn grenadeAngle\r\n}\r\n\r\nexport const getBodyWidth = body => {\r\n\treturn (body.bounds.max.x - body.bounds.min.x)\r\n}\r\n\r\nexport const getBodyHeight = body => {\r\n\treturn (body.bounds.max.y - body.bounds.min.y)\r\n}\r\n\r\nexport const getPlayerPartByType = (type, gameObjects) => {\r\n\tlet {\r\n\t\tgame: {\r\n\t\t\tplayer: {\r\n\t\t\t\tcomposite: {\r\n\t\t\t\t\theadId,\r\n\t\t\t\t\tbodyId,\r\n\t\t\t\t\tarmId,\r\n\t\t\t\t\tgunId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} = getState()\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tif (type === 'head') {\r\n\t\treturn Composite.get(world, headId, 'body')\r\n\t}\r\n\tif (type === 'body') {\r\n\t\treturn Composite.get(world, bodyId, 'body')\r\n\t}\r\n\tif (type === 'arm') {\r\n\t\treturn Composite.get(world, armId, 'body')\r\n\t}\r\n\tif (type === 'gun') {\r\n\t\treturn Composite.get(world, gunId, 'body')\r\n\t}\r\n\r\n}\r\n\r\n// export const getGround = (gameObjects) => {\r\n// \tlet world = gameObjects.getKeyValue('world')\r\n// \tlet { game: { groundId } } = getState()\r\n// \treturn Composite.get(world, groundId, 'body')\r\n// }\r\n\r\nexport const getPlayerGun = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { gunId } } } } = getState()\r\n\treturn Composite.get(world, gunId, 'body')\r\n}\r\n\r\nexport const getPlayerBody = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { bodyId } } } } = getState()\r\n\treturn Composite.get(world, bodyId, 'body')\r\n}\r\n\r\nexport const getPlayerComposite = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { compositeId } } } = getState()\r\n\treturn Composite.get(world, compositeId, 'composite')\r\n}\r\n\r\nexport function setUpPixi(elementId) {\r\n\tlet app = new PIXI.Application({\r\n\t\twidth,\r\n\t\theight,\r\n\t\tantialias: false,\r\n    resolution: 1\r\n\t})\r\n\tPIXI.settings.ROUND_PIXELS = true;\r\n\tdocument.getElementById(elementId).appendChild(app.view)\r\n\t// app.view.style.opacity = .85\r\n\r\n\treturn {\r\n\t\tapp,\r\n\t\tloader: new PIXI.Loader()\r\n\t}\r\n\r\n}\r\n\r\nexport function setUpMatter(elementId, mouseConstraintBool) {\r\n\t// create engine\r\n\tlet engine = Engine.create()\r\n\tlet world = engine.world\r\n\tworld.bounds = {\r\n\t\tmin: { x: -worldWidth, y: height * -2 },\r\n\t\tmax: { x: worldWidth, y: height * 1.5 }\r\n\t}\r\n\r\n\t// create renderer\r\n\tlet render = Render.create({\r\n\t\t\telement: document.getElementById(elementId),\r\n\t\t\tengine: engine,\r\n\t\t\toptions: {\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tpixelRatio: .5\r\n\t\t\t}\r\n\t})\r\n\tRender.run(render)\r\n\r\n\t// Render.lookAt(render, {\r\n\t// \tmin: { x: 0, y: 0 },\r\n\t// \tmax: { x: width, y: height }\r\n\t// })\r\n\r\n\t// create runner\r\n\tlet runner = Runner.create()\r\n\tRunner.run(runner, engine)\r\n\r\n\tif (mouseConstraintBool) {\r\n\t\tlet mouse = Mouse.create(render.canvas)\r\n\t\tlet\tmouseConstraint = MouseConstraint.create(engine, {\r\n\t\t\tmouse: mouse,\r\n\t\t\tconstraint: {\r\n\t\t\t\tstiffness: 0.2,\r\n\t\t\t\trender: {\r\n\t\t\t\t\tvisible: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tWorld.add(world, mouseConstraint)\r\n\t\t// keep the mouse in sync with rendering\r\n\t\trender.mouse = mouse\r\n\t}\r\n\r\n\t// World.add(world, Bodies.rectangle(0,0,20,20))\r\n\r\n\treturn {\r\n\t\tengine,\r\n\t\trender,\r\n\t\trunner,\r\n\t\tworld,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tworldWidth\r\n\t\t// mouse,\r\n\t\t// mouseConstraint\r\n\t}\r\n\r\n}\r\n","export const GREATER_THAN_PLAYER_X_POS = 'greater than player x position'\r\nexport const GREATER_THAN_PLAYER_Y_POS = 'greater than player y position'\r\nexport const LESS_THAN_PLAYER_X_POS = 'less than player x position'\r\nexport const LESS_THAN_PLAYER_Y_POS = 'less than player y position'\r\nexport const MOUSE_UP = 'mouse up'\r\nexport const MOUSE_DOWN = 'mouse down'\r\n","export const playerCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const enemyCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n\r\nexport const itemCollisionOptions = {\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const gibCollisionOptions = {\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbottom: 0;\r\nmargin: auto;\r\ndisplay: block;\r\nposition: absolute;\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : 'none' };\r\n`\r\n\r\nconst Backing = styled.div`\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nopacity: ${ props => props.opacity ? props.opacity : .5 };\r\nbackground-color: ${ props => props.bgcolor ? props.bgcolor : '#222' };\r\n`\r\n\r\nconst MenuTitle = styled.div`\r\nleft: 0;\r\nright: 0;\r\ntop: 20px;\r\nwidth: 300px;\r\nmargin: auto;\r\ndisplay: block;\r\nfont-size: 2em;\r\ntext-align: center;\r\nposition: absolute;\r\n`\r\n\r\nconst MenuButtonContainer = styled.div`\r\ntop: ${ props => props['space-top'] ? props['space-top'] : 80 }px;\r\nfont-size: 1.5em;\r\ntext-align: center;\r\nposition: absolute;\r\nwidth: 100%;\r\n`\r\n\r\nconst MenuButton = styled.div`\r\nopacity: ${ props => props['opacity'] ? props['opacity'] : 1 }\r\ncolor: #fff;\r\nposition: relative;\r\nwidth: ${ props => props['width'] ? props['width'] : 200}px;\r\nheight: ${ props => props['height'] ? props['height'] : 60 }px;\r\nline-height: ${ props => props['height'] ? props['height'] : 60 }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : '#00589b' };\r\nleft: 0; right: 0;\r\ncursor: pointer;\r\nmargin: auto;\r\nborder: 2px solid ${ props => props['bordercolor'] ? props['bordercolor'] : 'rgba(0,0,0,0)' };\r\ntransform: scale(1.00);\r\n&:hover {\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transition: all .35s' };\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transform: scale(1.05)' };\r\n  background-color: ${ props => props['hovercolor'] };\r\n  border: 2px solid ${ props => props['hoverborder'] ? props['hoverborder'] : 'rgba(0,0,0,0)' };\r\n}\r\n`\r\n\r\nconst MenuButtonSpacer = styled.div`\r\npadding: ${ props => props['padding'] ? props['padding'] : 10 }px;\r\n`\r\n\r\nexport default {\r\n  Container,\r\n  Backing, \r\n  MenuTitle,\r\n  MenuButtonContainer,\r\n  MenuButton,\r\n  MenuButtonSpacer\r\n}\r\n","import { increaseScore, decreaseScore, updatePrevScore, flipScoreToggle } from '../gameSlice'\r\nimport store from '../../../app/store'\r\n\r\n\r\nexport const updateScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( increaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n\r\nexport const subtractScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( decreaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n","import React, { Children } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { showLaserSight, gameStateTransition, incrementWave, subtractFromTotalCredits, addPurchase, addToTotalAmmo,\r\n  upgradeRunSpeed, upgradeReloadSpeed, upgradeJumpForce, upgradeDefense, upgradeMelee, attachMod, setWeaponEquipped,\r\n  updateWeaponsList, setPlayerMagnetism, setPlayerMagDamage, setPlayerLastBullet, setPlayerCreditDropper,\r\n  setPlayerAmmoDropper, \r\n  setPlayerHealthDropper,\r\n  setPlayerQuickTurret,\r\n  setPlayerBarrierPlus,\r\n  setPlayerFusterCluck,\r\n  setAchievementOwned,\r\n  AchievementDefs} from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_GRENADE, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButton, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const Inline = styled.div`\r\ndisplay: inline-block;\r\nvertical-align: top;\r\nmargin-right: 4px;\r\n`\r\n\r\nconst IncrementDecrement = styled.div`\r\ntop: 0;\r\nwidth: 30px;\r\nheight: 30px;\r\ncolor: darkgreen;\r\nline-height: 30px;\r\ntext-align: center;\r\nposition: absolute;\r\nbackground-color: #ccc;\r\nleft: ${ props => props['left'] ? 0 : 'auto' };\r\nright: ${ props => props['right'] ? 0 : 'auto' };\r\ntransform: scale(1.0);\r\n&:hover {\r\n  transition: all;\r\n  transform: scale(1.05);\r\n  background-color: #fff;\r\n}\r\n`\r\n\r\nconst AmmoCount = styled.div`\r\ncolor: #FFF;\r\ntext-align: center;\r\n`\r\n\r\nconst UPGRADE_SUB_MENU = ' upgrade sub menu'\r\nconst PERKS_MENU = 'perks menu'\r\nconst STANDARD_MENU = 'standard menu'\r\nconst AMMO_MENU = 'ammo menu'\r\nconst HEALTHKIT_MENU = 'healthkit menu'\r\nconst BUY_NEW_WEAPONS_MENU = 'buy weapons menu'\r\nconst WEAPON_MODS_MENU = 'weapon mods menu'\r\nconst PISTOL_MODS_SUBMENU = 'pistol mods submenu'\r\nconst SMG_MODS_SUBMENU = 'smg mods submenu'\r\nconst SHOTGUN_MODS_SUBMENU = 'shotgun mods submenu'\r\nconst PLAYER_ATTRIBUTES_MENU = 'player attributes menu'\r\nconst DEFAULT_SUBMENU = 'none - default'\r\nconst PISTOL_AMMO_SUBMENU = 'pistol ammunition submenu'\r\nconst SMG_AMMO_SUBMENU = 'smg ammunition submenu'\r\nconst SHOTGUN_AMMO_SUBMENU = 'shotgun ammunition submenu'\r\nconst GRENADES_AMMO_SUBMENU = 'grenades submenu'\r\nconst ATTR_RUN_SPEED = 'run'\r\nconst ATTR_RELOAD_SPEED = 'reload'\r\nconst ATTR_JUMP_FORCE = 'jump'\r\nconst ATTR_DEFENSE = 'defense'\r\nconst ATTR_MELEE = 'melee'\r\n\r\nexport const CustomMenuButton = (props) => (\r\n  <MenuButton\r\n  opacity={ props && props.opacity ? props.opacity : 1 }\r\n  bgcolor={ props && props.bgcolor ? props.bgcolor : '#222' }\r\n  bordercolor={ props && props.bordercolor ? props.bordercolor : '#333' }\r\n  hovercolor={ props && props.hovercolor ? props.hovercolor : '#333' }\r\n  hoverborder={ props && props.hoverborder ? props.hoverborder : '#fff' }\r\n  width={ props.width }\r\n  height={ props.height }\r\n  style={ props.style }\r\n  cancelTransition={ props && props.cancelTransition ? props.cancelTransition : false }\r\n  onClick={ () => {\r\n    if (props.onClick) {\r\n      props.onClick()\r\n      let snd = window.gameObjects.getKeyValue('button-click-sound')\r\n      snd.play()\r\n    }\r\n  }}\r\n  onMouseOver={() => {\r\n    if (!props.cancelTransition) {\r\n      // let snd = window.gameObjects.getKeyValue('button-hover-sound')\r\n      // snd.play()\r\n    }\r\n  }}\r\n  >\r\n    { props.children }\r\n  </MenuButton>\r\n)\r\n\r\nexport const BackButton = props => (\r\n  <CustomMenuButton\r\n  width={ props.width ? props.width : 120 }\r\n  height={ 40 }\r\n  style={{ borderRadius: '10px' }}\r\n  bgcolor={ '#444' }\r\n  hovercolor={ '#189969' }\r\n  onClick={ props.onClick }\r\n  >\r\n    {\r\n      props.arrowOnly ?\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0;\r\n        </span>\r\n      :\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0; Back\r\n        </span>\r\n    }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const CornerBackButton = (props) => (\r\n  <div\r\n  style={{\r\n    top: 0,\r\n    right: props.right ? props.right : '20px',\r\n    marginTop: props.marginTop ? props.marginTop : '-40px',\r\n    position: 'absolute'\r\n  }}>\r\n      <BackButton\r\n      onClick={ props.onClick }\r\n      width={ props.width ? props.width : 120 }\r\n      arrowOnly={ props.arrowOnly ? props.arrowOnly : false }\r\n      />\r\n  </div>\r\n)\r\n\r\nfunction Modal ({ label, labelClr, width, height, clickConfirmHandler, clickCancelHandler }) {\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ top: '150px' }} width={ width ? width : 500 } height={ height ? height : 300 }>\r\n        <Backing\r\n        width={ width ? width : 500 }\r\n        height={ height ? height : 300 }\r\n        bgcolor={ '#222' }\r\n        opacity={ 1.0 }\r\n        style={{\r\n          borderRadius: '2px',\r\n          boxShadow: '5px 5px rgba(0, 0, 0, 0.2)'\r\n        }}\r\n        />\r\n        <MenuTitle style={{ fontSize: '1.2em' }}>\r\n          <span\r\n          style={{\r\n            color: labelClr\r\n          }}>\r\n          {\r\n            label\r\n          }\r\n          </span>\r\n        </MenuTitle>\r\n        <MenuButtonContainer space-top={ 200 }>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ 'red' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              marginRight: '12px',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickCancelHandler}>\r\n            Nope.\r\n          </MenuButton>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ '#189969' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickConfirmHandler}>\r\n            Confirm\r\n          </MenuButton>\r\n        </MenuButtonContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction AmmoSubMenu ({ type, toDefaultSubMenu, toAmmoSubMenu, toStandardMenu }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const ammoCostPerBox = useSelector(state => state.game.player.weapons.ammoCostPerBox)\r\n  const ammoCap = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const ammoReducer = (ammo, action) => {\r\n    switch (action.type) {\r\n      case 'INCREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] + action.amount\r\n        }\r\n      case 'DECREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] - action.amount\r\n        }\r\n      case 'SET':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: action.amount\r\n        }\r\n      default:\r\n        return ammo\r\n    }\r\n  }\r\n  const [ammoInCart, dispatchAmmoInCart] = React.useReducer(ammoReducer, {\r\n    'pistol weapon': 0,\r\n    'smg weapon': 0,\r\n    'grenades': 0,\r\n    'shotgun weapon': 0\r\n  })\r\n  const [dollarCost, setDollarCost] = React.useState(0)\r\n\r\n  return (\r\n    <>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={ '#28934C' }\r\n        width={100}\r\n        height={30}\r\n        style={{\r\n          borderRadius: '4px',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        { `$${ dollarCost }` }\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        width={150}\r\n        height={ 30 }\r\n        bgcolor={ '#444' }\r\n      >\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] - ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (ammoInCart[type] > 0) {\r\n              dispatchAmmoInCart({ type: 'DECREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-subtract-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          left={true}>\r\n            <span style={{ fontWeight: 'bold' }}>-</span>\r\n        </IncrementDecrement>\r\n        <AmmoCount>{ ammoInCart[type] }</AmmoCount>\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] + ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (credits >= cost) {\r\n              dispatchAmmoInCart({ type: 'INCREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-add-sound')\r\n              snd.play()\r\n            } else {\r\n              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          right={true}>\r\n            <span style={{ fontWeight: 'bold' }}>+</span>\r\n         </IncrementDecrement>\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={'rgba(0,0,0,0)'}\r\n        height={30}\r\n        >\r\n          <div style={{ display: 'inline-block', marginRight: '4px' }}>\r\n            <CustomMenuButton\r\n              onClick={ () => {\r\n                toDefaultSubMenu()\r\n                dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                setDollarCost(0)\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }}\r\n              width={80}\r\n              height={30}\r\n              hoverborder={'#B00000'}\r\n              >\r\n              Cancel\r\n            </CustomMenuButton>\r\n          </div>\r\n          <div style={{ display: 'inline-block' }}>\r\n            {\r\n              dollarCost > 0 ?\r\n              <CustomMenuButton\r\n                onClick={ () => {\r\n                  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n                  dispatch( subtractFromTotalCredits( dollarCost ) )\r\n                  dispatch( addPurchase(type !== WEAPON_TYPE_GRENADE ? `${type} ammo` : dollarCost > ammoCostPerBox[type] ? type : 'a grenade', dollarCost) )\r\n                  dispatch( addToTotalAmmo( type, ammoInCart[type] ) )\r\n                  dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                  if (type === WEAPON_TYPE_GRENADE) {\r\n                    weaponsUI.updateGrenadeIcons()\r\n                  } else {\r\n                    weaponsUI.select(type)\r\n                    dispatch( setWeaponEquipped(type) )\r\n                    weaponsUI.reload(true)\r\n                  }\r\n                  setDollarCost(0)\r\n                  toDefaultSubMenu()\r\n                }}\r\n                width={100}\r\n                height={30}\r\n                hoverborder={'#189969'}\r\n                >\r\n                Buy\r\n              </CustomMenuButton>\r\n              : null\r\n            }\r\n          </div>\r\n      </MenuButton>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PlayerAttributesMenuButton = ({ type, toDefaultSubMenu, subMenuType, setSubMenuType, toStandardMenu }) => {\r\n\r\n  const upgradeTiers = useSelector(state => state.game.player.upgradeTiers)\r\n  const upgradeCosts = useSelector(state => state.game.player.upgradeCosts)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const dispatch = useDispatch()\r\n  const upgradeTypes = {\r\n    'run': upgradeRunSpeed,\r\n    'jump': upgradeJumpForce,\r\n    'reload': upgradeReloadSpeed,\r\n    'defense': upgradeDefense,\r\n    'melee': upgradeMelee\r\n  }\r\n  const getAttrName = type => {\r\n    switch (type) {\r\n      case 'run':\r\n        return 'Run Speed'\r\n        break;\r\n      case 'jump':\r\n        return 'Jump Height'\r\n        break;\r\n      case 'reload':\r\n        return 'Reload Speed'\r\n        break;\r\n      case 'defense':\r\n        return 'Defense'\r\n        break;\r\n      case 'melee':\r\n        return 'Melee Attack Power'\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n      {\r\n        subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1\r\n        ?\r\n          subMenuType === type + UPGRADE_SUB_MENU\r\n          ?\r\n            <Modal\r\n              label={`Upgrade ${ getAttrName(type) } to lvl. ${ upgradeTiers[type].current + 1 }?`}\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( upgradeCosts[type] ) )\r\n                dispatch( addPurchase(`${getAttrName(type)} Boost`, upgradeCosts[type]) )\r\n                dispatch( upgradeTypes[type]() )\r\n                toDefaultSubMenu()\r\n              }}\r\n              clickCancelHandler={() => {\r\n                toDefaultSubMenu()\r\n              }}\r\n              />\r\n          : null\r\n        :\r\n        <>\r\n          <CustomMenuButton\r\n            width={getAttrName(type).length > 14 ? 340 : 240 }\r\n            onClick={() => {\r\n              if (credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max) {\r\n                setSubMenuType( type + UPGRADE_SUB_MENU )\r\n              } else {\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }\r\n            }}>\r\n            { getAttrName(type) } { upgradeTiers[type].current !== upgradeTiers[type].max ? 'Lvl.' : '' }{ upgradeTiers[type].current !== upgradeTiers[type].max ? upgradeTiers[type].current + 1 : '' } - <span style={{ color: credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max ? '#189969' : 'red' }}>\r\n            {\r\n              upgradeTiers[type].current < upgradeTiers[type].max\r\n              ? `$${upgradeCosts[type]}`\r\n              : 'MAXED'\r\n            }</span>\r\n          </CustomMenuButton>\r\n          <br/>\r\n        </>\r\n      }\r\n  </>\r\n  )\r\n}\r\n\r\nfunction ModSubMenu ({ type, setSubMenuType }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const modTiers = useSelector(state => state.game.player.modTiers)\r\n  const modCosts = useSelector(state => state.game.player.modCosts)\r\n  const ammoCapacity = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const getWepText = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        return 'Pistol'\r\n      case WEAPON_TYPE_SMG:\r\n        return 'SMG'\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        return 'SHOTGUN'\r\n      default:\r\n    }\r\n  }\r\n  let wepTxt = getWepText(type)\r\n  const getModDescription = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'RATE OF FIRE MAXED!' : 'Upgrade Rate-of-Fire'\r\n      case 'powder':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'FIREPOWER MAXED!' : 'Increase Firepower'\r\n      case 'sight':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'ACCURACY MAXED!' : 'Upgrade Accuracy'\r\n      case 'mag':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'AMMO CAP MAXED!' : 'Increase Ammo Capacity'\r\n      default:\r\n    }\r\n  }\r\n  const mods = ['rof', 'powder', 'sight', 'mag']\r\n  const [selectedMod, setSelectedMod] = React.useState(null)\r\n  const [selectedType, setSelectedType] = React.useState(null)\r\n  const modPurchaseName = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return `Rate of fire boost for the ${type}`\r\n      case 'powder':\r\n        return `Firepower boost for the ${type}`\r\n      case 'sight':\r\n        return `Accuracy boost for the ${type}`\r\n      case 'mag':\r\n        return `Magazine ammo capacity boost for the ${type}`\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Inline style={{ marginLeft: '40px' }}>\r\n        {\r\n          selectedMod && selectedType ?\r\n          <>\r\n            <Modal\r\n              label={`${getWepText(selectedType)} ${ getModDescription(selectedMod, selectedType) } lvl.${ modTiers[selectedMod][selectedType].current + 1 }?`}\r\n              labelClr={ modTiers[selectedMod][selectedType].current === modTiers[selectedMod][selectedType].max ? 'red' : 'white' }\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( modCosts[selectedMod][selectedType] ) )\r\n                dispatch( addPurchase(modPurchaseName(selectedMod, selectedType), modCosts[selectedMod][selectedType]) )\r\n                dispatch( attachMod(selectedMod, selectedType) )\r\n                if (selectedMod === 'mag') {\r\n                  dispatch( addToTotalAmmo(selectedType, ammoCapacity[selectedType]) )\r\n                  let wepUI = gameObjects.getKeyValue('weapons-ui')\r\n                  wepUI.updateWeaponMagazines(selectedType)\r\n                }\r\n                if (selectedMod === 'sight') {\r\n                  dispatch( showLaserSight(selectedType) )\r\n                }\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n              clickCancelHandler={() => {\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n            />\r\n          </>\r\n          :\r\n          mods.map((mod, i) => (\r\n            <React.Fragment key={i}>\r\n              <CustomMenuButton onClick={() => {\r\n                if (credits >= modCosts[mod][type] && modTiers[mod][type].current < modTiers[mod][type].max) {\r\n                  setSelectedMod(mod)\r\n                  setSelectedType(type)\r\n                } else {\r\n                  let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                  snd.play()\r\n                }\r\n              }} width={520}>{wepTxt}: {getModDescription(mod, type)} { modTiers[mod][type].current === modTiers[mod][type].max ? '' : ' - lvl.' } { modTiers[mod][type].current < modTiers[mod][type].max ? modTiers[mod][type].current + 1 : '' }{ modTiers[mod][type].current < modTiers[mod][type].max ? '-' : '' }<span style={{ color: credits >= modCosts[mod][type] && modTiers[mod][type].current !== modTiers[mod][type].max ? '#189969' : 'red' }}>\r\n                {`\r\n                  ${\r\n                    modTiers[mod][type].current === modTiers[mod][type].max ?\r\n                    '' : `$${ modCosts[mod][type] }`\r\n                  }`\r\n                }\r\n                </span>\r\n              </CustomMenuButton>\r\n              <br/>\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </Inline>\r\n      {\r\n        !selectedMod && !selectedType ?\r\n        <Inline>\r\n          <CustomMenuButton\r\n          onClick={ () => { setSubMenuType(DEFAULT_SUBMENU) }}\r\n          width={80}\r\n          height={30}\r\n          hoverborder={'red'}\r\n          style={{\r\n            marginLeft: '10px'\r\n          }}\r\n          >\r\n            close\r\n          </CustomMenuButton>\r\n        </Inline>\r\n        : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ShopMenu () {\r\n\r\n  const [menuType, setMenuType] = React.useState(STANDARD_MENU)\r\n  const [subMenuType, setSubMenuType] = React.useState(DEFAULT_SUBMENU)\r\n\r\n  const dispatch = useDispatch()\r\n  const game = useSelector(state => state.game)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const { gameObjects } = window\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const player = gameObjects.getKeyValue('player')\r\n\r\n  const continueToNextWave = () => {\r\n    screenUI.unpause()\r\n    dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  }\r\n\r\n  const toDefaultSubMenu = () => {\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const toAmmoMenu = () => {\r\n    setMenuType( AMMO_MENU )\r\n  }\r\n  \r\n  const toHealthkitMenu = () => {\r\n    setMenuType( HEALTHKIT_MENU )\r\n  }\r\n\r\n  const toPlayerAttrMenu = () => {\r\n    setMenuType( PLAYER_ATTRIBUTES_MENU )\r\n  }\r\n\r\n  const backToStandardMenu = () => {\r\n    setMenuType( STANDARD_MENU )\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const openAmmoSubMenu = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        setSubMenuType( PISTOL_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SMG:\r\n        setSubMenuType( SMG_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        setSubMenuType( SHOTGUN_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_GRENADE:\r\n        setSubMenuType( GRENADES_AMMO_SUBMENU )\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  const toWeaponModsMenu = () => {\r\n    setMenuType( WEAPON_MODS_MENU )\r\n  }\r\n\r\n  const toNewWeaponsMenu = () => {\r\n    setMenuType( BUY_NEW_WEAPONS_MENU )\r\n  }\r\n\r\n  const getHealthkitCostStyle = (kitType) => {\r\n    let condition = (\r\n      game.player.credits > game.consumables.healthkit[kitType].cost &&\r\n      game.player.health < 100\r\n    )\r\n    return {\r\n      color: condition ? '#189969' : 'red',\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (menuType === BUY_NEW_WEAPONS_MENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1) {\r\n      dispatch(\r\n        setAchievementOwned( AchievementDefs.WEAPONS_EXPERT )\r\n      )\r\n      updateScore( game.scoreAmounts.achievement )\r\n      backToStandardMenu()\r\n    }\r\n\r\n  }, [ game.player.weapons.list, menuType ])\r\n\r\n  React.useEffect(() => {\r\n\r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.PISTOL_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SMG].current === game.player.modTiers['rof'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SMG].current === game.player.modTiers['powder'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SMG].current === game.player.modTiers['sight'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SMG].current === game.player.modTiers['mag'][WEAPON_TYPE_SMG].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SMG_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SHOTGUN_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n      if (\r\n        game.achievements[ AchievementDefs.PISTOL_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SMG_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SHOTGUN_MODDER ].owned\r\n        ) {\r\n          dispatch(\r\n            setAchievementOwned( AchievementDefs.MOD_AFICIONADO )\r\n          )\r\n          updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n  }, [ game.player.modTiers ])\r\n\r\n  return (\r\n    <>\r\n      <Container width={ w * .75 } height={ h * .75 }>\r\n          <Backing width={ w * .75 } height={ h * .75 }/>\r\n          <MenuTitle>Shop</MenuTitle>\r\n          <MenuButtonContainer width={ w }>\r\n            {\r\n              menuType === STANDARD_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton width={350} onClick={ () => { toAmmoMenu() } }>Buy Ammo &amp; Grenades</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toHealthkitMenu() } }>Buy Health Kits</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { setMenuType(PERKS_MENU) } }>Perks</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toPlayerAttrMenu() } }>Upgrade Player</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toWeaponModsMenu() } }>Weapon Mods</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    null\r\n                    :\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={ () => { toNewWeaponsMenu() } }>Buy New Weapons</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ backToShopQuery }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === AMMO_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === PISTOL_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_PISTOL }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_PISTOL) } }>\r\n                          Buy Pistol Ammo\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SMG_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SMG }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SMG) } }>\r\n                            Buy SMG Ammo\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === GRENADES_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_GRENADE }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_GRENADE) } }>\r\n                          Buy Grenades\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SHOTGUN_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SHOTGUN }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SHOTGUN) } }>\r\n                            Buy Shotgun Shells\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton\r\n                    onClick={ () => { backToStandardMenu() } }>\r\n                  </BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === HEALTHKIT_MENU ?\r\n              <>\r\n              <MenuButtonSpacer>\r\n                <Inline>\r\n                  <MenuButtonSpacer>\r\n                    <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={() => {\r\n                        let amount\r\n                        if (game.player.health < 100) {\r\n                          if (game.player.health + 20 > 100) { amount = 100 }\r\n                          else { amount = game.player.health + 20 }\r\n                          player.acceptHealth( amount )\r\n                          dispatch( subtractFromTotalCredits(game.consumables.healthkit['20'].cost) )\r\n                          dispatch( addPurchase('+20 Healthkit', game.consumables.healthkit['20'].cost) )\r\n                          let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                          snd.play()\r\n                        } else {\r\n                          let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                          snd.play()\r\n                        }\r\n                      }}>+20 Healthkit - <span\r\n                      style={ getHealthkitCostStyle('20') }\r\n                      >\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['20'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                        width={ 300 }\r\n                        onClick={() => {\r\n                          let amount\r\n                          if (game.player.health < 100) {\r\n                            if (game.player.health + 50 > 100) { amount = 100 }\r\n                            else { amount = game.player.health + 50 }\r\n                            player.acceptHealth( amount )\r\n                            dispatch( subtractFromTotalCredits(game.consumables.healthkit['50'].cost) )\r\n                            dispatch( addPurchase('+50 Healthkit', game.consumables.healthkit['50'].cost) )\r\n                            let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                            snd.play()\r\n                          } else {\r\n                            let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>+50 Healthkit - <span\r\n                        style={ getHealthkitCostStyle('50') }>\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['50'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <CustomMenuButton\r\n                    width={ 300 }\r\n                    onClick={() => {\r\n                      if (game.player.health < 100) {\r\n                        player.acceptHealth( 100 )\r\n                        dispatch( subtractFromTotalCredits(game.consumables.healthkit['full'].cost) )\r\n                        dispatch( addPurchase('Full Healthkit', game.consumables.healthkit['full'].cost) )\r\n                      let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                        snd.play()\r\n                      } else {\r\n                        let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                        snd.play()\r\n                      }\r\n                    }}>Full Healthkit - <span\r\n                    style={ getHealthkitCostStyle('full') }>\r\n                    { game.player.health < 100 ? `${game.consumables.healthkit['full'].cost}` : 'Health Full' }\r\n                    </span>\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ () => { backToStandardMenu() } }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PLAYER_ATTRIBUTES_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RUN_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_JUMP_FORCE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RELOAD_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_DEFENSE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_MELEE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1 ? null                  \r\n                    :\r\n                    <MenuButtonSpacer>\r\n                      <BackButton\r\n                        onClick={ () => {\r\n                          backToStandardMenu()\r\n                        }}>\r\n                          Back\r\n                      </BackButton>\r\n                    </MenuButtonSpacer>\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PERKS_MENU ?\r\n              <>\r\n                <div\r\n                onClick={() => {\r\n                  setMenuType(STANDARD_MENU)\r\n                }}\r\n                style={{\r\n                  top: 0,\r\n                  right: '20px',\r\n                  marginTop: '-40px',\r\n                  position: 'absolute'\r\n                }}>\r\n                  <BackButton\r\n                  width={50}\r\n                  arrowOnly={true}\r\n                  />\r\n                </div>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['magnetism'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='increase-magnetism'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magnetism'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magnetism'].cost) )\r\n                            dispatch( setPlayerMagnetism(1200, 4) )\r\n                            dispatch( addPurchase('Magnetism perk', game.player.perks['magnetism'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Increase Magnetism\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magnetism'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magnetism'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='increase-magnetism' type='dark'>\r\n                        <span>\r\n                          Will increase the effect of items being drawn to you for easy pick up\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['magDmg'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='mag-damage'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magDmg'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magDmg'].cost) )\r\n                            dispatch( setPlayerMagDamage() )\r\n                            dispatch( addPurchase('Mag Damage perk', game.player.perks['magDmg'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Magazine Damage\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magDmg'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magDmg'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='mag-damage' type='dark'>\r\n                        <span>\r\n                          Ejected magazines will damage enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['lastBullet'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='last-bullet'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['lastBullet'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['lastBullet'].cost) )\r\n                            dispatch( setPlayerLastBullet() )\r\n                            dispatch( addPurchase('Last Bullet Extra Damage perk', game.player.perks['lastBullet'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Last Round\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['lastBullet'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['lastBullet'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='last-bullet' type='dark'>\r\n                        <span>\r\n                          Last bullet fired will cause greater damage to enemies \r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['creditDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='credit-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['creditDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['creditDropper'].cost) )\r\n                            dispatch( setPlayerCreditDropper() )\r\n                            dispatch( addPurchase('Credit Dropper perk', game.player.perks['creditDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Credit Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['creditDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['creditDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='credit-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will drop more credits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['ammoDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='ammo-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['ammoDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['ammoDropper'].cost) )\r\n                            dispatch( setPlayerAmmoDropper() )\r\n                            dispatch( addPurchase('Ammo Dropper perk', game.player.perks['ammoDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Ammo Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['ammoDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['ammoDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='ammo-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop ammunition\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['healthDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='health-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['healthDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['healthDropper'].cost) )\r\n                            dispatch( setPlayerHealthDropper() )\r\n                            dispatch( addPurchase('Health Dropper perk', game.player.perks['healthDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Health Dropper\r\n                          <span\r\n                              style={{\r\n                                color: (\r\n                                  credits >= game.player.perks['healthDropper'].cost ? 'green' : 'red'\r\n                                )\r\n                              }}>\r\n                                &nbsp;${game.player.perks['healthDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='health-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop small health kits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['quickTurret'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='quick-turret'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['quickTurret'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['quickTurret'].cost) )\r\n                            dispatch( setPlayerQuickTurret() )\r\n                            dispatch( addPurchase('Turret Upgrade perk', game.player.perks['quickTurret'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Quick Turrets\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['quickTurret'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['quickTurret'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='quick-turret' type='dark'>\r\n                        <span>\r\n                          Any placed machine gun turrets will now have less delay between fired shots and slightly more range\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['barrierPlus'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='barrier-plus'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['barrierPlus'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['barrierPlus'].cost) )\r\n                            dispatch( setPlayerBarrierPlus() )\r\n                            dispatch( addPurchase('Barrier Plus+ perk', game.player.perks['barrierPlus'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Barrier Plus\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['barrierPlus'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['barrierPlus'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='barrier-plus' type='dark'>\r\n                        <span>\r\n                          Placed barriers will now have increased strength to ward of oncoming enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['cluck'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='big-cluster'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['cluck'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['cluck'].cost) )\r\n                            dispatch( setPlayerFusterCluck() )\r\n                            dispatch( addPurchase('Fuster Cluck perk', game.player.perks['cluck'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Fuster Cluck\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['cluck'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['cluck'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='big-cluster' type='dark'>\r\n                        <span>\r\n                          Cluster bombs will now expel more explosives\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === BUY_NEW_WEAPONS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                            if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) {\r\n                              batch(() => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) )\r\n                                dispatch(\r\n                                  addPurchase('Submachine Gun', game.player.weapons.buyWeapons[WEAPON_TYPE_SMG])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SMG) )\r\n                              })\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                         Buy Submachine Gun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                          if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) {\r\n                            batch(\r\n                              () => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) )\r\n                                dispatch(\r\n                                  addPurchase('Shotgun', game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SHOTGUN) )\r\n                              }\r\n                              )\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                        Buy Shotgun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={() => { backToStandardMenu() }} />\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === WEAPON_MODS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer style={{ marginTop: '-15px' }}>\r\n                  {\r\n                    subMenuType === PISTOL_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_PISTOL} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SMG_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SMG} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SHOTGUN_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SHOTGUN} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === DEFAULT_SUBMENU ?\r\n                    <>\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={() => { setSubMenuType(PISTOL_MODS_SUBMENU) }}>Pistol Mods</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                      {\r\n                         game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SMG_MODS_SUBMENU) }}>SMG Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null \r\n                      }\r\n                      {\r\n                        game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SHOTGUN_MODS_SUBMENU) }}>Shotgun Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null\r\n                      }\r\n                      <MenuButtonSpacer style={{ marginTop: '40px' }}>\r\n                        <BackButton onClick={ backToStandardMenu }>Back</BackButton>\r\n                      </MenuButtonSpacer>\r\n                    </>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n          </MenuButtonContainer>\r\n        </Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport MenuComponents from './MenuComponents'\r\nimport { BackButton, CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\n\r\nexport default ({ backBtnFn }) => {\r\n\r\n  const { gameObjects } = window\r\n  const state = useSelector(state => state)\r\n  let achievementsKeys = Object.keys(state.game.achievements)\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container\r\n      width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n      height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n      >\r\n        <MenuComponents.Backing\r\n        width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n        height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n        ></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>Achievements</MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n            {\r\n              achievementsKeys.map(key => {\r\n                if (state.game.achievements[key].owned) {\r\n                  return (\r\n                    <React.Fragment key={key}>\r\n                    <Inline>\r\n                      <MenuComponents.MenuButtonSpacer data-tip data-for={key+'-description'}>\r\n                        <CustomMenuButton>\r\n                          {key}\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                    <ReactTooltip id={key+'-description'}>\r\n                      <span>\r\n                        Earned by: {state.game.achievements[key].description}\r\n                      </span>\r\n                    </ReactTooltip>\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n          <CornerBackButton marginTop={'-60px'} onClick={ backBtnFn } />\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport { decrementWave, gameStateTransition, setWaveCountToDefeat, toggleZombieHealthDisplay, toggleFilterEffects, setZombiesOnStage, StatsDefs } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport store from '../../../app/store'\r\nimport { CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { Children } from 'react'\r\nimport { batch, useDispatch, useSelector } from 'react-redux'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport updateScore from '../utils/updateScore'\r\nimport AchievementsView from './AchievementsView'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const resetWave = () => {\r\n  const screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  const player = window.gameObjects.getKeyValue('player')\r\n  // remove existing zombies, if any\r\n  let zombies = window.gameObjects.getKeyValue('zombies')\r\n  while(zombies.length > 0) {\r\n    zombies.forEach(z => { z.kill(null, true) })\r\n  }\r\n  window.gameObjects.setKeyValue('zombies', [])\r\n  screenUI.unpause()\r\n  if (player.dead) {\r\n    screenUI.respawn()\r\n  }\r\n}\r\n\r\nexport const gotoMainMenu = () => {\r\n  const dispatch = store.dispatch\r\n  resetWave()\r\n  batch(() => {\r\n    dispatch( setZombiesOnStage(0) )\r\n    dispatch( setWaveCountToDefeat(null) )\r\n    dispatch(gameStateTransition('sub', store.getState().game.gameSubState, SubStates.NEUTRAL))\r\n    dispatch( gameStateTransition('main', store.getState().game.gameState, GameStates.MAIN_MENU))\r\n  })\r\n}\r\n\r\nexport const NoTransitionButton = ({ bgcolor, bordercolor, hoverborder, hovercolor, width, height, children }) => (\r\n  <CustomMenuButton\r\n  onMouseOver={ null }\r\n  width={ width ? width : '200px' }\r\n  height={ height ? height : '60px' }\r\n  hovercolor={ hovercolor ? hovercolor : '#222' }\r\n  hoverborder={ hoverborder ? hoverborder : '#333' }\r\n  bordercolor={ bordercolor ? bordercolor : '#333' }\r\n  bgcolor={ bgcolor ? bgcolor : '#222' }\r\n  cancelTransition={true}\r\n  >\r\n    { children }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const Stat = ({ label, stat }) => {\r\n  return (\r\n    <MenuButtonSpacer padding={ 1 }>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 200 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { label }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 400 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.4)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.5)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { stat }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n    </MenuButtonSpacer>\r\n  )\r\n}\r\n\r\nexport default function PauseMenu (props) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const stats = useSelector(state => state.game.stats)\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const pauseMenuStates = {\r\n    DEFAULT: 'Default',\r\n    ACHIEVEMENTS: 'achievements',\r\n    CONTROLS: 'Controls',\r\n    OPTIONS: 'Options',\r\n    STATS: 'Stats',\r\n  }\r\n\r\n  const showControls = () => {\r\n    setPauseMenuState(pauseMenuStates.CONTROLS)\r\n  }\r\n\r\n  const showOptions = () => {\r\n    setPauseMenuState(pauseMenuStates.OPTIONS)\r\n  }\r\n\r\n  const showDefault = () => {\r\n    setPauseMenuState(pauseMenuStates.DEFAULT)\r\n  }\r\n\r\n  const seeScoreboard = () => {\r\n    dispatch(\r\n      gameStateTransition('main', GameStates.MAIN_MENU, GameStates.SCORES_VIEW)\r\n    )\r\n  }\r\n\r\n  const showStats = () => {\r\n    setPauseMenuState(pauseMenuStates.STATS)\r\n  }\r\n\r\n  const [pauseMenuState, setPauseMenuState] = React.useState(pauseMenuStates.DEFAULT)\r\n\r\n  const resumeGame = () => { window.gameObjects.getKeyValue('screen-ui').togglePause() }\r\n\r\n  const playGame = () => {\r\n    dispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n    dispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n  }\r\n\r\n  const showAchievements = () => {\r\n    setPauseMenuState(pauseMenuStates.ACHIEVEMENTS)\r\n  }\r\n\r\n  const effectFilters = useSelector(state => state.game.filterEffects)\r\n\r\n  const toggleFilters = () => {\r\n    dispatch( toggleFilterEffects(!effectFilters) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => zombie.checkFilters())\r\n    let ammos = window.gameObjects.getKeyValue('ammo-drops-by-type')\r\n    ammos[WEAPON_TYPE_SMG]\r\n    .concat(ammos[WEAPON_TYPE_PISTOL])\r\n    .concat(ammos[WEAPON_TYPE_SHOTGUN])\r\n    .forEach(ammo => ammo.checkFilters())\r\n    let credits = window.gameObjects.getKeyValue('currency-drops')\r\n    credits.forEach(credit => credit.checkFilters())\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    healths.forEach(health => health.checkFilters())\r\n    let player = window.gameObjects.getKeyValue('player')\r\n    player.checkFilters()\r\n    let weaponsUI = window.gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.checkFilters()\r\n  }\r\n\r\n  const displayZombieHealth = useSelector(state => state.game.displayZombieHealth)\r\n\r\n  const toggleZombieHealth = () => {\r\n    dispatch( toggleZombieHealthDisplay(!displayZombieHealth) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => {\r\n      zombie.displayHealth(!displayZombieHealth)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {\r\n      gameObjects ?\r\n        <Container style={{ top: props.margintop ? '100px' : 0 }} width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }>\r\n          { \r\n            props.hidebg ? null :\r\n            <>\r\n              <Backing bgcolor={ '#222' } opacity={ gameState === GameStates.MAIN_MENU ? .35 : .5 } width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }/>\r\n            </>\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.DEFAULT ?\r\n            <>\r\n              {\r\n                props.hidetitle ? null\r\n                : <MenuTitle>Pause Menu</MenuTitle>\r\n              }\r\n              <MenuButtonContainer width={ w ? w : 0 }>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 6 }>\r\n                  {\r\n                    props.playbtn ?\r\n                      <CustomMenuButton\r\n                      height={ 40 }\r\n                      onClick={ playGame }>\r\n                        Play Game\r\n                      </CustomMenuButton>\r\n                    :\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ resumeGame }>\r\n                        Resume Game\r\n                      </CustomMenuButton>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                {\r\n                  gameState !== GameStates.MAIN_MENU ?\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ gotoMainMenu }>\r\n                        Main Menu\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  :\r\n                    <MenuButtonSpacer padding={2}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ seeScoreboard }>\r\n                        Scoreboard\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                }\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showControls }>\r\n                    View Controls\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showOptions }>\r\n                    Options\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showStats }>\r\n                    Stats\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showAchievements }>\r\n                    Achievements\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.ACHIEVEMENTS ?\r\n            <AchievementsView backBtnFn={ showDefault } /> : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.CONTROLS ?\r\n            <>\r\n              <MenuTitle>Controls</MenuTitle>\r\n              <MenuButtonContainer width={ w }>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Jump: W</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Left: A</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Right: D</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Melee Weapon Bash: F</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Aim: Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Shoot: Left Mouse</CustomMenuButton>\r\n                </Inline>\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Charge Grenade Throw: Hold G / Right Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Change Weapon: Space / Mouse Wheel</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Turn Turret: L/R Arrow (while placing)</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Detonate remote mines: Numpad  1 - 9</CustomMenuButton>\r\n                </Inline>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.OPTIONS ?\r\n            <>\r\n              <MenuTitle>Options</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Effect Filters?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='effects-filter'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ effectFilters ? 'white' : 'red' }\r\n                      onClick={ toggleFilters }>\r\n                        <span\r\n                        style={{ color: effectFilters ? 'white' : 'red' }}>\r\n                        { effectFilters ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='effects-filter'>\r\n                      <span >\r\n                        Adds filter effects like glow and motion blur to animations. Turning off could improve performance.\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Display Zombie Health?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='display-zombie-health'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ displayZombieHealth ? 'white' : 'red' }\r\n                      onClick={ toggleZombieHealth }>\r\n                        <span\r\n                        style={{ color: displayZombieHealth ? 'white' : 'red' }}>\r\n                        { displayZombieHealth ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='display-zombie-health'>\r\n                      <span >\r\n                        Displays a yellow text box above each enemy zombie\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.STATS ?\r\n            <>\r\n              <MenuTitle>Stats</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Stat label={ 'Shots Fired' } stat={ stats.bulletsFired } />\r\n                <Stat label={ 'Mags Changed' } stat={ stats.timesReloaded } />\r\n                <Stat label={ 'Grenades Thrown' } stat={ stats.grenadesThrown } />\r\n                <Stat label={ 'Zombies Killed' } stat={ stats.zombiesKilled } />\r\n                <Stat label={ 'Deaths' } stat={ stats.timesKilled } />\r\n                {/* <Stat label={ 'Respawns' } stat={ stats.timesRespawned } /> */}\r\n                \r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n        </Container>\r\n      : null\r\n    }\r\n    </>\r\n  )\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { gameStateTransition, setShowingMessage } from './gameSlice'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { getBodyHeight } from './utils/Utils'\r\nimport { resetWave } from './ReactComponents/PauseMenu'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const createWaveMessage = txt => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: '#FFFFFF',\r\n\t\tfontSize: 40,\r\n    fontWeight: 'bold'\r\n  }, {\r\n    chars: [\r\n      ['a', 'z'],\r\n      ['0', '9'],\r\n      ['A', 'Z'],\r\n      ' .!?'\r\n    ]\r\n  })\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n  } = window\r\n  // let screenUI = gameObjects.getKeyValue('screen-ui')\r\n  let player = gameObjects.getKeyValue('player')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/5\r\n\r\n  container.addChild(text)\r\n  \r\n  const transitionToShopQuery = () => {\r\n    resetWave() // in case any zombies are roaming\r\n    if (getState().game.gameState === GameStates.MAIN_MENU || getState().game.gameState === GameStates.PAUSE) {\r\n      if (getState().game.gameSubState === SubStates.WAVE_DEFEATED || getState().game.gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.NEUTRAL))\r\n      }\r\n    } else {\r\n      if (!player.dead) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n        container.removeChild(text)\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const waveMsgOutro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgOutro, 2000)\r\n    } else {\r\n      to(text, .75, {\r\n        delay: 2,\r\n        x: gameWidth * 1.5,\r\n        ease: Power1.easeIn,\r\n        onComplete: transitionToShopQuery\r\n      })\r\n    }\r\n  }\r\n\r\n  const waveMsgIntro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgIntro, 2000)\r\n    } else {\r\n      from(text, .75, {\r\n        x: -100,\r\n        alpha: 0,\r\n        onComplete: waveMsgOutro\r\n      })\r\n    }\r\n  }\r\n\r\n  waveMsgIntro()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createGenericMessage = (txt, fillColor, durationMotion, durationLinger) => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: fillColor,\r\n\t\tfontSize: 40,\r\n\t\tfontWeight: 'bold'\r\n\t})\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n\t} = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/2\r\n\r\n\tcontainer.addChild(text)\r\n\r\n\tfrom(text, durationMotion, {\r\n\t\tx: -100,\r\n\t\talpha: 0,\r\n\t\tonStart: () => {\r\n\t\t\tdispatch( setShowingMessage(true) )\r\n\t\t},\r\n\t\tonComplete: () => {\r\n\t\t\tto(text, durationMotion, {\r\n\t\t\t\tdelay: durationLinger,\r\n\t\t\t\tx: gameWidth * 1.5,\r\n\t\t\t\tease: Power1.easeIn,\r\n\t\t\t\tonComplete: () => {\r\n\t\t\t\t\tdispatch( setShowingMessage(false) )\r\n\t\t\t\t\tcontainer.removeChild(text)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createTextMessage = (txt, fill, durationMotion, durationLinger, fontSize) => {\r\n\r\n  let {\r\n    gameObjects,\r\n    TweenLite: { to, set }\r\n  } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let texts = gameObjects.getKeyValue('text-messages')\r\n  let playerBody = gameObjects.getKeyValue('player').body\r\n  let msg = new PIXI.Text(txt, { fill, fontSize: fontSize ? fontSize : 13, fontWeight: 'bold' })\r\n  msg.pivot.x = msg.width * .5\r\n  msg.pivot.y = msg.height * .5\r\n  container.addChild(msg)\r\n\r\n  let { game: { player: { position: playerPosition } } } = getState()\r\n  let initialY = playerPosition.y - (getBodyHeight(playerBody) * .65)\r\n\r\n  texts.push(msg)\r\n\r\n  set(msg, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20)\r\n  })\r\n\r\n  to(msg, durationMotion, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20) - 20,\r\n    onComplete: () => {\r\n      to(msg, durationMotion, {\r\n        delay: durationLinger,\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          msg.destroy()\r\n          let idx = texts.indexOf(msg)\r\n          if (idx > -1) {\r\n            texts.splice(idx, 1)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n}\r\n","import { Bodies, Body, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport random from 'random'\r\n\r\nlet { TweenLite: { delayedCall, to } } = window\r\n\r\nexport default function Gib ({ position_x, position_y }, { force_x, force_y }, timeToDisappear) {\r\n  let { gameObjects } = window\r\n  let gibs = gameObjects.getKeyValue('gibs')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let body = Bodies.circle(position_x, position_y, 5, {\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  body.label = 'gib'\r\n  World.add(world, body)\r\n\r\n  let getTexturePNG = () => {\r\n    let gibs = [ 'gib.png', 'gib2.png', 'gib3.png', 'gib4.png' ]\r\n    return gibs[ Math.floor( Math.random() * gibs.length ) ]\r\n  }\r\n  \r\n  let partsSheet = gameObjects.getKeyValue('player-parts-sheet')\r\n  let gfc = new Sprite(\r\n    partsSheet.textures[ getTexturePNG() ]\r\n  )\r\n  container.addChild( gfc )\r\n  \r\n  gibs.push( this )\r\n\r\n  gfc.pivot.x = gfc.width * .5\r\n  gfc.pivot.y = gfc.height * .475\r\n\r\n  Body.applyForce(body, { x: position_x, y: position_y }, { x: random.float(force_x * .25, force_x), y: random.float(force_y * .25, force_y) })\r\n  \r\n  this.animate = renderFn => {\r\n    let { x, y, rotation: rot } = renderFn(body)\r\n    gfc.position = { x, y }\r\n    gfc.rotation = rot\r\n  }\r\n\r\n  this.destroy = () => {\r\n    if (gfc) {\r\n      gfc.destroy()\r\n    }\r\n    if (body) {\r\n      World.remove(world, body)\r\n    }\r\n    let idx = gibs.indexOf(this)\r\n    if ( idx > -1 ) {\r\n      gibs.splice( idx, 1 )\r\n    }\r\n    world = null\r\n    body = null\r\n    container = null\r\n    gibs = null\r\n    gameObjects = null\r\n  }\r\n\r\n  delayedCall(timeToDisappear, () => {\r\n    to(gfc, 2, { alpha: 0, onComplete: () => { this.destroy() }})\r\n  })\r\n\r\n  return this\r\n\r\n}\r\n\r\nexport function GibGenerator (count, position, force, timeToDisappear) {\r\n  let { x: position_x, y: position_y } = position\r\n  force = force || { force_x: 0, force_y: 0 }\r\n  let { x: force_x, y: force_y } = force\r\n  // add some gibs for effect!\r\n\tfor (let gibCnt = 0; gibCnt < count; ++gibCnt) {\r\n\t\tnew Gib({ position_x, position_y }, { force_x, force_y }, timeToDisappear)\r\n\t}\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { GibGenerator } from '../items/Gib'\r\n\r\nexport function PlayerRagdollDecap ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 60 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet maskBody = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  // let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n\t// spineToHead really\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  // let spineToLower = Constraint.create({\r\n  //   bodyA: bodyLower,\r\n  //   bodyB: lower_spineLinks[0],\r\n  //   pointA: { x: 0, y: -bLower.h/2 },\r\n  //   pointB: { x: 0, y: -spine.h/2 },\r\n  //   length: 10\r\n  // })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, maskBody, bodyUpper, //bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['head_gore.png'] )\r\n\tskull._id = 'skull'\r\n\tspriteParts.push( skull )\r\n\t\r\n  let mask = new PIXI.Sprite( parts_spritesheet.textures['mask.png'] )\r\n\tmask._id = 'mask'\r\n  spriteParts.push( mask )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\t// lower_spineLinks.forEach(link => {\r\n  //   let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n  //   entrailGfx.push( entrailGfc )\r\n  //   spriteParts.push( entrailGfc )\r\n  // })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_headless.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  // let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\t// torsoLower._id = 'torso lower'\r\n  // spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.mask = maskBody\r\n  this.bodyUpper = bodyUpper\r\n  // this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => {\r\n\t\t\tsprite.destroy()\r\n\t\t\tsprite = null\r\n\t\t})\r\n\t\tWorld.remove(world, this.composite)\r\n\t\tthis.composite = null\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet maskPos = renderFnc(this.mask)\r\n\t\tmask.position = maskPos\r\n\t\tmask.rotation = maskPos.rotation\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a head constraint\r\n\tComposite.remove(this.composite, bodyToHead)\r\n\tBody.applyForce(this.head, this.head.position, { x: 0, y: -0.1 })\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollHalved ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 35 }\r\n\tlet bLower = { w: 45, h: 5 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n  let bodyLower = Bodies.rectangle(x, y, bLower.w, bLower.h)\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = [], entrailGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: bodyUpper,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: bUpper.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  let spineToLower = Constraint.create({\r\n    bodyA: bodyLower,\r\n    bodyB: lower_spineLinks[0],\r\n    pointA: { x: 0, y: -bLower.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper, bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n  Composite.add(this.composite, lower_spineLinks)\r\n  Composite.add(this.composite, lower_spineConstraints)\r\n  Composite.add(this.composite, spineToLower)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\tlower_spineLinks.forEach(link => {\r\n    let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n    entrailGfx.push( entrailGfc )\r\n    spriteParts.push( entrailGfc )\r\n  })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_upper_gore.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\ttorsoLower._id = 'torso lower'\r\n  spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n  this.bodyUpper = bodyUpper\r\n  this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlower_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      entrailGfx[i].position = linkPos\r\n      entrailGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n\r\n    let torsoLowerPos = renderFnc(this.bodyLower)\r\n\t\ttorsoLower.position = torsoLowerPos\r\n\t\ttorsoLower.rotation = torsoLowerPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollMaim ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')  //gameObjects.getKeyValue('zombie-parts-sheet') //gameObjects.getKeyValue('z-parts-spritesheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull_gore.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach arm constraints\r\n\tComposite.remove(this.composite, [ bodyUpperToArmUpperL, bodyUpperToArmUpperR ])\r\n\tBody.applyForce(this.armLowerL, this.armLowerL.position, { x: -0.01, y: -0.1 })\r\n\tBody.applyForce(this.armLowerR, this.armUpperR.position, { x: 0.01, y: -0.1 })\r\n\r\n\t// auto removal\r\n\t// delayedCall(3, this.destroy)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function PlayerRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}","import { World } from 'matter-js'\r\nimport { AnimatedSprite } from 'pixi.js'\r\n\r\nexport const BLOOD_SPURT_TYPE_1 = 'blood spurt type 1'\r\nexport const BLOOD_SPURT_TYPE_2 = 'blood spurt type 2'\r\nexport const BLOOD_SPURT_TYPE_3 = 'blood spurt type 3'\r\n\r\nlet { TweenLite: { set } } = window\r\n\r\nexport default function BloodSpurt (type, position, scale, bodyToDelete) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n\r\n  let chosenSpurt = null\r\n  \r\n  let bloodSpurt1_sheet = gameObjects.getKeyValue('blood-spurt-1')\r\n  let bloodSpurt1 = new AnimatedSprite( bloodSpurt1_sheet.animations['blood_spurt_1'] )\r\n  \r\n  let bloodSpurt2_sheet = gameObjects.getKeyValue('blood-spurt-2')\r\n  let bloodSpurt2 = new AnimatedSprite( bloodSpurt2_sheet.animations['blood_spurt_2'] )\r\n  \r\n  let bloodSpurt3_sheet = gameObjects.getKeyValue('blood-spurt-3')\r\n  let bloodSpurt3 = new AnimatedSprite( bloodSpurt3_sheet.animations['blood_spurt_3'] )\r\n  \r\n  // randomize the returned spurt\r\n  let spurts = [ BLOOD_SPURT_TYPE_1, BLOOD_SPURT_TYPE_2, BLOOD_SPURT_TYPE_3 ]\r\n  let autoChosen = spurts[ Math.floor( Math.random() * spurts.length ) ]\r\n  \r\n  if (!type) {\r\n    type = autoChosen\r\n  }\r\n  \r\n  if (type === BLOOD_SPURT_TYPE_1) {\r\n    chosenSpurt = bloodSpurt1\r\n  } else if (type === BLOOD_SPURT_TYPE_2) {\r\n    chosenSpurt = bloodSpurt2\r\n  } else {\r\n    chosenSpurt = bloodSpurt3\r\n  }\r\n\r\n  chosenSpurt.onComplete = () => {\r\n    chosenSpurt.destroy()\r\n    if (bodyToDelete) {\r\n      World.remove(world, bodyToDelete)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    chosenSpurt = null\r\n    bloodSpurt1 = null\r\n    bloodSpurt1_sheet = null \r\n    bloodSpurt2 = null\r\n    bloodSpurt2_sheet = null \r\n    bloodSpurt3 = null\r\n    bloodSpurt3_sheet = null \r\n    spurts = null\r\n    autoChosen = null\r\n  }\r\n\r\n  chosenSpurt.animationSpeed = .5\r\n  chosenSpurt.pivot.x = chosenSpurt.width * .5\r\n  chosenSpurt.pivot.y = chosenSpurt.height * .5\r\n  if (scale) {\r\n    set(chosenSpurt.scale, { x: scale, y: scale })\r\n  } else {\r\n    set(chosenSpurt.scale, { x: .5, y: .5 })\r\n  }\r\n  chosenSpurt.position = position\r\n  chosenSpurt.loop = false\r\n  chosenSpurt.updateAnchor = true\r\n  chosenSpurt.play()\r\n  container.addChild( chosenSpurt )\r\n\r\n  return chosenSpurt\r\n\r\n}","export const FELL_OFF = 'fell off of ledge'\r\nexport const KILLED_BY_ZOMBIE = 'killed by zombie'","import { Body, World, Bodies } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nlet { getState } = store\r\n\r\nexport default function Rock(position) {\r\n  let { gameObjects, TweenLite: { to, delayedCall } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let rockPieceAssets = [ 'rock-piece1.png', 'rock-piece2.png', 'rock-piece3.png' ]\r\n  const getRandomRockSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        rockPieceAssets[ Math.floor( Math.random() * rockPieceAssets.length ) ]\r\n      ]\r\n  ))\r\n  let rockSprite = getRandomRockSprite()\r\n  const rockScale = () => random.float(.45, .65)\r\n  rockSprite.pivot.x = rockSprite.width * .48\r\n  rockSprite.pivot.y = rockSprite.height * .48\r\n  rockSprite.scale.x = rockScale()\r\n  rockSprite.scale.y = rockScale()\r\n  container.addChild(rockSprite)\r\n  let rockBody = Bodies.rectangle(position.x, position.y - 50, 10, 10, {\r\n    restitution: .25,\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  Body.applyForce(rockBody, rockBody.position, {\r\n    x: random.float(-0.005, 0.005),\r\n    y: random.float(-0.001, -0.0025),\r\n  })\r\n  World.add(world, rockBody)\r\n  this.animate = renderFn => {\r\n    let { x, y } = renderFn(rockBody)\r\n    rockSprite.position = { x, y }\r\n  }\r\n  this.destroy = () => {\r\n    let idx = rocks.indexOf(this)\r\n    World.remove(world, rockBody)\r\n    container.removeChild(rockSprite)\r\n    if (idx > -1) {\r\n      rocks.splice(idx, 1)\r\n    }\r\n    world = null\r\n    rocks = null\r\n    container = null\r\n    rockBody = null\r\n    rockSprite = null\r\n    gameObjects = null\r\n  }\r\n  delayedCall(\r\n    getState().game.lastWaveCountDefeated &&\r\n    getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n    () => {\r\n      to(rockSprite, .5, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    }\r\n  )\r\n  return this\r\n}\r\n","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class WoodPlank {\r\n\r\n  constructor(pos) {\r\n    this.gameObjects = window.gameObjects\r\n    const { to, delayedCall } = window.TweenLite\r\n    let container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let world = this.gameObjects.getKeyValue('world')\r\n    this.woodPlanksSheet = this.gameObjects.getKeyValue('wood-planks-sheet')\r\n    this.woodPlanks = this.gameObjects.getKeyValue('wood-planks')\r\n    this.plankRange = [ '000.png', '001.png', '002.png' ]\r\n    // this.planks = new Array(random.int(4, 8)).fill(1)\r\n    // this.planks.map(plank => this.getPlank())\r\n    let {x,y} = pos\r\n    this.gfc = this.getPlank()\r\n    this.gfc.width = 50\r\n    this.gfc.height = 15\r\n    this.gfcContainer = new PIXI.Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = this.gfcContainer.width * .5\r\n    this.gfcContainer.pivot.y = this.gfcContainer.height * .5\r\n    this.body = new Bodies.rectangle(x,y,50,15,{collisionFilter:playerCollisionOptions})\r\n    this.body.torque = random.float(-0.5, 0.5)\r\n    Body.applyForce(this.body, this.body.position, {\r\n      x: random.float(-0.02, 0.02),\r\n      y: random.float(-0.01, -0.02)\r\n    })\r\n    World.add(world, this.body)\r\n    container.addChild(this.gfcContainer)\r\n    this.destroy = () => {\r\n      let idx = this.woodPlanks.indexOf(this)\r\n      World.remove(world, this.body)\r\n      container.removeChild(this.gfcContainer)\r\n      if (idx > -1) {\r\n        this.woodPlanks.splice(idx, 1)\r\n      }\r\n      world = null\r\n      container = null\r\n      this.gameObjects = null\r\n      this.woodPlanks = null\r\n      this.gfc = null\r\n    }\r\n    delayedCall(4, () => {\r\n      to(this.gfcContainer, 2, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    })\r\n    return this\r\n  }\r\n\r\n  animate(renderFn) {\r\n    let {x,y,rotation:rot} = renderFn(this.body)\r\n    this.gfcContainer.position = {x,y}\r\n    this.gfcContainer.rotation = rot\r\n  }\r\n\r\n  getPlank() {\r\n    return (\r\n      new PIXI.Sprite(\r\n        this.woodPlanksSheet.textures[\r\n          this.plankRange[Math.floor(Math.random() * this.plankRange.length)]\r\n        ]\r\n      )\r\n    )\r\n  }\r\n\r\n}","import { contains } from 'jquery'\r\nimport { AnimatedSprite } from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport { BlurFilter } from '@pixi/filter-blur'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport store from '../../../app/store'\r\n\r\nexport default class ExplosionSprite {\r\n\r\n  constructor(type, renderBody) {\r\n    this.gameObjects = window.gameObjects\r\n    let { to } = window.TweenLite\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let explosionTexture1 = this.gameObjects.getKeyValue('explosion3d1-sheet')\r\n    let explosionTexture2 = this.gameObjects.getKeyValue('explosion3d2-sheet')\r\n    this.explosion1 = new AnimatedSprite( explosionTexture1.animations['explosion3d'] )\r\n    this.explosion2 = new AnimatedSprite( explosionTexture2.animations['explosion3d'] )\r\n    this.explosions = [ this.explosion1, this.explosion2 ]\r\n    this.explosions.forEach(ex => {\r\n      ex.pivot.x = ex.width * .5\r\n      ex.pivot.y = ex.height * .5\r\n      ex.loop = false\r\n      ex.onComplete = () => {\r\n        this.container.removeChild(ex)\r\n        this.container = null\r\n        this.gameObjects = null\r\n        explosionTexture1 = null\r\n        explosionTexture2 = null\r\n        this.explosions = null\r\n      }\r\n    })\r\n    if (type === 1) {\r\n      this.explosion = this.explosion1\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    if (type === 2) {\r\n      this.explosion = this.explosion2\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    // this.container.addChild(this.explosion)\r\n    this.renderBody = renderBody\r\n    let adjustment = new AdjustmentFilter()\r\n    adjustment.brightness = 20.0\r\n    adjustment.saturation = 3.0\r\n    let blur = new BlurFilter()\r\n    blur.blur = .5\r\n    let glow = new GlowFilter({\r\n      outerStrength: 3.0\r\n    })\r\n    this.filters = store.getState().game.filterEffects ? [\r\n      adjustment,\r\n      blur,\r\n      glow\r\n    ] : []\r\n    this.explosion.filters = this.filters\r\n    to(this.explosion, .35, { alpha: 0 })\r\n    to(adjustment, .5, { brightness: 1.0, saturation: 1.5, onUpdate: () => {\r\n      if (store.getState().game.filterEffects) {\r\n        this.explosion.filters = this.filters\r\n      }\r\n    }})\r\n    this.explosion.play()\r\n  }\r\n\r\n  // checkFilters() {\r\n  //   if (store.getState().game.filterEffects) {\r\n  //     this.explosion.filters = this.filters\r\n  //   } else {\r\n  //     this.explosion.filters = []\r\n  //   }\r\n  // }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.explosion.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.explosion) === -1) {\r\n        this.container.addChild(this.explosion)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport WoodPlank from '../items/WoodPlank'\r\nimport ExplosionSprite from './ExplosionSprite'\r\nimport { Howl, Howler } from 'howler'\r\n\r\nexport default function GrenadeExplosion (position, showRocksBool, options) {\r\n  let { gameObjects, TweenLite: { to } } = window\r\n  let explosion1 = window.gameObjects.getKeyValue('explosion1')\r\n  let explosionSound1 = new Howl({\r\n    src: [ explosion1 ]\r\n  })\r\n  let distantExplosion = window.gameObjects.getKeyValue('distant-explosion')\r\n  let distantExplosionSound = new Howl({\r\n    src: [ distantExplosion ]\r\n  })\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionsArray = gameObjects.getKeyValue('explosions')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\r\n  const getRandomSmokeSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        smokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n      ]\r\n  ))\r\n  let positionalBody = Bodies.rectangle(position.x, position.y, 20, 20, {\r\n    restitution: 0,\r\n    collisionFilter: playerCollisionOptions,\r\n    isStatic: true\r\n  })\r\n  World.add(world, positionalBody)\r\n  this.calcRenderedPosition = renderFn => {\r\n    let { x, y } = renderFn(positionalBody)\r\n    this.calculatedPosition = { x, y }\r\n    // if (container && container.children.indexOf(smokeSprite) === -1) {\r\n    //   container.addChild(smokeSprite)\r\n    // }\r\n  }\r\n  explosionsArray.push( this )\r\n  // put it together\r\n  // smoke animation \r\n  let randInt = random.int(5, 10) // reduced from (10, 20)\r\n  for (let s = 0; s < randInt; ++s) {\r\n    let smokeSprite = getRandomSmokeSprite()\r\n    smokeSprite.pivot.x = smokeSprite.width * .5\r\n    smokeSprite.pivot.y = smokeSprite.height * .5\r\n    let duration = 2 // smoke tween duration \r\n    to(smokeSprite, duration, {\r\n      onStart: () => { container.addChild(smokeSprite) },\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        if (s === randInt - 1) {\r\n          World.remove(world, positionalBody)\r\n          let idx1 = explosionsArray.indexOf(this)\r\n          if (idx1 > -1) { explosionsArray.splice(idx1, 1) }\r\n          world = null\r\n          explosionsArray = null\r\n          explosionAssetsSheet = null\r\n          smokeAssets = null\r\n        }\r\n      }\r\n    })\r\n    let randScale = random.int(1, 2)\r\n    to(smokeSprite.scale, .5, { x: randScale, y: randScale })\r\n    let xyval = { x: 0, y: 0 }\r\n    to(xyval, .5, { x: random.int(-100, 100), y: random.int(-50, 50) })\r\n    to(smokeSprite.position, duration, {\r\n      onUpdate: () => {\r\n        if (this.calculatedPosition) {\r\n          smokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n          smokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        smokeSprite.destroy()\r\n        container = null\r\n        gameObjects = null\r\n      }\r\n    })\r\n  }\r\n  let woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n  // rocks \r\n  if (position.y > 300 || showRocksBool) {\r\n    for (let r = 0; r < random.int(4, 7); ++r) {\r\n      if (options && options.showWood) {\r\n        woodPlanks.push(new WoodPlank(position))\r\n      } else {\r\n        rocks.push(new Rock(position))\r\n      }\r\n    }\r\n    woodPlanks = null\r\n    rocks = null\r\n  }\r\n  if (!options || options.showExplosionSprite) {\r\n    // blender explosion sprite\r\n    let explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    explosionSound1.seek(.5)\r\n    explosionSound1.play()\r\n    distantExplosionSound.play()\r\n    explosionSprites.push(\r\n      new ExplosionSprite(random.int(1, 2), positionalBody)\r\n    )\r\n    explosionSprites = null\r\n  }\r\n}","import { Bodies, Constraint, World } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { getBodyHeight, getBodyWidth, makePixiSprite } from '../utils/Utils'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport store from '../../../app/store'\r\n\r\nexport default function WallBarrier (pos, dimensions, type) {\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite:{ delayedCall } } = window\r\n  let barriersSprites = gameObjects.getKeyValue('barriers-sheet')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let buildObjects = gameObjects.getKeyValue('build-objects')\r\n  let {width:w,height:h} = dimensions\r\n  let woodenBarrier = new PIXI.Sprite(barriersSprites.textures['woodenBarrier.png'])\r\n  let stoneBarrier = new PIXI.Sprite(barriersSprites.textures['stoneBarrier.png'])\r\n  let metalBarrier = new PIXI.Sprite(barriersSprites.textures['metalBarrier.png'])\r\n  let explosiveBarrier = makePixiSprite('explosive-barrel')\r\n  this.types = {\r\n    WOOD: 'Wooden',\r\n    STONE: 'Stone',\r\n    METAL: 'Metal',\r\n    EXPLOSIVE: 'Explosive Barrel'\r\n  }\r\n  let {x,y} = pos\r\n  let objBody = Bodies.rectangle(x, y, w, h, {\r\n    inertia: Infinity,\r\n    label: type === this.types.EXPLOSIVE ? 'explosive barrier' : 'barrier'\r\n  })\r\n  // try to attach barrier to the ground\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  let constraint = Constraint.create({\r\n    bodyA: ground,\r\n    bodyB: objBody,\r\n    pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n    pointB: { x: 0, y: getBodyHeight(objBody)/2 },\r\n    length: 0\r\n  })\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n        break;\r\n      case this.types.STONE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 500 : 250\r\n        break;\r\n      case this.types.METAL:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 800 : 400\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 200 : 100\r\n        break;\r\n      default:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n    }\r\n  }\r\n\r\n  objBody.main = this\r\n  this.destroyed = false\r\n\r\n  this.getBody = () => objBody\r\n\r\n  // World.add(world, objBody)\r\n  World.add(world, [constraint, objBody])\r\n\r\n  let barrierSprite\r\n  let txtStyle = { fill: '#ffffff', fontSize: 12 }\r\n  let healthDisplay = new PIXI.Text(objBody.strength, txtStyle)\r\n  healthDisplay.pivot.x = healthDisplay.width * .5\r\n  healthDisplay.pivot.y = healthDisplay.height * .5\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        barrierSprite = woodenBarrier\r\n        break;\r\n      case this.types.STONE:\r\n        barrierSprite = stoneBarrier\r\n        break;\r\n      case this.types.METAL:\r\n        barrierSprite = metalBarrier\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        barrierSprite = explosiveBarrier\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  barrierSprite.width = w\r\n  barrierSprite.height = h\r\n  let sprite = new PIXI.Container()\r\n  sprite.addChild(barrierSprite)\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * .5\r\n  container.addChild(sprite)\r\n  container.addChild(healthDisplay)\r\n\r\n  let player = gameObjects.getKeyValue('player')\r\n  player.sprites.forEach(sprite => { container.addChild(sprite) })\r\n\r\n  this.takeDamage = (dmg) => {\r\n    objBody.strength -= dmg\r\n    healthDisplay.text = objBody.strength\r\n  }\r\n\r\n  this.displayBarrierStrength = (renderFn) => {\r\n    healthDisplay.position = renderFn(objBody)\r\n    barrierSprite.position = renderFn(objBody)\r\n  }\r\n\r\n  objBody.removeSelf = () => {\r\n    this.destroyed = true\r\n    new GrenadeExplosion(objBody.position, true, {\r\n      showWood: type === this.types.WOOD ? true : false,\r\n      showExplosionSprite: type === this.types.EXPLOSIVE ? true : false\r\n    })\r\n    if (type === this.types.EXPLOSIVE) {\r\n      let {x:_x,y:_y} = objBody.position\r\n      let explosionHitbox = Bodies.rectangle(_x, _y, 400, 300)\r\n      explosionHitbox.label = 'barrel explosion'\r\n      World.add(world, explosionHitbox)\r\n      delayedCall(2, () => {\r\n        if (explosionHitbox) {\r\n          World.remove(world, explosionHitbox)\r\n        }\r\n      })\r\n      explosionHitbox.removeSelf = () => {\r\n        World.remove(world, explosionHitbox)\r\n      }\r\n    }\r\n    World.remove(world, [constraint, objBody])\r\n    container.removeChild(healthDisplay)\r\n    container.removeChild(sprite)\r\n    let idx = buildObjects.indexOf(this)\r\n    if (idx > -1) { buildObjects.splice(idx, 1) }\r\n  }\r\n\r\n  return this\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class Landmine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('landmine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'landmine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['landmine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    new GrenadeExplosion(this.body.position, true)\r\n    let { TweenLite: { delayedCall } } = window\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { Bodies, World, Body, Vector } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { radians } from 'radians'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\n\r\nexport default function Grenade (x, y, r, force, fuseTime) {\r\n  this.grenadeDistance = {\r\n    start: x,\r\n    end: null\r\n  }\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite: { delayedCall, from } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let grenades = gameObjects.getKeyValue('grenades')\r\n  let grenadeBody = Bodies.circle(x, y, r, {\r\n    restitution: .8,\r\n    collisionFilter: { category: 3 }\r\n  })\r\n  grenadeBody.label = 'grenade'\r\n  grenadeBody.main = this\r\n  World.add(world, grenadeBody)\r\n  Body.applyForce(grenadeBody, grenadeBody.position, force)\r\n  grenadeBody.torque = .01\r\n  let grenadeGfc = new PIXI.Graphics()\r\n  grenadeGfc.beginFill(0x1F472C)\r\n  grenadeGfc.drawCircle(0, 0, r)\r\n  this.grenadeBody = grenadeBody\r\n  let bevel = new BevelFilter()\r\n  bevel.shadowAlpha = .45\r\n  bevel.lightAlpha = .35\r\n  bevel.thickness = 5\r\n  bevel.shadowColor = 0x0\r\n  bevel.lightColor = 0x208C44\r\n  let noise = new NoiseFilter()\r\n  noise.noise = .1\r\n  noise.seed = .5\r\n  grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise ] : []\r\n  let motionBlur = new MotionBlurFilter({ velocity: { x: 0, y: 0 } })\r\n  from(motionBlur.velocity, .75, { x: 100, y: 10 })\r\n  container.addChild(grenadeGfc)\r\n  this.animate = renderFn => {\r\n    if (grenadeBody && grenadeGfc) {\r\n      let { x, y, rotation: rot } = renderFn(grenadeBody)\r\n      grenadeGfc.position.x = x\r\n      grenadeGfc.position.y = y\r\n      grenadeGfc.rotation = rot\r\n      bevel.rotation = radians(rot)\r\n      grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise, motionBlur ] : []\r\n    }\r\n  }\r\n\r\n  delayedCall(fuseTime ? fuseTime : getState().game.player.weapons.grenadeFuseTime.default, () => {\r\n    if (!this.exploded) {\r\n      this.explode()\r\n    }\r\n  })\r\n  this.exploded = false\r\n  this.explode = (showRocks) => {\r\n    this.grenadeDistance.end = this.grenadeBody.position.x\r\n    this.exploded = true\r\n    new GrenadeExplosion(grenadeBody.position, showRocks ? showRocks : null)\r\n    let explosionSize = getState().game.player.weapons.grenadeExplosionSize\r\n    this.explosionHitbox = Bodies.rectangle(grenadeBody.position.x, grenadeBody.position.y, explosionSize, explosionSize, {\r\n      // isStatic: true\r\n    })\r\n    grenadeBody.distance = this.grenadeDistance\r\n    this.explosionHitbox.label = 'grenade explosion'\r\n    World.remove(world, grenadeBody)\r\n    World.add(world, this.explosionHitbox)\r\n    container.removeChild(grenadeGfc)\r\n    delayedCall(.01, () => {\r\n      this.destroy()\r\n    })\r\n  }\r\n  this.destroy = () => {\r\n    World.remove(world, this.explosionHitbox)\r\n    let idx = grenades.indexOf(this)\r\n    if (idx > -1) {\r\n      grenades.splice(idx, 1)\r\n    }\r\n    // world = null\r\n    // container = null\r\n    // gameObjects = null\r\n    // this.explosionHitbox = null\r\n    // grenadeBody = null\r\n    // grenadeGfc = null\r\n  }\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\nimport Grenade from '../items/Grenade'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Clustermine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('clustermine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'clustermine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['clustermine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    let r = 10, fuseTime = 4\r\n    let { gameObjects } = window\r\n    let grenades = gameObjects.getKeyValue('grenades') // can replace with different red or blue \"cluster bomb\" graphics\r\n    delayedCall(.25, () => {\r\n      let { getState } = store\r\n      let num = getState().game.player.perks['cluck'].owned ? 8 : 4\r\n      let xforce = getState().game.player.perks['cluck'].owned ? random.float(-0.02, 0.02) : random.float(-0.01, 0.01)\r\n      let yforce = getState().game.player.perks['cluck'] ? random.float(-0.025, -0.075) : random.float(-0.01, -0.05)\r\n      for (let i = 0; i < num; ++i) {\r\n        delayedCall(.1 * i, () => {\r\n          let nade = new Grenade(\r\n            this.body.position.x,\r\n            this.body.position.y - 50,\r\n            r,\r\n            {\r\n              x: xforce,\r\n              y: yforce\r\n            },\r\n            fuseTime\r\n          )\r\n          grenades.push( nade )\r\n        })\r\n      }\r\n    })\r\n    // above code expels additional cluster grenades \r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'clustermine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","export const barrierTypes = {\r\n  WOOD: 'Wooden',\r\n  STONE: 'Stone',\r\n  METAL: 'Metal',\r\n  EXPLOSIVE: 'Explosive Barrel'\r\n}\r\n\r\nexport const trapTypes = {\r\n  LANDMINE: 'Landmine',\r\n  CLUSTER_BOMB: 'Cluster Bomb',\r\n  REMOTE_MINE: 'Remote Mine',\r\n  TURRET: 'Machine Gun Turret'\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class RemoteMine {\r\n\r\n  constructor(pos, mineNumber) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.buildObjects = gameObjects.getKeyValue('build-objects')\r\n    this.remoteMines = gameObjects.getKeyValue('remote-mines')\r\n    this.remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n    let landmineSheet = gameObjects.getKeyValue('remote-mine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5, { collisionFilter: playerCollisionOptions })\r\n    this.body.label = 'remote mine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['remote-mine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n\r\n    // attach a number to the mine to know which key to press to detonate it\r\n    let txtStyle = { fill: '#00FFFF', fontSize: 12 }\r\n    this.num = new Text(`[ ${mineNumber} ]: detonate`, txtStyle)\r\n    this.num.pivot.x = this.num.width * .5\r\n    this.num.pivot.y = this.num.height * .5\r\n    this.container.addChild(this.num)\r\n    \r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n    this.num.position = { x, y: y - 50 }\r\n  }\r\n\r\n  detonate() {\r\n    this.destroy()\r\n  }\r\n\r\n  updateNumber(num) {\r\n    this.num.text = `[ ${num} ]: detonate`\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      this.container.removeChild(this.num)\r\n      let idx = this.buildObjects.indexOf(this)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n      let ridx = this.remoteMinesArr.indexOf(this)\r\n      if (ridx > -1) {\r\n        this.remoteMinesArr.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { World, Body, Bodies, Vector } from 'matter-js'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS, LESS_THAN_PLAYER_Y_POS } from '../constants/mouseStates'\r\nimport { PISTOL_BULLET_REMOVAL_TIMEOUT, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX,\r\n  WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET, WEAPON_TYPE_SHOTGUN\r\n } from '../constants/weapons'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport { calcBulletAngle, getBodyWidth, getBodyHeight, getPlayerBody, getPlayerPartByType } from '../utils/Utils'\r\nimport { createGenericMessage, createTextMessage } from '../createMessages'\r\nimport { setLastShot, StatsDefs } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { increaseStats } from '../gameSlice'\r\nimport { radians } from 'radians'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const calcPistolDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_PISTOL]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcTurretDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_TURRET]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcSMGDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SMG]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcShotgunDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SHOTGUN]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\n// bullet impact\r\nexport function BulletImpact (surfaceType, position, scale) {\r\n\tlet {x,y} = position\r\n\tlet { gameObjects, TweenLite: { to, set, from } } = window\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n\tWorld.add(world, positionalBody)\r\n\r\n\tlet explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n\tlet smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\tconst getRandomSmokeSprite = () => (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\texplosionAssetsSheet.textures[\r\n\t\t\t\tsmokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n\t\t\t]\r\n\t))\r\n\tlet randInt = 2 //random.int(2, 4)\r\n\tfor (let i = 0; i < randInt; ++i) {\r\n\t\tlet smokeSprite = getRandomSmokeSprite()\r\n\t\tif (surfaceType === 'enemy') {\r\n\t\t\tsmokeSprite.tint = 0xFF0000\r\n\t\t}\r\n\t\tsmokeSprite.pivot.x = smokeSprite.width * .5\r\n\t\tsmokeSprite.pivot.y = smokeSprite.height * .5\r\n\t\tto(smokeSprite, scale && scale.alphaDuration ? scale.alphaDuration : .5, {\r\n\t\t\talpha: 0,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tif (i === randInt - 1) {\r\n\t\t\t\t\tWorld.remove(world, positionalBody)\r\n\t\t\t\t\tworld = null \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet randScale\r\n\t\tif (scale && scale.rand && scale.rand.min && scale.rand.max) {\r\n\t\t\trandScale = random.float(scale.rand.min, scale.rand.max)\r\n\t\t} else {\r\n\t\t\trandScale = random.float(.25, .5)\r\n\t\t}\r\n\t\tset(smokeSprite.scale, {\r\n\t\t\tx: scale && scale.set ? scale.set : .1,\r\n\t\t\ty: scale && scale.set ? scale.set : .1\r\n\t\t})\r\n\t\tto(smokeSprite.scale, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: randScale,\r\n\t\t\ty: randScale\r\n\t\t})\r\n\t\tlet xyval = { x: 0, y: 0 }\r\n\t\tto(xyval, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-10, 10),\r\n\t\t\ty: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-50, 0)\r\n\t\t})\r\n\t\tto(smokeSprite.position, 3, {\r\n\t\t\tonUpdate: () => {\r\n\t\t\t\tif (this.calculatedPosition) {\r\n\t\t\t\t\tsmokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n\t\t\t\t\tsmokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n\t\t\t\t\tif (container && container.children.indexOf(smokeSprite) < 0) {\r\n\t\t\t\t\t\tcontainer.addChild(smokeSprite)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tsmokeSprite.destroy()\r\n\t\t\t\tcontainer = null\r\n\t\t\t\tgameObjects = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tthis.renderPosition = (renderFn) => {\r\n\t\tthis.calculatedPosition = renderFn(positionalBody)\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\n// bullet shell\r\nexport function PistolShell(x, y, gameObjects, changeLabelString, overrideOptions) {\r\n\tlet world, container, shells\r\n\tlet { game: { mouseState, player: { weapons: { equipped, shellEjectionForce, shellRemovalTimeout } } } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!shells) { shells = gameObjects.getKeyValue('pistol-shells') }\r\n\t// matter\r\n\tthis.body = overrideOptions && overrideOptions.body\r\n\t? overrideOptions.body\r\n\t: Bodies.rectangle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 30\r\n      : x - 30\r\n    ,\r\n    mouseState.y === LESS_THAN_PLAYER_Y_POS ? y - 40 : y - 20\r\n    , 7, 4, {\r\n\t\trestitution: 0.75,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.body.label = changeLabelString !== undefined ? `player ${changeLabelString} shell` : 'player pistol shell'\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.body.label = 'shotgun shell'\r\n\t}\r\n\tWorld.add(world, this.body)\r\n\tBody.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.force ? overrideOptions.force : {\r\n\t\tx: mouseState.x === GREATER_THAN_PLAYER_X_POS ? random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max) : random.float(shellEjectionForce[equipped].min, shellEjectionForce[equipped].max),\r\n\t\ty: random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max)\r\n\t})\r\n\tBody.setAngularVelocity(this.body, random.float(-PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, -PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX))\r\n\t// pixi\r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(equipped === WEAPON_TYPE_SHOTGUN ? 0xB00000 : 0xAB931E)\r\n\t// if (!shellWd) {\r\n\t// }\r\n\tlet shellWd = getBodyWidth(this.body)\r\n\tlet shellHt = getBodyHeight(this.body)\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 1)\r\n\t} else {\r\n\t\tif (equipped === WEAPON_TYPE_SMG) {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 2)\r\n\t\t} else {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellWd, shellHt)\r\n\t\t}\r\n\t}\r\n\tthis.gfc.endFill()\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.beginFill(0xCCB64D)\r\n\t\tthis.gfc.drawRect(0, shellWd + 1, shellHt, 3)\r\n\t\t// this.gfc.rotation = radians(45)\r\n\t}\r\n\tif (!window.gameObjects.getKeyValue('bullet-shell-bevel')) {\r\n\t\twindow.gameObjects.setKeyValue('bullet-shell-bevel', new BevelFilter({ lightAlpha: 0.5, shadowAlpha: 0.5 }))\r\n\t}\r\n\tlet filters = [ window.gameObjects.getKeyValue('bullet-shell-bevel') ]\r\n\tthis.gfc.filters = getState().game.filterEffects ? filters : []\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tshells.push(this)\r\n\t// methods\r\n\tthis.destroy = function () {\r\n\t\tcontainer.removeChild(this.gfc)\r\n\t\tWorld.remove(world, this.body)\r\n\t\tthis.body = null\r\n\t\tthis.gfc = null\r\n\t\tshells.splice(shells.indexOf(this), 1)\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t\tshells = null\r\n\t}\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), shellRemovalTimeout[equipped])\r\n\treturn this\r\n}\r\n\r\nexport function PistolBullet(x, y, gameObjects, changeLabelString, overrideOptions, extraDamageBool) {\r\n\tlet world, container\r\n\tlet arm, bullets, bulletWd\r\n\tarm = getPlayerPartByType('arm', gameObjects) \r\n  let { game: { mouseRelativeToPlayerPosition, mouseState } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!bullets) { bullets = gameObjects.getKeyValue('pistol-bullets') }\r\n  this.body = overrideOptions && overrideOptions.overrideBody ? overrideOptions.overrideBody : Bodies.circle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 50\r\n      : x - 50\r\n    ,\r\n    y, 4, {\r\n\t\trestitution: 0.3\r\n  })\r\n\r\n\tthis.body.label = (\r\n\t\textraDamageBool ? 'extra damage bullet'\r\n\t\t:\r\n\t\t\tchangeLabelString !== undefined && changeLabelString !== null ?\r\n\t\t\t`player ${changeLabelString} bullet`\r\n\t\t\t:  'player pistol bullet'\r\n\t)\r\n\tthis.body.main = this\r\n  World.add(world, this.body)\r\n\tBody.setAngle(this.body, overrideOptions && overrideOptions.overrideAngle ? overrideOptions.overrideAngle : Vector.angle(this.body.position, mouseRelativeToPlayerPosition))\r\n  Body.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.overrideForce ? overrideOptions.overrideForce : calcBulletAngle(arm.position, mouseRelativeToPlayerPosition))\r\n\r\n\t// pixi \r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(0xFFFFFF)\r\n\tif (!bulletWd) { bulletWd = getBodyWidth(this.body) }\r\n\tthis.gfc.drawRect(0, 0, bulletWd, (bulletWd/3))\r\n\tthis.gfc.endFill()\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tbullets.push(this)\r\n\t// // add bullet trail\r\n  // let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n\t// this.bulletTrail = new PIXI.Graphics()\r\n\t// this.bulletTrail.lineStyle(\r\n\t// \t2,\r\n\t// \t(\r\n\t// \t\toverrideOptions ? 0xFFFFFF\r\n\t// \t\t:\r\n\t// \t\t\ttier === 1 ? 0xFFFFFF\r\n\t// \t\t\t:\r\n\t// \t\t\t\ttier === 2 ? 0xFFD100\r\n\t// \t\t\t\t:\r\n\t// \t\t\t\t\ttier === 3 ? 0xFF6D00\r\n\t// \t\t\t\t\t:\r\n\t// \t\t\t\t\t\ttier === 4 ? 0xFF0000\r\n\t// \t\t\t\t\t\t: 0xFFFFFF\r\n\t// \t),\r\n\t// \t0.8\r\n\t// )\r\n\t// this.linePoints = []\r\n\t// this.lineDrawn = false\r\n\t// this.drawLine = () => {\r\n\t// \tif (this.lineDrawn === false && getState().game.player.weapons.equipped !== WEAPON_TYPE_SHOTGUN) {\r\n\t// \t\tsetTimeout(() => {\r\n\t// \t\t\tif (this.linePoints) {\r\n\t// \t\t\t\tthis.linePoints.forEach((p, i) => {\r\n\t// \t\t\t\t\tif (this.linePoints[i+1]) {\r\n\t// \t\t\t\t\t\tthis.bulletTrail.moveTo(p.x, p.y)\r\n\t// \t\t\t\t\t\tthis.bulletTrail.lineTo(this.linePoints[i+1].x, this.linePoints[i+1].y)\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t}\r\n\t// \t\t}, 200)\r\n\t// \t\tthis.lineDrawn = true\r\n\t// \t}\r\n\t// }\r\n\t// container.addChild(this.bulletTrail)\r\n\r\n\t// methods\r\n\tthis.addImpactEffect = (surfaceType, pos) => {\r\n\t\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\t\tlet impact = new BulletImpact(surfaceType, pos)\r\n\t\tbulletImpacts.push(impact)\r\n\t}\r\n\r\n\tthis.destroyed = false\r\n\tthis.destroy = function (surfaceType) {\r\n\t\tif (!this.destroyed) {\r\n\t\t\tlet bulletLastPos = this.body.position\r\n\t\t\tthis.destroyed = true\r\n\t\t\tcontainer.removeChild(this.gfc)\r\n\t\t\tcontainer.removeChild(this.bulletTrail)\r\n\t\t\tWorld.remove(world, this.body)\r\n\t\t\tthis.linePoints = null\r\n\t\t\tthis.body = null\r\n\t\t\tthis.gfc = null\r\n\t\t\tif (bullets.indexOf(this) > -1) {\r\n\t\t\t\tbullets.splice(bullets.indexOf(this), 1)\r\n\t\t\t}\r\n\t\t\tif (surfaceType) {\r\n\t\t\t\t// add bullet collision impact effect depending on the surface hit\r\n\t\t\t\tthis.addImpactEffect(surfaceType, bulletLastPos)\r\n\t\t\t}\r\n\t\t\tworld = null\r\n\t\t\tcontainer = null\r\n\t\t\tgameObjects = null \r\n\t\t}\r\n\t}\r\n\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), PISTOL_BULLET_REMOVAL_TIMEOUT)\r\n\treturn this\r\n}\r\n\r\nconst fireEquippedWeapon = (gameObjects) => {\r\n\tlet world, weaponsUI, player, playerBody, playerBodyWd, playerBodyHt, arm\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n  if (!weaponsUI) { weaponsUI = gameObjects.getKeyValue('weapons-ui') }\r\n  if (!player) { player = gameObjects.getKeyValue('player') }\r\n\tlet { game: { player: { weapons: { lastShot, totalAmmo, equipped, shotLimiter } } } } = getState()\r\n\tif (JSON.parse(lastShot[equipped]) + shotLimiter[equipped] < Date.now() && !weaponsUI.checkEmpty(equipped) && !weaponsUI.reloading && totalAmmo[equipped] > 0) {\r\n\t\tdispatch( setLastShot(equipped, JSON.stringify(Date.now())) )\r\n\t\tdispatch( increaseStats( StatsDefs.bulletsFired ) )\r\n    weaponsUI.fireBullet(equipped)\r\n    player.fireWeaponAnimation()\r\n\t\tif (!playerBody) { playerBody = getPlayerBody(gameObjects) }\r\n\t\tif (!playerBodyWd) { playerBodyWd = getBodyWidth(playerBody) }\r\n\t\tif (!playerBodyHt) { playerBodyHt = getBodyHeight(playerBody) }\r\n\t\tif (!arm) { arm = getPlayerPartByType('arm', gameObjects) }\r\n\t\tlet extraDmg = (\r\n\t\t\tweaponsUI.lastBulletByWepType[equipped] && getState().game.player.perks['lastBullet'].owned ? true : false\r\n\t\t)\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tnew PistolShell(0, 0, gameObjects, null, {\r\n\t\t\t\tbody: Bodies.rectangle(playerBody.position.x, arm.position.y, 10, 4, { collisionFilter: playerCollisionOptions })\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tnew PistolShell(playerBody.position.x, arm.position.y, gameObjects, (\r\n\t\t\t\tequipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined\r\n\t\t\t))\r\n\t\t}\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\t\tnew PistolBullet(arm.position.x, arm.position.y, gameObjects, 'shotgun', extraDmg)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnew PistolBullet(\r\n\t\t\t\tarm.position.x,\r\n\t\t\t\tarm.position.y,\r\n\t\t\t\tgameObjects,\r\n\t\t\t\t(equipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined),\r\n\t\t\t\tnull,\r\n\t\t\t\textraDmg\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tworld = null \r\n\t\tweaponsUI = null\r\n\t\tplayer = null\r\n\t\tplayerBody = null\r\n\t\tplayerBodyWd = null\r\n\t\tplayerBodyHt = null\r\n\t\tarm = null \r\n\r\n\t} else if (totalAmmo[equipped] === 0 && getState().game.showingMessage === false) {\r\n\t\t// createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n\t\t// make click noise or some other indicator\r\n\t\tif (!weaponsUI.shaking) {\r\n\t\t\tweaponsUI.changeTextForEmptyShake('EMPTY')\r\n\t\t\tweaponsUI.emptyMagShake()\r\n\t\t}\r\n\t} else if (weaponsUI.checkEmpty(equipped) && getState().game.showingMessage === false) {\r\n\t\tif (!weaponsUI.reloading) {\r\n\t\t\t// createGenericMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// createTextMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// make empty mag sound or shake weapon UI\r\n\t\t\tif (!weaponsUI.shaking) {\r\n\t\t\t\tweaponsUI.changeTextForEmptyShake('RELOAD')\r\n\t\t\t\tweaponsUI.emptyMagShake()\r\n\t\t\t}\r\n    }\r\n\t}\r\n}\r\n\r\nexport const firePistol = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireSMG = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireShotgun = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n","import random from 'random'\r\nimport * as PIXI from 'pixi.js'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport store from '../../../app/store'\r\n\r\nexport default class MuzzleFlashFX {\r\n\r\n  constructor() {\r\n    let { gameObjects } = window\r\n    this.to = window.TweenLite.to\r\n    this.set = window.TweenLite.set\r\n    let container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.container = container\r\n    let muzzleFlashesSheet = gameObjects.getKeyValue('muzzle-flashes-sheet')\r\n    let muzzleFlash001 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash1.png']\r\n    )\r\n    let muzzleFlash002 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash2.png']\r\n    )\r\n    let muzzleFlash003 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash3.png']\r\n    )\r\n    let muzzleFlash004 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash4.png']\r\n    )\r\n    let muzzleFlash005 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash5.png']\r\n\t\t)\r\n\t\tlet muzzleFlashes = [\r\n\t\t\tmuzzleFlash001,\r\n\t\t\tmuzzleFlash002,\r\n\t\t\tmuzzleFlash003,\r\n\t\t\tmuzzleFlash004,\r\n\t\t\tmuzzleFlash005\r\n\t\t]\r\n    container.addChild(muzzleFlash001)\r\n    container.addChild(muzzleFlash002)\r\n    container.addChild(muzzleFlash003)\r\n    container.addChild(muzzleFlash004)\r\n    container.addChild(muzzleFlash005)\r\n    muzzleFlash001.visible = false\r\n    muzzleFlash002.visible = false\r\n    muzzleFlash003.visible = false\r\n    muzzleFlash004.visible = false\r\n    muzzleFlash005.visible = false\r\n    // muzzle fire FX \r\n    this.muzzleScale = .65\r\n    this.blurFilter = new PIXI.filters.BlurFilter()\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n    this.blurFilter.quality = 5\r\n    this.glowFilter = new GlowFilter()\r\n    this.glowFilter.innerStrength = 0.1\r\n    this.glowFilter.outerStrength = random.float(1.0, 1.5)\r\n    // this.glowFilter.color = 0xFFFFFF\r\n    this.adjustmentFilter = new AdjustmentFilter()\r\n    this.adjustmentFilter.brightness = 2.0\r\n    this.adjustmentFilter.saturation = 2.0\r\n    this.flashes = []\r\n    muzzleFlashes.forEach(flash => {\r\n      flash.updateAnchor = true\r\n      flash.scale = { x: this.muzzleScale, y: this.muzzleScale }\r\n      flash.filters = store.getState().game.filterEffects ? [\r\n        this.blurFilter,\r\n        this.adjustmentFilter,\r\n        this.glowFilter\r\n      ] : []\r\n      this.flashes.push( flash )\r\n    })\r\n  }\r\n\r\n  get muzzleScale () {\r\n    return this._muzzleScale\r\n  }\r\n\r\n  set muzzleScale (scale) {\r\n    this._muzzleScale = scale\r\n  }\r\n\r\n  fireEffect(pos) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let randFlash = this.getRandomFlash()\r\n    randFlash.visible = true\r\n    if (pos) {\r\n      randFlash.position = pos\r\n    }\r\n    if (store.getState().game.filterEffects) {\r\n      this.adjustmentFilter.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      this.glowFilter.color = (\r\n        tier === 1 ? 0xFFF500\r\n          :\r\n            tier === 2 ? 0xFFD100\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF3800\r\n                : 0xFFFFFF\r\n      )\r\n    }\r\n    randFlash.filters = store.getState().game.filterEffects ? [\r\n      this.glowFilter,\r\n      this.adjustmentFilter,\r\n      this.blurFilter\r\n    ] : []\r\n    this.container.addChild( randFlash )\r\n    this.set(randFlash, { alpha: 1 })\r\n    this.set(randFlash.scale, { x: this.muzzleScale })\r\n    this.to(randFlash, .1, { alpha: 0 })\r\n    this.to(randFlash.scale, .1, { x: this.muzzleScale * 2, onComplete: () => {\r\n      randFlash.visible = false\r\n    }})\r\n  }\r\n\r\n  setMuzzleRotations(rotation) {\r\n    this.flashes.forEach(flash => {\r\n      flash.rotation = rotation\r\n    })\r\n    this.rotation = rotation\r\n  }\r\n\r\n  getRandomBlur() {\r\n    return random.float(0.5, 4.0)\r\n  }\r\n\r\n  changeBlurAmount() {\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n  }\r\n\r\n  getFlashes() {\r\n    return this.flashes\r\n  }\r\n\r\n  getRandomFlash() {\r\n    return this.flashes[ Math.floor( Math.random() * this.flashes.length) ]\r\n  }\r\n\r\n}","import { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { Bodies, World, Constraint } from 'matter-js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { PistolShell, PistolBullet } from '../player/fireWeapons'\r\nimport { radians, degrees } from 'radians'\r\nimport { getBodyHeight, getBodyWidth } from '../utils/Utils'\r\nimport store from '../../../app/store'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport random from 'random'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class MachineGunTurret {\r\n\r\n  constructor(position) {\r\n    let {x,y} = position\r\n    this.delayedCall = window.TweenLite.delayedCall\r\n    this.gameObjects = window.gameObjects\r\n    this.world = this.gameObjects.getKeyValue('world')\r\n    this.buildObjects = this.gameObjects.getKeyValue('build-objects')\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    this.scanAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-scan-sheet').animations['turretScan']\r\n    )\r\n    this.scanAnim.visible = true\r\n    this.scanAnim.loop = true\r\n    this.scanAnim.play()\r\n    this.shootAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-shoot-sheet').animations['turretShoot']\r\n    )\r\n    this.shootAnim.loop = false\r\n    this.shootAnim.onFrameChange = () => {\r\n      // if (this.shootAnim.currentFrame === 2) {\r\n      //   this.fireBullet()\r\n      // }\r\n    }\r\n    this.shootAnim.onComplete = () => {\r\n      this.shootAnim.gotoAndStop(0)\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n    this.shootAnim.visible = false\r\n    this.scanAnim.width = 150\r\n    this.scanAnim.height = 150\r\n    this.scanAnim.pivot.x = this.scanAnim.width * .5\r\n    this.scanAnim.pivot.y = this.scanAnim.height\r\n    this.shootAnim.width = 150\r\n    this.shootAnim.height = 150\r\n    this.shootAnim.pivot.x = this.shootAnim.width * .5\r\n    this.shootAnim.pivot.y = this.shootAnim.height\r\n    this.turret = new Container()\r\n    this.turret.addChild(this.scanAnim, this.shootAnim)\r\n    this.container.addChild(this.turret)\r\n\r\n    this.turret.children.forEach(child => {\r\n    })\r\n\r\n    this.body = Bodies.rectangle(x, y, 50, 50, {\r\n      label: 'turret barrier',\r\n      main: this\r\n    })\r\n    this.body.removeSelf = () => {\r\n      this.destroy()\r\n    }\r\n    let ground = this.gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + position.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n    \r\n    this.body.strength = 250\r\n    this.healthDisplay = new Text(`health: ${this.body.strength}`, { fontSize: 12, fill: 0xFFFFFF })\r\n    this.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n    this.container.addChild(this.healthDisplay)\r\n\r\n    this.direction = 'right'\r\n\r\n    // re-add player sprites on-top\r\n    let player = this.gameObjects.getKeyValue('player')\r\n    if (!player.dead) {\r\n      player.sprites.forEach(s => { this.container.addChild(s) })\r\n    }\r\n\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  takeDamage(dmg) {\r\n    this.body.strength -= dmg\r\n    this.healthDisplay.text = `health: ${this.body.strength}`\r\n  }\r\n\r\n  displayBarrierStrength(renderFn) {\r\n    let {x,y} = renderFn(this.body)\r\n    this.healthDisplay.position = { x, y: y - 100 }\r\n    this.turret.position = { x, y }\r\n  }\r\n\r\n  updateDirection(direction) {\r\n    this.turret.scale.x = direction === 'left' ? -1 : 1\r\n    this.direction = direction\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  resumeScan() {\r\n    if (!this.scanning) {\r\n      this.scanning = true\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n  }\r\n\r\n  fireBullet() {\r\n    if (!this.destroyed) {\r\n      if (!this.muzzleFlashFX) {\r\n        this.muzzleFlashFX = new MuzzleFlashFX()\r\n        this.muzzleFlashFX.setMuzzleRotations(this.direction === 'left' ? degrees(-92) : degrees(92))\r\n      }\r\n      // fire bullet\r\n      let { game: { player: { weapons: { bulletForce } } } } = store.getState()\r\n      let { x, y } = this.body.position\r\n      this.muzzleFlashFX.fireEffect(\r\n        this.direction == 'left'\r\n        ? { x: this.turret.position.x - 100, y: this.turret.position.y - 25 }\r\n        : { x: this.turret.position.x + 100, y: this.turret.position.y - 25  }\r\n      )\r\n      let overrideBody = Bodies.circle(x, y - 25, 5)\r\n      let _ejectY = random.float(-0.0005, -0.00075)\r\n      new PistolShell(0, 0, this.gameObjects, null, {\r\n        body: Bodies.rectangle(x, y - 50, 7, 4, { collisionFilter: playerCollisionOptions }),\r\n        force: this.direction === 'right' ?\r\n        {\r\n          \"x\": random.float(-0.00035, -0.00075),\r\n          \"y\": _ejectY\r\n        } : {\r\n          \"x\": random.float(0.00035, 0.00075),\r\n          \"y\": _ejectY\r\n        },\r\n      })\r\n      new PistolBullet(0, 0, this.gameObjects, 'turret', {\r\n        overrideBody,\r\n        overrideForce: this.direction === 'left' ?\r\n        {\r\n          \"x\": -0.01,\r\n          \"y\": -0.00075\r\n        } : {\r\n          \"x\": 0.01,\r\n          \"y\": -0.00075\r\n        },\r\n        overrideAngle: this.direction === 'left' ? -3.0 : 0.1\r\n      })\r\n    }\r\n  }\r\n\r\n  shoot() {\r\n    if (!this.shooting && !this.destroyed) {\r\n      let { game: { traps: { turret: { cooldown } } } } = store.getState()\r\n      this.fireBullet()\r\n      this.shooting = true\r\n      this.scanAnim.visible = false\r\n      this.shootAnim.visible = true\r\n      this.shootAnim.play()\r\n      this.delayedCall(cooldown, () => {\r\n        this.shooting = false\r\n      })\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      new GrenadeExplosion(this.body.position, true)\r\n      this.container.removeChild(this.turret, this.healthDisplay)\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      let idx = this.buildObjects.indexOf(this, 1)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { AnimatedSprite } from 'pixi.js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Spark {\r\n\r\n  constructor (type, renderBody, options) {\r\n    let spark1 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('sparks-sheet').animations['spark-particle']\r\n    )\r\n    let spark2 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('muzzle-sparks-sheet').animations['muzzleSparks']\r\n    )\r\n    let sparks = [ spark1, spark2 ]\r\n    sparks.forEach(spark => {\r\n      let scale = options && options.scale ? options.scale : 1.0\r\n      if (scale !== 1.0) {\r\n        spark.scale.x = scale\r\n        spark.scale.y = scale\r\n      }\r\n      spark.pivot.x = spark.width  * .5\r\n      spark.pivot.y = spark.height * .5\r\n      spark.loop = false\r\n      spark.animationSpeed = options && options.animationSpeed ? options.animationSpeed : 1.0\r\n      spark.onComplete = () => {\r\n        this.container.removeChild(spark)\r\n        this.container = null\r\n        spark = null\r\n        spark1 = null\r\n        spark2 = null\r\n        sparks = null\r\n      }\r\n    })\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    switch (type) {\r\n      case 1:\r\n        this.spark = spark1\r\n        if (options && options.tint) {\r\n          this.spark.tint = options.tint\r\n        }\r\n        break;\r\n      case 2:\r\n        this.spark = spark2\r\n        this.blurFilter = new PIXI.filters.BlurFilter(random.float(0.5, 0.75), 5)\r\n        this.adjFilter = new AdjustmentFilter()\r\n        this.glowFilter = new GlowFilter()\r\n        this.adjFilter.saturation = 2.0\r\n        this.adjFilter.brightness = 1.5\r\n        // glowFilter.outerStrength = 1.0\r\n        this.glowFilter.color = 0xFFFFFF //0xFFD100 //0xFF9C00 //0xFFFFFF\r\n        this.filters = store.getState().game.filterEffects ? [\r\n          this.blurFilter,\r\n          this.adjFilter,\r\n          this.glowFilter\r\n        ] : []\r\n        this.spark.filters = this.filters\r\n        break;\r\n        default:\r\n    }\r\n    if (options && options.scale) {\r\n      let sparkContainer = new PIXI.Container()\r\n      this.spark.scale.x = options.scale\r\n      this.spark.scale.y = options.scale\r\n      sparkContainer.addChild(this.spark)\r\n      sparkContainer.pivot.x = sparkContainer.width * (options.scale * .5)\r\n      sparkContainer.pivot.y = sparkContainer.height * (options.scale * .5)\r\n      this.spark = sparkContainer\r\n    }\r\n\r\n    this.renderBody = renderBody\r\n    if (!options || (options && !options.stop)) {\r\n      if (this.spark.play) {\r\n        this.spark.play()\r\n      }\r\n      if (this.spark.children && this.spark.children[0]) {\r\n        this.spark.children[0].play()\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  getFilters() {\r\n    return {\r\n      glow: this.glowFilter,\r\n      adjust: this.adjFilter,\r\n      blur: this.blurFilter\r\n    }\r\n  }\r\n\r\n  updateFilters(filters) {\r\n    this.filters = filters\r\n    this.spark.filters = this.filters\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.spark.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.spark) === -1) {\r\n        this.container.addChild(this.spark)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { CustomMenuButton, Inline } from './ShopMenu'\r\nimport { gameStateTransition, incrementWave } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nposition: absolute;\r\nmargin: auto;\r\ntop: 40px;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nbackground-color: #222;\r\nopacity: .5;\r\n`\r\n\r\nexport const nextWave = () => {\r\n  let { dispatch, getState } = store\r\n  let { waveNum:wave, lvlToWin, gameState, gameSubState } = getState().game\r\n  let screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  if (wave < lvlToWin) {\r\n    screenUI.unpause()\r\n    dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  } else {\r\n    alert('You win!')\r\n  }\r\n}\r\n\r\nexport default function ShopQuery () {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const wave = useSelector(state => state.game.waveNum)\r\n  const lvlToWin = useSelector(state => state.game.lvlToWin)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  \r\n  const gotoShop = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.SHOP_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n  \r\n  const gotoBuildMenu = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoShop }>Shop</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoBuildMenu }>Build Barriers/Traps</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n          <MenuButtonSpacer padding={2}>\r\n            <CustomMenuButton width={400} height={40} onClick={ nextWave }>\r\n              {\r\n                wave < lvlToWin ? 'Next Wave' : 'Submit your score!'\r\n              }\r\n            </CustomMenuButton>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { degrees } from 'radians'\r\nimport { World, Body, Bodies, Constraint, Composite, Vector } from 'matter-js'\r\nimport { setMousePosition, setPlayerCompositeId, setKeyPress,\r\n\tremoveKeyPress, setJumping, setMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot, setWeaponEquipped, setCompositeBodyIds, decrementGrenadeCount,\r\n   gameStateTransition, unsetAllKeys, resetPlayerVariables, addToTotalAmmo, addToTotalCredits,\r\n   updatePlayerHealth, subtractFromTotalCredits, setRightMouseDown, setLastMagDropped, increaseStats, StatsDefs, setAchievementOwned, AchievementDefs, setBarrierTypePlaced, setTrapTypePlaced, increaseStatsByAmount } from '../gameSlice'\r\nimport { getPlayerBody, getPlayerComposite, getBodyWidth, getBodyHeight, makePixiSprite } from '../utils/Utils'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS,\r\n\tLESS_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_Y_POS,\r\n\tMOUSE_DOWN, MOUSE_UP } from '../constants/mouseStates'\r\nimport { WEAPON_TYPE_GRENADE, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { batch } from 'react-redux'\r\nimport { createTextMessage } from '../createMessages'\r\nimport PlayerRagdoll, { PlayerRagdollHalved, PlayerRagdollDecap, PlayerRagdollMaim } from './PlayerRagdoll'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { KILLED_BY_ZOMBIE, FELL_OFF } from '../constants/DeathTypes'\r\nimport { calcGrenadeAngle } from '../utils/Utils'\r\nimport WallBarrier from '../BuildItems/WallBarrier'\r\nimport random from 'random'\r\nimport Landmine from '../BuildItems/Landmine'\r\nimport Grenade from '../items/Grenade'\r\nimport Clustermine from '../BuildItems/Clustermine'\r\nimport { trapTypes } from '../constants/buildTypes'\r\nimport RemoteMine from '../BuildItems/RemoteMine'\r\nimport MachineGunTurret from '../BuildItems/MachineGunTurret'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport Spark from '../FX/Sparks'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { Howl, Howler } from 'howler'\r\nimport { updateScore, subtractScore } from '../utils/updateScore'\r\nimport { nextWave } from '../ReactComponents/ShopQuery'\r\n\r\nexport class EnhancedMuzzleSpark {\r\n  constructor(renderBody) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let to = window.TweenLite.to\r\n    let gameObjects = window.gameObjects\r\n    let muzzleSpark = new Spark(2, renderBody)\r\n    let sparks = gameObjects.getKeyValue('spark-sprites')\r\n    muzzleSpark.spark.scale.x = .5 //random.float(.5, 1.0)\r\n    muzzleSpark.spark.scale.y = .5\r\n    sparks.push( muzzleSpark )\r\n    muzzleSpark.spark.gotoAndPlay( random.int(10, 15) )\r\n    if (store.getState().game.filterEffects) {\r\n      let { adjust, glow, blur } = muzzleSpark.getFilters()\r\n      adjust.brightness = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          : \r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 3.5\r\n              : 1.0\r\n      )\r\n      adjust.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      glow.color = (\r\n        tier === 1 ? 0xFFFFFF\r\n          :\r\n            tier === 2 ? 0xFFF500\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF6D00\r\n                : 0xFFFFFF\r\n      )\r\n      muzzleSpark.updateFilters([ glow, blur, adjust ])\r\n    }\r\n\r\n    to(muzzleSpark.spark.scale, .1, { x: 0.55, y: 0.55 })\r\n    return muzzleSpark\r\n  }\r\n}\r\n\r\nexport default function Player() {\r\n\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet { getState, dispatch } = store\r\n\tlet { game: { width: gameWidth, height: gameHeight, player: { constants: { width: wd, height: ht } } } } = getState()\r\n\tlet { TweenLite } = window\r\n\tlet { delayedCall, to, from, set } = TweenLite\r\n\r\n\tthis.body = Bodies.rectangle(400, 200, wd, ht, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.arm = Bodies.rectangle(400, 200, 30, 15, {\r\n\t\tfriction: 0,\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n  })\r\n  // this.armPointBody = Bodies.rectangle(400, 200, 10, 10, {\r\n  //   friction: 0,\r\n  //   inertia: Infinity,\r\n  //   collisionFilter: playerCollisionOptions\r\n  // })\r\n  // this.armPoint = Constraint.create({\r\n  //   bodyA: this.arm,\r\n  //   bodyB: this.armPointBody,\r\n  //   pointA: { x: -60, y: 0 },\r\n  //   pointB: { x: 0, y: 0 },\r\n  //   length: 0,\r\n  //   // stiffness: 1\r\n  // })\r\n\tthis.armAttach = Constraint.create({\r\n\t\tbodyA: this.arm,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 12, y: 0 },\r\n\t\tpointB: { x: 0, y: -80 },\r\n\t\tlength: 0\r\n\t})\r\n\t// head\r\n\tthis.head = Bodies.rectangle(400, 200, 20, 24, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.headAttach = Constraint.create({\r\n\t\tbodyA: this.head,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 0, y: 10 },\r\n\t\tpointB: { x: 0, y: -((ht/2) + 5) },\r\n\t\tlength: 0\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n\t\t// bodies\r\n\t\tthis.body,\r\n\t\tthis.arm,\r\n\t\tthis.head,\r\n\t\t// constraints\r\n\t\t// this.armPoint,\r\n\t\tthis.armAttach,\r\n\t\tthis.headAttach\r\n\t])\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.label = 'player character'\r\n\t\tbody.main = this\r\n\t})\r\n\tdispatch(setPlayerCompositeId(this.composite.id))\r\n\tdispatch(setCompositeBodyIds({\r\n\t\tbodyId: this.body.id,\r\n\t\theadId: this.head.id,\r\n\t\tarmId: this.arm.id\r\n  }))\r\n  dispatch(\r\n    setLastMagDropped( JSON.stringify(Date.now()) )\r\n  )\r\n\r\n\tthis.composite.body = this.body\r\n\tthis.composite.arm = this.arm\r\n\r\n\tWorld.add(world, this.composite)\r\n\r\n\tdispatch( setLastShot(WEAPON_TYPE_PISTOL, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SMG, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SHOTGUN, JSON.stringify(Date.now())) )\r\n\r\n\t// create player lifebar UI\r\n\tthis.life = 100\r\n  \r\n\tlet lifebarOutline = new PIXI.Graphics()\r\n\tlifebarOutline.lineStyle(1.0, 0x202D0A)\r\n\tlifebarOutline.drawRect(0, 0, gameWidth * .75, 12)\r\n  container.addChild(lifebarOutline)\r\n\r\n  let lifebarGreen = 0x00FA9A\r\n  let damageRed = 0xDD0E0E\r\n\tlet lifebar = new PIXI.Graphics()\r\n  lifebar.beginFill(0xFFFFFF)\r\n  lifebar.tint = lifebarGreen\r\n  lifebar.drawRect(0, 0, (gameWidth * .75) - 2, 10)\r\n  let bevel = new BevelFilter({ thickness: 5, lightAlpha: .5, lightColor: 0xffffff, shadowAlpha: .4, shadowColor: 0x0 })\r\n  lifebar.filters = getState().game.filterEffects ? [ bevel ] : []\r\n\tcontainer.addChild(lifebar)\r\n\tthis.initialLifebarWidth = lifebar.width\r\n\r\n\tlifebarOutline.position.x = 50\r\n\tlifebarOutline.position.y = gameHeight - 60\r\n\tlifebar.position.x = lifebarOutline.position.x + 1\r\n  lifebar.position.y = lifebarOutline.position.y + 1\r\n  let lifebarDefaultPosition = lifebar.position\r\n\r\n  //-- Reloading weapons\r\n  // this.reloading = false\r\n  // reload pistol anim\r\n  let charReloadPistolSpritesheet = gameObjects.getKeyValue('char-reload-pistol-sheet')\r\n  let charReloadPistolSprite = new PIXI.AnimatedSprite(charReloadPistolSpritesheet.animations['char_reload_pistol'])\r\n  charReloadPistolSprite.loop = false\r\n  charReloadPistolSprite.animationSpeed = .5\r\n  charReloadPistolSprite.updateAnchor = true\r\n  charReloadPistolSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadPistolSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadPistolSprite.visible = false\r\n  charReloadPistolSprite.onComplete = () => {\r\n    charReloadPistolSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadPistolSprite)\r\n\r\n  // reload smg anim\r\n  let charReloadSMGSpritesheet = gameObjects.getKeyValue('char-reload-smg-sheet')\r\n  let charReloadSMGSprite = new PIXI.AnimatedSprite(charReloadSMGSpritesheet.animations['char_reload_smg'])\r\n  charReloadSMGSprite.loop = false\r\n  charReloadSMGSprite.animationSpeed = .5\r\n  charReloadSMGSprite.updateAnchor = true\r\n  charReloadSMGSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadSMGSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadSMGSprite.visible = false\r\n  charReloadSMGSprite.onComplete = () => {\r\n    charReloadSMGSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadSMGSprite)\r\n  \r\n  // reload shotgun anim\r\n  let charReloadShotgunSpritesheet = gameObjects.getKeyValue('char-reload-shotgun-sheet')\r\n  let charReloadShotgunSprite = new PIXI.AnimatedSprite(charReloadShotgunSpritesheet.animations['shotgunReload'])\r\n  charReloadShotgunSprite.loop = false\r\n  charReloadShotgunSprite.animationSpeed = .5\r\n  charReloadShotgunSprite.updateAnchor = true\r\n  charReloadShotgunSprite.pivot.x = charReloadShotgunSprite.width * .725\r\n  charReloadShotgunSprite.pivot.y = charReloadShotgunSprite.height * .5\r\n  charReloadShotgunSprite.visible = false\r\n  this.shotgunShellLoadIterations = 0\r\n  this.gotoToEndOfShotgunReload = true\r\n  charReloadShotgunSprite.onComplete = () => {\r\n    charReloadShotgunSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n    this.shotgunShellLoadIterations = 0\r\n    this.gotoToEndOfShotgunReload = true\r\n  }\r\n  container.addChild(charReloadShotgunSprite)\r\n\r\n  this.reloadAnimsByType = {\r\n    'pistol weapon': charReloadPistolSprite,\r\n    'smg weapon': charReloadSMGSprite,\r\n    'shotgun weapon': charReloadShotgunSprite\r\n  }\r\n\r\n  this.reloadAnims = [\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite\r\n  ]\r\n\r\n  //-- Melee anims\r\n  let motionBlur = new MotionBlurFilter()\r\n  motionBlur.kernelSize = 5\r\n  motionBlur.velocity.x = 30\r\n  motionBlur.velocity.y = 40\r\n  // pistol melee\r\n  let meleePistolSpritesheet = gameObjects.getKeyValue('melee-pistol-sheet')\r\n  let meleePistolAnim = new PIXI.AnimatedSprite(meleePistolSpritesheet.animations['melee_pistol'])\r\n  meleePistolAnim.loop = false\r\n  meleePistolAnim.animationSpeed = .75\r\n  meleePistolAnim.updateAnchor = true\r\n  meleePistolAnim.pivot.x = meleePistolAnim.width * .5\r\n  meleePistolAnim.pivot.y = meleePistolAnim.height * .5\r\n  meleePistolAnim.visible = false\r\n  meleePistolAnim.onComplete = () => {\r\n    meleePistolAnim.gotoAndStop(0)\r\n    meleePistolAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleePistolAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleePistolAnim.currentFrame > 12 && meleePistolAnim.currentFrame < 15) {\r\n      meleePistolAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleePistolAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleePistolAnim)\r\n  \r\n  // ump melee\r\n  let meleeUMPSpritesheet = gameObjects.getKeyValue('melee-ump-sheet')\r\n  let meleeUMPAnim = new PIXI.AnimatedSprite(meleeUMPSpritesheet.animations['melee_ump'])\r\n  meleeUMPAnim.loop = false\r\n  meleeUMPAnim.animationSpeed = .75\r\n  meleeUMPAnim.updateAnchor = true\r\n  meleeUMPAnim.pivot.x = meleeUMPAnim.width * .5\r\n  meleeUMPAnim.pivot.y = meleeUMPAnim.height * .5\r\n  meleeUMPAnim.visible = false\r\n  meleeUMPAnim.onComplete = () => {\r\n    meleeUMPAnim.gotoAndStop(0)\r\n    meleeUMPAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeUMPAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeUMPAnim.currentFrame > 11 && meleeUMPAnim.currentFrame < 14) {\r\n      meleeUMPAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeUMPAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeUMPAnim)\r\n\r\n  // shotgun melee\r\n  let meleeShotgunSpritesheet = gameObjects.getKeyValue('melee-shotgun-sheet')\r\n  let meleeShotgunAnim = new PIXI.AnimatedSprite(meleeShotgunSpritesheet.animations['meleeShotgun'])\r\n  meleeShotgunAnim.loop = false\r\n  meleeShotgunAnim.animationSpeed = .5\r\n  meleeShotgunAnim.updateAnchor = true\r\n  meleeShotgunAnim.pivot.x = meleeShotgunAnim.width * .75\r\n  meleeShotgunAnim.pivot.y = meleeShotgunAnim.height * .5\r\n  meleeShotgunAnim.visible = false\r\n  meleeShotgunAnim.onComplete = () => {\r\n    meleeShotgunAnim.gotoAndStop(0)\r\n    meleeShotgunAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeShotgunAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeShotgunAnim.currentFrame > 6 && meleeShotgunAnim.currentFrame < 9) {\r\n      meleeShotgunAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeShotgunAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeShotgunAnim)\r\n\r\n  this.meleeSprites = [\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim\r\n  ]\r\n\r\n  //-- Grenade throws \r\n  this.grenadeThrowInProgress = false\r\n  this.grenadeForce = { x: 0.001, y: 0.001 }\r\n  this.chargingGrenade = false\r\n  this.chargeGrenade = () => {\r\n    this.chargeGrenadeSound = gameObjects.getKeyValue('charging-grenade-sound')\r\n    if (this.chargeGrenadeSound && !this.chargingGrenade) {\r\n      this.chargeGrenadeSound.play()\r\n    }\r\n    container.addChild(this.meter)\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.chargingGrenade = true\r\n    if (this.grenadeForce.x <= this.grenadeUpperForceThreshold) {\r\n      this.grenadeForce.x += this.grenadeChargeRate\r\n      this.grenadeForce.y += this.grenadeChargeRate\r\n    }\r\n  }\r\n\r\n  const createGrenadeChargeMeter = () => {\r\n    this.meter = new PIXI.Graphics()\r\n    this.meter.beginFill(0xffa23f)\r\n    this.meter.drawRect(0, 0, 100, 10)\r\n    container.addChild(this.meter)\r\n  }\r\n  createGrenadeChargeMeter()\r\n\r\n  this.renderGrenadeChargeMeter = renderFn => {\r\n    let { x, y } = renderFn(this.body)\r\n    this.grenadeUpperForceThreshold = getState().game.player.weapons.grenadeUpperForceThreshold\r\n    if (this.meter && this.chargingGrenade) {\r\n      this.meter.position.x = x - this.meter.width/2\r\n      this.meter.position.y = y - getBodyHeight(this.body) * .75\r\n      this.meter.width = this.grenadeForce.x/this.grenadeUpperForceThreshold * 100\r\n    } else {\r\n      this.meter.width = 0\r\n    }\r\n  }\r\n  \r\n  this.createGrenade = () => {\r\n    let r = 8\r\n    let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.updateGrenadeIcons()\r\n    let grenades = gameObjects.getKeyValue('grenades')\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.calculatedGrenadeForce = calcGrenadeAngle(this.arm.position, getState().game.mouseRelativeToPlayerPosition, this.grenadeForce)\r\n    grenades.push(\r\n      new Grenade(\r\n        getState().game.mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) : this.body.position.x - getBodyWidth(this.body),\r\n        this.body.position.y - (getBodyHeight(this.body)/2),\r\n        r,\r\n        this.calculatedGrenadeForce\r\n      )\r\n    )\r\n    this.grenadeForce = { x: 0.001, y: 0.001 }\r\n    this.chargingGrenade = false\r\n  }\r\n\r\n  this.throwGrenade = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (grenadeThrowPistolAnim.currentFrame < 1) {\r\n          grenadeThrowPistolAnim.visible = true\r\n          grenadeThrowPistolAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (grenadeThrowUMPAnim.currentFrame < 1) {\r\n          grenadeThrowUMPAnim.visible = true\r\n          grenadeThrowUMPAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (grenadeThrowShotgunAnim.currentFrame < 1) {\r\n          grenadeThrowShotgunAnim.visible = true\r\n          grenadeThrowShotgunAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n    }\r\n    if (!this.grenadeThrowInProgress) {\r\n      if (this.chargeGrenadeSound) {\r\n        this.chargeGrenadeSound.stop()\r\n      }\r\n      delayedCall(.2, () => {\r\n        let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n        _throw.play()\r\n        this.createGrenade()\r\n      })\r\n      this.chargingGrenade = false\r\n      this.grenadeThrowInProgress = true\r\n      if (attacks[equipped]) {\r\n        attacks[equipped]()\r\n        batch(() => {\r\n          dispatch( decrementGrenadeCount() )\r\n          dispatch( increaseStats( StatsDefs.grenadesThrown ) )\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // pistol equpped - 'nade throw\r\n  let grenadeThrowPistolSpritesheet = gameObjects.getKeyValue('grenade-pistol-sheet')\r\n  let grenadeThrowPistolAnim = new PIXI.AnimatedSprite(grenadeThrowPistolSpritesheet.animations['grenade_throw_pistol'])\r\n  grenadeThrowPistolAnim.loop = false\r\n  grenadeThrowPistolAnim.animationSpeed = 1.00\r\n  grenadeThrowPistolAnim.updateAnchor = true\r\n  grenadeThrowPistolAnim.pivot.x = grenadeThrowPistolAnim.width * .5\r\n  grenadeThrowPistolAnim.pivot.y = grenadeThrowPistolAnim.height * .5\r\n  grenadeThrowPistolAnim.visible = false\r\n  grenadeThrowPistolAnim.onComplete = () => {\r\n    grenadeThrowPistolAnim.gotoAndStop(0)\r\n    grenadeThrowPistolAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowPistolAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowPistolAnim.currentFrame > 22) {\r\n      if (!this.grenadeThrown) {\r\n        // this.createGrenade()\r\n        this.grenadeThrown = true\r\n        delayedCall(.5, () => { this.grenadeThrown = false })\r\n      }\r\n    }\r\n    if (grenadeThrowPistolAnim.currentFrame > 27) {\r\n      grenadeThrowPistolAnim.gotoAndStop(0)\r\n      grenadeThrowPistolAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowPistolAnim)\r\n  // ump equipped - 'nade throw\r\n  let grenadeThrowUMPSpritesheet = gameObjects.getKeyValue('grenade-ump-sheet')\r\n  let grenadeThrowUMPAnim = new PIXI.AnimatedSprite(grenadeThrowUMPSpritesheet.animations['grenade_throw_ump'])\r\n  grenadeThrowUMPAnim.loop = false\r\n  grenadeThrowUMPAnim.animationSpeed = 1.00\r\n  grenadeThrowUMPAnim.updateAnchor = true\r\n  grenadeThrowUMPAnim.pivot.x = grenadeThrowUMPAnim.width * .5\r\n  grenadeThrowUMPAnim.pivot.y = grenadeThrowUMPAnim.height * .5\r\n  grenadeThrowUMPAnim.visible = false\r\n  grenadeThrowUMPAnim.onComplete = () => {\r\n    grenadeThrowUMPAnim.gotoAndStop(0)\r\n    grenadeThrowUMPAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowUMPAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowUMPAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowUMPAnim.currentFrame > 27) {\r\n      grenadeThrowUMPAnim.gotoAndStop(0)\r\n      grenadeThrowUMPAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowUMPAnim)\r\n  // shotgun equipped - 'nade throw\r\n  let grenadeThrowShotgunSpritesheet = gameObjects.getKeyValue('grenade-shotgun-sheet')\r\n  let grenadeThrowShotgunAnim = new PIXI.AnimatedSprite(grenadeThrowShotgunSpritesheet.animations['shotgunGrenadeThrow'])\r\n  grenadeThrowShotgunAnim.loop = false\r\n  grenadeThrowShotgunAnim.animationSpeed = 1.00\r\n  grenadeThrowShotgunAnim.updateAnchor = true\r\n  grenadeThrowShotgunAnim.pivot.x = grenadeThrowShotgunAnim.width * .5\r\n  grenadeThrowShotgunAnim.pivot.y = grenadeThrowShotgunAnim.height * .5\r\n  grenadeThrowShotgunAnim.visible = false\r\n  grenadeThrowShotgunAnim.onComplete = () => {\r\n    grenadeThrowShotgunAnim.gotoAndStop(0)\r\n    grenadeThrowShotgunAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowShotgunAnim.onFrameChange = () => {\r\n    if (grenadeThrowShotgunAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowShotgunAnim.currentFrame > 27) {\r\n      grenadeThrowShotgunAnim.gotoAndStop(0)\r\n      grenadeThrowShotgunAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowShotgunAnim)\r\n\r\n  this.grenadeSprites = [\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n\r\n  this.grenadeSpritesByEquipped = {\r\n    'pistol weapon': grenadeThrowPistolAnim,\r\n    'smg weapon': grenadeThrowUMPAnim,\r\n    'shotgun weapon': grenadeThrowShotgunAnim\r\n  }\r\n  \r\n  this.ejectedMags = []\r\n\r\n  this.reloadMagazineActionsByType = {\r\n    'pistol weapon': () => {\r\n      let { game: { player: { weapons: { equipped, reloadSpeed }, perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y, 7, 20, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n        })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.0025, 0.005) : random.float(-0.0025, -0.005)),\r\n          y: random.float(-0.0025, -0.005)\r\n        })\r\n      // make some simple magazing gfx\r\n      let pistolMag = new PIXI.Graphics()\r\n      pistolMag.beginFill(0x333333)\r\n      pistolMag.drawRect(0, 0, 7, 20)\r\n      pistolMag.pivot.x = pistolMag.width/2\r\n      pistolMag.pivot.y = pistolMag.height/2\r\n      let magObj = {\r\n        gfx: pistolMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(pistolMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        pistolMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'smg weapon': () => {\r\n      let { game: { player: { perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y - (getBodyHeight(this.body)/2), 7, 42, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n      })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.004, 0.01) : random.float(-0.004, -0.01)),\r\n          y: random.float(-0.0015, -0.01)\r\n        })\r\n      // make some simple magazing gfx\r\n      let smgMag = new PIXI.Graphics()\r\n      smgMag.beginFill(0x333333)\r\n      smgMag.drawRect(0, 0, 7, 42)\r\n      smgMag.pivot.x = smgMag.width/2\r\n      smgMag.pivot.y = smgMag.height/2\r\n      let magObj = {\r\n        gfx: smgMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(smgMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        smgMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'shotgun weapon': () => {\r\n      const reloadShell = () => {\r\n        delayedCall(.3, () => {\r\n          if (this.shotgunShellLoadIterations > 5) {\r\n            charReloadShotgunSprite.gotoAndPlay(21)\r\n          } else {\r\n            charReloadShotgunSprite.gotoAndPlay(10)\r\n            this.shotgunShellLoadIterations++\r\n            reloadShell()\r\n          }\r\n        })\r\n      }\r\n      reloadShell()\r\n    }\r\n  }\r\n\r\n  this.updateEjectedMagPositions = (renderFn) => {\r\n    this.ejectedMags.forEach(mag => {\r\n      let { x, y, rotation: rot } = renderFn(mag.body)\r\n      mag.gfx.position = { x, y }\r\n      mag.gfx.rotation = rot\r\n    })\r\n  }\r\n\r\n  this.reloadWeapon = () => {\r\n    // this.reloading = true\r\n    let { game: { player: { weapons: { reloadSpeed, reloadAnimationFrames, equipped } } } } = getState()\r\n    this.reloadAnimsByType[equipped].animationSpeed = reloadSpeed[equipped]\r\n    this.reloadAnimsByType[equipped].gotoAndPlay(1)\r\n    delayedCall(\r\n      equipped === WEAPON_TYPE_PISTOL ? reloadSpeed[equipped]/4 //1\r\n      : equipped === WEAPON_TYPE_SMG ? (reloadSpeed[equipped] * 2) + (reloadSpeed[equipped]/2) //1.00\r\n      : equipped === WEAPON_TYPE_SHOTGUN ? reloadSpeed[equipped] + (reloadSpeed[equipped]/4) //.5\r\n      : 0\r\n    , () => {\r\n      if (this.reloadAnimsByType[equipped].visible === true) {\r\n        dispatch( increaseStats( StatsDefs.timesReloaded ) )\r\n        this.reloadMagazineActionsByType[equipped]()\r\n      }\r\n    })\r\n  }\r\n  \r\n  // fire pistol right arm\r\n  let charRightArmFirePistolSpritesheet = gameObjects.getKeyValue('right-arm-pistol-fire-sheet')\r\n  let charRightArmFirePistolSprite = new PIXI.AnimatedSprite(charRightArmFirePistolSpritesheet.animations['right_char_arm_pistol_fire'])\r\n  charRightArmFirePistolSprite.play()\r\n  charRightArmFirePistolSprite.loop = false\r\n  charRightArmFirePistolSprite.animationSpeed = .35\r\n  charRightArmFirePistolSprite.updateAnchor = true\r\n  charRightArmFirePistolSprite.pivot.x = charRightArmFirePistolSprite.width * .6\r\n  charRightArmFirePistolSprite.pivot.y = charRightArmFirePistolSprite.height * .4\r\n  charRightArmFirePistolSprite.onComplete = () => {\r\n    charRightArmFirePistolSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFirePistolSprite)\r\n\r\n  // fire smg right arm\r\n  let charRightArmFireSMGSpritesheet = gameObjects.getKeyValue('right-arm-smg-fire-sheet')\r\n  let charRightArmFireSMGSprite = new PIXI.AnimatedSprite(charRightArmFireSMGSpritesheet.animations['char_right_arm_smg_fire'])\r\n  charRightArmFireSMGSprite.play()\r\n  charRightArmFireSMGSprite.loop = false\r\n  charRightArmFireSMGSprite.animationSpeed = .35\r\n  charRightArmFireSMGSprite.updateAnchor = true\r\n  charRightArmFireSMGSprite.pivot.x = charRightArmFireSMGSprite.width * .6\r\n  charRightArmFireSMGSprite.pivot.y = charRightArmFireSMGSprite.height * .4\r\n  charRightArmFireSMGSprite.onComplete = () => {\r\n    charRightArmFireSMGSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireSMGSprite)\r\n\r\n  // fire shotgun right arm\r\n  let charArmsFireShotgunSpritesheet = gameObjects.getKeyValue('arms-fire-shotgun-sheet')\r\n  let charRightArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['rightArmFireShotgun'])\r\n  charRightArmFireShotgunSprite.play()\r\n  charRightArmFireShotgunSprite.loop = false\r\n  charRightArmFireShotgunSprite.animationSpeed = .5\r\n  charRightArmFireShotgunSprite.updateAnchor = true\r\n  charRightArmFireShotgunSprite.pivot.x = charRightArmFireShotgunSprite.width * .6\r\n  charRightArmFireShotgunSprite.pivot.y = charRightArmFireShotgunSprite.height * .4\r\n  charRightArmFireShotgunSprite.onComplete = () => {\r\n    charRightArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireShotgunSprite)\r\n\r\n  // head sprite\r\n  let headSprite = makePixiSprite('char-head')\r\n  container.addChild(headSprite)\r\n  this.positionHeadSprite = renderObj => {\r\n    let { game: { keys, mouseState: { x: _mx }, mousePosition, player: { variables: { jumping, currentDirection }, weapons: { equipped } } } } = getState()\r\n    let { mx, my, fn: renderFn } = renderObj\r\n    let { x, y } = renderFn(this.head)\r\n    if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n      if (currentDirection === 'right') {\r\n        if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x + 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      } else if (currentDirection === 'left') {\r\n        if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x - 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      }\r\n    } else {\r\n      headSprite.position.x = x\r\n    }\r\n    \r\n    headSprite.position.y = y + 12\r\n\r\n    if (!jumping) {\r\n      if (my === LESS_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => { sprite.pivot.y = sprite.height * .45 })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = 2.5\r\n        }\r\n        else {\r\n          headSprite.rotation = 0.9570\r\n        }\r\n      } else if (my === GREATER_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .65\r\n          sprite.pivot.y = sprite.height * .45\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x > 550 && mousePosition.x < 650) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x < 750 && mousePosition.y > 250 && mx === GREATER_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -2.7230\r\n      } else if (mousePosition.x > 450 && mousePosition.y > 250 && mx === LESS_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -0.5532\r\n      } else {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .6\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = charLeftArmFirePistolSprite.rotation\r\n      }\r\n    } else {\r\n      this.armsSpritesByType[equipped].forEach(sprite => {\r\n        sprite.pivot.x = sprite.width * .6\r\n        sprite.pivot.y = sprite.height * .47\r\n      })\r\n    }\r\n  }\r\n  headSprite.pivot.x = headSprite.width * .52\r\n  headSprite.pivot.y = headSprite.height * .17\r\n  this.headSprite = headSprite\r\n \r\n  // run anim\r\n  let charRunSpritesheet = gameObjects.getKeyValue('char-run-sheet')\r\n  let charRunSprite = new PIXI.AnimatedSprite(charRunSpritesheet.animations['char_run'])\r\n  charRunSprite.loop = true\r\n  charRunSprite.animationSpeed = 1.0\r\n  charRunSprite.updateAnchor = true\r\n  charRunSprite.pivot.x = charRunSprite.width * .52\r\n  charRunSprite.pivot.y = charRunSprite.height * .5\r\n  container.addChild(charRunSprite)\r\n \r\n  // idle anim\r\n  let charIdleSpritesheet = gameObjects.getKeyValue('char-idle-sheet')\r\n  let charIdleSprite = new PIXI.AnimatedSprite(charIdleSpritesheet.animations['char_idle'])\r\n  charIdleSprite.play()\r\n  charIdleSprite.loop = true\r\n  charIdleSprite.animationSpeed = .1\r\n  charIdleSprite.updateAnchor = true\r\n  charIdleSprite.pivot.x = charIdleSprite.width * .52\r\n  charIdleSprite.pivot.y = charIdleSprite.height * .5\r\n  container.addChild(charIdleSprite)\r\n  \r\n  // jump anim\r\n  let charJumpSpritesheet = gameObjects.getKeyValue('char-jump-sheet')\r\n  let charJumpSprite = new PIXI.AnimatedSprite(charJumpSpritesheet.animations['char_jump'])\r\n  charJumpSprite.loop = false\r\n  charJumpSprite.animationSpeed = .35\r\n  charJumpSprite.updateAnchor = true\r\n  charJumpSprite.pivot.x = charJumpSprite.width * .52\r\n  charJumpSprite.pivot.y = charJumpSprite.height * .5\r\n  //  set(charJumpSprite.scale, { x: .5, y: 1.0 })\r\n  charJumpSprite.visible = false\r\n  container.addChild(charJumpSprite)\r\n \r\n  this.stopJumpAnimation = () => {\r\n    charJumpSprite.gotoAndStop(0)\r\n    charJumpSprite.visible = false\r\n  }\r\n\r\n  charJumpSprite.onComplete = () => {\r\n    let { jumping } = getState().game.player.variables\r\n    if (!jumping) {\r\n      this.stopJumpAnimation()\r\n    } else {\r\n      this.resumeJumpAnimation()\r\n    }\r\n  }\r\n\r\n  let jumpMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.resumeJumpAnimation = () => {\r\n  charJumpSprite.gotoAndPlay(3)\r\n  charJumpSprite.visible = true\r\n  charRunSprite.visible = false\r\n  charIdleSprite.visible = false\r\n  // charJumpSprite.animationSpeed = .1\r\n  }\r\n\r\n  this.playJumpAnimation = () => {\r\n    if (getState().game.filterEffects) {\r\n      charJumpSprite.filters = [ jumpMotionBlur ]\r\n      from(jumpMotionBlur.velocity, .35, {\r\n        y: 50,\r\n        onUpdate: () => {\r\n          charJumpSprite.filters = [ jumpMotionBlur ]\r\n        }\r\n      })\r\n    }\r\n    charJumpSprite.gotoAndPlay(0)\r\n    charJumpSprite.visible = true\r\n    charRunSprite.visible = false\r\n    charIdleSprite.visible = false\r\n  }\r\n\r\n  // motion blur\r\n  let charLeftArmFirePistolSpritesheet = gameObjects.getKeyValue('left-arm-pistol-fire-sheet')\r\n  let charLeftArmFirePistolSprite = new PIXI.AnimatedSprite(charLeftArmFirePistolSpritesheet.animations['left_char_arm_pistol_fire'])\r\n  charLeftArmFirePistolSprite.play()\r\n  charLeftArmFirePistolSprite.loop = false\r\n  charLeftArmFirePistolSprite.animationSpeed = .35\r\n  charLeftArmFirePistolSprite.updateAnchor = true\r\n  charLeftArmFirePistolSprite.pivot.x = charLeftArmFirePistolSprite.width * .6\r\n  charLeftArmFirePistolSprite.pivot.y = charLeftArmFirePistolSprite.height * .4\r\n  charLeftArmFirePistolSprite.onComplete = () => {\r\n    charLeftArmFirePistolSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFirePistolSprite)\r\n   \r\n  // fire smg left arm (front)\r\n  let charLeftArmFireSMGSpritesheet = gameObjects.getKeyValue('left-arm-smg-fire-sheet')\r\n  let charLeftArmFireSMGSprite = new PIXI.AnimatedSprite(charLeftArmFireSMGSpritesheet.animations['char_left_arm_smg_fire'])\r\n  charLeftArmFireSMGSprite.play()\r\n  charLeftArmFireSMGSprite.loop = false\r\n  charLeftArmFireSMGSprite.animationSpeed = .35\r\n  charLeftArmFireSMGSprite.updateAnchor = true\r\n  charLeftArmFireSMGSprite.pivot.x = charLeftArmFireSMGSprite.width * .6\r\n  charLeftArmFireSMGSprite.pivot.y = charLeftArmFireSMGSprite.height * .4\r\n  charLeftArmFireSMGSprite.onComplete = () => {\r\n    charLeftArmFireSMGSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFireSMGSprite)\r\n\r\n  // fire shotgun left arm (front)\r\n  let charLeftArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['leftArmFireShotgun'])\r\n  charLeftArmFireShotgunSprite.play()\r\n  charLeftArmFireShotgunSprite.loop = false\r\n  charLeftArmFireShotgunSprite.animationSpeed = .5\r\n  charLeftArmFireShotgunSprite.updateAnchor = true\r\n  charLeftArmFireShotgunSprite.pivot.x = charLeftArmFireShotgunSprite.width * .6\r\n  charLeftArmFireShotgunSprite.pivot.y = charLeftArmFireShotgunSprite.height * .4\r\n  charLeftArmFireShotgunSprite.onComplete = () => {\r\n    charLeftArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charLeftArmFireShotgunSprite)\r\n\r\n  let weaponSwapMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.armsSprites = [\r\n    charLeftArmFirePistolSprite,\r\n    charRightArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charRightArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite,\r\n    charRightArmFireShotgunSprite\r\n  ]\r\n\r\n  this.armsSpritesByType = {\r\n    'pistol weapon': [ charLeftArmFirePistolSprite, charRightArmFirePistolSprite ],\r\n    'smg weapon': [ charLeftArmFireSMGSprite, charRightArmFireSMGSprite ],\r\n    'shotgun weapon': [ charLeftArmFireShotgunSprite, charRightArmFireShotgunSprite ]\r\n  }\r\n\r\n  let muzzleFlashFX = new MuzzleFlashFX()\r\n\r\n  let _9mm1 = window.gameObjects.getKeyValue('9mm-sound1')\r\n  let _9mm2 = window.gameObjects.getKeyValue('9mm-sound2')\r\n  let pistolSound1 = new Howl({\r\n    src: [ _9mm1 ],\r\n  })\r\n  let pistolSound2 = new Howl({\r\n    src: [ _9mm2 ],\r\n    sprite: {\r\n      _1: [ 500, 1000 ]\r\n    }\r\n  })\r\n  let pistolReloadSnd = window.gameObjects.getKeyValue('pistol-reload-sound')\r\n  let pistolReloadSound = new Howl({ src: [ pistolReloadSnd ], volume: .25 })\r\n  let jumpSound = gameObjects.getKeyValue('jump-sound')\r\n  let pain1Snd = gameObjects.getKeyValue('pain1-sound')\r\n  let pain2Snd = gameObjects.getKeyValue('pain2-sound')\r\n  let deathRip = gameObjects.getKeyValue('death-rip-sound')\r\n  let playerDeathSnd = gameObjects.getKeyValue('player-death-sound')\r\n  let hitImpact = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n  let smgFire = gameObjects.getKeyValue('smg-fire-sound')\r\n  let shotgunFire = gameObjects.getKeyValue('shotgun-blast-sound')\r\n\r\n  this.fireWeaponAnimation = () => {\r\n    let { game: { mouseState, player: { weapons: { equipped } } } } = getState()\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.visible = true })\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.gotoAndPlay(0) })\r\n    muzzleFlashFX.fireEffect()\r\n    // position muzzle spark particles sprite \r\n    let mSpark = new EnhancedMuzzleSpark(this.arm)\r\n    this.currentMuzzleSpark = mSpark\r\n    // sound\r\n    if (equipped === WEAPON_TYPE_PISTOL) {\r\n      pistolSound1.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SMG) {\r\n      smgFire.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SHOTGUN) {\r\n      shotgunFire.play()\r\n    }\r\n  }\r\n\r\n  this.charRunSprite = charRunSprite\r\n  this.charIdleSprite = charIdleSprite\r\n  this.charJumpSprite = charJumpSprite\r\n  // weapons specific\r\n  this.charReloadPistolSprite = charReloadPistolSprite\r\n  this.charReloadSMGSprite = charReloadSMGSprite\r\n  this.charReloadShotgunSprite = charReloadShotgunSprite\r\n\r\n  this.bodySprites = [\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n  \r\n  this.sprites = [\r\n    charRightArmFirePistolSprite,\r\n    charRightArmFireSMGSprite,\r\n    charRightArmFireShotgunSprite,\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n    charLeftArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite\r\n  ]\r\n\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 60, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n  blur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      this.shadow.alpha = .85\r\n      this.shadow.filters = [blur]\r\n      lifebar.filters = [bevel]\r\n    } else {\r\n      this.shadow.alpha = .45\r\n      this.shadow.filters = []\r\n      lifebar.filters = []\r\n    }\r\n  }\r\n\r\n  this.setBodySpritesPositions = obj => {\r\n    let { fn } = obj\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.bodySprites.forEach(sprite => {\r\n      sprite.position.x = x\r\n      sprite.position.y = y - 15\r\n    })\r\n    if (container && container.children.indexOf(this.shadow) === -1) {\r\n      container.addChild(this.shadow)\r\n    }\r\n    this.shadow.position.x = x\r\n    this.shadow.position.y = this.bodySprites[0].position.y + this.bodySprites[0].height/2 - 5\r\n  }\r\n\r\n  this.setArmsSpritePosition = obj => {\r\n    // .125 is a rotation adjustment so that the arms sprite lines up more accurately with where the bullet is coming from\r\n    let { game: { keys, mouseState: { x: _mx, y: _my }, player: { variables: { jumping, currentDirection } } } } = getState()\r\n    let { fn } = obj\r\n    let { x, y, rotation: rot } = fn(this.arm)\r\n    this.armsSprites.forEach(sprite => {\r\n      // sprite.x = x\r\n      if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n        if (currentDirection === 'right') {\r\n          if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n            sprite.x = x + 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        } else if (currentDirection === 'left') {\r\n          if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n            sprite.x = x - 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        }\r\n      } else {\r\n        sprite.x = x\r\n      }\r\n\r\n      if (jumping) {\r\n        if (_my === LESS_THAN_PLAYER_Y_POS) {\r\n          sprite.y = y - 10\r\n        } else {\r\n          sprite.y = y\r\n        }\r\n      } else {\r\n        sprite.y = y\r\n      }\r\n\r\n      sprite.rotation = rot\r\n    })\r\n    // keep muzzle flashes aligned with gun arm\r\n    let fpos, frot\r\n    muzzleFlashFX.getFlashes().forEach(flash => {\r\n      flash.position = charRightArmFirePistolSprite.position\r\n      flash.rotation = rot - degrees(90)\r\n      flash.pivot.x = -flash.width * .05\r\n      flash.pivot.y = getState().game.player.weapons.equipped === WEAPON_TYPE_SHOTGUN ? flash.height * 3.25 : flash.height * 2.25\r\n      fpos = flash.position\r\n      frot = flash.rotation\r\n    })\r\n    if (this.currentMuzzleSpark) {\r\n      this.currentMuzzleSpark.spark.pivot.x = -this.currentMuzzleSpark.spark.width\r\n      this.currentMuzzleSpark.spark.position = fpos\r\n      this.currentMuzzleSpark.spark.rotation = rot - degrees(180)\r\n    }\r\n  }\r\n\r\n  this.meleeAttackInProgress = false\r\n\r\n  this.createMeleeHitbox = () => {\r\n    let { mouseState, player: { weapons: {equipped} } } = getState().game\r\n    let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n    _throw.play()\r\n    this.meleeHitbox = Bodies.rectangle(\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) * 1.75 : this.body.position.x - getBodyWidth(this.body) * 1.75,\r\n      this.body.position.y - getBodyHeight(this.body)/2,\r\n      getBodyWidth(this.body) * 2,\r\n      getBodyHeight(this.body), {\r\n        isStatic: true\r\n      })\r\n    this.meleeHitbox.main = this\r\n    this.meleeHitbox.label = `melee hitbox ${equipped}`\r\n    World.add(world, this.meleeHitbox)\r\n  }\r\n  this.removeMeleeHitbox = () => {\r\n    if (this.meleeHitbox) {\r\n      World.remove(world, this.meleeHitbox)\r\n    }\r\n  }\r\n\r\n  this.meleeAttack = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (meleePistolAnim.currentFrame < 1) {\r\n          meleePistolAnim.visible = true\r\n          meleePistolAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (meleeUMPAnim.currentFrame < 1) {\r\n          meleeUMPAnim.visible = true\r\n          meleeUMPAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (meleeShotgunAnim.currentFrame < 1) {\r\n          meleeShotgunAnim.visible = true\r\n          meleeShotgunAnim.gotoAndPlay(1)\r\n        }\r\n      }\r\n    }\r\n    if (!this.meleeAttackInProgress) {\r\n      this.meleeAttackInProgress = true\r\n      delayedCall(.35, () => {\r\n        if (!this.dead) {\r\n          this.createMeleeHitbox()\r\n        }\r\n        delayedCall(.1, () => {\r\n          this.removeMeleeHitbox()\r\n        })\r\n      })\r\n      attacks[equipped]()\r\n    }\r\n  }\r\n\r\n  this.collectHealth = (amount) => {\r\n    this.life += amount\r\n    if (this.life > 100) {\r\n      this.life = 100\r\n    }\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    updateScore( getState().game.scoreAmounts.collectHealth )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.collectCredits = (amount) => {\r\n    dispatch(\r\n      addToTotalCredits(amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectCredit )\r\n  }\r\n\r\n  this.collectAmmo = (wepType, amount) => {\r\n    createTextMessage(`+${amount} ${wepType} ammo`, '#32BD6A', .35, 1)\r\n    dispatch(\r\n      addToTotalAmmo(wepType, amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectAmmo )\r\n  }\r\n\r\n\tthis.playerHit = false\r\n\tthis.resetPlayerHit = () => {\r\n\t\tthis.playerHit = true\r\n\t\tdelayedCall(1, () => {\r\n\t\t\tthis.playerHit = false\r\n\t\t})\r\n  }\r\n  \r\n  this.blinkAlpha = () => {\r\n    this.headSprite.alpha = .25\r\n    this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n    this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    delayedCall(.1, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.2, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.3, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.35, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.4, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.45, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.5, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n  }\r\n\r\n\tthis.takeDamage = dmg => {\r\n    let { game: { player: { variables: { defense } } } } = getState()\r\n    this.life -= (dmg - defense)\r\n    subtractScore( getState().game.scoreAmounts.penalties.damageTaken )\r\n    batch(() => {\r\n      dispatch( updatePlayerHealth(this.life) )\r\n      dispatch( increaseStatsByAmount( StatsDefs.damageTaken, dmg ) )\r\n    })\r\n    let randomNum = [ 1, 2 ][Math.floor( Math.random() * 2 )]\r\n    if (randomNum === 1) {\r\n      pain1Snd.play()\r\n    } else {\r\n      pain2Snd.play()\r\n    }\r\n    hitImpact.play()\r\n    lifebar.tint = damageRed\r\n    to(lifebar, .2, { width: (this.life/100 * this.initialLifebarWidth) })\r\n    to(lifebar, .1, {\r\n      y: lifebar.position.y + 2,\r\n      onComplete: () => {\r\n        to(lifebar, .1, {\r\n          y: lifebar.position.y - 3,\r\n          onComplete: () => {\r\n            to(lifebar, .1, {\r\n              y: lifebar.position.y + 1,\r\n              onComplete: () => {\r\n                lifebar.tint = lifebarGreen\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n    let bloodSpurtPos = {\r\n      x: random.float(this.bodySprites[0].position.x - 5, this.bodySprites[0].position.x + 20),\r\n      y: random.float(this.bodySprites[0].position.y, this.bodySprites[0].position.y - 60)\r\n    }\r\n    createTextMessage(`-${dmg}`, '#FF0000', .35, 1, 12)\r\n    new BloodSpurt(null, bloodSpurtPos, .75)\r\n    this.blinkAlpha()\r\n\t\tthis.resetPlayerHit()\r\n\t\tif (this.life <= 0) {\r\n\t\t\tthis.kill()\r\n\t\t}\r\n  }\r\n  \r\n  this.acceptHealth = amt => {\r\n    this.life = amt\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.addSpritesInOrder = () => {\r\n    container.addChild(this.headSprite)\r\n    this.armsSprites.forEach(sprite => container.addChild(sprite))\r\n    this.bodySprites.forEach(sprite => container.addChild(sprite))\r\n    // move front arms back on top\r\n    container.addChild(charLeftArmFirePistolSprite)\r\n    container.addChild(charLeftArmFireSMGSprite)\r\n    container.addChild(charLeftArmFireShotgunSprite)\r\n    container.addChild(lifebar)\r\n  }\r\n\r\n\tthis.respawn = () => {\r\n    engine.timing.timeScale = 1.0\r\n    if (this.playerRagdoll) {\r\n      this.playerRagdoll.destroy()\r\n      this.playerRagdoll = null\r\n    }\r\n    dispatch( increaseStats( StatsDefs.timesRespawned ) )\r\n    subtractScore( getState().game.scoreAmounts.penalties.respawn )\r\n    this.addSpritesInOrder()\r\n\t\tthis.life = 100\r\n\t\tlifebar.width = this.initialLifebarWidth\r\n\t\tthis.dead = false\r\n    lifebar.visible = lifebarOutline.visible = true\r\n    if (this.lastDeathType === FELL_OFF) {\r\n      // place our character back on-stage if he's fallen off\r\n      if (this.lastBodyPosition.x < 0) {\r\n        while (this.body.position.x < 200 && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: 100, y: -100 })\r\n        }\r\n      } else {\r\n        while (this.body.position.x > getState().game.width && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: -100, y: -100 })\r\n        }\r\n      }\r\n    }\r\n    World.add(world, this.composite)\r\n    if (getState().game.lastGameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n      )\r\n    } else {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_RESPAWN)\r\n      )\r\n    }\r\n  }\r\n\r\n\tthis.dead = false\r\n\tthis.kill = (deathType) => {\r\n    if (this.dead === false) {\r\n      if (deathType) {\r\n        this.lastDeathType = deathType\r\n      } else {\r\n        deathRip.play()\r\n        this.lastDeathType = KILLED_BY_ZOMBIE\r\n      }\r\n      dispatch( increaseStats( StatsDefs.timesKilled ) )\r\n      subtractScore( getState().game.scoreAmounts.penalties.killed )\r\n      playerDeathSnd.play()\r\n      engine.timing.timeScale = .5\r\n      lifebar.visible = lifebarOutline.visible = false\r\n      this.life = 0\r\n      this.dead = true\r\n      this.removeMeleeHitbox()\r\n      this.lastBodyPosition = this.body.position\r\n      World.remove(world, this.composite)\r\n      if (this.bodySprites && this.armsSprites) {\r\n        container.removeChild(this.headSprite)\r\n        this.bodySprites.forEach(sprite => container.removeChild(sprite))\r\n        this.armsSprites.forEach(sprite => container.removeChild(sprite))\r\n      }\r\n      let force = {\r\n        x: engine.timing.timeScale === 1\r\n        ? charIdleSprite.scale.x === 1 ? 0.1 : -0.1\r\n        : charIdleSprite.scale.x === 1 ? 0.25 : -0.25\r\n        ,\r\n        y: engine.timing.timeScale === 1\r\n        ? -0.25\r\n        : -0.75\r\n      }\r\n      let parts = [ 'head', 'body', 'limb', 'none' ]\r\n      let partLastDamaged = parts[ Math.floor( Math.random() * parts.length ) ]\r\n      \r\n      if (partLastDamaged === 'head') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollDecap({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'body') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollHalved({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'limb') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollMaim({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdoll({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      }\r\n  \r\n      batch(() => {\r\n        dispatch(unsetAllKeys())\r\n        dispatch(resetPlayerVariables())\r\n        dispatch(setMouseButtonState(MOUSE_UP))\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      })\r\n    }\r\n\t}\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumpForce, jumping } } } } = getState()\r\n\r\n    // jump\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        \r\n        if (e.keyCode === 87 && !jumping && !this.chargingGrenade) {\r\n            dispatch(setJumping(true))\r\n            jumpSound.play()\r\n            this.playJumpAnimation()\r\n            Body.applyForce(this.body, this.body.position, { x: 0, y: jumpForce })\r\n        } else {\r\n            if (keys.indexOf(e.keyCode) < 0) {\r\n              dispatch(setKeyPress(e.keyCode))\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    // melee \r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !jumping && !this.grenadeThrowInProgress) {\r\n        if (e.key === 'f' || e.key === 'F') {\r\n          this.meleeAttack()\r\n        }\r\n      }\r\n    }\r\n\r\n    // Shop / Continue / Build \r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (e.key === 'Enter') {\r\n        nextWave()\r\n      }\r\n    }\r\n    // done with build placement\r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (e.key === 'b' || e.key === 'B') {\r\n        let arrow = gameObjects.getKeyValue('object-placement-arrow')\r\n        arrow.changeBack = true\r\n        dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n        dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n      }\r\n    }\r\n\r\n    // cycle weapon [spacebar]\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if (e.keyCode === 32) {\r\n        if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n          let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // remote mine detonation [numbers 1 thru 9]\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      let numKeys = [ '1', '2', '3', '4', '5', '6', '7', '8', '9' ]\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let idx = numKeys.indexOf(e.key.toString())\r\n      console.log(e.key)\r\n      if (idx > -1) {\r\n        if (remoteMines[e.key.toString()]) {\r\n          remoteMines[e.key.toString()].detonate()\r\n          delete remoteMines[e.key.toString()]\r\n        }\r\n      }\r\n    }\r\n    \r\n    // turret placement direction\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (getState().game.traps.selectedTrap === trapTypes.TURRET) {\r\n        let currentTurret = gameObjects.getKeyValue('current-turret')\r\n        if (currentTurret) {\r\n          if (e.key === 'ArrowLeft') {\r\n            currentTurret.updateDirection('left')\r\n          }\r\n          if (e.key === 'ArrowRight') {\r\n            currentTurret.updateDirection('right')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    // reload weapon [R]\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (e.keyCode === 82 && !this.meleeAttackInProgress) {\r\n        let { game: { showingMessage, player: { weapons: { equipped, totalAmmo } } } } = getState()\r\n        if (totalAmmo[equipped] === 0 && showingMessage === false) {\r\n          createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n        } else if (!weaponsUI.reloading && !jumping && !this.dead) {  //&& !this.reloading) {\r\n          this.reloadWeapon()\r\n          weaponsUI.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n\t}\r\n\r\n\tconst handleKeyUp = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumping } } } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tlet idx = keys.indexOf(e.keyCode)\r\n\t\t\t\tif (idx > -1) {\r\n\t\t\t\t\tdispatch(removeKeyPress(e.keyCode))\r\n        }\r\n        // grenade [G]\r\n        if ((e.key === 'g' || e.key === 'G') && getState().game.player.weapons.totalAmmo[WEAPON_TYPE_GRENADE] > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n          if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n            this.throwGrenade()\r\n          }\r\n        }\r\n      }\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMouseDown = e => {\r\n    console.log(e)\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (!this.dead && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        if (e.buttons === 1) {\r\n          dispatch(setMouseButtonState(MOUSE_DOWN))\r\n        } else if (e.buttons === 2) {\r\n          dispatch(setRightMouseDown(true))\r\n          console.log('should charge')\r\n        }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n  \r\n\tconst handleMouseUp = e => {\r\n    let { game: { gameState } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      console.log(e)\r\n      dispatch(setMouseButtonState(MOUSE_UP))\r\n      if (getState().game.rightMouseDown) {\r\n        dispatch(setRightMouseDown(false))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const handleMouseWheel = e => {\r\n    // console.log(e)\r\n    let { gameState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU || gameState !== GameStates.SCORES_VIEW) {\r\n      e.preventDefault()\r\n    }\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n        if (e.deltaY < 0) {\r\n          if (list[list.indexOf(equipped) - 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx - 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[list.length - 1]))\r\n          }\r\n        } else if (e.deltaY > 0) {\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tlet playerBody = getPlayerBody(gameObjects)\r\n\tlet playerArm = getPlayerComposite(gameObjects).bodies[1]\r\n\tlet bh = getBodyHeight(this.body)\r\n\r\n\tconst handleMouseMove = e => {\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (e.target && e.target === document.getElementsByTagName('canvas')[1] && e.target.getBoundingClientRect) {\r\n\t\t\t\tlet armAngle\r\n\t\t\t\tlet mouseX, mouseY\r\n        let rect = e.target.getBoundingClientRect()\r\n        // console.log(e.target)\r\n\t\t\t\tlet x = e.clientX - rect.left\r\n\t\t\t\tlet y = e.clientY - rect.top\r\n\t\t\t\tlet { game: { mouseRelativeToPlayerPosition: mPosRel } } = getState()\r\n\t\t\t\tdispatch(setMousePosition({ x, y }))\r\n\r\n\t\t\t\tif (mPosRel.x > playerBody.position.x) {\r\n\t\t\t\t\tmouseX = GREATER_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.x < playerBody.position.x) {\r\n\t\t\t\t\tmouseX = LESS_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y > playerBody.position.y + bh/2) {\r\n\t\t\t\t\tmouseY = GREATER_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y < playerBody.position.y - bh) {\r\n\t\t\t\t\tmouseY = LESS_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarmAngle = Vector.angle(mPosRel, playerArm.position)\r\n\t\t\t\tBody.setAngle(playerArm, armAngle)\r\n\r\n\t\t\t\tdispatch(setMouseStateX(mouseX))\r\n\t\t\t\tdispatch(setMouseStateY(mouseY))\r\n\t\t\t}\r\n    }\r\n\r\n  }\r\n  \r\n  const handleMouseClick = e => {\r\n    let {game:{player:{credits},mouseRelativeToPlayerPosition,gameSubState,traps:{selectedTrap, costToBuild:costToBuild_trap},barriers:{selectedBarrier,costToBuild:costToBuild_barrier}}} = getState()\r\n    if (gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      let _y = 360\r\n      let position = {\r\n        x: mouseRelativeToPlayerPosition.x,\r\n        y: _y\r\n      }\r\n      let width = 50\r\n      let height = 100\r\n      let buildNewLocation = true\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let buildObjects = gameObjects.getKeyValue('build-objects')\r\n      let placeObjectSound = gameObjects.getKeyValue('place-object-sound')\r\n      let cancelSound = gameObjects.getKeyValue('button-cancel-sound')\r\n      const buildObjectPlacementComparison = (obj) => (position.x + (width/2) < obj.getBody().position.x - getBodyWidth(obj.getBody())/2) ||\r\n      (obj.getBody().position.x + getBodyWidth(obj.getBody())/2 < position.x - (width/2))\r\n      let checkAllowArray = buildObjects.map(obj => {\r\n        if (buildObjectPlacementComparison(obj)) {\r\n          return 'allow placement'\r\n        } else {\r\n          return 'place next to'\r\n        }\r\n      })\r\n\r\n      // find closest build object\r\n      let closestX\r\n      if (buildObjects.length > 0) {\r\n        let buildObjectXPositions = buildObjects.map(obj => obj.getBody().position.x)\r\n        closestX = buildObjectXPositions.reduce((prev, curr) => (\r\n          (Math.abs(curr - position.x) < Math.abs(prev - position.x) ? curr : prev)\r\n        ))\r\n        console.log( closestX )\r\n      }\r\n      \r\n      let idx = checkAllowArray.indexOf('place next to')  //.indexOf('deny')\r\n      if (idx > -1) {\r\n        buildNewLocation = false\r\n      }\r\n      \r\n      if (selectedBarrier) {\r\n        let barrier\r\n        if (credits >= costToBuild_barrier[selectedBarrier]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            barrier = new WallBarrier(position, { width, height }, selectedBarrier)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              barrier = new WallBarrier({ x: closestX - width, y: position.y}, { width, height }, selectedBarrier)\r\n            } else {\r\n              barrier = new WallBarrier({ x: closestX + width, y: position.y}, { width, height }, selectedBarrier)\r\n            }\r\n          }\r\n          if (barrier) {\r\n            batch(() => {\r\n              dispatch( setBarrierTypePlaced( selectedBarrier ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_barrier[selectedBarrier]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.barrierTypesPlaced) {\r\n                // console.log( getState().game.barrierTypesPlaced )\r\n                if (Object.keys(getState().game.barrierTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.BARRICADE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.BARRICADE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_barrier[selectedBarrier]}`, 0xFF0000, .5, .75)\r\n            buildObjects.push(barrier)\r\n            placeObjectSound.play()\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n\r\n      const buildTrap = (trapPosition) => {\r\n        switch (selectedTrap) {\r\n          case trapTypes.LANDMINE:\r\n            return new Landmine(trapPosition)\r\n          case trapTypes.CLUSTER_BOMB:\r\n            return new Clustermine(trapPosition)\r\n          case trapTypes.REMOTE_MINE:\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            return new RemoteMine(trapPosition, remoteMinesArr.length + 1)\r\n          case trapTypes.TURRET:\r\n            return new MachineGunTurret(trapPosition)\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (selectedTrap) {\r\n        let trap\r\n        if (credits >= costToBuild_trap[selectedTrap]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            trap = buildTrap(position)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              trap = buildTrap({ x: closestX - width, y: position.y })\r\n            } else {\r\n              trap = buildTrap({ x: closestX + width, y: position.y })\r\n            }\r\n          }\r\n          if (trap) {\r\n            batch(() => {\r\n              dispatch( setTrapTypePlaced( selectedTrap ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_trap[selectedTrap]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.trapTypesPlaced) {\r\n                // console.log( getState().game.trapTypesPlaced )\r\n                if (Object.keys(getState().game.trapTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.TRAPHOUSE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.TRAPHOUSE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_trap[selectedTrap]}`, 0xFF0000, .5, .75)\r\n            placeObjectSound.play()\r\n            buildObjects.push(trap)\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            if (selectedTrap === trapTypes.REMOTE_MINE) {\r\n              if (remoteMinesArr.length < 10) {\r\n                let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n                remoteMinesArr.push( trap )\r\n                remoteMinesArr.forEach((mine, i) => {\r\n                  remoteMines[i + 1] = mine\r\n                  mine.updateNumber(i + 1)\r\n                })\r\n              } else {\r\n                cancelSound.play()\r\n                createTextMessage('can hold up to 9 remote mines at a time', 0xFF0000, .5, .75)\r\n              }\r\n            }\r\n            if (selectedTrap === trapTypes.TURRET) {\r\n              createTextMessage('Press Left or Right arrow to change turret direction', 0xFFFFFF, .75, 2)\r\n              gameObjects.setKeyValue('current-turret', trap)\r\n            }\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleRightClick = e => {\r\n    // console.log(e)\r\n    e.preventDefault()\r\n    let { game: { gameState, gameSubState, player: { variables: {jumping}, weapons:{ totalAmmo:{ grenades:grenadesCount } }} } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (grenadesCount > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n          this.throwGrenade()\r\n          console.log('throw!')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tif (!window.keydownListenersAdded) {\r\n\t\twindow.addEventListener('keydown', handleKeyDown)\r\n\t\twindow.addEventListener('keyup', handleKeyUp)\r\n\t\twindow.addEventListener('mousemove', handleMouseMove)\r\n\t\twindow.addEventListener('mousedown', handleMouseDown)\r\n    window.addEventListener('mouseup', handleMouseUp)\r\n    window.addEventListener('click', handleMouseClick)\r\n    window.addEventListener('contextmenu', handleRightClick)\r\n    window.addEventListener('wheel', handleMouseWheel)\r\n\t\twindow.keydownListenersAdded = true\r\n  }\r\n  \r\n  this.pause = () => {\r\n    if (this.charRunSprite.currentFrame !== 0) {\r\n      this.charRunSprite.play()\r\n    }\r\n    if (this.charReloadPistolSprite.currentFrame !== 0) {\r\n      this.charReloadPistolSprite.play()\r\n    }\r\n    if (this.charReloadSMGSprite.currentFrame !== 0) {\r\n      this.charReloadSMGSprite.play()\r\n    }\r\n    if (charJumpSprite.currentFrame !== 0) {\r\n      charJumpSprite.play()\r\n    }\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.charRunSprite.stop()\r\n    this.charReloadPistolSprite.stop()\r\n    this.charReloadSMGSprite.stop()\r\n    charJumpSprite.stop()\r\n    dispatch( setJumping(false) )\r\n    // charJumpSprite.animationSpeed = .35\r\n  }\r\n\r\n\treturn this\r\n\r\n}\r\n","import * as PIXI from 'pixi.js'\r\n\r\nconst { TweenLite: { to, from, kill } } = window\r\n\r\nexport default function Crosshairs(gameObjects) {\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tthis.crosshair = new PIXI.Container()\r\n\tthis.cross = new PIXI.Graphics()\r\n\tthis.cross.lineStyle(2, 0xB00000, 0.75)\r\n\tthis.cross.moveTo(0, -15)\r\n\tthis.cross.lineTo(0, 15)\r\n\tthis.cross.moveTo(-15, 0)\r\n\tthis.cross.lineTo(15, 0)\r\n\tthis.crosshair.addChild(this.cross)\r\n\tthis.circle = new PIXI.Graphics()\r\n\tthis.circle.lineStyle(1, 0xB00000, 0.75)\r\n\tthis.circle.drawCircle(0, 0, 10)\r\n\tthis.crosshair.addChild(this.circle)\r\n  this.changed = false\r\n  this.changeBack = false\r\n\tthis._new = null\r\n  container.addChild(this.crosshair)\r\n\r\n\tthis.crosshair.buildArrow = (color) => {\r\n\t\tlet crosshair = gameObjects.getKeyValue('crosshair')\r\n    container.removeChild(crosshair)\r\n    let _new = new PIXI.Graphics()\r\n    _new.lineStyle(2, color, 1.0)\r\n    _new.beginFill(0x777777, 0.0)\r\n    _new.moveTo(0,0)\r\n    _new.lineTo(20, 0)\r\n    _new.lineTo(20, 30)\r\n    _new.lineTo(30, 30)\r\n    _new.lineTo(10, 45)\r\n    _new.lineTo(-10, 30)\r\n    _new.lineTo(0, 30)\r\n    _new.lineTo(0, 0)\r\n    _new.endFill()\r\n    _new.pivot.x = _new.width * .5\r\n    _new.pivot.y = _new.height * .5\r\n    container.addChild(_new)\r\n    this._new = _new\r\n    crosshair._new = _new\r\n    crosshair.changed = true\r\n    gameObjects.setKeyValue('object-placement-arrow', _new)\r\n    // animated arrow loop\r\n    this.animationLoop = () => {\r\n      to(_new.scale, .5, {\r\n        x: 1.2,\r\n        y: .75,\r\n        onComplete: () => {\r\n          to(_new.scale, .5, {\r\n            x: .9,\r\n            y: 1.2,\r\n            onComplete: this.animationLoop\r\n          })\r\n        }\r\n      })\r\n    }\r\n    this.animationLoop()\r\n\r\n\t\treturn _new\r\n\t}\r\n\r\n\treturn this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport random from 'random'\r\n\r\nexport default function GroundEffect (pos, type, bodyPart) {\r\n  let {x,y} = pos\r\n  let {gameObjects,TweenLite:{to,delayedCall}} = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n  let fxSheet = gameObjects.getKeyValue('ground-fx-sheet')\r\n  let bulletTextures = [\r\n    'bullet-impact1.png',\r\n    'bullet-impact2.png'\r\n  ]\r\n  let groundBloodSpatters = [\r\n    'ground-blood-spatter1.png',\r\n    'ground-blood-spatter2.png',\r\n    'ground-blood-spatter3.png',\r\n  ]\r\n  const getRandomRoundBulletImpact = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        bulletTextures[ Math.floor( Math.random() * bulletTextures.length ) ]\r\n      ]\r\n  ))\r\n  const getRandomBloodSpatter = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        groundBloodSpatters[ Math.floor( Math.random() * groundBloodSpatters.length ) ]\r\n      ]\r\n  ))\r\n  \r\n  let sprite\r\n  if (type === 'bullet impact') {\r\n    sprite = getRandomRoundBulletImpact()\r\n  }\r\n  if (type === 'blood spatter') {\r\n    sprite = getRandomBloodSpatter()\r\n  }\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * (bodyPart ? .2 : .5)\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  if (\r\n    sprite.position.x - sprite.width > ground.bounds.min.x ||\r\n    sprite.position.x + (sprite.width/2) < ground.bounds.max.x\r\n    ) {\r\n  }\r\n  // re-add player sprites on-top\r\n  let player = gameObjects.getKeyValue('player')\r\n  if (!player.dead) {\r\n    player.sprites.forEach(s => { container.addChild(s) })\r\n  }\r\n\r\n  let positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n  World.add(world, positionalBody)\r\n\r\n  this.renderPosition = renderFn => {\r\n    sprite.position = renderFn(positionalBody)\r\n    if (container && container.children.indexOf(sprite) === -1) {\r\n      container.addChild(sprite)\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    World.remove(world, positionalBody)\r\n    container.removeChild(sprite)\r\n    let idx = groundFx.indexOf(this)\r\n    if (idx > -1) {\r\n      groundFx.splice(idx, 1)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    groundFx = null\r\n    fxSheet = null\r\n    bulletTextures = null\r\n    groundBloodSpatters = null\r\n    positionalBody = null\r\n  }\r\n\r\n  const tweenOut = () => {\r\n    to(sprite, .5, {\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        this.destroy()\r\n      }\r\n    })\r\n  }\r\n  delayedCall(1, tweenOut)\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { Body, Render, World } from 'matter-js'\r\nimport { getBodyWidth, getBodyHeight, getPlayerPartByType, makePixiSprite } from './utils/Utils'\r\nimport { setLastDirection, setCurrentDirection, setJumping, setLastMagDropped, setMouseRelativeToPlayerPosition, setPlayerPosition, setZombiesOnLeft, setZombiesOnRight, setAchievementOwned, AchievementDefs } from './gameSlice'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET } from './constants/weapons'\r\nimport { MOUSE_DOWN, GREATER_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_X_POS } from './constants/mouseStates'\r\nimport { firePistol, fireSMG, fireShotgun, calcPistolDamage, calcShotgunDamage, calcSMGDamage, calcTurretDamage } from './player/fireWeapons'\r\nimport Crosshairs from './player/crosshairs'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { FELL_OFF } from './constants/DeathTypes'\r\nimport store from '../../app/store'\r\nimport GroundEffect from './FX/GroundEffect'\r\nimport Spark from './FX/Sparks'\r\nimport { degrees } from 'radians'\r\nimport WallTile from './WallTile'\r\nimport { updateScore } from './utils/updateScore'\r\n\r\nconst { getState, dispatch } = store\r\nlet { width, height } = getState().game\r\nconst { TweenLite: { delayedCall } } = window\r\n\r\nconst createCollision = (e, i, { body1_label, body2_label, callback }) => {\r\n  let bodies = {}\r\n  if (e.pairs[i].bodyA.label.indexOf(body1_label) > -1 && e.pairs[i].bodyB.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyA\r\n    bodies.body2 = e.pairs[i].bodyB\r\n    callback(bodies)\r\n  } else if (e.pairs[i].bodyB.label.indexOf(body1_label) > -1 && e.pairs[i].bodyA.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyB\r\n    bodies.body2 = e.pairs[i].bodyA\r\n    callback(bodies)\r\n  }\r\n}\r\n\r\nconst calculateDamageAmount = (weapon_str, body) => {\r\n  if (weapon_str === WEAPON_TYPE_PISTOL) { return calcPistolDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SMG) { return calcSMGDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SHOTGUN) { return calcShotgunDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_TURRET) { return calcTurretDamage(body) }\r\n  return calcPistolDamage(body)\r\n}\r\n\r\nexport const checkCollisionStart = (e, i, gameObjects) => {\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ground',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'barrier',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'gib',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter'))\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'zombie body part',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let zombieBodyPartBool = true\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter', zombieBodyPartBool))      \r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'player character',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let world = gameObjects.getKeyValue('world')\r\n      World.remove(world, bodies.body1)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'turret bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_TURRET, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part, null, null, 'turret')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_PISTOL, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SMG, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SHOTGUN, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'extra damage bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { max } = getState().game.player.weapons.damage[\r\n          getState().game.player.weapons.equipped\r\n        ]\r\n        bodies.body2.main.takeDamage(max * 3, 'head', 'critical')\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (getState().game.lastMagDropped && JSON.parse(getState().game.lastMagDropped) + 200 < Date.now()) {\r\n        let snd = gameObjects.getKeyValue('mag-drop-sound')\r\n        snd.play()\r\n      }\r\n      dispatch(\r\n        setLastMagDropped( JSON.stringify(Date.now()) )\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.takeDamage(20, 'head')\r\n      }\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF7500 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox',\r\n    body2_label: 'enemy zombie body',\r\n    callback: bodies => {\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF0000 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n      // apply extra knockback\r\n      let direction = getState().game.player.variables.currentDirection \r\n      let x = 0\r\n      let knockback = getState().game.player.upgradeTiers.melee.current * 3\r\n      while(x < 10) {\r\n        x++\r\n        Body.translate(bodies.body2, {\r\n          x: direction === 'right' ? -knockback : knockback,\r\n          y: -0.25\r\n        })\r\n      }\r\n      // increase score\r\n      updateScore( getState().game.scoreAmounts.meleeConnect )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox pistol',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_PISTOL]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox smg',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SMG]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox shotgun',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SHOTGUN]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'clustermine explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrel explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'barrel explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'grenade explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'enemy',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        delayedCall(.1, () => {\r\n          bodies.body2.main.explode()\r\n          if (\r\n            bodies.body2.distance.start - bodies.body2.distance.end > 2000 ||\r\n            bodies.body2.distance.end - bodies.body2.distance.start > 2000\r\n            ) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.FROM_DOWNTOWN )\r\n            )\r\n            updateScore( getState().game.scoreAmounts.achievement )\r\n          }\r\n        })\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.takeDamage) {\r\n        let dmg = getState().game.enemies.zombies.attackDmg, player = bodies.body1.main\r\n        if (!player.playerHit) {\r\n          player.takeDamage(dmg)\r\n        }\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'explosive barrier',\r\n    body2_label: 'bullet',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n      gameObjects.getKeyValue('spark-sprites').push(\r\n        new Spark(1, bodies.body2, { scale: .5, animationSpeed: 2.0 })\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrier',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'health drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectHealth) {\r\n        player.collectHealth(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ammo drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectAmmo) {\r\n        player.collectAmmo(bodies.body2.ammo_type, bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('ammo-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'currency drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectCredits) {\r\n        player.collectCredits(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('coin-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'shotgun shell',\r\n    callback: bodies => {\r\n      let snd = gameObjects.getKeyValue('shot-shell-sound')\r\n      snd.play()\r\n      snd.fade(1, 0, 200)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      let grenadeClink = gameObjects.getKeyValue('grenade-clink-sound')\r\n      grenadeClink.play()\r\n      grenadeClink.fade(1, 0, 500)\r\n    }\r\n  })\r\n}\r\n\r\nlet gameTickVarsDefined = false\r\nlet weaponsUI, render, groundTex, groundBody, groundFx, player, playerBody, acceleration ,pistolBullets, pistolBulletWd, pistolBulletHt, bulletImpacts,\r\npistolShells, pistolShellWd, pistolShellHt, ammoDrops, pistolAmmoDrops, smgAmmoDrops, shotgunAmmoDrops, creditDrops, crosshair, crosshairs, zombies, zombieRags,\r\nbuildObjects, gibs, grenades, explosions, rocks, woodPlanks, container, gameWidth, leftEnemyCount, rightEnemyCount, leftEnemyCountDisplay, rightEnemyCountDisplay,\r\nexplosionSprites, sparkSprites, healthdrops, wallTile\r\n\r\nconst getZombieRadarTextStyle = (count) => ({\r\n  fill: count === 0  ? '#00e595' : '#FF0000',\r\n  fontSize: 12\r\n})\r\n\r\nexport const gameTickHandler = (e, gameObjects) => {\r\n\r\n  if (!gameTickVarsDefined) {\r\n    render = gameObjects.getKeyValue('render')\r\n    container = gameObjects.getKeyValue('container')\r\n    gameWidth = gameObjects.getKeyValue('game-width')\r\n    weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    groundTex = gameObjects.getKeyValue('ground-texture')\r\n    groundBody = gameObjects.getKeyValue('ground')\r\n    groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n    acceleration = getState().game.player.variables.acceleration.min\r\n    // zombies left / right counters\r\n    leftEnemyCountDisplay = new PIXI.Text('')\r\n    leftEnemyCountDisplay.position = { x: 10, y: 5 }\r\n    rightEnemyCountDisplay = new PIXI.Text('zombies on right: 0')\r\n    rightEnemyCountDisplay.pivot.x = rightEnemyCountDisplay.width * .075\r\n    rightEnemyCountDisplay.position = { x: gameWidth, y: 5 }\r\n    // player \r\n    player = gameObjects.getKeyValue('player')\r\n    playerBody = getPlayerPartByType('body', gameObjects)\r\n    crosshairs = new Crosshairs(gameObjects)\r\n    crosshair = crosshairs.crosshair\r\n    gameObjects.setKeyValue('crosshair-shape', crosshairs.crosshair)\r\n    gameObjects.setKeyValue('crosshair', crosshair)\r\n    // items\r\n    gibs = gameObjects.getKeyValue('gibs')\r\n    grenades = gameObjects.getKeyValue('grenades')\r\n    explosions = gameObjects.getKeyValue('explosions')\r\n    rocks = gameObjects.getKeyValue('rocks')\r\n    woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n    buildObjects = gameObjects.getKeyValue('build-objects')\r\n    explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n    // container\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n    wallTile = new WallTile()\r\n    let gradientAlpha = gameObjects.getKeyValue('gradient-alpha')\r\n    gradientAlpha.alpha = .75\r\n    container.addChild( wallTile, gradientAlpha, groundTex )\r\n    player.addSpritesInOrder()\r\n    container.addChild( leftEnemyCountDisplay )\r\n    container.addChild( rightEnemyCountDisplay )\r\n    // vars declared?\r\n    gameTickVarsDefined = true\r\n  }\r\n\r\n  // enemies\r\n  zombies = gameObjects.getKeyValue('zombies')\r\n  zombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n  // items \r\n  pistolShells = gameObjects.getKeyValue('pistol-shells')\r\n  pistolBullets = gameObjects.getKeyValue('pistol-bullets')\r\n  bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n  ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n  creditDrops = gameObjects.getKeyValue('currency-drops')\r\n  healthdrops = gameObjects.getKeyValue('health-drops')\r\n  pistolAmmoDrops = ammoDrops[WEAPON_TYPE_PISTOL]\r\n  smgAmmoDrops = ammoDrops[WEAPON_TYPE_SMG]\r\n  shotgunAmmoDrops = ammoDrops[WEAPON_TYPE_SHOTGUN]\r\n\r\n  let {\r\n    game: {\r\n      keys,\r\n      // width: gameWidth,\r\n      // height: gameHeight,\r\n      gameState,\r\n      gameSubState,\r\n      mouseState,\r\n      mousePosition,\r\n      player: {\r\n        variables: { magnetism, magnetismSpeed, currentDirection, jumping, acceleration: { max: accelMax }, deceleration },\r\n        weapons: { laser: laserSight, equipped, totalAmmo: { grenades: grenadesCount } }\r\n      },\r\n      enemies: {\r\n        zombies: {\r\n          zombieAttackLimiter,\r\n          zombieAttackDistance\r\n        }\r\n      },\r\n      traps: {\r\n        turret: { fireDistance }\r\n      },\r\n      mouseState: { x: mx, y: my, btn: mouseButtonState }\r\n    }\r\n  } = getState()\r\n  let mPosRel = {\r\n    x: mousePosition.x + playerBody.position.x - (width / 2),\r\n    y: mousePosition.y + playerBody.position.y - (height / 2)\r\n  }\r\n  dispatch(setMouseRelativeToPlayerPosition({ x: mPosRel.x, y: mPosRel.y }))\r\n\r\n  // Render pixi graphics in-line with matter objects\r\n  const renderPositionFn = part => {\r\n    return {\r\n      x: part.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration),\r\n      y: part.position.y - playerBody.position.y + (height / 2),\r\n      rotation: part.angle\r\n    }\r\n  }\r\n\r\n  if (gameState === GameStates.GAMEPLAY) {\r\n\r\n    // render tile bg\r\n    wallTile.renderPosition(renderPositionFn, playerBody, acceleration)\r\n    // wallTile.onUpdate()\r\n\r\n    // Player weapons\r\n    // check if firing\r\n    if (mouseButtonState === MOUSE_DOWN && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // check weapon type\r\n      if (equipped === WEAPON_TYPE_PISTOL) { firePistol(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SMG) { fireSMG(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SHOTGUN) { fireShotgun(gameObjects) }\r\n    }\r\n\r\n    // console.log(width, height)\r\n\r\n    // Set render view to follow player\r\n    Render.lookAt(render, {\r\n      min: { x: playerBody.position.x + (width / 2), y: playerBody.position.y - (height / 2) },\r\n      max: { x: playerBody.position.x - (width / 2), y: playerBody.position.y + (height / 2) }\r\n    })\r\n\r\n    // Player movement / controls\r\n    Body.setAngle(playerBody, 0)\r\n\r\n    if (!weaponsUI.reloading && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // movement\r\n      if (keys.indexOf(68) > -1 || keys.indexOf(65) > -1) {\r\n        if (acceleration < accelMax) {\r\n          acceleration += .25\r\n        }\r\n      } else {\r\n        dispatch(setLastDirection(currentDirection))\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1 && keys.indexOf(65) > -1) {\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1) {\r\n        dispatch(setCurrentDirection('right'))\r\n        Body.translate(playerBody, { x: acceleration, y: 0 })\r\n      }\r\n      if (keys.indexOf(65) > -1) {\r\n        dispatch(setCurrentDirection('left'))\r\n        Body.translate(playerBody, { x: -acceleration, y: 0 })\r\n      }\r\n\r\n      // grenades\r\n      if (keys.indexOf(71) > -1 && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n        }\r\n      }\r\n      if (getState().game.rightMouseDown && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n          console.log('should charge grenade from engineHandlers')\r\n        }\r\n      }\r\n    }\r\n\r\n    let { x: playerPosX, y: playerPosY } = renderPositionFn(playerBody)\r\n    dispatch(setPlayerPosition({ x: playerPosX, y: playerPosY }))\r\n\r\n    // render health drops\r\n    healthdrops.forEach(health => {\r\n      health.renderPosition(renderPositionFn)\r\n    })\r\n\r\n    // render ammo boxes\r\n    pistolAmmoDrops.concat(\r\n      smgAmmoDrops\r\n    ).concat(\r\n      shotgunAmmoDrops\r\n    ).forEach(box => {\r\n      box.positionAmmoBox(renderPositionFn)\r\n      if (box.body && box.body.position.y > 500) {\r\n        box.destroy()\r\n      }\r\n      if (box.body) {\r\n        if (playerBody.position.x > box.body.position.x && ((playerBody.position.x - box.body.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: magnetismSpeed, y: 0 })\r\n        }\r\n        if (playerBody.position.x < box.body.position.x && ((box.body.position.x - playerBody.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: -magnetismSpeed, y: 0 })\r\n        }\r\n      }\r\n    })\r\n\r\n    // render currency drops\r\n    creditDrops.forEach(coin => {\r\n      coin.positionCreditGfx(renderPositionFn)\r\n      if (coin.creditBody && coin.creditBody.position.y > 500) {\r\n        coin.destroy()\r\n      }\r\n      if (coin.creditBody) {\r\n        if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: (magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n        if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: -(magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: -magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // render player graphics\r\n    player.setBodySpritesPositions({ mx, fn: renderPositionFn })\r\n    player.setArmsSpritePosition({ mx, my, fn: renderPositionFn })\r\n    player.positionHeadSprite({ mx, my, fn: renderPositionFn })\r\n    player.renderGrenadeChargeMeter(renderPositionFn)\r\n\r\n    if (player.charRunSprite && player.charIdleSprite && player.charJumpSprite) {\r\n\r\n      if (keys.indexOf(65) > -1 || keys.indexOf(68) > -1) {\r\n        if (!jumping) {\r\n          player.charRunSprite.play()\r\n          player.charRunSprite.visible = true\r\n          player.charIdleSprite.visible = false\r\n          player.stopJumpAnimation()\r\n        }\r\n      } else {\r\n        player.charRunSprite.stop()\r\n        player.charRunSprite.visible = false\r\n        player.charIdleSprite.visible = true\r\n        // added below lines to stop sprites overlapping\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnims.forEach(sprite => { sprite.visible = false })\r\n      }\r\n\r\n      if (\r\n        (keys.indexOf(65) > -1 && mouseState.x === GREATER_THAN_PLAYER_X_POS) ||\r\n        (keys.indexOf(68) > -1 && mouseState.x === LESS_THAN_PLAYER_X_POS)\r\n      ) {\r\n        player.charRunSprite.animationSpeed = -1\r\n      } else {\r\n        player.charRunSprite.animationSpeed = 1\r\n      }\r\n\r\n      if (mouseState.x === GREATER_THAN_PLAYER_X_POS) {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = -1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = -1 })\r\n        player.headSprite.scale.y = -1\r\n      } else {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = 1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = 1 })\r\n        player.headSprite.scale.y = 1\r\n      }\r\n\r\n      if (weaponsUI.reloading) {\r\n        player.bodySprites.forEach(sprite => { sprite.visible = false })\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnimsByType[equipped].visible = true\r\n        player.charIdleSprite.visible = false\r\n      } else {\r\n        if (player.armsSpritesByType[equipped]) {\r\n          player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.visible = true\r\n          })\r\n          player.reloadAnimsByType[equipped].visible = false\r\n        }\r\n      }\r\n\r\n      if (jumping || weaponsUI.reloading || player.meleeAttackInProgress || player.grenadeThrowInProgress) {\r\n        player.headSprite.visible = false\r\n      } else {\r\n        player.headSprite.visible = true\r\n      }\r\n\r\n      if (!jumping) {\r\n        player.stopJumpAnimation()\r\n      } else {\r\n        player.charIdleSprite.visible = false\r\n        if (player.charJumpSprite.currentFrame < 2) {\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.y += 80\r\n          })\r\n        }\r\n      }\r\n\r\n      if (player.meleeAttackInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.meleeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n      if (player.grenadeThrowInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.grenadeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    // render player ragdoll\r\n    if (gameObjects.getKeyValue('player-ragdoll') !== null) {\r\n      let playerRag = gameObjects.getKeyValue('player-ragdoll')\r\n      if (playerRag && playerRag.animateRagParts) {\r\n        playerRag.animateRagParts(renderPositionFn)\r\n      }\r\n    }\r\n\r\n  } // -- end if gameState === GameState.GAMEPLAY\r\n\r\n  if (player.body.position.y > 500) {\r\n    player.kill(FELL_OFF)\r\n  }\r\n\r\n  // render pistol shells\r\n  for (let i = 0; i < pistolShells.length; ++i) {\r\n    if (!pistolShellWd) { pistolShellWd = getBodyWidth(pistolShells[i].body) }\r\n    if (!pistolShellHt) { pistolShellHt = getBodyHeight(pistolShells[i].body) }\r\n    pistolShells[i].gfc.position.x = pistolShells[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolShells[i].gfc.position.y = pistolShells[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolShells[i].gfc.rotation = equipped === WEAPON_TYPE_SHOTGUN ? pistolShells[i].body.angle + degrees(90) : pistolShells[i].body.angle\r\n  }\r\n  // render pistol bullets\r\n  for (let i = 0; i < pistolBullets.length; ++i) {\r\n    if (!pistolBulletWd) { pistolBulletWd = getBodyWidth(pistolBullets[i].body) }\r\n    if (!pistolBulletHt) { pistolBulletHt = getBodyHeight(pistolBullets[i].body) }\r\n    pistolBullets[i].gfc.position.x = pistolBullets[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolBullets[i].gfc.position.y = pistolBullets[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolBullets[i].gfc.rotation = pistolBullets[i].body.angle\r\n  }\r\n\r\n  // render grenades\r\n  grenades.forEach(grenade => {\r\n    grenade.animate(renderPositionFn)\r\n  })\r\n\r\n  // explosions tracking\r\n  explosions.forEach(explosion => {\r\n    explosion.calcRenderedPosition(renderPositionFn)\r\n  })\r\n  rocks.forEach(rock => { rock.animate(renderPositionFn) })\r\n  woodPlanks.forEach(wood => { wood.animate(renderPositionFn) })\r\n\r\n  // update ejected mags\r\n  player.updateEjectedMagPositions(renderPositionFn)\r\n\r\n  // render gibs / guts \r\n  gibs.forEach(gib => {\r\n    gib.animate(renderPositionFn)\r\n  })\r\n\r\n  // for zombie count radar\r\n  leftEnemyCount = 0\r\n  rightEnemyCount = 0\r\n\r\n  // keep zombie arm angle inline with player position\r\n  zombies.forEach(zombie => {\r\n    zombie.setPlayerVars({ player, playerDirection: currentDirection, playerBody })\r\n    if (!zombie.paused) {\r\n      zombie.walk()\r\n    }\r\n    Body.setAngle(zombie.body, 0)\r\n    zombie.setSpritesPositions(renderPositionFn)\r\n    // kill zombies who fall off the ledge\r\n    if (zombie.body.position.y > 500) {\r\n      let killType = 'fell off'\r\n      zombie.kill(null, null, killType)\r\n    }\r\n    // trigger zombie attack\r\n    if (\r\n      (playerBody.position.x > zombie.body.position.x && ((playerBody.position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n      (playerBody.position.x < zombie.body.position.x && ((zombie.body.position.x - playerBody.position.x) < zombieAttackDistance))) {\r\n      if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n        zombie.attack()\r\n      }\r\n    }\r\n    // trigger attack if next to a wall\r\n    buildObjects.forEach(obj => {\r\n      if (obj && !obj.destroyed && obj.getBody().label !== 'remote mine trap') {\r\n        // zombie attack barrier control \r\n        if (\r\n          (obj.getBody().position.x > zombie.body.position.x && ((obj.getBody().position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n          (obj.getBody().position.x < zombie.body.position.x && ((zombie.body.position.x - obj.getBody().position.x) < zombieAttackDistance))) {\r\n          if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n            if (obj.getBody().label !== 'landmine trap') {\r\n              zombie.attack()\r\n            }\r\n          }\r\n        }\r\n        // turret fire control\r\n        if (\r\n          obj.direction && obj.direction === 'right' && zombie.body.position.x > obj.getBody().position.x - 10 && zombie.body.position.x - obj.getBody().position.x < fireDistance ||\r\n          obj.direction && obj.direction === 'left' && zombie.body.position.x < obj.getBody().position.x - 10 && obj.getBody().position.x - zombie.body.position.x < fireDistance\r\n          ) {\r\n            obj.shoot()\r\n        }\r\n      }\r\n    })\r\n    // count zombies on left and right side of player\r\n    if (!zombie.dead) {\r\n      if (zombie.body.position.x < playerBody.position.x) {\r\n        leftEnemyCount += 1\r\n      }\r\n      if (zombie.body.position.x > playerBody.position.x) {\r\n        rightEnemyCount += 1\r\n      }\r\n    }\r\n  })\r\n  \r\n  // build traps and barriers\r\n  buildObjects.forEach(obj => {\r\n    if (obj && !obj.destroyed && obj.displayBarrierStrength) {\r\n      obj.displayBarrierStrength(renderPositionFn)\r\n    }\r\n    if (obj.updatePosition) {\r\n      obj.updatePosition(renderPositionFn)\r\n    }\r\n  })\r\n\r\n  // double-check in case radar counts are inaccurate\r\n  if (getState().game.waveCountToDefeat === 0 || getState().game.waveCountToDefeat === null) {\r\n    // for zombie count radar\r\n    leftEnemyCount = 0\r\n    rightEnemyCount = 0\r\n  }\r\n\r\n  // update zombie count on sides of player\r\n  leftEnemyCountDisplay.text = `${leftEnemyCount}`\r\n  leftEnemyCountDisplay.style = getZombieRadarTextStyle(leftEnemyCount)\r\n  rightEnemyCountDisplay.text = `${rightEnemyCount}`\r\n  rightEnemyCountDisplay.style = getZombieRadarTextStyle(rightEnemyCount)\r\n\r\n  zombieRags.forEach(rag => {\r\n    rag.animateRagParts(renderPositionFn)\r\n  })\r\n\r\n  // render crosshair\r\n  if (gameSubState !== SubStates.PLAYER_DEATH) {\r\n    crosshair.position = mousePosition\r\n  }\r\n\r\n  if (crosshair.changed) {\r\n    crosshair = crosshair._new\r\n    crosshair.changed = false\r\n  }\r\n\r\n  // if crosshair is an arrow..\r\n  if (crosshair.changeBack) {\r\n    container.removeChild(crosshair)\r\n    crosshair = crosshairs.crosshair\r\n    container.addChild(crosshairs.crosshair)\r\n    crosshair.changeBack = false\r\n  }\r\n\r\n  // ground\r\n  groundTex.position = renderPositionFn(groundBody)\r\n\r\n  // bullet impacts\r\n  bulletImpacts.forEach(impact => { impact.renderPosition(renderPositionFn) })\r\n  groundFx.forEach(fx => { fx.renderPosition(renderPositionFn) })\r\n\r\n  // fx\r\n  explosionSprites.forEach(ex => { ex.renderPosition(renderPositionFn) })\r\n  sparkSprites.forEach(spark => { spark.renderPosition(renderPositionFn) })\r\n\r\n  // keep cursor on top\r\n  container.addChild(crosshairs.crosshair)\r\n\r\n}\r\n","import { Texture } from '@pixi/core'\r\nimport { TilingSprite } from '@pixi/sprite-tiling'\r\nimport store from '../../app/store'\r\n\r\nexport default class WallTile extends TilingSprite {\r\n    constructor() {\r\n        // console.log(gameObjects)\r\n        const texture = Texture.from(\r\n          window.gameObjects.getKeyValue('wall-tile')\r\n        )\r\n        super(texture, 1, texture.height) //width 1 because we will call onResize from App anyway\r\n        this.width = window.gameObjects.getKeyValue('game-width')\r\n        this.height = window.gameObjects.getKeyValue('game-height')\r\n        this.alpha = .2\r\n    }\r\n\r\n    onResize(width, height) {\r\n        // this.width = width\r\n    }\r\n\r\n    onUpdate(delta) {\r\n    \tthis.tilePosition.x -= delta * 4\r\n    }\r\n\r\n    renderPosition(renderFn, body, acceleration) {\r\n      let { x, y } = renderFn(body)\r\n      let { getState } = store\r\n      let { game: { keys, player: { variables: { currentDirection, jumping } } } } = getState()\r\n      if (currentDirection === 'right' && keys.indexOf(68) > -1) {\r\n        this.tilePosition.x -= .35 //(acceleration * .25)\r\n      }\r\n      if (currentDirection === 'left' && keys.indexOf(65) > -1) {\r\n        this.tilePosition.x += .35 //(acceleration * .25)\r\n      }\r\n      if (jumping) {\r\n        this.tilePosition.y += .25\r\n      }\r\n      // let player = window.gameObjects.getKeyValue('player')\r\n      // console.log( player.body )\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { makePixiSprite } from '../utils/Utils'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { decrementTotalAmmo, setWeaponEquipped } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport GameStates from '../constants/GameStates'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow'\r\n \r\nconst { getState, dispatch } = store\r\n\r\nconst { TweenLite: { to, from } } = window\r\n\r\nexport default function WeaponsUI () {\r\n\tlet { gameObjects } = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tlet pistolIcon = makePixiSprite('weapon-ui-icon-pistol')\r\n\tlet smgIcon = makePixiSprite('weapon-ui-icon-smg')\r\n\tlet shotgunIcon = makePixiSprite('weapon-ui-icon-shotgun')\r\n  let icons = []\r\n\r\n  let mags\r\n  \r\n  let weaponShadow = new DropShadowFilter({ distance: 3.0, alpha: 1.0 })\r\n  let bulletShadow = new DropShadowFilter({ distance: 1.0, alpha: 2.0 })\r\n\r\n  let iconBG = new PIXI.Graphics()\r\n  iconBG.beginFill(0x425041)\r\n  iconBG.drawRect(0, 0, 120, 90)\r\n  iconBG.alpha = .65\r\n  iconBG.position.x = gameWidth - iconBG.width - 20\r\n  iconBG.position.y = gameHeight - iconBG.height - 20\r\n  // iconBG.filters = [ bulletShadow ]\r\n  container.addChild(iconBG)\r\n\r\n\tpistolIcon.width = pistolIcon.width/2\r\n\tpistolIcon.height = pistolIcon.height/2\r\n\ticons.push(pistolIcon)\r\n\r\n\tsmgIcon.width = smgIcon.width/2\r\n\tsmgIcon.height = smgIcon.height/2\r\n  icons.push(smgIcon)\r\n  \r\n  shotgunIcon.width = shotgunIcon.width/2\r\n\tshotgunIcon.height = shotgunIcon.height/2\r\n  icons.push(shotgunIcon)\r\n\r\n\ticons.forEach(icon => {\r\n\t\ticon.position.x = gameWidth - (icon.width + 20)\r\n\t\ticon.position.y = gameHeight - (icon.height + 10)\r\n    icon.alpha = 0\r\n    // icon.filters = [ weaponShadow ]\r\n\t\tcontainer.addChild(icon)\r\n  })\r\n\r\n  this.keepOnTop = () => {\r\n    container.addChild(iconBG)\r\n    icons.forEach(icon => { container.addChild(icon) })\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL]\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG]\r\n    )\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    )\r\n    .forEach(b => { container.addChild(b) })\r\n    this.grenades.forEach(g => { container.addChild(g) })\r\n    if (this.shaking && !this.reloading) {\r\n      container.addChild(this.emptyText)\r\n    }\r\n  }\r\n  setInterval(this.keepOnTop, 1000)\r\n\r\n  let magazinesByWeaponType = {\r\n\t\t'pistol weapon': null,\r\n\t\t'smg weapon': null,\r\n\t\t'shotgun weapon': null,\r\n  }\r\n\r\n  let bulletMask = new PIXI.Graphics()\r\n  bulletMask.beginFill(0xffffff)\r\n  bulletMask.drawRect(pistolIcon.position.x, pistolIcon.position.y, pistolIcon.width, pistolIcon.height)\r\n  container.addChild(bulletMask)\r\n\r\n  if (!window.gameObjects.getKeyValue('bullet-shell-bevel-ui')) {\r\n    window.gameObjects.setKeyValue('bullet-shell-bevel-ui', new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 }))\r\n  }\r\n  let bulletBevel = window.gameObjects.getKeyValue('bullet-shell-bevel-ui')\r\n\r\n  let makePistolMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL] = magazinesByWeaponType[WEAPON_TYPE_PISTOL].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xBFA522)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 27 - pistolIcon.width/magazinesByWeaponType[WEAPON_TYPE_PISTOL].length * i\r\n      bulletGfc.position.y = pistolIcon.position.y + pistolIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeSMGMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG] = magazinesByWeaponType[WEAPON_TYPE_SMG].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xCEC182)\r\n      bulletGfc.drawRect(0, 0, 2, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5 })\r\n      // bulletGfc.filters = [ bevel ]\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 24 - smgIcon.width/magazinesByWeaponType[WEAPON_TYPE_SMG].length * i\r\n      bulletGfc.position.y = smgIcon.position.y + smgIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeShotgunMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN] = magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x3E1313)\r\n      bulletGfc.beginFill(0xB00000)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      bulletGfc.beginFill(0xBCA845)\r\n      bulletGfc.drawRect(0, 8, 4, 3)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .25 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 32 - shotgunIcon.width/magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].length * i\r\n      bulletGfc.position.y = shotgunIcon.position.y + shotgunIcon.height - 26\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      // SMG bullets too small for bevel filter\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [ bulletBevel ] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [ bulletBevel ] })\r\n      if (this.grenades && this.gbevel && this.gnoise) {\r\n        this.grenades.forEach(g => { g.filters = [ this.gbevel, this.gnoise ] })\r\n      }\r\n    } else {\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [] })\r\n      if (this.grenades) {\r\n        this.grenades.forEach(g => { g.filters = [] })\r\n      }\r\n    }\r\n  }\r\n  \r\n  let makeMagByType = {\r\n    'pistol weapon': makePistolMag,\r\n    'smg weapon': makeSMGMag,\r\n    'shotgun weapon': makeShotgunMag,\r\n  }\r\n\r\n\tlet weaponIcons = {\r\n\t\t'pistol weapon': pistolIcon,\r\n\t\t'smg weapon': smgIcon,\r\n\t\t'shotgun weapon': shotgunIcon,\r\n  }\r\n\r\n  this.updateMagazine = type => {\r\n    let { game: { player: { weapons: { ammoCapacity } } } } = getState()\r\n    if (magazinesByWeaponType[type]) {\r\n      magazinesByWeaponType[type].forEach(b => { b.destroy() })\r\n      magazinesByWeaponType[type] = null\r\n    }\r\n    magazinesByWeaponType[type] = new Array(ammoCapacity[type]).fill(1)\r\n    makeMagByType[type]()\r\n  }\r\n\r\n  // initialize magazines\r\n  this.updateMagazine(WEAPON_TYPE_PISTOL)\r\n  this.updateMagazine(WEAPON_TYPE_SMG)\r\n  this.updateMagazine(WEAPON_TYPE_SHOTGUN)\r\n  mags = [\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n  ]\r\n\r\n  this.swapSwap = (wep) => {\r\n    let { list, equipped } = getState().game.player.weapons\r\n    magazineIndexes[wep] = 0\r\n    let idx = list.indexOf(wep)\r\n    if (idx > -1) {\r\n      this.select(\r\n        list[idx + 1] ?\r\n        list[idx + 1] :\r\n        list[0]\r\n      )\r\n    }\r\n    window.TweenLite.delayedCall(.05, () => {\r\n      this.select(equipped)\r\n    })\r\n  }\r\n\r\n  this.updateWeaponMagazines = wep => {\r\n    let { list } = getState().game.player.weapons\r\n    mags.forEach(mag => { mag.forEach(b => { container.removeChild(b) }) })\r\n    list.forEach(wep => { this.updateMagazine(wep) })\r\n    mags = [\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    ]\r\n    this.reload(true)\r\n    dispatch( setWeaponEquipped(wep) )\r\n    this.swapSwap(wep) // switch to another weapon, the switch back to correct the ammo display\r\n  }\r\n\r\n\tlet magazineIndexes = {\r\n\t\t'pistol weapon': 0,\r\n\t\t'smg weapon': 0,\r\n\t\t'shotgun weapon': 0,\r\n\t}\r\n\r\n\tlet magEmptyBools = {\r\n\t\t'pistol weapon': false,\r\n\t\t'smg weapon': false,\r\n\t\t'shotgun weapon': false,\r\n  }\r\n\r\n  this.checkEmpty = weapon_str => magEmptyBools[weapon_str]\r\n  \r\n  const doTheWiggle = (icon, defaultPos, callback) => {\r\n    to(icon, .1, {\r\n      x: defaultPos + 10,\r\n      onComplete: () => {\r\n        to(icon, .1, {\r\n          x: defaultPos - 10,\r\n          onComplete: () => {\r\n            to(icon, .1, {\r\n              x: defaultPos + 5,\r\n              onComplete: () => {\r\n                to(icon, .1, {\r\n                  x: defaultPos - 5,\r\n                  onComplete: () => {\r\n                    to(icon, .1, {\r\n                      x: defaultPos + 3,\r\n                      onComplete: () => {\r\n                        to(icon, .1, {\r\n                          x: defaultPos - 2,\r\n                          onComplete: () => {\r\n                            to(icon, .1, {\r\n                              x: defaultPos + 1,\r\n                              onComplete: () => {\r\n                                to(icon, .1, {\r\n                                  x: defaultPos,\r\n                                  onComplete: () => {\r\n                                    this.shaking = false\r\n                                    callback()\r\n                                  }\r\n                                })\r\n                              }\r\n                            })\r\n                          }\r\n                        })\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  this.textForEmptyShake = 'RELOAD'\r\n  this.changeTextForEmptyShake = str => {\r\n    this.textForEmptyShake = str\r\n    this.emptyText.text = str\r\n  }\r\n\r\n  this.emptyText = new PIXI.Text(this.textForEmptyShake, { fill: 0xB00000, fontSize: '15px', fontWeight: 'bold' })\r\n  this.emptyText.pivot.x = this.emptyText.width * .5\r\n  this.emptyText.pivot.y = this.emptyText.height * .5\r\n  this.emptyText.position.x = iconBG.position.x + iconBG.width * .5\r\n  this.emptyText.position.y = iconBG.position.y + iconBG.height * .8\r\n  this.removeEmptyText = () => {\r\n    container.removeChild(this.emptyText)\r\n  }\r\n\r\n  this.shaking = false\r\n  this.emptyMagShake = () => {\r\n    container.addChild(this.emptyText)\r\n    if (!this.shaking) {\r\n      this.shaking = true\r\n      icons.forEach(icon => {\r\n        let defaultPos = icon.position.x\r\n        doTheWiggle(icon, defaultPos, this.removeEmptyText)\r\n      })\r\n      doTheWiggle(iconBG, iconBG.position.x, this.removeEmptyText)\r\n    }\r\n  }\r\n\r\n\tthis.reloading = false\r\n\tthis.reload = (forceReload) => {\r\n\t\tif (!this.reloading || forceReload) {\r\n\t\t\tlet { game: { player: { weapons: { reloadAnimationFrames, equipped, totalAmmo } } } } = getState()\r\n      this.removeEmptyText()\r\n      if (magazineIndexes[equipped] !== 0 && totalAmmo[equipped] !== 0 || forceReload) {\r\n        if (forceReload) { magazineIndexes[equipped] = 0 }\r\n        this.reloading = true\r\n\t\t\t\tlet ammoCheck = totalAmmo[equipped] < magazinesByWeaponType[equipped].length\r\n\t\t\t\tmagazinesByWeaponType[equipped].forEach((b, i) => { b.alpha = 0 })\r\n\t\t\t\tfor (let i = 0, limit = (ammoCheck ? totalAmmo[equipped] : magazinesByWeaponType[equipped].length); i < limit; ++i) {\r\n\t\t\t\t\tlet b = magazinesByWeaponType[equipped][i]\r\n\t\t\t\t\tb.alpha = 1\r\n\t\t\t\t\tfrom(b, reloadAnimationFrames[equipped]/60, {\r\n\t\t\t\t\t\tx: gameWidth - (b.width * i),\r\n\t\t\t\t\t\tonComplete: (_i) => {\r\n\t\t\t\t\t\t\tif (_i === limit-1) {\r\n\t\t\t\t\t\t\t\tmagazineIndexes[equipped] = 0\r\n                magEmptyBools[equipped] = false\r\n                this.lastBulletByWepType[equipped] = false\r\n                if (forceReload) {\r\n                  this.reloading = false\r\n                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (totalAmmo[equipped] === 0) {\r\n\t\t\t\t\t\t\t\tthis.reloading = false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonCompleteParams: [i]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  // forceWepEquipped is a weapon type string\r\n\tthis.select = (forceWepEquipped) => {\r\n    let { game: { player: { weapons: { totalAmmo, equipped } } } } = getState()\r\n    icons.forEach(icon => { icon.alpha = 0 })\r\n\t\tmags.forEach(m => {\r\n      m.forEach(b => {\r\n        if (b && b.hasOwnProperty('alpha')) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    })\r\n\t\tweaponIcons[forceWepEquipped ? forceWepEquipped : equipped].alpha = 1\r\n\t\tlet ammoCheck = totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] < magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length\r\n\t\tif (totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] !== 0) {\r\n\t\t\tlet limit = (ammoCheck\r\n\t\t\t\t? totalAmmo[forceWepEquipped ? forceWepEquipped : equipped]\r\n\t\t\t\t: magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped])\r\n\t\t\tlet lastMagIdx = ammoCheck ? magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] : 0\r\n\t\t\tif (ammoCheck) { magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped] = lastMagIdx }\r\n\t\t\tfor (let i = 0; i < limit; ++i) {\r\n\t\t\t\tmagazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped][magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length-1 - i].alpha = 1\r\n\t\t\t}\r\n    }\r\n    // added this code to hide bullets when last mag is less than ammo cap. \r\n    if (magEmptyBools[equipped]) {\r\n      magazinesByWeaponType[equipped].forEach(b => {\r\n        if (!forceWepEquipped) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    }\r\n\t}\r\n\r\n  this.lastBulletByWepType = {\r\n    'pistol weapon': false,\r\n    'smg weapon': false,\r\n    'shotgun weapon': false,\r\n  }\r\n\r\n\tthis.fireBullet = weapon_str => {\r\n\t\tif (magazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]]) {\r\n\t\t\tmagazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]].alpha = 0\r\n\t\t\tmagazineIndexes[weapon_str]++\r\n\t\t\tdispatch( decrementTotalAmmo(weapon_str) )\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n        this.lastBulletByWepType[weapon_str] = true\r\n      }\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n\t\t\t\tmagEmptyBools[weapon_str] = true\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n  \r\n  const makeGrenadeIcon = () => {\r\n    this.gbevel = new BevelFilter()\r\n    this.gnoise = new NoiseFilter()\r\n    this.gbevel.shadowAlpha = .45\r\n    this.gbevel.lightAlpha = .35\r\n    this.gbevel.thickness = 5\r\n    this.gbevel.shadowColor = 0x0\r\n    this.gbevel.lightColor = 0x208C44\r\n    this.gnoise.noise = .1\r\n    this.gnoise.seed = .5\r\n    let grenadeGfc = new PIXI.Graphics()\r\n    grenadeGfc.lineStyle(1, 0x0)\r\n    grenadeGfc.beginFill(0x1F472C)\r\n    grenadeGfc.drawCircle(0, 0, 6)\r\n    grenadeGfc.filters = getState().game.filterEffects ? [ this.gbevel, this.gnoise ] : []\r\n    container.addChild(grenadeGfc)\r\n    \r\n    return grenadeGfc\r\n  }\r\n\r\n  this.grenades = []\r\n\r\n  this.updateGrenadeIcons = () => {\r\n    if (this.grenades) { this.grenades.forEach(g => { g.destroy() }) }\r\n    this.grenades = []\r\n    let grenadeCount = getState().game.player.weapons.totalAmmo['grenades']\r\n    for (let i = 0; i < grenadeCount; ++i) {\r\n      let gnade = makeGrenadeIcon()\r\n      this.grenades.push( gnade )\r\n    }\r\n    this.grenades.forEach((g, i) => {\r\n      g.position.x = getState().game.width - 25 - ((g.width * 1.5) * i)\r\n      g.position.y = getState().game.height - 110 - g.height\r\n      from(g, (.1 * i), { y: g.position.y - 10, alpha: 0 })\r\n    })\r\n  }\r\n\r\n  this.updateGrenadeIcons()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const updateWeaponsUI = () => {\r\n  let { gameObjects } = window\r\n  let { game: { gameState } } = getState()\r\n\tif (gameObjects) {\r\n\t\tlet weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\t\tif (weaponsUI && (!weaponsUI.reloading || gameState === GameStates.SHOP_MENU)) {\r\n      weaponsUI.select()\r\n      gameObjects = null\r\n\t\t}\r\n\t}\r\n}\r\n","import { Graphics } from 'pixi.js'\r\nimport { Bodies, Body, World } from 'matter-js'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport store from '../../../app/store'\r\n\r\nexport default class HealthDrop {\r\n\r\n  constructor(amt, pos) {\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    let _amt = amt * 3\r\n    this.gfc = new Graphics()\r\n    this.gfc.lineStyle(2, 0x0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.gfc.lineStyle(0, 0x0, 0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.bevel = new BevelFilter({ thickness: 3, lightAlpha: .5, shadowAlpha: .5, shadowColor: 0x247F4D })\r\n    this.glow = new GlowFilter({ outerStrength: .5 })\r\n    this.gfc.filters = store.getState().game.filterEffects ? [\r\n      this.glow, this.bevel,\r\n    ] : []\r\n\r\n    this.body = Bodies.rectangle(pos.x, pos.y, _amt, _amt, {\r\n      restitution: .65,\r\n      collisionFilter: itemCollisionOptions\r\n    })\r\n    this.body.main = this\r\n    this.body.amount = amt\r\n    this.body.label = 'health drop'\r\n    World.add(window.gameObjects.getKeyValue('world'), this.body)\r\n    window.gameObjects.getKeyValue('health-drops').push( this )\r\n    \r\n    return this\r\n  }\r\n\r\n  checkFilters() {\r\n    if (this.gfc && store.getState().game.filterEffects) {\r\n      this.gfc.filters = [ this.bevel, this.glow ]\r\n    } else {\r\n      if (this.gfc) {\r\n        this.gfc.filters = []\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    let idx = healths.indexOf(this)\r\n    if (idx > -1) { healths.splice(idx, 1) }\r\n    this.gfc.destroy()\r\n    this.gfc = null\r\n    World.remove(window.gameObjects.getKeyValue('world'), this.body)\r\n    this.body = null\r\n    healths = null\r\n    idx = null\r\n    this.container = null\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.container && this.container.children.indexOf(this.gfc) === -1) {\r\n      this.container.addChild(this.gfc)\r\n    }\r\n    this.gfc.position = renderFn(this.body)\r\n  }\r\n\r\n}","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Text, Container, filters } from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\n\r\nexport default function AmmoDrop (position, weaponType, amount) {\r\n  let { BlurFilter } = filters  \r\n  let { gameObjects } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n\r\n  let colors = {\r\n    'pistol weapon': 0x0254FF,\r\n    'smg weapon': 0xFF9D02,\r\n    'shotgun weapon': 0xA52121,\r\n  }\r\n\r\n  let text = {\r\n    'pistol weapon': 'PISTOL',\r\n    'smg weapon': 'SMG',\r\n    'shotgun weapon': 'SHOTGUN',\r\n  }\r\n  \r\n  let props = {\r\n    x: position.x, y: position.y,\r\n    w: 50, h: 20\r\n  }\r\n\r\n  let ammoBox = Bodies.rectangle(props.x, props.y, props.w, props.h, {\r\n    collisionFilter: itemCollisionOptions\r\n  })\r\n  ammoBox.label = 'ammo drop'\r\n  ammoBox.ammo_type = weaponType\r\n  ammoBox.amount = amount\r\n  let world = gameObjects.getKeyValue('world')\r\n  World.add(world, ammoBox)\r\n\r\n  ammoBox.main = this\r\n\r\n  let ammoGfc = new Container()\r\n\r\n  let boxGfc = new Graphics()\r\n  boxGfc.beginFill(colors[weaponType])\r\n  boxGfc.drawRect(0, 0, props.w, props.h)\r\n  boxGfc.pivot.x = boxGfc.width * .5\r\n  boxGfc.pivot.y = boxGfc.height * .5\r\n  let bevelFilter = new BevelFilter()\r\n  bevelFilter.thickness = 5\r\n  bevelFilter.lightColor = 0xffffff\r\n  bevelFilter.lightAlpha = 0.25\r\n  bevelFilter.shadowColor = 0x0\r\n  bevelFilter.shadowAlpha = 0.25\r\n  boxGfc.filters = store.getState().game.filterEffects ? [\r\n    bevelFilter\r\n  ] : []\r\n\r\n  let blurGfc, blurFilter\r\n  blurGfc = new Graphics()\r\n  blurGfc.beginFill(0x000000)\r\n  blurGfc.drawRect(0, props.h/2, props.w, props.h/2)\r\n  blurGfc.pivot.x = blurGfc.width * .5\r\n  blurGfc.pivot.y = blurGfc.height * .5\r\n  blurFilter = new BlurFilter(5, 3)\r\n  blurGfc.alpha = .85\r\n  blurGfc.filters = store.getState().game.filterEffects ? [\r\n    blurFilter\r\n  ] : []\r\n  // if (store.getState().game.filterEffects) {\r\n  // }\r\n\r\n  let mask = new Graphics()\r\n  mask.beginFill(colors[weaponType])\r\n  mask.drawRect(0, 0, props.w, props.h)\r\n  mask.pivot.x = mask.width * .5\r\n  mask.pivot.y = mask.height * .5\r\n  blurGfc.mask = mask\r\n\r\n  if (store.getState().game.filterEffects) {\r\n    ammoGfc.addChild(boxGfc, blurGfc, mask)\r\n  } else {\r\n    ammoGfc.addChild(boxGfc, mask)\r\n  }\r\n\r\n  let boxTxt = new Text(text[weaponType], { fontSize: '9px', fill: '#FFF', fontWeight: 'bold' })\r\n  boxTxt.pivot.x = boxTxt.width * .5\r\n  boxTxt.pivot.y = boxTxt.height * .5\r\n  let glow = new GlowFilter()\r\n  glow.color = 0x0\r\n  glow.outerStrength = 1.0\r\n  boxTxt.filters = store.getState().game.filterEffects ? [ glow ] : []\r\n  ammoGfc.addChild(boxTxt)\r\n\r\n  // container.addChild(ammoGfc)\r\n\r\n  this.gfc = ammoGfc\r\n  this.body = ammoBox\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      ammoGfc.addChild(blurGfc, boxTxt)\r\n      boxGfc.filters = [ bevelFilter ]\r\n      blurGfc.filters = [ blurFilter ]\r\n      boxTxt.filters = [ glow ]\r\n    } else {\r\n      if (ammoGfc.children.indexOf(blurGfc) > -1) {\r\n        ammoGfc.removeChild(blurGfc)\r\n      }\r\n      boxGfc.filters = []\r\n      blurGfc.filters = []\r\n      boxTxt.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    const idx = ammoDrops[weaponType].indexOf(this)\r\n    if (idx > -1) {\r\n      ammoDrops[weaponType].splice(idx, 1)\r\n      ammoGfc.destroy()\r\n      World.remove(world, ammoBox)\r\n    }\r\n  }\r\n  \r\n  // auto time-out to destroy self \r\n  setTimeout(() => {\r\n    this.destroy()\r\n  }, 20000)\r\n\r\n  ammoDrops[weaponType].push(this)\r\n\r\n  this.positionAmmoBox = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(ammoBox)\r\n    ammoGfc.position = { x, y }\r\n    ammoGfc.rotation = rot\r\n    if (container && container.children.indexOf(this.gfc) === -1) {\r\n      container.addChild(ammoGfc)\r\n    }\r\n  }\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { getBodyHeight } from '../utils/Utils'\r\nimport { decrementWaveCountToDefeat, increaseScore, incrementZombiesOnStage,\r\n\tupdatePrevScore, setZombieLastKilled, setLastGrenadeKill, resetConsecutiveGrenadeKills, setAchievementOwned, increaseStats, StatsDefs } from '../gameSlice'\r\nimport { GibGenerator } from '../items/Gib'\r\nimport store from '../../../app/store'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { BulletImpact } from '../player/fireWeapons'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport HealthDrop from '../items/HealthDrop'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { degrees } from 'radians'\r\nimport { createTextMessage } from '../createMessages'\r\nimport { AchievementDefs } from '../gameSlice'\r\nimport AchievementsView from '../ReactComponents/AchievementsView'\r\n\r\nexport function ZombieRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { TweenLite: { delayedCall, to } } = window\r\n\tlet world, container, zombieRags\r\n\tlet { gameObjects } = window\r\n\tif (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n\tif (!container) {\r\n\t\tcontainer = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tif (!zombieRags) {\r\n\t\tzombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n\t}\r\n\tlet bloodSmack = gameObjects.getKeyValue('death-rip-sound')\r\n\tbloodSmack.play()\r\n\tlet deathSnd = gameObjects.getKeyValue('zombie-death-sound')\r\n\tdeathSnd.play()\r\n\r\n\tlet b = { w: 40, h: 90 }\r\n  let h = { w: 20, h: 30 }\r\n\tlet a = { w: 15, h: 40 }\r\n\tlet l = { w: 15, h: 40 }\r\n\tlet hnd = { w: 15, h: 35 }\r\n\tlet f = { w: 15, h: 35 }\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: -b.w/4, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n  this.composite = Composite.create()\r\n  this.bodies = [\r\n    head,\r\n    armUpperL, armUpperR,\r\n    armLowerL, armLowerR,\r\n    legUpperL, legUpperR,\r\n    legLowerL, legLowerR,\r\n    footL, footR\r\n\t]\r\n\tthis.bodies.forEach(body => { body.label = 'zombie body part' })\r\n\tbodyUpper.label = 'torso'\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\tthis.constraints = [\r\n\t\tbodyToHead,\r\n\t\thandToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t]\r\n\r\n\tWorld.add(world, this.composite)\r\n  Body.applyForce(bodyUpper, bodyUpper.position, force)\r\n  this.bodies.forEach(_body => {\r\n    Body.applyForce(_body, _body.position, { x: random.float(-0.01, -0.05), y: random.float(-0.01, -0.05) })\r\n  })\r\n\tzombieRags.push(this)\r\n\r\n\t// add sprites\r\n\tlet z_parts_spritesheet = gameObjects.getKeyValue('zombie-parts-gored-sheet')\r\n\r\n  const getSkullTex = () => {\r\n    let skulls = [ 'skull_gored.png', 'skull_gored2.png', 'skull_gored3.png' ]\r\n    return skulls[Math.floor(Math.random() * skulls.length)]\r\n  }\r\n\tlet skull = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[ getSkullTex() ]\r\n  )\r\n\tskull._id = 'skull'\r\n\tlet torso = new PIXI.Sprite( z_parts_spritesheet.textures['torso_whole_gored.png'] )\r\n\ttorso._id = 'torso'\r\n\t\r\n\tlet spriteParts = []\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_leg_lower_gored.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_arm_hand_gored.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_arm_forearm_gored.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n  \r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_leg_upper_gored.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n\tlet foot2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_leg_foot_gored.png']\r\n\t)\r\n\tfoot2._id = 'foot 2'\r\n\tspriteParts.push( foot2 )\r\n  \r\n  spriteParts.push( torso, skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_leg_lower_gored.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\t\r\n\tlet hand1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_arm_hand_gored.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n\tlet arm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_forearm_gored.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tlet foot1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_leg_foot_gored.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n\t\tpart.updateAnchor = true\r\n\t\tpart.pivot.x = part.width * .5\r\n\t\tpart.pivot.y = part.height * .5\r\n\t\tcontainer.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = (\r\n    force ? \r\n      force.x < 0 ?\r\n      { x: -0.002 }\r\n      : { x: 0.002 }\r\n    : { x: random.float(-0.002, 0.002) }\r\n  )\r\n\tgibForce.y = -0.005\r\n\t\r\n\tnew GibGenerator(\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? random.int(5, 10) : 3,  //random.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 2 : 1\r\n  )\r\n\r\n\tthis.destroy = () => {\r\n\t\tspriteParts.forEach((sprite, i) => {\r\n      to(sprite, getState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 1 : .5, {\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          container.removeChild(sprite)\r\n          if (i === spriteParts.length - 1) {\r\n            World.remove(world, this.composite)\r\n\t\t\t\t\t\tzombieRags.splice(zombieRags.indexOf(this), 1)\r\n\t\t\t\t\t\tzombieRags = null\r\n\t\t\t\t\t\tworld = null\r\n\t\t\t\t\t\t// container = null\r\n\t\t\t\t\t\tthis.bodies.forEach(b => { b = null })\r\n\t\t\t\t\t\tthis.constraints.forEach(c => { c = null })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\t}\r\n  \r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n\t\tskull.rotation = skullPos.rotation\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a random constraint\r\n\tconst randomConstraintToRemove = () => this.constraints[ Math.floor( Math.random() * this.constraints.length ) ]\r\n\tlet parts = new Array(random.int(1, 10)).fill(1)\r\n  parts = parts.map((item, i) => {\r\n    let rand\r\n    const getARandomConstraint = () => {\r\n      rand = randomConstraintToRemove()\r\n      if (parts.indexOf(rand) > -1) {\r\n        getARandomConstraint()\r\n      } else {\r\n        return rand\r\n      }\r\n    }\r\n    return getARandomConstraint()\r\n  })\r\n  parts.forEach(part => { Composite.remove(this.composite, part) })\r\n\r\n\t// auto removal\r\n\tdelayedCall(\r\n\t\t!getState().game.lastWaveCountDefeated || getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n\t\tthis.destroy\r\n\t)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function Zombie(x, y) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { Power2, TweenLite: { delayedCall, to, set } } = window\r\n\tlet world, zombies, container\r\n\tlet { gameObjects } = window\r\n  if (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n  if (!zombies) {\r\n    zombies = gameObjects.getKeyValue('zombies')\r\n  }\r\n  if (!container) {\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\r\n  dispatch( incrementZombiesOnStage() )\r\n\t\r\n  let b = { w: 60, h: 125 }\r\n\tlet h = { w: 40, h: 60 }\r\n\t// let zombieWalkSpeed = .65\r\n\tlet zombieWalkSpeed = getState().game.enemies.zombies.walkSpeed\r\n\r\n  let body = Bodies.rectangle(x, y, b.w, b.h, { collisionFilter: enemyCollisionOptions })\r\n  let head = Bodies.rectangle(x, y, h.w, h.h, { collisionFilter: enemyCollisionOptions, inertia: Infinity })\r\n  \r\n\tbody.label = 'enemy zombie body'\r\n\thead.label = 'enemy zombie head'\r\n\r\n  let headToBody = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: body,\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -b.h/2 },\r\n    length: 0,\r\n  })\r\n\r\n  let zombie = Composite.create()\r\n\r\n  this.composite = zombie\r\n  this.body = body\r\n  this.head = head\r\n\r\n  Composite.add(zombie, [\r\n    body, head,\r\n    headToBody\r\n  ])\r\n  World.add(world, zombie)\r\n\r\n  // pixi stuff\r\n  let zWalkSheet = gameObjects.getKeyValue('zombie-walk-sheet') //gameObjects.getKeyValue('z-walk-spritesheet')\r\n\tlet zAttackSheet = gameObjects.getKeyValue('zombie-attack1-sheet')  // gameObjects.getKeyValue('z-attack-spritesheet')\r\n\tlet idleSheet = gameObjects.getKeyValue('zombie-idle-sheet')\r\n\tlet idleAnim = new PIXI.AnimatedSprite( idleSheet.animations['idle'] )\r\n\tlet zWalk = new PIXI.AnimatedSprite(zWalkSheet.animations['walkcycle'])\r\n\tlet zAttack = new PIXI.AnimatedSprite(zAttackSheet.animations['attack1'])\r\n\tlet zAttack2 = new PIXI.AnimatedSprite(gameObjects.getKeyValue('zombie-attack2-sheet').animations['attackTwo'])\r\n\t\r\n\t// slash fx \r\n\tlet slashFX = gameObjects.getKeyValue('zombie-slash-fx-sheet')\r\n  let slashAnim = new PIXI.AnimatedSprite( slashFX.animations['slash'] )\r\n\t\r\n\tslashAnim.loop = false\r\n\tslashAnim.animationSpeed = .5\r\n\tslashAnim.updateAnchor = true\r\n\tslashAnim.pivot.x = slashAnim.width * .5\r\n\tslashAnim.pivot.y = slashAnim.height * .5\r\n\tslashAnim.visible = false\r\n\tslashAnim.onComplete = () => {\r\n\t\tslashAnim.visible = false\r\n\t}\r\n  container.addChild(slashAnim)\r\n  \r\n  // shadow\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 80, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n\tblur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n  if (container && container.children.indexOf(this.shadow) === -1) {\r\n    container.addChild(this.shadow)\r\n  }\r\n\r\n\tidleAnim.loop = true\r\n\tidleAnim.animationSpeed = .5\r\n\tidleAnim.updateAnchor = true\r\n\tidleAnim.pivot.x = idleAnim.width * .5\r\n\tidleAnim.pivot.y = idleAnim.height * .6\r\n\tcontainer.addChild(idleAnim)\r\n\r\n  zWalk.loop = true\r\n  zWalk.animationSpeed = 0.5\r\n  zWalk.updateAnchor = true\r\n  zWalk.pivot.x = zWalk.width * .5\r\n  zWalk.pivot.y = zWalk.height * .6\r\n  container.addChild(zWalk)\r\n\r\n\tzAttack.loop = false\r\n  zAttack.animationSpeed = 0.65\r\n  zAttack.updateAnchor = true\r\n  zAttack.pivot.x = zAttack.width * .5\r\n  zAttack.pivot.y = zAttack.height * .6\r\n  container.addChild(zAttack)\r\n\tzAttack.visible = false\r\n\t\r\n\tzAttack2.loop = false\r\n  zAttack2.animationSpeed = 0.65\r\n  zAttack2.updateAnchor = true\r\n  zAttack2.pivot.x = zAttack2.width * .5\r\n  zAttack2.pivot.y = zAttack2.height * .6\r\n  container.addChild(zAttack2)\r\n\tzAttack2.visible = false\r\n\r\n\tthis.walkAnim = zWalk\r\n\tthis.attackAnim = zAttack\r\n\tthis.attackAnim2 = zAttack2\r\n\tthis.idleAnim = idleAnim\r\n\r\n\tthis.anims = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim\r\n\t]\r\n\tthis.anims.forEach(anim => {\r\n\t\twindow.TweenLite.from(\r\n\t\t\tanim, 1, { alpha: 0 }\r\n\t\t)\r\n\t})\r\n\r\n\tthis.playerBodyPosition = null\r\n\r\n\tthis.playSlashAnim = () => {\r\n\t\tif (this.attackAnim.visible) {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = 1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x\r\n\t\t\tslashAnim.rotation = degrees(0)\r\n\t\t} else {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = -1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x * -1\r\n\t\t\tslashAnim.rotation = degrees(180)\r\n\t\t}\r\n\t\tslashAnim.visible = true\r\n\t\tslashAnim.gotoAndPlay(0)\r\n\t}\r\n\r\n\tthis.setSpritesPositions = fn => {\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.shadow.position.x = x\r\n\t\tthis.shadow.position.y = y + this.walkAnim.height/4 + 10\r\n\t\tthis.walkAnim.position.x = x\r\n\t\tthis.walkAnim.position.y = y\r\n\t\tthis.attackAnim.position.x = x\r\n\t\tthis.attackAnim.position.y = y\r\n\t\tthis.attackAnim2.position.x = x\r\n\t\tthis.attackAnim2.position.y = y\r\n\t\tthis.idleAnim.position.x = x\r\n\t\tthis.idleAnim.position.y = y\t\r\n\t\t// set timescale according to whether player is alive\r\n\t\tif (this.player.dead) {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.2\r\n\t\t\tthis.idleAnim.animationSpeed = 0.2\r\n\t\t\tslashAnim.animationSpeed = 0.2\r\n\t\t} else {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.5\r\n\t\t\tthis.attackAnim.animationSpeed = 0.65\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.65\r\n\t\t\tthis.idleAnim.animationSpeed = 0.5\r\n\t\t\tslashAnim.animationSpeed = 0.5\r\n\t\t}\r\n\t\tif (this.shouldDisplayHealth && this.healthDisplay !== undefined) {\r\n\t\t\tthis.moveLifeDisplay( fn(this.body) )\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setPlayerVars = ({ player, playerDirection, playerBody }) => {\r\n\t\tthis.player = player\r\n\t\tthis.playerBodyPosition = playerBody.position\r\n\t\tthis.playerBody = playerBody\r\n\t\tthis.playerDirection = playerDirection\r\n\t}\r\n\t\r\n\tconst zombieFarFromPlayer = (distance) => {\r\n\t\treturn (this.playerBody.position.x - (distance ? distance : 120) > this.body.position.x || this.playerBody.position.x + (distance ? distance : 120) < this.body.position.x)\r\n\t}\r\n\r\n\tthis.playIdleAnim = () => {\r\n\t\tif (!zAttack.playing && !zAttack2.playing && !this.walkAnimPlaying) {\r\n\t\t\tidleAnim.play()\r\n\t\t\tidleAnim.visible = true\r\n\t\t}\r\n\t}\r\n\r\n\tthis.stopIdleAnim = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\r\n\tthis.walkAnimPlaying = false\r\n\tthis.playWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === false) {\r\n\t\t\tthis.stopIdleAnim()\r\n\t\t\tthis.walkAnim.visible = true\r\n\t\t\tthis.walkAnim.play()\r\n\t\t\tthis.walkAnimPlaying = true\r\n\t\t} else {\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n\tthis.stopWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === true) {\r\n\t\t\tthis.walkAnim.stop()\r\n\t\t\tthis.walkAnim.gotoAndStop(0)\r\n\t\t\tthis.walkAnimPlaying = false\r\n\t\t\tthis.walkAnim.visible = false\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n  this.playWalkAnim()\r\n  \r\n  this.healthOffsetY = 160\r\n  this.damageDisplayOptions = {\r\n    fill: '#FF0000',\r\n    fontSize: 11\r\n  }\r\n  this.healthDisplayOptions = {\r\n    fill: '#FFFF00',\r\n    fontSize: 11\r\n  }\r\n\tthis.healthDisplay = new PIXI.Text(this.health, this.healthDisplayOptions)\r\n\tthis.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n\tif (getState().game.displayZombieHealth) {\r\n\t\tthis.shouldDisplayHealth = true\r\n\t\tcontainer.addChild(this.healthDisplay)\r\n\t}\r\n\r\n  this.moveLifeDisplay = (renderFnResult) => {\r\n\t\tif (this.shouldDisplayHealth) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tthis.healthDisplay.text = this.health\r\n\t\t\t} else {\r\n\t\t\t\tthis.healthDisplay.text = 0\r\n\t\t\t}\r\n\t\t\tthis.healthDisplay.position = {\r\n\t\t\t\tx: renderFnResult.x,\r\n\t\t\t\ty: renderFnResult.y - this.healthOffsetY\r\n\t\t\t}\r\n\t\t} else if (container.children.indexOf(this.healthDisplay) > -1) {\r\n\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t}\r\n  }\r\n\r\n  // runs via the engine loop, so will repeat 30-60 times a second\r\n  this.walk = () => {\r\n\t\tlet comparison = (this.playerBody.position.x < this.body.position.x)\r\n\t\tif (zombieFarFromPlayer() && !zAttack.playing && !zAttack2.playing && !this.player.dead) {\r\n\t\t\tthis.playWalkAnim()\r\n      if (comparison) {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = 1 })\r\n      } else {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = -1 })\r\n      }\r\n      let alteredWalkSpeed\r\n      if (zombieFarFromPlayer(800)) {\r\n        zWalk.animationSpeed = 1.00\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(2.8, 3.2)\r\n      } else if (zombieFarFromPlayer(400)) {\r\n        zWalk.animationSpeed = .75\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(1.8, 2.2)\r\n      } else {\r\n        zWalk.animationSpeed = 0.5\r\n        alteredWalkSpeed = zombieWalkSpeed\r\n      }\r\n      Body.translate(this.body, { x: comparison ? -alteredWalkSpeed : alteredWalkSpeed, y: 0 })\r\n\t\t} else {\r\n\t\t\tthis.stopWalkAnim()\r\n\t\t}\r\n  }\r\n\r\n\tthis.health = getState().game.enemies.zombies.startingHealth\r\n\r\n\tthis.checkFilters = () => {\r\n\t\t// if (getState().game.filterEffects) {\r\n\t\t// \tthis.shadow.filters = [ blur ]\r\n\t\t// \tthis.shadow.alpha = 1.0\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = [ this.criticalGlow ]\r\n\t\t// \t}\r\n\t\t// } else {\r\n\t\t// \tthis.shadow.filters = []\r\n\t\t// \tthis.shadow.alpha = .5\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = []\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\t// this.shouldDisplayHealth = true\r\n\tthis.displayHealth = bool => {\r\n\t\tthis.shouldDisplayHealth = bool\r\n\t\tif (bool) {\r\n\t\t\tcontainer.addChild(this.healthDisplay)\r\n\t\t} else {\r\n\t\t\tif (container.children.indexOf(this.healthDisplay)) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.sprites = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim,\r\n    slashAnim\r\n\t]\r\n\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.main = this\r\n\t})\r\n\r\n\tthis.dead = false\r\n\r\n  this.dmgTxts = []\r\n\tthis.dmgIterator = 0\r\n\tthis.tintAmounts = {\r\n\t\t1: 0xFF9C00,\r\n\t\t2: 0xFF2E00,\r\n\t\t3: 0xFF0000,\r\n\t\t4: 0xB7000F\r\n\t}\r\n\tthis.takeDamage = (dmg, partDamaged, isCritical, isMelee, attackType) => {\r\n\t\t// randomize relative position of blood spurt \r\n\t\tlet spurtPos\r\n\t\tlet spurtPosLow = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y, this.walkAnim.position.y + 50)\r\n\t\t}\r\n\t\tlet spurtPosHi = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y - 100, this.walkAnim.position.y - 50)\r\n\t\t}\r\n\t\tif (!partDamaged || partDamaged === 'head') {\r\n\t\t\tspurtPos = spurtPosHi\r\n\t\t} else {\r\n\t\t\tspurtPos = spurtPosLow\r\n\t\t}\r\n\t\tnew BloodSpurt( null, spurtPos )\r\n\t\tthis.health -= dmg\r\n\t\tthis.directionX = this.playerBodyPosition ? this.playerBodyPosition.x > this.body.position.x : false\r\n\t\tif (this.health <= 0 && !this.dead) {\r\n\t\t\tif (attackType === 'turret') {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tthis.kill(partDamaged, null, attackType ? attackType : null)\r\n      if (isMelee) {\r\n        dispatch(\r\n          increaseStats( StatsDefs.meleeKills )\r\n        )\r\n        setTimeout(() => {\r\n          if (getState().game.stats.meleeKills === 5 && !getState().game.achievements[ AchievementDefs.PILEDRIVE ].owned) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.PILEDRIVE )\r\n            )\r\n          }\r\n        }, 0)\r\n      }\r\n\t\t}\r\n\t\tthis.sprites.forEach(sprite => {\r\n\t\t\tif (sprite !== slashAnim) {\r\n\t\t\t\tif (this.health < 25) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[3]\r\n\t\t\t\t}\r\n\t\t\t\tif (this.health < 10) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[4]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n  }\r\n  \r\n  this.removeZombieFromMatterWorld = () => {\r\n    this.dead = true\r\n    // remove attack hit box in case the zombie was killed on that exact frame and\r\n\t\t// attack box didn't get removed \r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (this.healthDisplay) {\r\n      container.removeChild(this.healthDisplay)\r\n    }\r\n\t\t// if health is depleted, remove all enemy sprites and bodies\r\n\t\tthis.sprites.forEach(sprite => { container.removeChild(sprite) })\r\n    if (this.attackHitbox) { World.remove(world, this.attackHitbox) }\r\n\t\tWorld.remove(world, this.composite)\r\n    return 'zombie removed'\r\n  }\r\n\r\n  this.removeZombieFromZombiesArray = () => {\r\n    let idx = zombies.indexOf(this)\r\n    if (idx > -1) {\r\n      zombies.splice(idx, 1)\r\n    }\r\n  }\r\n  \r\n\tthis.kill = (partLastDamaged, skipZombieRag, killType) => {\r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (!this.dead) {\r\n      this.dead = true\r\n\t\t\tthis.health = 0\r\n\t\t\tif (this.healthDisplay) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n      }\r\n      // if (this.criticalText) {\r\n      //   container.removeChild(this.criticalText)\r\n      // }\r\n      if (this.shadow) {\r\n        container.removeChild(this.shadow)\r\n      }\r\n\t\t\tcontainer.removeChild(this.shadow)\r\n      this.removeZombieFromMatterWorld()\r\n      this.removeZombieFromZombiesArray()\r\n      let force = { x: this.directionX ? -0.2 : 0.2, y: -0.25 }\r\n\t\t\tlet dropPos = {\r\n\t\t\t\tx: this.directionX ? this.body.position.x - 20 : this.body.position.x + 20,\r\n\t\t\t\ty: this.body.position.y - 60\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n\t\t\t\tGenerateRandomCreditDrops(dropPos)\r\n\t\t\t\tif (getState().game.player.perks['ammoDropper'].owned) {\r\n\t\t\t\t\tlet { list } = getState().game.player.weapons\r\n\t\t\t\t\tnew AmmoDrop(dropPos, list[Math.floor(Math.random() * list.length)], random.int(4, 16))\r\n\t\t\t\t}\r\n\t\t\t\tif (getState().game.player.perks['healthDropper'].owned) {\r\n\t\t\t\t\tnew HealthDrop(random.int(2, 6), dropPos)\r\n\t\t\t\t}\r\n\t\t\t\tbulletImpacts.push(\r\n\t\t\t\t\tnew BulletImpact('enemy', this.body.position, {\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\talphaDuration: 3,\r\n\t\t\t\t\t\tset: 1,\r\n\t\t\t\t\t\trand: {\r\n\t\t\t\t\t\t\tmin: 1, max: 4\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n        dispatch(decrementWaveCountToDefeat())\r\n\t\t\t\tlet scoreAmt = getState().game.scoreAmounts.zombie\r\n\t\t\t\tif (partLastDamaged === 'head') {\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.headShot\r\n\t\t\t\t}\r\n\t\t\t\tif (Date.now() - JSON.parse(getState().game.zombieLastKilled) < 1000) {\r\n\t\t\t\t\tcreateTextMessage('kill streak bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieStreakBonus\r\n\t\t\t\t}\r\n\t\t\t\tif (killType && killType === 'fell off') {\r\n\t\t\t\t\tif (!getState().game.achievements[AchievementDefs.THIS_IS_SPARTA].owned) {\r\n\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.THIS_IS_SPARTA ))\r\n\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcreateTextMessage('knockoff bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieKnockedOffStage\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tsetZombieLastKilled( JSON.stringify(Date.now()) )\r\n\t\t\t\t)\r\n\t\t\t\tif (killType === 'grenade explosion') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tsetLastGrenadeKill( JSON.stringify(Date.now()) )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (Date.now() - JSON.parse(getState().game.lastGrenadeKill < 100)) {\r\n\t\t\t\t\t\t\tif (getState().game.consecutiveGrenadeKills > 2) {\r\n\t\t\t\t\t\t\t\tif (!getState().game.achievements[ AchievementDefs.FIRE_IN_THE_HOLE ].owned) {\r\n\t\t\t\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.FIRE_IN_THE_HOLE ))\r\n\t\t\t\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdispatch( resetConsecutiveGrenadeKills() )\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'landmine') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.mineKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.mineKills > 2 && !getState().game.achievements[ AchievementDefs.MINER ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.MINER))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'turret') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.turretKills > 9 && !getState().game.achievements[ AchievementDefs.GUNNA ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.GUNNA))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\t\tgetState().game.player.variables.jumping &&\r\n\t\t\t\t\t\t!getState().game.achievements[ AchievementDefs.THE_JUMP_SHOT ].owned &&\r\n\t\t\t\t\t\tkillType !== 'grenade explosion' &&\r\n\t\t\t\t\t\tkillType !== 'landmine' &&\r\n\t\t\t\t\t\tkillType !== 'landmine explosion' &&\r\n\t\t\t\t\t\tkillType !== 'clustermine explosion'\r\n\t\t\t\t\t) {\r\n          \tdispatch(\r\n            \tsetAchievementOwned( AchievementDefs.THE_JUMP_SHOT )\r\n          \t)\r\n        }\r\n\t\t\t\tupdateScore( scoreAmt )\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.zombiesKilled )\r\n\t\t\t\t)\r\n\t\t\t\tnew ZombieRagdoll({\r\n\t\t\t\t\tx: this.body.position.x,\r\n\t\t\t\t\ty: this.body.position.y - getBodyHeight(this.body)\r\n\t\t\t\t}, force, partLastDamaged)\r\n\t\t\t}\r\n      if (this.attackHitbox) {\r\n        World.remove(world, this.attackHitbox)\r\n      }\r\n\t\t\tzombies = 1\r\n\t\t\tzombies = null\r\n      // container = 1\r\n\t\t\t// container = null\r\n    }\r\n\t}\r\n\r\n\t// const getRandomInt = () => random.int(2, 5)\r\n\r\n\tconst makeAttackHitbox = (num) => {\r\n\t\tif (this.playerBodyPosition) {\r\n\t\t\tlet comparison = (this.playerBodyPosition.x > this.body.position.x)\r\n\t\t\tlet compareResult = comparison ? 80 : -80\r\n\t\t\treturn Bodies.rectangle(this.body.position.x + compareResult, this.body.position.y - getBodyHeight(this.body)/2, num === 2 ? 120 : 100, 150, {\r\n\t\t\t\tlabel: 'enemy zombie attack',\r\n\t\t\t\tisStatic: true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// zAttack.onFrameChange = () => {\r\n\t// \tif (zAttack.currentFrame === 6) {\r\n\t// \t\tthis.playSlashAnim()\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 8) {\r\n\t// \t\tWorld.add(world, this.attackHitbox)\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 9) {\r\n\t// \t\tWorld.remove(world, this.attackHitbox)\r\n\t// \t\t// this.attackHitbox = null\r\n\t// \t}\r\n\t// }\r\n\tzAttack.onFrameChange = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\tzAttack.onComplete = () => {\r\n\t\tzAttack.gotoAndStop(0)\r\n\t\tzAttack.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\tzAttack2.onComplete = () => {\r\n\t\tzAttack2.gotoAndStop(0)\r\n\t\tzAttack2.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\t//hitbox will be a matter body that appears for a few frames\r\n\tthis.timeSinceLastAttack = Date.now() + 500\r\n\tlet zombieGrowl = gameObjects.getKeyValue('zombie-growl-sound')\r\n\tthis.attack = () => {\r\n\t\tif (!this.paused && zombies.indexOf(this) > -1 && !this.player.dead && !this.dead) {\r\n\t\t\tthis.timeSinceLastAttack = Date.now()\r\n\t\t\tlet oneOfTwo = [ 1, 2 ][ Math.floor( Math.random() * 2 ) ]\r\n\t\t\tthis.attackHitbox = makeAttackHitbox(oneOfTwo)\r\n\t\t\tzombieGrowl.play()\r\n\t\t\t// change frames to an attack animation here\r\n\t\t\tzWalk.visible = false\r\n\t\t\tif (oneOfTwo === 1) {\r\n\t\t\t\tzAttack.visible = true\r\n\t\t\t\tzAttack.play()\r\n\t\t\t} else {\r\n\t\t\t\tzAttack2.visible = true\r\n\t\t\t\tzAttack2.play()\r\n\t\t\t}\r\n\t\t\tidleAnim.visible = false\r\n\t\t\tdelayedCall(.15, () => {\r\n\t\t\t\tthis.playSlashAnim()\r\n\t\t\t})\r\n\t\t\tdelayedCall(.2, () => {\r\n\t\t\t\tWorld.add(world, this.attackHitbox)\r\n\t\t\t\tdelayedCall(.1, () => {\r\n\t\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tif (this.attackHitbox) {\r\n\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t// this.attackHitbox = null\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  this.pause = () => {\r\n    this.paused = true\r\n    // this.stopWalkAnim()\r\n    idleAnim.stop()\r\n    this.walkAnim.stop()\r\n    this.attackAnim.stop()\r\n    this.attackAnim2.stop()\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.paused = false\r\n    this.walkAnim.play()\r\n    if (zAttack.currentFrame !== 0) {\r\n      zAttack.play()\r\n    }\r\n  }\r\n\r\n  zombies.push(this)\r\n\r\n  return this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Container, filters} from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport store from '../../../app/store'\r\n\r\nexport default function CreditDrop (position, amount) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let currencyDrops = gameObjects.getKeyValue('currency-drops')\r\n  let { x: _x, y: _y } = position\r\n\r\n  // init\r\n  // matter body \r\n  let creditBody = Bodies.circle(_x, _y, amount * .25, { restitution: .5, collisionFilter: itemCollisionOptions })\r\n  creditBody.label = 'currency drop'\r\n  creditBody.amount = amount\r\n  // console.log(creditBody.amount)\r\n  World.add(world, creditBody)\r\n  // gfx -- blurred\r\n  let creditContainer = new Container()\r\n  let creditBlur = new Graphics()\r\n  creditBlur.beginFill(0x0eead8)\r\n  creditBlur.drawCircle(0, 0, amount * .25)\r\n  let blurFilter = new filters.BlurFilter()\r\n  blurFilter.blur = 3\r\n  creditBlur.filters = store.getState().game.filterEffects ? [ blurFilter ] : []\r\n  creditBlur.pivot.x = (creditBlur.width * .25) * .5\r\n  creditBlur.pivot.y = (creditBlur.height * .25) * .5\r\n  creditBlur.scale.x = 1.1\r\n  creditBlur.scale.y = 1.1\r\n  creditContainer.addChild(creditBlur)\r\n  // gfx -- clear\r\n  let creditGfc = new Graphics()\r\n  creditGfc.beginFill(0x0eead8)\r\n  creditGfc.drawCircle(0, 0, amount * .25)\r\n  creditGfc.pivot.x = (creditGfc.width * .25) * .5\r\n  creditGfc.pivot.y = (creditGfc.height * .25) * .5\r\n  creditContainer.addChild(creditGfc)\r\n  let bevel = new BevelFilter()\r\n  bevel.lightColor = 0xffffff\r\n  bevel.lightAlpha = .3\r\n  bevel.shadowColor = 0x0\r\n  bevel.shadowAlpha = .3\r\n  creditContainer.filters = store.getState().game.filterEffects ? [ bevel ] : []\r\n  // add to stage\r\n  container.addChild(creditContainer)\r\n  \r\n  currencyDrops.push(this)\r\n\r\n  creditBody.main = this\r\n\r\n  this.creditBody = creditBody\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      creditContainer.filters = [bevel]\r\n      creditBlur.filters = [blurFilter]\r\n    } else {\r\n      creditContainer.filters = []\r\n      creditBlur.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroyed = false\r\n  this.destroy = () => {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      let idx = currencyDrops.indexOf(this)\r\n      if (idx > -1) {\r\n        currencyDrops.splice(idx, 1)\r\n        creditContainer.destroy()\r\n        World.remove(world, creditBody)\r\n        world = null\r\n        container = null\r\n        currencyDrops = null\r\n        gameObjects = null\r\n        creditBody = null\r\n        this.creditBody = null\r\n        creditContainer = null\r\n      }\r\n    }\r\n  }\r\n\r\n  setTimeout(() => { this.destroy() }, 20000)\r\n\r\n  this.positionCreditGfx = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(creditBody)\r\n    creditContainer.position = { x, y }\r\n    creditContainer.rotation = rot\r\n  }\r\n\r\n  return this\r\n\r\n} ","import Zombie from '../enemies/Zombie'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport CreditDrop from '../items/CurrencyCredit'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\n\r\nconst { getState } = store\r\nconst { TweenLite: { delayedCall } } = window\r\nconst yStartPos = getState().game.height/2\r\n\r\nexport const GenerateZombies = (count) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  \r\n  const startZombieCreation = () => {\r\n    let numOnStage = (\r\n      getState().game.waveNum > 20 ? 4\r\n      : getState().game.waveNum > 10 ? 3\r\n      : 2\r\n    )\r\n    for (let i = 0; i < count; ++i) {\r\n      const getAZombie = () => {\r\n        if (\r\n          getState().game.zombiesOnStage < numOnStage &&\r\n          getState().game.gameState !== GameStates.PAUSE &&\r\n          getState().game.gameState !== GameStates.MAIN_MENU &&\r\n          (getState().game.gameSubState === SubStates.WAVE_STARTED || getState().game.gameSubState === SubStates.PLAYER_RESPAWN)\r\n          ) {\r\n          console.log('should create a zombo')\r\n          if (getState().game.gameSubState !== SubStates.WAVE_DEFEATED) {\r\n            new Zombie(random.int(buffer, width - buffer), yStartPos)\r\n          }\r\n        } else {\r\n          setTimeout(() => { getAZombie() }, 2000)\r\n        }\r\n      }\r\n      getAZombie()\r\n    }\r\n  }\r\n  startZombieCreation()\r\n  \r\n}\r\n\r\nexport const GenerateRandomAmmoDrops = (position, amountLimits, overrideCount) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let { game: { player: { weapons: { list, ammoCapacity } } } } = getState()\r\n  let randCount = overrideCount ? overrideCount : random.int(1, 2)\r\n  let type = list[Math.floor(Math.random() * list.length)]\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new AmmoDrop(\r\n      position ? position : { x: random.int(buffer, width - buffer), y: 200 },\r\n      type,\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : random.int(5, ammoCapacity[type]))\r\n  }\r\n}\r\n\r\nexport const GenerateRandomCreditDrops = (position, amountLimits) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let randCount = getState().game.player.perks['creditDropper'].owned ? random.int(5, 8) : random.int(4, 5)\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new CreditDrop(\r\n      position ?\r\n        { x: position.x, y: position.y - random.int(0, 75) }\r\n        : { x: random.int(buffer, width - buffer), y: 200 - random.int(0, 75) },\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : getState().game.player.perks['creditDropper'].owned ? random.int(15, 30) : random.int(5, 20)\r\n    )\r\n  }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { applyGsapHover } from '../utils/Utils'\r\nimport { gameStateTransition, unsetAllKeys } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { createGenericMessage } from '../createMessages'\r\nimport { FELL_OFF } from '../constants/DeathTypes'\r\nimport random from 'random'\r\n\r\nconst { dispatch, getState } = store\r\n\r\nfunction RespawnButton () {\r\n\tlet container = new PIXI.Container()\r\n\tlet btn = new PIXI.Graphics()\r\n\tbtn.beginFill(0x555555)\r\n\tbtn.drawRect(0, 0, 150, 50)\r\n\tcontainer.addChild(btn)\r\n\r\n\tconst text = new PIXI.Text('Respawn?', { font: 'Arial', fill: '#FFFFFF', fontSize: 20, fontWeight: 'bold' })\r\n\ttext.position.x = btn.width/2 - text.width/2\r\n\ttext.position.y = btn.height/2 - text.height/2\r\n\tcontainer.addChild(text)\r\n\r\n\treturn container\r\n}\r\n\r\nexport default function ScreenUI () {\r\n\tlet { gameObjects, TweenLite: { from }, Bounce } = window\r\n  let gameContainer = gameObjects.getKeyValue('game-pixi-container')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n\r\n  // let zombies = gameObjects.getKeyValue('zombies')\r\n\r\n\tthis.respawnButton = new RespawnButton()\r\n\tgameContainer.addChild(this.respawnButton)\r\n\tthis.respawnButton.visible = false\r\n\tthis.respawnButton.interactive = true\r\n\tthis.respawnButton.pivot.x = this.respawnButton.width/2\r\n\tthis.respawnButton.pivot.y = this.respawnButton.height/2\r\n\tthis.respawnButton.position.x = (this.respawnButton.width/2) + 20\r\n\tthis.respawnButton.position.y = (this.respawnButton.height/2) + 20\r\n\r\n  this.respawn = () => {\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.respawn()\r\n    createGenericMessage('Still alive!', 0xFFFFFF, .5, .75)\r\n    if (player.lastDeathType !== FELL_OFF) {\r\n      GenerateRandomAmmoDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      },\r\n      {\r\n        min: 10, max: getState().game.player.weapons.ammoCapacity[getState().game.player.weapons.equipped] * 2\r\n      },\r\n      random.int(1, 2))\r\n      GenerateRandomCreditDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      })\r\n    }\r\n  }\r\n\r\n\tthis.respawnButton.on('click', () => {\r\n\t\tthis.respawn()\r\n\t\tthis.respawnButton.visible = false\r\n\t})\r\n\r\n\tapplyGsapHover(this.respawnButton)\r\n\r\n\tthis.showRespawnButton = () => {\r\n\t\tthis.respawnButton.visible = true\r\n\t\tfrom(this.respawnButton.scale, 1.5, { x: .5, y: .5, ease: Bounce.easeOut })\r\n  }\r\n\r\n  const unpause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    // player \r\n    let player = gameObjects.getKeyValue('player')\r\n    player.pause()\r\n    // zombies \r\n    zombies.forEach(zombie => {\r\n      zombie.unpause()\r\n    })\r\n    // resume physics engine\r\n    engine.timing.timeScale = 1\r\n  }\r\n\r\n  const pause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    dispatch( unsetAllKeys() )\r\n    // character\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.unpause()\r\n    // zombies\r\n    zombies.forEach(zombie => {\r\n      zombie.pause()\r\n    })\r\n    // pause physics engine\r\n    engine.timing.timeScale = 0.05\r\n  }\r\n\r\n  this.unpause = unpause\r\n  this.pause = pause\r\n  \r\n  this.togglePause = () => {\r\n    let { gameState, gameSubState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU && gameState !== GameStates.SHOP_MENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameState !== GameStates.BUILD_MENU && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.WAVE_DEFEATED) {\r\n      let player = gameObjects.getKeyValue('player')\r\n      if (!player.dead) {\r\n        if (gameState !== GameStates.PAUSE && gameSubState !== SubStates.WAITING) {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.PAUSE) )\r\n          pause()\r\n        } else {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.GAMEPLAY) )\r\n          if (gameSubState === SubStates.WAVE_STARTED) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAVE_STARTED) )\r\n          } else if (gameSubState === SubStates.NEUTRAL) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n          }\r\n          unpause()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // add a pause listener to the screen UI ('P' (80) or ESC (27) key)\r\n  document.body.addEventListener('keydown', e => {\r\n    if (e.key === 'p' || e.key === 'P' || e.key === 'Escape') {\r\n      console.log('pause key was pressed')\r\n      this.togglePause()\r\n    }\r\n  })\r\n\r\n\treturn this\r\n\r\n}\r\n","// Matter and Custom\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { makePixiSprite, setUpMatter, setUpPixi } from './utils/Utils'\r\nimport { World, Bodies, Events } from 'matter-js'\r\nimport Player from './player/Player'\r\nimport createGameObjects from './createGameObjects'\r\nimport { setTexturePath, gameStateTransition, setZombiesOnStage, setWaveCountToDefeat } from './gameSlice'\r\nimport { gameTickHandler, checkCollisionStart } from './engineHandlers'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport WeaponsUI from './ui/WeaponsUI'\r\nimport ScreenUI from './ui/ScreenUI'\r\n// images\r\nimport weaponUI_pistolIcon from '../../images/pistol-icon.png'\r\nimport weaponUI_smgIcon from '../../images/smg-icon.png'\r\nimport weaponUI_shotgunIcon from '../../images/shotgun-icon.png'\r\n// environment textures \r\nimport groundTexture from '../../images/GroundTexture_Optimized.png'\r\nimport wallTile from '../../images/wallTile.png'\r\nimport gradientAlpha from '../../images/gradient-layer-mask.png'\r\n// game cover art\r\nimport coverArt from '../../images/GameCover.png'\r\n// explosive barrel \r\nimport explosiveBarrel from '../../images/explosiveBarrier.png'\r\n// player head\r\nimport charHead from '../../images/head-sprite.png'\r\n// Sound FX\r\nimport { Howl, Howler } from 'howler'\r\nimport _9mm1 from '../../sounds/9mm1.wav'\r\nimport _9mm2 from '../../sounds/9mm2.mp3'\r\nimport explosion1 from '../../sounds/explosion1.wav'\r\nimport distant_explosion from '../../sounds/explosion_distant.wav' \r\nimport pistolReloadSnd from '../../sounds/pistolReload.wav'\r\nimport bulletImpact_body from '../../sounds/bodyBulletImpact.wav'\r\nimport grenadeClink from '../../sounds/grenadeClink.wav'\r\nimport throwSound from '../../sounds/throw.wav'\r\nimport coinCollectSound from '../../sounds/coinCollect.wav'\r\nimport ammoCollectSound from '../../sounds/collectAmmo.wav'\r\nimport itemCollectSound from '../../sounds/collectItem.wav'\r\nimport bloodSquash from '../../sounds/bloodSquash.flac'\r\nimport bloodSquish from '../../sounds/bloodSquish.wav'\r\nimport bloodSmack from '../../sounds/bloodSmack.wav'\r\nimport deathRipSound from '../../sounds/deathRipSound.wav'\r\nimport jumpLandingSound from '../../sounds/jumpLanding.wav'\r\nimport dirtImpactSound from '../../sounds/dirtImpact.wav'\r\nimport zombieHurtSound from '../../sounds/zombieHurt.wav'\r\nimport zombieDeathSound from '../../sounds/zombieDeath.wav'\r\nimport pain1Sound from '../../sounds/pain1.wav'\r\nimport pain2Sound from '../../sounds/pain2.wav'\r\nimport playerDeathSound from '../../sounds/playerDeath.wav'\r\nimport buttonAddSound from '../../sounds/buttonAdd.wav'\r\nimport buttonSubtractSound from '../../sounds/buttonSubtract.wav'\r\nimport buttonClickSound from '../../sounds/buttonClick.wav'\r\nimport buttonHoverSound from '../../sounds/buttonHover.wav'\r\nimport placeObjectSound from '../../sounds/placeObject.flac'\r\nimport buttonCancelSound from '../../sounds/cancelSound.wav'\r\nimport purchaseSound from '../../sounds/moneySound.wav'\r\nimport confirmSound from '../../sounds/purchase.wav'\r\nimport shellImpactSound from '../../sounds/shellImpact.wav'\r\nimport healthPickupSound from '../../sounds/health.wav'\r\nimport zombieGrowl from '../../sounds/zombieGrowl.wav'\r\nimport smgFire from '../../sounds/smgFire.wav'\r\nimport magDrop from '../../sounds/magDrop.wav'\r\nimport shotShell from '../../sounds/shotShell.wav'\r\nimport shotgunBlast from '../../sounds/shotgunBlast.wav'\r\nimport achievement1 from '../../sounds/achievement1.wav'\r\nimport achievement2 from '../../sounds/achievement2.mp3'\r\nimport achievement3 from '../../sounds/achievement3.wav'\r\nimport jumpSound from '../../sounds/jumpSound.wav'\r\nimport chargingNade from '../../sounds/grenadeCharge.wav'\r\nimport { gotoMainMenu } from './ReactComponents/PauseMenu'\r\n\r\n// spritesheets in /public folder to use pixi .loader, not webpack \r\nconst zombieWalkcycleTest = './spritesheet-assets/zombie_walkcycle_test.json'\r\nconst z_walk_spritesheet = './spritesheet-assets/z_walk/z_walk.json'\r\nconst z_attack_spritesheet = './spritesheet-assets/z_attack/z_attack.json'\r\nconst z_parts_spritesheet = './spritesheet-assets/z_parts/limbs.json'\r\nconst muzzle_flashes_spritesheet = './spritesheet-assets/FX/muzzle_flashes/muzzle-flashes.json'\r\n// updated zombie sprites\r\nconst zomb_idle_sheet = './spritesheet-assets/enemy-spritesheets/zombie/idle/idle.json'\r\nconst zomb_walk_sheet = './spritesheet-assets/enemy-spritesheets/zombie/walkcycle/walkcycle.json'\r\nconst zomb_attack1_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack1/attack1.json'\r\nconst zomb_attack2_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack2/attack2.json'\r\nconst zomb_parts_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts.json'\r\nconst zomb_parts_gored_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts_gored.json'\r\nconst zomb_slash_fx_sheet = './spritesheet-assets/enemy-spritesheets/zombie/slash_fx/slash_fx.json'\r\n\r\n// barriers\r\nconst barriers_sheet = './spritesheet-assets/barriers/barriers.json'\r\n\r\n// updated character sprites \r\nconst char_parts = './spritesheet-assets/character-spritesheets/parts/player_parts.json'\r\nconst char_idle_sheet = './spritesheet-assets/character-spritesheets/idle/char_idle_anim.json'\r\nconst char_run_sheet = './spritesheet-assets/character-spritesheets/run/char_run_anim.json'\r\nconst char_jump_sheet = './spritesheet-assets/character-spritesheets/jump/char_jump_anim.json'\r\nconst char_reload_pistol_sheet = './spritesheet-assets/character-spritesheets/reloadPistol/char_reload_pistol_anim.json'\r\nconst char_reload_smg_sheet = './spritesheet-assets/character-spritesheets/reloadSMG/char_reload_smg_anim.json'\r\nconst left_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmPistolFire/char_left_arm_pistol_fire.json'\r\nconst right_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmPistolFire/char_right_arm_pistol_fire.json'\r\nconst left_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmSMGFire/char_left_arm_smg_fire.json'\r\nconst right_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmSMGFire/char_right_arm_smg_fire.json'\r\nconst melee_pistol_sheet = './spritesheet-assets/character-spritesheets/melee/melee_pistol/melee_pistol.json'\r\nconst melee_ump_sheet = './spritesheet-assets/character-spritesheets/melee/melee_ump/melee_ump.json'\r\nconst melee_shotgun_sheet = './spritesheet-assets/character-spritesheets/melee/melee_shotgun/melee_shotgun.json'\r\nconst grenade_pistol_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/pistolEquipped/grenade_throw_pistol.json'\r\nconst grenade_ump_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/umpEquipped/grenade_throw_ump.json'\r\nconst grenade_shotgun_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/shotgunEquipped/grenade_throw_shotgun.json'\r\nconst arms_fire_shotgun = './spritesheet-assets/character-spritesheets/armsFireShotgun/arms_fire_shotgun_anim.json'\r\nconst char_reload_shotgun_sheet = './spritesheet-assets/character-spritesheets/reloadShotgun/reloadShotgun.json'\r\n\r\n// blood effects\r\nconst blood_spurt_1 = './spritesheet-assets/FX/blood_fx/blood_spurt_1/blood_spurt_1.json'\r\nconst blood_spurt_2 = './spritesheet-assets/FX/blood_fx/blood_spurt_2/blood_spurt_2.json'\r\nconst blood_spurt_3 = './spritesheet-assets/FX/blood_fx/blood_spurt_3/blood_spurt_3.json'\r\n\r\n// landmine\r\nconst landmine_sheet = './spritesheet-assets/landmine/landmine.json'\r\nconst clustermine_sheet = './spritesheet-assets/clustermine/clustermine.json'\r\nconst remote_mine_sheet = './spritesheet-assets/remote-mine/remote-mine.json'\r\n\r\n// turret\r\nconst turret_scan_sheet = './spritesheet-assets/turret/sheets/turret_scan.json'\r\nconst turret_shoot_sheet = './spritesheet-assets/turret/sheets/turret_shoot.json'\r\n\r\n// explosion assts\r\nconst explosion_assets_sheet = './spritesheet-assets/FX/explosion_fx/explosion_assets.json'\r\nconst wood_planks_sheet = './spritesheet-assets/FX/wood_planks/wood_planks.json'\r\n\r\n// ground spatters \r\nconst ground_effects_sheet = './spritesheet-assets/FX/ground_fx/ground_fx.json'\r\n\r\n// FX\r\nconst explosion3d1_sheet = './spritesheet-assets/FX/explosion3d/explosion3d1.json'\r\nconst explosion3d2_sheet = './spritesheet-assets/FX/explosion3d/explosion3d2.json'\r\nconst sparks_sheet = './spritesheet-assets/FX/spark-particle/spark_particle.json'\r\nconst muzzle_sparks_sheet = './spritesheet-assets/FX/muzzle-sparks/muzzle_sparks.json'\r\n\r\nlet { dispatch, getState } = store\r\n\r\nlet { TweenLite: { to } } = window\r\n\r\nconst { world, render, engine, width, height, worldWidth } = setUpMatter('app-container', true)\r\n\r\nconst { app, loader } = setUpPixi('app-container')\r\n\r\nconst addGround = () => {\r\n\tlet ground = Bodies.rectangle(worldWidth/2, height, worldWidth, height/2, { \r\n    isStatic: true,\r\n    collisionFilter: {\r\n      mask: 3\r\n    }\r\n  })\r\n\tground.label = 'ground'\r\n\tWorld.add(world, ground)\r\n\t// dispatch(setGroundId(ground.id))\r\n\treturn ground\r\n}\r\n\r\nexport default function buildGame() {\r\n\r\n\twindow.onload = () => {\r\n\t\t// console.log('window loaded')\r\n\t\t// if (getState().gameState === GameStates.GAMEPLAY) {\r\n\t\t// \tgotoMainMenu()\r\n\t\t// }\r\n\t}\r\n\r\n\tloader\r\n\t.add(gradientAlpha)\r\n\t.add(wallTile)\r\n\t.add(char_reload_shotgun_sheet)\r\n\t.add(arms_fire_shotgun)\r\n\t.add(sparks_sheet)\r\n\t.add(muzzle_sparks_sheet)\r\n\t.add(explosion3d1_sheet)\r\n\t.add(explosion3d2_sheet)\r\n  .add(turret_scan_sheet)\r\n  .add(turret_shoot_sheet)\r\n\t.add(remote_mine_sheet)\r\n\t.add(clustermine_sheet)\r\n\t.add(landmine_sheet)\r\n\t.add(explosiveBarrel)\r\n  .add(barriers_sheet)\r\n\t.add(groundTexture)\r\n\t.add(zombieWalkcycleTest)\r\n\t.add(z_walk_spritesheet)\r\n\t.add(z_attack_spritesheet)\r\n\t.add(z_parts_spritesheet)\r\n\t.add(zomb_idle_sheet)\r\n\t.add(zomb_walk_sheet)\r\n\t.add(zomb_attack1_sheet)\r\n\t.add(zomb_attack2_sheet)\r\n\t.add(zomb_parts_sheet)\r\n\t.add(zomb_parts_gored_sheet)\r\n\t.add(zomb_slash_fx_sheet)\r\n\t.add(muzzle_flashes_spritesheet)\r\n\t.add(blood_spurt_1)\r\n\t.add(blood_spurt_2)\r\n  .add(blood_spurt_3)\r\n\t.add(explosion_assets_sheet)\r\n\t.add(wood_planks_sheet)\r\n\t.add(ground_effects_sheet)\r\n\t.add(char_parts)\r\n  .add(char_idle_sheet)\r\n  .add(char_run_sheet)\r\n  .add(char_jump_sheet)\r\n  .add(char_reload_pistol_sheet)\r\n  .add(char_reload_smg_sheet)\r\n  .add(melee_pistol_sheet)\r\n\t.add(melee_ump_sheet)\r\n\t.add(melee_shotgun_sheet)\r\n  .add(grenade_pistol_sheet)\r\n  .add(grenade_ump_sheet)\r\n  .add(grenade_shotgun_sheet)\r\n  .add(left_arm_pistol_fire_sheet)\r\n  .add(right_arm_pistol_fire_sheet)\r\n  .add(left_arm_smg_fire_sheet)\r\n  .add(right_arm_smg_fire_sheet)\r\n  .add(charHead)\r\n\t.add(weaponUI_pistolIcon)\r\n\t.add(weaponUI_smgIcon)\r\n\t.add(weaponUI_shotgunIcon)\r\n\t.load(setUp)\r\n\r\n\tfunction setUp () {\r\n\r\n\t\twindow.gameObjects = createGameObjects()\r\n\t\tlet { gameObjects } = window\r\n\r\n\t\t// images\r\n\t\tdispatch(setTexturePath('game-cover', coverArt))\r\n\t\tdispatch(setTexturePath('char-head', charHead))\r\n\t\tdispatch(setTexturePath('gradient-alpha', gradientAlpha))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-pistol', weaponUI_pistolIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-smg', weaponUI_smgIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-shotgun', weaponUI_shotgunIcon))\r\n\t\tdispatch(setTexturePath('ground-texture', groundTexture))\r\n\t\tdispatch(setTexturePath('explosive-barrel', explosiveBarrel))\r\n\t\t// env textures\r\n    let groundTex = makePixiSprite('ground-texture')\r\n    groundTex.pivot.x = groundTex.width * .5\r\n\t\tgroundTex.pivot.y = groundTex.height * .425\r\n\t\tlet gradientAlphaImg = makePixiSprite('gradient-alpha')\r\n\t\tgradientAlphaImg.width = width\r\n\t\tgradientAlphaImg.height = height\r\n\t\tgameObjects.setKeyValue('gradient-alpha', gradientAlphaImg)\r\n\t\tlet gameCover = makePixiSprite('game-cover')\r\n\t\tgameObjects.setKeyValue('game-cover-art', gameCover)\r\n\t\t// set sound fx\r\n\t\tgameObjects.setKeyValue('9mm-sound1', _9mm1)\r\n\t\tgameObjects.setKeyValue('9mm-sound2', _9mm2)\r\n\t\tgameObjects.setKeyValue('explosion1', explosion1)\r\n\t\tgameObjects.setKeyValue('distant-explosion', distant_explosion)\r\n\t\tgameObjects.setKeyValue('pistol-reload-sound', pistolReloadSnd)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body', bulletImpact_body)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body-sound', new Howl({src:[bulletImpact_body]}))\r\n\t\tgameObjects.setKeyValue('grenade-clink-sound', new Howl({ src: [grenadeClink] }))\r\n\t\tgameObjects.setKeyValue('throw-sound', new Howl({ src: [throwSound] }))\r\n\t\tgameObjects.setKeyValue('confirm-sound', new Howl({ src: [ confirmSound ] }))\r\n\t\tgameObjects.setKeyValue('coin-collect-sound', new Howl({ src: [ coinCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('ammo-collect-sound', new Howl({ src: [ ammoCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('item-collect-sound', new Howl({ src: [ itemCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('blood-squish-sound', new Howl({ src: [ bloodSquish ] }))\r\n\t\tgameObjects.setKeyValue('blood-squash-sound', new Howl({ src: [ bloodSquash ] }))\r\n\t\tgameObjects.setKeyValue('blood-smack-sound', new Howl({ src: [ bloodSmack ] }))\r\n\t\tgameObjects.setKeyValue('death-rip-sound', new Howl({ src: [ deathRipSound ] }))\r\n\t\tgameObjects.setKeyValue('jump-landing-sound', new Howl({ src: [ jumpLandingSound ] }))\r\n\t\tgameObjects.setKeyValue('dirt-impact-sound', new Howl({ src: [ dirtImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-hurt-sound', new Howl({ src: [ zombieHurtSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('zombie-death-sound', new Howl({ src: [ zombieDeathSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('pain1-sound', new Howl({ src: [ pain1Sound ] }))\r\n\t\tgameObjects.setKeyValue('pain2-sound', new Howl({ src: [ pain2Sound ] }))\r\n\t\tgameObjects.setKeyValue('player-death-sound', new Howl({ src: [ playerDeathSound ] }))\r\n\t\tgameObjects.setKeyValue('button-add-sound', new Howl({ src: [ buttonAddSound ] }))\r\n\t\tgameObjects.setKeyValue('button-subtract-sound', new Howl({ src: [ buttonSubtractSound ] }))\r\n\t\tgameObjects.setKeyValue('button-hover-sound', new Howl({ src: [ buttonHoverSound ] }))\r\n\t\tgameObjects.setKeyValue('button-click-sound', new Howl({ src: [ buttonClickSound ] }))\r\n\t\tgameObjects.setKeyValue('place-object-sound', new Howl({ src: [ placeObjectSound ] }))\r\n\t\tgameObjects.setKeyValue('button-cancel-sound', new Howl({ src: [ buttonCancelSound ] }))\r\n\t\tgameObjects.setKeyValue('purchase-sound', new Howl({ src: [ purchaseSound ] }))\r\n\t\tgameObjects.setKeyValue('shell-impact-sound', new Howl({ src: [ shellImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('health-pickup-sound', new Howl({ src: [ healthPickupSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-growl-sound', new Howl({ src: [ zombieGrowl ] }))\r\n\t\tgameObjects.setKeyValue('smg-fire-sound', new Howl({ src: [ smgFire ] }))\r\n\t\tgameObjects.setKeyValue('mag-drop-sound', new Howl({ src: [ magDrop ] }))\r\n\t\tgameObjects.setKeyValue('shot-shell-sound', new Howl({ src: [ shotShell ] }))\r\n\t\tgameObjects.setKeyValue('shotgun-blast-sound', new Howl({ src: [ shotgunBlast ] }))\r\n\t\tgameObjects.setKeyValue('achievement1-sound', new Howl({ src: [ achievement1 ] }))\r\n\t\tgameObjects.setKeyValue('achievement2-sound', new Howl({ src: [ achievement2 ] }))\r\n\t\tgameObjects.setKeyValue('achievement3-sound', new Howl({ src: [ achievement3 ] }))\r\n\t\tgameObjects.setKeyValue('charging-grenade-sound', new Howl({ src: [ chargingNade ] }))\r\n\t\tgameObjects.setKeyValue('jump-sound', new Howl({ src: [ jumpSound ] }))\r\n\t\t// updated zombie sprites\r\n\t\tgameObjects.setKeyValue('zombie-idle-sheet', loader.resources[zomb_idle_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-walk-sheet', loader.resources[zomb_walk_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack1-sheet', loader.resources[zomb_attack1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack2-sheet', loader.resources[zomb_attack2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-sheet', loader.resources[zomb_parts_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-gored-sheet', loader.resources[zomb_parts_gored_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-slash-fx-sheet', loader.resources[zomb_slash_fx_sheet].spritesheet)\r\n    gameObjects.setKeyValue('muzzle-flashes', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('sparks-sheet', loader.resources[sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('muzzle-sparks-sheet', loader.resources[muzzle_sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d1-sheet', loader.resources[explosion3d1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d2-sheet', loader.resources[explosion3d2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-1', loader.resources[blood_spurt_1].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-2', loader.resources[blood_spurt_2].spritesheet)\r\n    gameObjects.setKeyValue('blood-spurt-3', loader.resources[blood_spurt_3].spritesheet)\r\n    gameObjects.setKeyValue('explosion-assets-sheet', loader.resources[explosion_assets_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('wood-planks-sheet', loader.resources[wood_planks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('remote-mine-sheet', loader.resources[remote_mine_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('landmine-sheet', loader.resources[landmine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('clustermine-sheet', loader.resources[clustermine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-scan-sheet', loader.resources[turret_scan_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-shoot-sheet', loader.resources[turret_shoot_sheet].spritesheet)\r\n    gameObjects.setKeyValue('barriers-sheet', loader.resources[barriers_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('ground-fx-sheet', loader.resources[ground_effects_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('player-parts-sheet', loader.resources[char_parts].spritesheet)\r\n    gameObjects.setKeyValue('char-idle-sheet', loader.resources[char_idle_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-run-sheet', loader.resources[char_run_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-jump-sheet', loader.resources[char_jump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-pistol-sheet', loader.resources[char_reload_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-smg-sheet', loader.resources[char_reload_smg_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-shotgun-sheet', loader.resources[char_reload_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('left-arm-pistol-fire-sheet', loader.resources[left_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-pistol-fire-sheet', loader.resources[right_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('left-arm-smg-fire-sheet', loader.resources[left_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-smg-fire-sheet', loader.resources[right_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-pistol-sheet', loader.resources[melee_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-ump-sheet', loader.resources[melee_ump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-shotgun-sheet', loader.resources[melee_shotgun_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-pistol-sheet', loader.resources[grenade_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-ump-sheet', loader.resources[grenade_ump_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('grenade-shotgun-sheet', loader.resources[grenade_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('arms-fire-shotgun-sheet', loader.resources[arms_fire_shotgun].spritesheet)\r\n\t\t\r\n\t\t\r\n    let container = new PIXI.Container()\r\n\t\tcontainer.interactive = true\r\n\t\tcontainer.width = width\r\n\t\tcontainer.height = height\r\n\t\t\r\n    // make dedicated muzzle flashes for re-use instead of making a new image each time\r\n\t\tgameObjects.setKeyValue('muzzle-flashes-sheet', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n    \r\n\t\tlet ground = addGround()\r\n\t\tapp.stage.interactive = true\r\n\t\tapp.stage.addChild(container)\r\n\t\tcontainer.addChild(groundTex)\r\n    \r\n\t\tgameObjects.setKeyValue('pixi-app', app)\r\n\t\tgameObjects.setKeyValue('game-pixi-container', container)\r\n\t\t\r\n    gameObjects.setKeyValue('ammo-drops-by-type', {\r\n\t\t\t'pistol weapon': [],\r\n      'smg weapon': [],\r\n      'shotgun weapon': [],\r\n    })\r\n    gameObjects.setKeyValue('text-messages', [])\r\n    gameObjects.setKeyValue('reload-text-messages', [])\r\n\t\tgameObjects.setKeyValue('gibs', [])\r\n    gameObjects.setKeyValue('grenades', [])\r\n    gameObjects.setKeyValue('explosions', [])\r\n    gameObjects.setKeyValue('rocks', [])\r\n    gameObjects.setKeyValue('currency-drops', [])\r\n\t\tgameObjects.setKeyValue('pistol-shells', [])\r\n\t\tgameObjects.setKeyValue('pistol-bullets', [])\r\n\t\tgameObjects.setKeyValue('build-objects', [])\r\n\t\tgameObjects.setKeyValue('bullet-impacts', [])\r\n\t\tgameObjects.setKeyValue('wood-planks', [])\r\n\t\tgameObjects.setKeyValue('spark-sprites', [])\r\n\t\tgameObjects.setKeyValue('explosion-sprites', [])\r\n\t\tgameObjects.setKeyValue('remote-mines', {})\r\n\t\tgameObjects.setKeyValue('remote-mines-array', [])\r\n\t\tgameObjects.setKeyValue('static-ground-effects', [])\r\n\t\tgameObjects.setKeyValue('zombie-ragdolls', [])\r\n\t\tgameObjects.setKeyValue('zombies', [])\r\n\t\tgameObjects.setKeyValue('health-drops', [])\r\n\t\t\r\n\t\tgameObjects.setKeyValue('wall-tile', wallTile)\r\n\t\tgameObjects.setKeyValue('ground', ground)\r\n\t\tgameObjects.setKeyValue('ground-texture', groundTex)\r\n\t\tgameObjects.setKeyValue('game-width', width)\r\n\t\tgameObjects.setKeyValue('game-height', height)\r\n\t\tgameObjects.setKeyValue('world-width', worldWidth)\r\n\t\tgameObjects.setKeyValue('world', world)\r\n\t\tgameObjects.setKeyValue('render', render)\r\n\t\tgameObjects.setKeyValue('engine', engine)\r\n\t\tlet screenUI = new ScreenUI()\r\n\t\tgameObjects.setKeyValue('screen-ui', screenUI)\r\n\t\tgameObjects.setKeyValue('weapons-ui', new WeaponsUI())\r\n\t\tlet player = new Player()\r\n\t\tgameObjects.setKeyValue('player', player)\r\n\t\t\r\n\t\tfunction buildMenu () {\r\n\t\t\t// create a PIXI menu\r\n\t\t\tlet menu = new PIXI.Container()\r\n\t\t\t// let menuBG = new PIXI.Graphics()\r\n\t\t\t// menuBG.beginFill(0x222222)\r\n\t\t\t// menuBG.drawRect(0, 0, width, height)\r\n\t\t\t// gameCover.width = gameCover.width * .5\r\n\t\t\t// gameCover.height = gameCover.height * .5\r\n\t\t\tgameCover.pivot.x = gameCover.width *  .5\r\n\t\t\tgameCover.pivot.y = gameCover.height *  .5\r\n\t\t\tgameCover.scale.x = .51\r\n\t\t\tgameCover.scale.y = .51\r\n\t\t\tcontainer.alpha = 0\r\n\t\t\tmenu.addChild(\r\n\t\t\t\tgameCover\r\n\t\t\t)\r\n\t\t\t// gameCover.on('added', () => {\r\n\t\t\t// })\r\n\t\t\tcontainer.alpha = 1\r\n\t\t\tmenu.interactive = true\r\n\t\t\tlet playBtn = new PIXI.Container()\r\n\t\t\tlet playBtnGfc = new PIXI.Graphics()\r\n\t\t\tplayBtnGfc.beginFill(0x555555)\r\n\t\t\tplayBtnGfc.drawRect(0, 0, 250, 80)\r\n\t\t\tlet playBtnTxt = new PIXI.Text('Play', {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 36,\r\n\t\t\t\tfill: 0xFFFFFF\r\n\t\t\t})\r\n\t\t\tplayBtn.addChild(playBtnGfc, playBtnTxt)\r\n\t\t\tfunction positionPlayButton() {\r\n\t\t\t\tplayBtn.position.x = width/2 - playBtn.width/2\r\n\t\t\t\tplayBtn.position.y = height/2 - playBtn.height/2\r\n\t\t\t}\r\n\t\t\tpositionPlayButton()\r\n\t\t\tplayBtnTxt.position.x = playBtn.width/2 - playBtnTxt.width/2\r\n\t\t\tplayBtnTxt.position.y = playBtn.height/2 - playBtnTxt.height/2\r\n\t\t\tplayBtn.interactive = true\r\n\t\t\tplayBtn.on('click', () => {\r\n\t\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\tdispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n\t\t\t\tdispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseover', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.05, y: 1.05, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseout', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.00, y: 1.00, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\t// menu.addChild(playBtn) -- remove pixi main menu button \r\n\t\t\tapp.stage.addChild(menu)\r\n\t\t\tgameObjects.setKeyValue('main-menu', menu)\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmenu\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet { menu: mainMenu } = buildMenu()\r\n\r\n\t\tEvents.on(engine, 'tick', e => {\r\n\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\r\n\t\t\tif (window.gameObjects && mainMenu.visible === true) {\r\n\t\t\t\tmainMenu.visible = false\r\n\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t// app.view.style.opacity = .75\r\n\t\t\t}\r\n\t\t\tif (window.gameObjects && gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW) {\r\n        if (mainMenu.visible === false) {\r\n          mainMenu.visible = true\r\n\t\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t\t// app.view.style.opacity = .85\r\n\t\t\t\t}\r\n      }\r\n      if (window.gameObjects && gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW || gameState === GameStates.PAUSE || gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameState === GameStates.SHOP_MENU || gameState === GameStates.BUILD_MENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n\t\t\t\tif (document.getElementsByClassName('App')[0]) {\r\n\t\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t\tdocument.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n\t\t\t\t}\r\n      } else {\r\n\t\t\t\tif (document.getElementsByClassName('App')[0]) {\r\n\t        document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n\t\t\t\t}\r\n\t\t\t}\r\n      if (gameState === GameStates.GAMEPLAY && window.gameObjects) {\r\n        if (gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n          document.body.style.cursor = 'auto'\r\n        } else {\r\n          document.body.style.cursor = 'none'\r\n        }\r\n\t\t\t}\r\n      \r\n      gameTickHandler(e, gameObjects)\r\n\r\n\t\t})\r\n\r\n\t\tEvents.on(engine, 'collisionStart', e => {\r\n\t\t\tlet { game: { gameState } } = getState()\r\n\t\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\t\tfor (let i = 0; i < e.pairs.length; ++i) {\r\n\t\t\t\t\tcheckCollisionStart(e, i, gameObjects)\r\n\t\t\t\t}\r\n\t\t\t}\r\n    })\r\n    \r\n\t}\r\n\r\n}\r\n","// anything that we can't manage with redux will go here,\r\n// meaning full objects and functions with methods for\r\n// manipulating Matter objects\r\nexport default function createGameObjects() {\r\n\tlet state = new State()\r\n\tfunction State() {\r\n\t\tthis.state = {}\r\n\t\tthis.getKeyValue = key => {\r\n      if (this.state[key]) {\r\n        return this.state[key]\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n\t\tthis.setKeyValue = (key, value) => {\r\n      this.state[key] = value\r\n      return this.state[key]\r\n    }\r\n\t\tthis.getFullState = () => { return this.state }\r\n\t\tthis.setFullState = (obj) => { this.state = obj }\r\n\t}\r\n\treturn state\r\n}\r\n","import { batch } from 'react-redux'\r\nimport store from '../../../app/store'\r\nimport { setZombiesOnStage, incrementWave, setWaveCountToDefeat, decrementZombieAttackTimeLimit, incrementZombieHealth, updateZombieWalkSpeed, updateZombieAttackDmg } from '../gameSlice'\r\nimport { createWaveMessage } from '../createMessages'\r\nimport { GenerateZombies } from '../items/ItemGenerators'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { resetWave } from '../ReactComponents/PauseMenu'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const startWave = () => {\r\n\r\n  if (getState().game.waveNum === 0) {\r\n    dispatch(incrementWave())\r\n  }\r\n\r\n  const start = () => {\r\n    let { waveNum } = getState().game\r\n    batch(() => {\r\n      dispatch( updateZombieWalkSpeed( waveNum ) )\r\n      dispatch( updateZombieAttackDmg( waveNum ) )\r\n      dispatch( decrementZombieAttackTimeLimit( waveNum ) )\r\n      dispatch( incrementZombieHealth( waveNum ) )\r\n      dispatch( setWaveCountToDefeat( waveNum ) )\r\n    })\r\n    GenerateZombies( waveNum )\r\n  }\r\n\r\n  if (\r\n    getState().game.gameState === GameStates.GAMEPLAY &&\r\n    getState().game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU &&\r\n    getState().game.gameSubState !== SubStates.WAVE_DEFEATED\r\n    ) {\r\n    start()\r\n    setTimeout(() => {\r\n      if (getState().game.zombiesOnStage === 0) {\r\n        start()\r\n      }\r\n    }, 1000)\r\n  } else {\r\n    setTimeout(start, 3000)\r\n  }\r\n\r\n}\r\n\r\nconst clearGameObjects = () => {\r\n  // destroy current renderable objects \r\n  let { gameObjects } = window\r\n  let credits = gameObjects.getKeyValue('currency-drops')\r\n  let healthdrops = gameObjects.getKeyValue('health-drops')\r\n  let pistolAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_PISTOL]\r\n  let smgAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SMG]\r\n  let shotgunAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SHOTGUN]\r\n  credits.forEach(credit => { credit.destroy() })\r\n  pistolAmmoDrops\r\n    .concat(smgAmmoDrops)\r\n    .concat(shotgunAmmoDrops)\r\n    .forEach(ammo => { ammo.destroy() })\r\n  healthdrops.forEach(health => { health.destroy() })\r\n}\r\n\r\nexport const waveDefeated = () => {\r\n  resetWave()\r\n  dispatch( setZombiesOnStage(0) )\r\n  dispatch( setWaveCountToDefeat(null) )\r\n  createWaveMessage('Wave Defeated!')\r\n  // window.TweenLite.delayedCall(30, clearGameObjects)\r\n  updateScore( getState().game.scoreAmounts.waveCompleted * getState().game.waveNum )\r\n  // if (localStorage) {\r\n  //   localStorage.setItem('ZombieChamber-GameSave', JSON.stringify(getState().game))\r\n  // }\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { SubStates } from '../constants/GameStates'\r\nimport { addPurchase, decrementWave, setZombiesOnStage, gameStateTransition, setWaveCountToDefeat, subtractFromTotalCredits } from '../gameSlice'\r\nimport MenuComponents from './MenuComponents'\r\nimport { gotoMainMenu, resetWave } from './PauseMenu'\r\nimport { CustomMenuButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n  \r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const lastGameSubState = useSelector(state => state.game.lastGameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const respawnCost = useSelector(state => state.game.respawnCost)\r\n  const respawnToShopCost = useSelector(state => state.game.respawnToShopCost)\r\n  const waveNum = useSelector(state => state.game.waveNum)\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>\r\n          {\r\n            credits >= respawnToShopCost ? 'Respawn Menu'\r\n            : 'Game Over'\r\n          }\r\n        </MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n          {\r\n            credits >= respawnCost || lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={240}\r\n              onClick={() => {\r\n                screenUI.respawn()\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU && lastGameSubState !== SubStates.PLAYER_RESPAWN && lastGameSubState !== SubStates.WAVE_STARTED) {\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n                }\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n                  dispatch( subtractFromTotalCredits(respawnCost) )\r\n                }\r\n                dispatch( addPurchase('Respawn', respawnCost) )\r\n              }}>\r\n                Respawn? { lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ? '' : `$${respawnCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          {\r\n            credits >= respawnToShopCost && waveNum > 0 && lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={360}\r\n              onClick={() => {\r\n                resetWave()\r\n                batch(() => {\r\n                  dispatch( setZombiesOnStage(0) )\r\n                  dispatch( setWaveCountToDefeat(null) )\r\n                  dispatch( decrementWave() )\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU) )\r\n                  dispatch( subtractFromTotalCredits(respawnToShopCost) )\r\n                  dispatch( addPurchase('Shop Respawn', respawnToShopCost) )\r\n                })\r\n              }}>\r\n                Restart Current Wave from Shop? { `$${respawnToShopCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          <MenuComponents.MenuButtonSpacer>\r\n            <CustomMenuButton\r\n            onClick={gotoMainMenu}>\r\n              Go to Main Menu\r\n            </CustomMenuButton>\r\n          </MenuComponents.MenuButtonSpacer>\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\nimport { gameStateTransition, setSelectedBarrierToBuild, setSelectedTrapToBuild } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { barrierTypes, trapTypes } from '../constants/buildTypes'\r\nimport { CustomMenuButton, BackButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const BuildMenuStates = {\r\n    MAIN: 'main',\r\n    BARRIERS: 'barriers',\r\n    TRAPS: 'traps'\r\n  }\r\n  const [buildMenuState, setBuildMenuState] = React.useState(BuildMenuStates.MAIN)\r\n  const barrierCosts = useSelector(state => state.game.barriers.costToBuild)\r\n  const trapCosts = useSelector(state => state.game.traps.costToBuild)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const showBarriersSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.BARRIERS\r\n    )\r\n  }\r\n\r\n  const showTrapsSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.TRAPS\r\n    )\r\n  }\r\n\r\n  const backToBuildMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.MAIN\r\n    )\r\n  }\r\n\r\n  const gotoPlacementMode = () => {\r\n    let screenUI = gameObjects.getKeyValue('screen-ui')\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.BUILD_PLACEMENT_MODE)\r\n    )\r\n  }\r\n\r\n  const replaceCursorWithObjectToPlace = () => {\r\n    let crosshair = gameObjects.getKeyValue('crosshair')\r\n    crosshair.buildArrow(0xFFFFFF)\r\n  }\r\n  \r\n  const chooseBarrier = filteredType => {\r\n    if (credits >= barrierCosts[filteredType]) {\r\n      dispatch( setSelectedBarrierToBuild(filteredType) )\r\n      dispatch( setSelectedTrapToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n  \r\n  const chooseTrap = filteredType => {\r\n    if (credits >= trapCosts[filteredType]) {\r\n      dispatch( setSelectedTrapToBuild(filteredType) )\r\n      dispatch( setSelectedBarrierToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        {\r\n          buildMenuState === BuildMenuStates.TRAPS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Traps</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.BARRIERS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Barriers</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                <MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.MAIN ?\r\n            <>\r\n              <MenuComponents.MenuTitle>Build Menu</MenuComponents.MenuTitle>\r\n              <MenuComponents.MenuButtonContainer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showBarriersSubMenu }>\r\n                        Barriers\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showTrapsSubMenu }>\r\n                        Traps\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToShopQuery }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n              </MenuComponents.MenuButtonContainer>\r\n            </>\r\n          : null\r\n        }\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nposition: absolute;\r\nbottom: 0;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nbackground-color: #333;\r\nopacity: .8;\r\n`\r\n\r\nexport default () => {\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <MenuButton bgcolor={'#555'} width={500} height={40}>Done Placing Barriers/Traps: Press [ B ]</MenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","// React\r\nimport React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport buildGame from './buildGame'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { startWave, waveDefeated } from './waves/waveManager'\r\nimport { updateWeaponsUI } from './ui/WeaponsUI'\r\nimport { createGenericMessage } from './createMessages'\r\nimport { addToTotalCredits, gameStateTransition, setWeaponEquipped, loadLocalStorageState } from './gameSlice'\r\nimport PauseMenu, { gotoMainMenu } from './ReactComponents/PauseMenu'\r\nimport ShopMenu, { CornerBackButton, Inline } from './ReactComponents/ShopMenu'\r\nimport ShopQuery from './ReactComponents/ShopQuery'\r\nimport RespawnMenu from './ReactComponents/RespawnMenu'\r\nimport BuildMenu from './ReactComponents/BuildMenu'\r\nimport DoneBarrierPlacementBanner from './ReactComponents/DoneBarrierPlacementBanner'\r\nimport MenuComponents from './ReactComponents/MenuComponents'\r\nimport { NoTransitionButton } from './ReactComponents/PauseMenu'\r\nimport AchievementsView from './ReactComponents/AchievementsView'\r\nimport { motion } from 'framer-motion'\r\nimport Axios from 'axios'\r\n\r\nconst useScores = (initial) => {\r\n\r\n  const [scores, setScores] = React.useState(initial)\r\n\r\n  return [\r\n    scores,\r\n    setScores\r\n  ]\r\n\r\n}\r\n\r\nexport const ScoresView = (scores) => {\r\n\r\n  return (\r\n    <MenuComponents.Container>\r\n      <MenuComponents.MenuTitle>Top 100 Scores of All-time</MenuComponents.MenuTitle>\r\n      <MenuComponents.MenuButtonContainer\r\n      style={{\r\n        height: 470,\r\n        overflow: 'scroll',\r\n      }}\r\n      >\r\n        {\r\n          scores && scores.scores && scores.scores\r\n          .sort((a, b) => b.score - a.score)\r\n          .map(score => (\r\n            <>\r\n              <NoTransitionButton\r\n              bgcolor={ 'rgba(0, 0, 0, 0.25)' }\r\n              hovercolor={ 'rgba(0, 0, 0, 0.35)' }\r\n              bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n              hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n              >\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    { score.name }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: 0,\r\n                    right: 0,\r\n                  }}>\r\n                    { score.score }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    right: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    {\r\n                      (() => {\r\n                        let date = score.time.substr(0, score.time.indexOf('T'))\r\n                        let year = date.substr(0, score.time.indexOf('-'))\r\n                        let dateNoYear = date.substr(score.time.indexOf('-') + 1, date.length)\r\n                        return (\r\n                          `${dateNoYear} - ${year}`\r\n                        )\r\n                      })()\r\n                    }\r\n                  </div>\r\n                </Inline>\r\n              </NoTransitionButton>            \r\n            </>\r\n          ))\r\n        }\r\n      </MenuComponents.MenuButtonContainer>\r\n      <MenuComponents.MenuButtonContainer>\r\n        <CornerBackButton\r\n        marginTop={'-60px'}\r\n        onClick={ gotoMainMenu } />\r\n      </MenuComponents.MenuButtonContainer>\r\n    </MenuComponents.Container>\r\n  )\r\n\r\n}\r\n\r\nexport default function Game () {\r\n\r\n\tconst { gameObjects, TweenLite: { delayedCall } } = window\r\n\tconst dispatch = useDispatch()\r\n\tconst game = useSelector(state => state.game)\r\n  const weaponEquipped = useSelector(state => state.game.player.weapons.equipped)\r\n  const waitInterval = React.useRef(null)\r\n  const cancelWaveStart = React.useRef(false)\r\n  const [scores, setScores] = useScores([])\r\n  const [animateScore, setAnimateScore] = useState(false)\r\n  // const [upgradeToggleAnimate, setUpgradeToggleAnimate] = useState(false)\r\n  const [runUpgraded, setRunUpgraded] = useState(false)\r\n  const [reloadUpgraded, setReloadUpgraded] = useState(false)\r\n  const [jumpUpgraded, setJumpUpgraded] = useState(false)\r\n  const [meleeUpgraded, setMeleeUpgraded] = useState(false)\r\n  const [defenseUpgraded, setDefenseUpgraded] = useState(false)\r\n  // const equipped = useSelector(state => state.game.player.weapons.equipped)\r\n\r\n\t// one-time methods and non-react code will go here\r\n\tReact.useEffect(() => {\r\n\r\n    buildGame()\r\n    setTimeout(() => {\r\n      dispatch(\r\n        loadLocalStorageState()\r\n      )\r\n    }, 1000)\r\n\r\n\t}, []) // do once\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\t// on weapon toggle change..\r\n\t\tupdateWeaponsUI()\r\n\r\n\t}, [weaponEquipped])\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_STARTED) {\r\n\t\t\tconsole.log('wave starting..')\r\n      startWave()\r\n\t\t}\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_DEFEATED) {\r\n\t\t\tconsole.log('wave defeated')\r\n\t\t\twaveDefeated()\r\n    }\r\n    \r\n    if (game.gameSubState === SubStates.WAITING) {\r\n      let countdown = 3, timeInt = 500\r\n      cancelWaveStart.current = false\r\n      waitInterval.current = setInterval(() => {\r\n        createGenericMessage(`${countdown}`, '#FFFFFF', .25, .5)\r\n        countdown -= 1\r\n      }, timeInt)\r\n      delayedCall((timeInt/1000) * 4, () => {\r\n        if (!cancelWaveStart.current) {\r\n          clearInterval(waitInterval.current)\r\n          dispatch(gameStateTransition('sub', game.gameSubState, SubStates.WAVE_STARTED))\r\n        }\r\n      })\r\n    }\r\n\r\n    if (game.gameSubState === SubStates.PLAYER_DEATH) {\r\n      clearInterval(waitInterval.current)\r\n      cancelWaveStart.current = true\r\n\t\t\tcreateGenericMessage('You died.', '#FF0000', .75, 3)\r\n    }\r\n    \r\n  }, [game.gameSubState, delayedCall, dispatch])\r\n  \r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.waveCountToDefeat === 0 && game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n\t\t\twaveDefeated()\r\n\t\t}\r\n\r\n\t}, [game.waveCountToDefeat, game.lastGameSubState, game.gameSubState, dispatch])\r\n\t\r\n\tReact.useEffect(() => {\r\n\r\n    console.log('Game state has changed')\r\n\r\n    if (game.gameState === GameStates.SHOP_MENU || game.gameState === GameStates.BUILD_MENU) {\r\n      let screenUI = gameObjects.getKeyValue('screen-ui')\r\n      screenUI.pause()\r\n    }\r\n    \r\n    if (game.gameState === GameStates.MAIN_MENU || game.gameState === GameStates.GAMEPLAY) {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n    } else {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n    }\r\n\r\n\t\tif (game.gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (game.player.weapons.equipped === null) {\r\n\t\t\t\tdispatch(setWeaponEquipped('pistol weapon'))\r\n\t\t\t}\r\n    }\r\n\r\n  }, [game.gameState, game.player.weapons.equipped, gameObjects, dispatch])\r\n\r\n  React.useEffect(() => {\r\n    if (game.purchases !== null && game.lastPurchase && game.lastPurchase.item !== null && game.lastPurchase.amount > 0) {\r\n      let snd = window.gameObjects.getKeyValue('purchase-sound')\r\n      snd.play()\r\n      let confirm = window.gameObjects.getKeyValue('confirm-sound')\r\n      confirm.play()\r\n      toast.dark(`You bought ${game.lastPurchase.item} for $${game.lastPurchase.amount}`, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    }\r\n    console.log(game.lastPurchase)\r\n  }, [ game.purchases, game.lastPurchase ])\r\n\r\n  React.useEffect(() => {\r\n    if (game.lastAchievementEarned !== null) {\r\n      let snd = window.gameObjects.getKeyValue('achievement2-sound')\r\n      snd.play()\r\n      toast.warning(`Achievement Earned: ${game.lastAchievementEarned}`, {\r\n        position: \"top-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n      dispatch(\r\n        addToTotalCredits( 500 )\r\n      )\r\n    }\r\n  }, [ game.achievements, game.lastAchievementEarned ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    let isErr\r\n    if (game.gameState === GameStates.SCORES_VIEW) {\r\n      Axios.get('http://localhost:8080/scores')\r\n      .catch(err => {\r\n        console.log(err)\r\n        isErr = true\r\n      })\r\n      .then(scores => {\r\n        if (isErr) {\r\n          console.log('api is on a different port, use yarn build to view working scores')\r\n        } else {\r\n          setScores( scores.data )\r\n        }\r\n      })\r\n    }\r\n\r\n  }, [ game.gameState ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    setAnimateScore(true)\r\n    delayedCall(.1, () => { setAnimateScore(false) })\r\n\r\n  }, [ game.scoreToggle ])\r\n\r\n  React.useEffect(() => {\r\n    setRunUpgraded(true)\r\n    delayedCall(.25, () => { setRunUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.run.current ])\r\n\r\n  React.useEffect(() => {\r\n    setReloadUpgraded(true)\r\n    delayedCall(.25, () => { setReloadUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.reload.current ])\r\n\r\n  React.useEffect(() => {\r\n    setJumpUpgraded(true)\r\n    delayedCall(.25, () => { setJumpUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.jump.current ])\r\n\r\n  React.useEffect(() => {\r\n    setMeleeUpgraded(true)\r\n    delayedCall(.25, () => { setMeleeUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.melee.current ])\r\n\r\n  React.useEffect(() => {\r\n    setDefenseUpgraded(true)\r\n    delayedCall(.25, () => { setDefenseUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.defense.current ])\r\n\r\n\treturn (\r\n\t\t<>\r\n      <ToastContainer />\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SCORES_VIEW ?\r\n          <ScoresView scores={ scores } />\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.MAIN_MENU && window.gameObjects ?\r\n          <>\r\n            <PauseMenu\r\n            margintop={ true }\r\n            hidetitle={ true }\r\n            hidebg={ false }\r\n            bgcolor={ '#222' }\r\n            playbtn={ true }\r\n            />\r\n          </>\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.BUILD_PLACEMENT_MODE && game.gameState === GameStates.GAMEPLAY\r\n          ?\r\n            <>\r\n              <DoneBarrierPlacementBanner />\r\n            </>\r\n          : null \r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          gameObjects && game.gameState === GameStates.PAUSE\r\n          ? <PauseMenu shop-query-visibility={ game.gameSubState === SubStates.SHOP_QUERY_SUBMENU } />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SHOP_MENU\r\n          ? <ShopMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.BUILD_MENU\r\n          ? <BuildMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.SHOP_QUERY_SUBMENU\r\n          ? <ShopQuery />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.PLAYER_DEATH\r\n          ? <RespawnMenu />\r\n          : null\r\n        }\r\n      </>\r\n      \r\n      <>\r\n        {\r\n          /* Wave count and zombies to defeat */\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div\r\n          style={{\r\n            backgroundColor: '#333',\r\n            position: 'absolute',\r\n            margin: 'auto',\r\n            width: '50%',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n            top: '4px',\r\n            left: 0, right: 0,\r\n            textAlign: 'center',\r\n            borderRadius: '2px'\r\n          }}>\r\n            <div style={{ display: 'inline-block' }} className='debug-ui'>\r\n              wave no: {game.waveNum}\r\n            </div>\r\n            <div style={{ marginLeft: '100px', display: 'inline-block' }} className='debug-ui'>\r\n              enemies to defeat: {game.waveCountToDefeat}\r\n            </div>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <motion.div\r\n            className='game-score'\r\n            animate={{\r\n              scale: animateScore ? [ 1.35, 1.0 ] : 1.0\r\n            }}\r\n            transition={{\r\n              duration: .35\r\n            }}\r\n            >\r\n              {\r\n                <span\r\n                style={{\r\n                  color: (\r\n                    game.score < game.prevScore ? 'red'\r\n                    : game.score > game.prevScore ? '#00FF61'\r\n                    : 'white'\r\n                  )\r\n                }}>\r\n                  {\r\n                    game.score\r\n                  }\r\n                </span>\r\n              }\r\n            </motion.div>\r\n          : null\r\n        }\r\n        <div\r\n        className={ game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ? 'player-attributes' : '' }>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <>\r\n            <div className={ reloadUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Reload Lvl. { game.player.upgradeTiers['reload'].current }\r\n            </div>\r\n            <div className={ runUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Run Lvl. { game.player.upgradeTiers['run'].current }\r\n            </div>\r\n            <div className={ jumpUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Jump Lvl. { game.player.upgradeTiers['jump'].current }\r\n            </div>\r\n            <div className={ defenseUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Defense Lvl. { game.player.upgradeTiers['defense'].current }\r\n            </div>\r\n            <div className={ meleeUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Melee Lvl. { game.player.upgradeTiers['melee'].current }\r\n            </div>\r\n          </>\r\n          : null\r\n        }\r\n        </div>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <div className='total-ammo-count-ui'>\r\n              {\r\n                game.player.weapons.totalAmmo[\r\n                  game.player.weapons.equipped\r\n                ]\r\n              }\r\n            </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div className='total-credits-ui'>\r\n            credits: <span style={{ color: '#71DD4D' }}>${ game.player.credits }</span>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW && weaponEquipped ?\r\n          <div className='weapon-stats'>\r\n            <div className='weapon-stats-item'>ROF: { game.player.modTiers['rof'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>PWR: { game.player.modTiers['powder'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>ACC: { game.player.modTiers['sight'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>CAP: { game.player.modTiers['mag'][weaponEquipped].current }</div>\r\n          </div>\r\n          : null\r\n        }\r\n      </>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n","import React from 'react';\r\nimport Game from './features/game/Game'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\t\t\t\t<Game />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}