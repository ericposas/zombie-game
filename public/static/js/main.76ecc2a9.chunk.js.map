{"version":3,"sources":["images/pistol-icon.png","images/smg-icon.png","images/shotgun-icon.png","images/GroundTexture_Optimized.png","images/wallTile.png","images/gradient-layer-mask.png","images/explosiveBarrier.png","images/head-sprite.png","sounds/bodyBulletImpact.wav","images/GameCover.png","sounds/9mm1.wav","sounds/9mm2.mp3","sounds/explosion1.wav","sounds/explosion_distant.wav","sounds/pistolReload.wav","sounds/grenadeClink.wav","sounds/throw.wav","sounds/coinCollect.wav","sounds/collectAmmo.wav","sounds/collectItem.wav","sounds/bloodSquash.flac","sounds/bloodSquish.wav","sounds/bloodSmack.wav","sounds/deathRipSound.wav","sounds/jumpLanding.wav","sounds/dirtImpact.wav","sounds/zombieHurt.wav","sounds/zombieDeath.wav","sounds/pain1.wav","sounds/pain2.wav","sounds/playerDeath.wav","sounds/buttonAdd.wav","sounds/buttonSubtract.wav","sounds/buttonClick.wav","sounds/buttonHover.wav","sounds/placeObject.flac","sounds/cancelSound.wav","sounds/moneySound.wav","sounds/purchase.wav","sounds/shellImpact.wav","sounds/health.wav","sounds/zombieGrowl.wav","sounds/smgFire.wav","sounds/magDrop.wav","sounds/shotShell.wav","sounds/shotgunBlast.wav","sounds/achievement1.wav","sounds/achievement2.mp3","sounds/achievement3.wav","sounds/jumpSound.wav","sounds/grenadeCharge.wav","features/game/constants/GameStates.js","app/initialState.js","features/game/constants/weapons.js","features/game/gameSlice.js","app/store.js","features/game/utils/Utils.js","features/game/constants/mouseStates.js","features/game/collisionOptions.js","features/game/ReactComponents/MenuComponents.js","features/game/utils/updateScore.js","features/game/ReactComponents/ShopMenu.js","features/game/ReactComponents/AchievementsView.js","features/game/ui/WeaponsUI.js","features/game/ReactComponents/PauseMenu.js","features/game/createMessages.js","features/game/items/Gib.js","features/game/player/PlayerRagdoll.js","features/game/FX/BloodSpurt.js","features/game/constants/DeathTypes.js","features/game/items/Rock.js","features/game/items/WoodPlank.js","features/game/FX/ExplosionSprite.js","features/game/FX/GrenadeExplosion.js","features/game/BuildItems/WallBarrier.js","features/game/BuildItems/Landmine.js","features/game/items/Grenade.js","features/game/BuildItems/Clustermine.js","features/game/constants/buildTypes.js","features/game/BuildItems/RemoteMine.js","features/game/player/fireWeapons.js","features/game/FX/MuzzleFlashFX.js","features/game/BuildItems/MachineGunTurret.js","features/game/FX/Sparks.js","features/game/utils/saveGame.js","features/game/ReactComponents/ShopQuery.js","features/game/player/Player.js","features/game/player/crosshairs.js","features/game/FX/GroundEffect.js","features/game/engineHandlers.js","features/game/WallTile.js","features/game/items/HealthDrop.js","features/game/items/AmmoDrop.js","features/game/enemies/Zombie.js","features/game/items/CurrencyCredit.js","features/game/items/ItemGenerators.js","features/game/ui/ScreenUI.js","features/game/buildGame.js","features/game/createGameObjects.js","features/game/waves/waveManager.js","features/game/ReactComponents/RespawnMenu.js","features/game/ReactComponents/BuildMenu.js","features/game/ReactComponents/DoneBarrierPlacementBanner.js","features/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SubStates","GameStates","MAIN_MENU","GAMEPLAY","PAUSE","IN_GAME_MENU","GAMEOVER","SHOP_MENU","BUILD_MENU","SCORES_VIEW","width","height","keys","score","prevScore","lvlToWin","scoreToggle","scoreAmounts","zombie","meleeConnect","zombieStreakBonus","zombieKnockedOffStage","headShot","collectCredit","collectHealth","collectAmmo","waveCompleted","achievement","penalties","respawn","killed","damageTaken","achievements","owned","description","stats","zombiesKilled","bulletsFired","timesReloaded","grenadesThrown","timesKilled","timesRespawned","itemsPickedUp","creditsEarned","storePurchases","trapsBuilt","barriersBuilt","meleeKills","mineKills","trapsPlaced","barriersPlaced","turretKills","damageDealt","trapTypesPlaced","barrierTypesPlaced","lastAchievementEarned","lastMagDropped","consecutiveGrenadeKills","lastGrenadeKill","zombieLastKilled","filterEffects","displayZombieHealth","rightMouseDown","mouseState","x","y","btn","mousePosition","mouseRelativeToPlayerPosition","textures","gameState","lastGameState","gameSubState","lastGameSubState","waveNum","waveCountToDefeat","zombiesOnStage","showingMessage","respawnCost","respawnToShopCost","purchases","lastPurchase","item","amount","player","perks","magnetism","cost","magDmg","lastBullet","creditDropper","ammoDropper","healthDropper","quickTurret","barrierPlus","cluck","health","credits","position","compositeId","composite","headId","bodyId","armId","weapons","list","equipped","grenadeChargeRate","grenadeUpperForceThreshold","grenadeFuseTime","default","grenadeExplosionSize","laser","meleeDamage","damage","min","max","shotLimiter","ammoCapacity","totalAmmo","ammoCostPerBox","lastShot","reloadSpeed","reloadAnimationFrames","bulletVariance","bulletForce","shellEjectionForce","shellRemovalTimeout","buyWeapons","constants","variables","magnetismSpeed","currentDirection","lastDirection","jumping","jumpForce","defense","acceleration","deceleration","upgradeTiers","run","current","jump","reload","melee","upgradeCosts","upgradeAmounts","modTiers","rof","powder","sight","mag","modCosts","modAmounts","barriers","selectedBarrier","costToBuild","traps","turret","fireDistance","cooldown","selectedTrap","enemies","zombies","attackDmg","attackDmgDefault","attackIncrementer","walkSpeed","walkSpeedDefault","walkSpeedIncrementer","zombieAttackLimiter","zombieAttackDefaultLimiter","zombieAttackLimiterDecrementer","zombieAttackDistance","defaultHealth","startingHealth","healthIncrementer","onRight","onLeft","consumables","healthkit","full","AchievementDefs","StatsDefs","gameSlice","createSlice","name","initialState","reducers","loadLocalStorageState","state","localStorage","getItem","JSON","parse","setTrapTypePlaced","action","payload","setBarrierTypePlaced","setLastMagDropped","increaseStats","increaseStatsByAmount","reducer","type","prepare","setLastGrenadeKill","resetConsecutiveGrenadeKills","setZombieLastKilled","flipScoreToggle","increaseScore","decreaseScore","updatePrevScore","addPurchase","setZombiesOnLeft","setZombiesOnRight","setRightMouseDown","attachMod","modType","wepType","Math","round","setPlayerCompositeId","console","log","setKeyPress","push","removeKeyPress","splice","indexOf","parseInt","setLastDirection","setCurrentDirection","setJumping","setGroundId","groundId","setMousePosition","setMouseStateX","setMouseStateY","setMouseButtonState","setWeaponEquipped","setLastShot","dateTimeObject","weapon","setMouseRelativeToPlayerPosition","setCompositeBodyIds","setStaticGunAngle","staticGunAngle","setStaticGunAngleState","staticGun","setTexturePath","textureName","texturePath","gameStateTransition","from","to","incrementWave","decrementWave","setWaveCountToDefeat","incrementWaveCountToDefeat","decrementWaveCountToDefeat","setWeaponsList","setShowingMessage","unsetAllKeys","resetPlayerVariables","Object","assign","decrementTotalAmmo","addToTotalAmmo","updateAmmoCapacity","newCapacityAmount","setPlayerPosition","addToTotalCredits","subtractFromTotalCredits","upgradeRunSpeed","upgradeReloadSpeed","upgradeJumpForce","upgradeDefense","upgradeMelee","updatePlayerHealth","decrementGrenadeCount","incrementGrenadeCount","updateZombieWalkSpeed","incrementer","updateZombieAttackDmg","decrementZombieAttackTimeLimit","showLaserSight","incrementZombieHealth","setSelectedBarrierToBuild","setSelectedTrapToBuild","setLastWaveCountDefeated","lastWaveCountDefeated","incrementZombiesOnStage","setZombiesOnStage","updateWeaponsList","setPlayerMagnetism","range","speed","setPlayerMagDamage","setPlayerLastBullet","setPlayerCreditDropper","setPlayerAmmoDropper","setPlayerHealthDropper","setPlayerQuickTurret","setPlayerBarrierPlus","setPlayerFusterCluck","toggleFilterEffects","toggleZombieHealthDisplay","setAchievementOwned","actions","store","configureStore","game","subscribe","getState","window","TweenLite","makePixiSprite","stringIdentifier","PIXI","getBodyWidth","body","bounds","getBodyHeight","getPlayerPartByType","gameObjects","gunId","world","getKeyValue","Composite","get","getPlayerBody","GREATER_THAN_PLAYER_X_POS","playerCollisionOptions","group","category","mask","enemyCollisionOptions","itemCollisionOptions","Container","styled","div","props","Backing","opacity","bgcolor","MenuTitle","MenuButtonContainer","MenuButton","cancelTransition","MenuButtonSpacer","updateScore","dispatch","delayedCall","subtractScore","MenuComponents","Inline","IncrementDecrement","AmmoCount","CustomMenuButton","bordercolor","hovercolor","hoverborder","style","onClick","play","onMouseOver","children","BackButton","borderRadius","arrowOnly","fontSize","CornerBackButton","top","right","marginTop","Modal","label","labelClr","clickConfirmHandler","clickCancelHandler","boxShadow","color","space-top","display","marginRight","AmmoSubMenu","toDefaultSubMenu","toAmmoSubMenu","toStandardMenu","useDispatch","useSelector","ammoCap","React","useReducer","ammo","ammoInCart","dispatchAmmoInCart","useState","dollarCost","setDollarCost","fontWeight","left","weaponsUI","batch","updateGrenadeIcons","select","PlayerAttributesMenuButton","subMenuType","setSubMenuType","upgradeTypes","getAttrName","length","ModSubMenu","getWepText","wepTxt","getModDescription","mod","selectedMod","setSelectedMod","selectedType","setSelectedType","marginLeft","modPurchaseName","updateWeaponMagazines","map","i","Fragment","key","ShopMenu","menuType","setMenuType","w","h","screenUI","toAmmoMenu","backToStandardMenu","openAmmoSubMenu","getHealthkitCostStyle","kitType","useEffect","unpause","acceptHealth","data-tip","data-for","id","backBtnFn","achievementsKeys","WeaponsUI","mags","container","gameWidth","gameHeight","pistolIcon","smgIcon","shotgunIcon","icons","iconBG","DropShadowFilter","distance","alpha","beginFill","drawRect","addChild","forEach","icon","this","keepOnTop","magazinesByWeaponType","concat","b","grenades","g","shaking","reloading","emptyText","setInterval","bulletMask","setKeyValue","BevelFilter","lightAlpha","shadowAlpha","thickness","bulletBevel","checkFilters","filters","gbevel","gnoise","makeMagByType","bullet","bulletGfc","lineStyle","weaponIcons","updateMagazine","destroy","Array","fill","swapSwap","wep","magazineIndexes","idx","removeChild","magEmptyBools","checkEmpty","weapon_str","doTheWiggle","defaultPos","callback","onComplete","textForEmptyShake","changeTextForEmptyShake","str","text","pivot","removeEmptyText","emptyMagShake","forceReload","ammoCheck","limit","_i","lastBulletByWepType","onCompleteParams","forceWepEquipped","m","hasOwnProperty","lastMagIdx","fireBullet","makeGrenadeIcon","NoiseFilter","shadowColor","lightColor","noise","seed","grenadeGfc","drawCircle","grenadeCount","gnade","updateWeaponsUI","resetWave","z","kill","dead","gotoMainMenu","NoTransitionButton","Stat","stat","padding","PauseMenu","pauseMenuStates","showDefault","setPauseMenuState","pauseMenuState","effectFilters","margintop","hidebg","hidetitle","playbtn","setTimeout","togglePause","AchievementsView","ammos","credit","displayHealth","createGenericMessage","txt","fillColor","durationMotion","durationLinger","Power1","font","onStart","delay","ease","easeIn","createTextMessage","set","texts","playerBody","msg","playerPosition","initialY","Gib","timeToDisappear","position_x","position_y","force_x","force_y","gibs","Bodies","circle","collisionFilter","World","add","partsSheet","gfc","Sprite","floor","random","getTexturePNG","Body","applyForce","float","animate","renderFn","rot","rotation","remove","GibGenerator","count","force","gibCnt","PlayerRagdollDecap","partLastDamaged","bUpper","a","l","hnd","f1","f2","spine","bodyUpper","rectangle","head","maskBody","armUpperL","armUpperR","handL","armLowerL","armLowerR","handR","legUpperL","legUpperR","legLowerL","legLowerR","footL","footR","bodyToHead","Constraint","create","bodyA","bodyB","pointA","pointB","bodyUpperToArmUpperL","bodyUpperToArmUpperR","armUpperLToArmLowerL","armUpperRToArmLowerR","handToLowerL","handToLowerR","bodyLowerToLegUpperL","bodyLowerToLegUpperR","legUpperLToLegLowerL","legUpperRToLegLowerR","footLToLowerLegL","footRToLowerLegR","spineGfx","spineLinks","_si","spineLink","spineConstraints","makeSpine","upper_spineLinks","upper_spineConstraints","spineToUpper","gibForce","int","parts_spritesheet","spriteParts","foot2","_id","leg2","hand2","arm2","upperArm2","foot1","upperLeg2","skull","leg1","upperLeg1","link","spineGfc","torsoUpper","hand1","arm1","upperArm1","part","updateAnchor","sprite","animateRagParts","renderFnc","linkPos","maskPos","skullPos","torsoUpperPos","arm1Pos","upperArm1Pos","hand1Pos","upperLeg1Pos","leg1Pos","foot1Pos","arm2Pos","upperArm2Pos","hand2Pos","upperLeg2Pos","leg2Pos","foot2Pos","PlayerRagdollHalved","bLower","bodyLower","entrailGfx","lower_spineLinks","lower_spineConstraints","spineToLower","entrailGfc","torsoLower","torsoLowerPos","PlayerRagdollMaim","bodyUpperToLegUpperL","bodyUpperToLegUpperR","torso","torsoPos","PlayerRagdoll","BloodSpurt","scale","bodyToDelete","chosenSpurt","bloodSpurt1_sheet","bloodSpurt1","AnimatedSprite","animations","bloodSpurt2_sheet","bloodSpurt2","bloodSpurt3_sheet","bloodSpurt3","spurts","autoChosen","animationSpeed","loop","FELL_OFF","Rock","rocks","explosionAssetsSheet","rockPieceAssets","rockSprite","rockScale","rockBody","restitution","WoodPlank","pos","woodPlanksSheet","woodPlanks","plankRange","getPlank","gfcContainer","torque","ExplosionSprite","renderBody","explosionTexture1","explosionTexture2","explosion1","explosion2","explosions","ex","explosion","adjustment","AdjustmentFilter","brightness","saturation","blur","BlurFilter","glow","GlowFilter","outerStrength","onUpdate","GrenadeExplosion","showRocksBool","options","explosionSound1","Howl","src","distantExplosion","distantExplosionSound","explosionsArray","smokeAssets","positionalBody","isStatic","calcRenderedPosition","calculatedPosition","randInt","s","smokeSprite","idx1","randScale","xyval","r","showWood","showExplosionSprite","explosionSprites","seek","WallBarrier","dimensions","barriersSprites","buildObjects","woodenBarrier","stoneBarrier","metalBarrier","explosiveBarrier","types","WOOD","STONE","METAL","EXPLOSIVE","barrierSprite","objBody","inertia","Infinity","ground","constraint","strength","main","destroyed","getBody","healthDisplay","sprites","takeDamage","dmg","displayBarrierStrength","removeSelf","_x","_y","explosionHitbox","Landmine","landmines","landmineSheet","hitbox","Grenade","fuseTime","grenadeDistance","start","end","grenadeBody","bevel","motionBlur","MotionBlurFilter","velocity","radians","exploded","explode","showRocks","explosionSize","Clustermine","num","xforce","yforce","nade","barrierTypes","trapTypes","LANDMINE","CLUSTER_BOMB","REMOTE_MINE","TURRET","RemoteMine","mineNumber","remoteMines","remoteMinesArr","Text","calcPistolDamage","BulletImpact","surfaceType","tint","alphaDuration","rand","duration","renderPosition","PistolShell","changeLabelString","overrideOptions","shells","undefined","setAngularVelocity","shellWd","shellHt","endFill","bind","PistolBullet","extraDamageBool","arm","bullets","bulletWd","overrideBody","setAngle","overrideAngle","Vector","angle","overrideForce","position1","position2","cos","sin","calcBulletAngle","addImpactEffect","bulletImpacts","impact","bulletLastPos","bulletTrail","linePoints","fireEquippedWeapon","playerBodyWd","playerBodyHt","Date","now","stringify","fireWeaponAnimation","extraDmg","split","MuzzleFlashFX","muzzleFlashesSheet","muzzleFlash001","muzzleFlash002","muzzleFlash003","muzzleFlash004","muzzleFlash005","muzzleFlashes","visible","muzzleScale","blurFilter","getRandomBlur","quality","glowFilter","innerStrength","adjustmentFilter","flashes","flash","tier","randFlash","getRandomFlash","_muzzleScale","MachineGunTurret","scanAnim","shootAnim","onFrameChange","gotoAndStop","child","direction","scanning","muzzleFlashFX","setMuzzleRotations","degrees","fireEffect","_ejectY","shooting","Spark","spark1","spark2","sparks","spark","adjFilter","sparkContainer","stop","adjust","setItem","BottomBanner","Back","nextWave","wave","saveGame","alert","processScoreInput","Axios","post","catch","err","then","result","ScoreSubmitScreen","nameInputValue","setNameInputValue","onChange","e","preventDefault","value","ShopQuery","shopQueryMenuState","setQueryMenuState","gotoScoreSubmitScreen","backToShopQuery","className","EnhancedMuzzleSpark","muzzleSpark","gotoAndPlay","getFilters","updateFilters","Player","engine","wd","ht","friction","armAttach","headAttach","bodies","life","lifebarOutline","lifebar","initialLifebarWidth","charReloadPistolSpritesheet","charReloadPistolSprite","charReloadSMGSpritesheet","charReloadSMGSprite","charReloadShotgunSpritesheet","charReloadShotgunSprite","shotgunShellLoadIterations","gotoToEndOfShotgunReload","reloadAnimsByType","reloadAnims","kernelSize","meleePistolSpritesheet","meleePistolAnim","meleeAttackInProgress","removeMeleeHitbox","currentFrame","meleeUMPSpritesheet","meleeUMPAnim","meleeShotgunSpritesheet","meleeShotgunAnim","meleeSprites","grenadeThrowInProgress","grenadeForce","chargingGrenade","chargeGrenade","chargeGrenadeSound","meter","renderGrenadeChargeMeter","createGrenade","calculatedGrenadeForce","calcGrenadeAngle","throwGrenade","attacks","grenadeThrowPistolAnim","grenadeThrowUMPAnim","grenadeThrowShotgunAnim","grenadeThrowPistolSpritesheet","grenadeThrown","grenadeThrowUMPSpritesheet","grenadeThrowShotgunSpritesheet","grenadeSprites","grenadeSpritesByEquipped","ejectedMags","reloadMagazineActionsByType","magDmgOwned","mx","pistolReloadSound","fade","_d","magBody","pistolMag","magObj","gfx","unshift","pop","smgMag","reloadShell","updateEjectedMagPositions","reloadWeapon","charRightArmFirePistolSpritesheet","charRightArmFirePistolSprite","charRightArmFireSMGSpritesheet","charRightArmFireSMGSprite","charArmsFireShotgunSpritesheet","charRightArmFireShotgunSprite","headSprite","positionHeadSprite","renderObj","_mx","my","fn","armsSpritesByType","charLeftArmFirePistolSprite","charRunSpritesheet","charRunSprite","charIdleSpritesheet","charIdleSprite","charJumpSpritesheet","charJumpSprite","stopJumpAnimation","resumeJumpAnimation","jumpMotionBlur","playJumpAnimation","charLeftArmFirePistolSpritesheet","charLeftArmFireSMGSpritesheet","charLeftArmFireSMGSprite","charLeftArmFireShotgunSprite","armsSprites","_9mm1","_9mm2","pistolSound1","pistolReloadSnd","_1","volume","jumpSound","pain1Snd","pain2Snd","deathRip","playerDeathSnd","hitImpact","smgFire","shotgunFire","mSpark","currentMuzzleSpark","bodySprites","shadow","drawEllipse","setBodySpritesPositions","obj","setArmsSpritePosition","fpos","_my","getFlashes","createMeleeHitbox","meleeHitbox","meleeAttack","collectCredits","playerHit","resetPlayerHit","blinkAlpha","bloodSpurtPos","amt","addSpritesInOrder","timing","timeScale","playerRagdoll","lastDeathType","lastBodyPosition","translate","deathType","parts","playerArm","getPlayerComposite","bh","keydownListenersAdded","addEventListener","keyCode","changeBack","toString","detonate","currentTurret","updateDirection","target","document","getElementsByTagName","getBoundingClientRect","armAngle","mouseX","mouseY","rect","clientX","clientY","mPosRel","buttons","costToBuild_trap","costToBuild_barrier","closestX","barrier","buildNewLocation","placeObjectSound","cancelSound","checkAllowArray","buildObjectPlacementComparison","reduce","prev","curr","abs","trap","buildTrap","trapPosition","mine","updateNumber","grenadesCount","deltaY","pause","Crosshairs","crosshair","cross","moveTo","lineTo","changed","_new","buildArrow","animationLoop","GroundEffect","bodyPart","groundFx","fxSheet","bulletTextures","groundBloodSpatters","render","groundTex","groundBody","pistolBullets","pistolBulletWd","pistolBulletHt","pistolShells","pistolShellWd","pistolShellHt","ammoDrops","pistolAmmoDrops","smgAmmoDrops","shotgunAmmoDrops","creditDrops","crosshairs","zombieRags","leftEnemyCount","rightEnemyCount","leftEnemyCountDisplay","rightEnemyCountDisplay","sparkSprites","healthdrops","wallTile","WallTile","texture","Texture","delta","tilePosition","TilingSprite","createCollision","body1_label","body2_label","pairs","body1","body2","calculateDamageAmount","calcSMGDamage","calcShotgunDamage","calcTurretDamage","checkCollisionStart","snd","knockback","ammo_type","grenadeClink","gameTickVarsDefined","getZombieRadarTextStyle","gameTickHandler","gradientAlpha","accelMax","mouseButtonState","renderPositionFn","firePistol","fireSMG","fireShotgun","Render","lookAt","playerPosX","playerPosY","box","positionAmmoBox","coin","positionCreditGfx","creditBody","playerRag","grenade","rock","wood","gib","setPlayerVars","playerDirection","paused","walk","setSpritesPositions","timeSinceLastAttack","attack","shoot","updatePosition","rag","fx","HealthDrop","_amt","Graphics","healths","AmmoDrop","weaponType","colors","ammoBox","ammoGfc","boxGfc","blurGfc","bevelFilter","boxTxt","ZombieRagdoll","f","constraints","_body","z_parts_spritesheet","skulls","getSkullTex","c","getARandomConstraint","Zombie","Power2","zombieWalkSpeed","headToBody","zWalkSheet","zAttackSheet","idleSheet","idleAnim","zWalk","zAttack","zAttack2","slashFX","slashAnim","walkAnim","attackAnim","attackAnim2","anims","anim","playerBodyPosition","playSlashAnim","shouldDisplayHealth","moveLifeDisplay","zombieFarFromPlayer","playIdleAnim","playing","walkAnimPlaying","stopIdleAnim","playWalkAnim","stopWalkAnim","healthOffsetY","damageDisplayOptions","healthDisplayOptions","renderFnResult","alteredWalkSpeed","comparison","bool","dmgTxts","dmgIterator","tintAmounts","1","2","3","4","partDamaged","isCritical","isMelee","attackType","spurtPosLow","spurtPosHi","directionX","removeZombieFromMatterWorld","attackHitbox","removeZombieFromZombiesArray","skipZombieRag","killType","dropPos","GenerateRandomCreditDrops","scoreAmt","zombieGrowl","oneOfTwo","compareResult","makeAttackHitbox","CreditDrop","currencyDrops","creditContainer","creditBlur","creditGfc","yStartPos","amountLimits","randCount","RespawnButton","ScreenUI","pixiElt","Bounce","gameContainer","respawnButton","interactive","overrideCount","GenerateRandomAmmoDrops","on","showRespawnButton","easeOut","muzzle_flashes_spritesheet","zomb_idle_sheet","zomb_walk_sheet","zomb_attack1_sheet","zomb_attack2_sheet","zomb_parts_sheet","zomb_parts_gored_sheet","zomb_slash_fx_sheet","barriers_sheet","char_parts","char_idle_sheet","char_run_sheet","char_jump_sheet","char_reload_pistol_sheet","char_reload_smg_sheet","left_arm_pistol_fire_sheet","right_arm_pistol_fire_sheet","left_arm_smg_fire_sheet","right_arm_smg_fire_sheet","melee_pistol_sheet","melee_ump_sheet","melee_shotgun_sheet","grenade_pistol_sheet","grenade_ump_sheet","grenade_shotgun_sheet","arms_fire_shotgun","char_reload_shotgun_sheet","blood_spurt_1","blood_spurt_2","blood_spurt_3","landmine_sheet","wood_planks_sheet","sparks_sheet","elementId","mouseConstraintBool","Engine","element","getElementById","pixelRatio","runner","Runner","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","stiffness","worldWidth","setUpMatter","app","antialias","resolution","ROUND_PIXELS","appendChild","view","loader","setUpPixi","buildGame","onload","explosiveBarrel","groundTexture","charHead","weaponUI_pistolIcon","weaponUI_smgIcon","weaponUI_shotgunIcon","load","getFullState","setFullState","coverArt","gradientAlphaImg","gameCover","distant_explosion","bulletImpact_body","throwSound","confirmSound","coinCollectSound","ammoCollectSound","itemCollectSound","bloodSquish","bloodSquash","bloodSmack","deathRipSound","jumpLandingSound","dirtImpactSound","zombieHurtSound","zombieDeathSound","pain1Sound","pain2Sound","playerDeathSound","buttonAddSound","buttonSubtractSound","buttonHoverSound","buttonClickSound","buttonCancelSound","purchaseSound","shellImpactSound","healthPickupSound","magDrop","shotShell","shotgunBlast","achievement1","achievement2","achievement3","chargingNade","resources","spritesheet","addGround","stage","mainMenu","menu","playBtn","playBtnGfc","playBtnTxt","fontFamily","positionPlayButton","buildMenu","Events","cursor","getElementsByClassName","pointerEvents","startWave","numOnStage","getAZombie","startZombieCreation","GenerateZombies","waveDefeated","chars","transitionToShopQuery","waveMsgOutro","waveMsgIntro","createWaveMessage","BuildMenuStates","buildMenuState","setBuildMenuState","barrierCosts","trapCosts","backToBuildMenu","gotoPlacementMode","replaceCursorWithObjectToPlace","chooseBarrier","filteredType","chooseTrap","filter","ScoresView","scores","overflow","sort","date","time","substr","year","dateNoYear","Game","weaponEquipped","waitInterval","useRef","cancelWaveStart","initial","useScores","setScores","animateScore","setAnimateScore","runUpgraded","setRunUpgraded","reloadUpgraded","setReloadUpgraded","jumpUpgraded","setJumpUpgraded","meleeUpgraded","setMeleeUpgraded","defenseUpgraded","setDefenseUpgraded","countdown","timeInt","clearInterval","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warning","isErr","data","DoneBarrierPlacementBanner","shop-query-visibility","BuildMenu","RespawnMenu","backgroundColor","margin","lineHeight","textAlign","transition","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,iCCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.76ecc2a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pistol-icon.7f31cd11.png\";","module.exports = __webpack_public_path__ + \"static/media/smg-icon.3a3ac587.png\";","module.exports = __webpack_public_path__ + \"static/media/shotgun-icon.0cd5d683.png\";","module.exports = __webpack_public_path__ + \"static/media/GroundTexture_Optimized.b017db2f.png\";","module.exports = __webpack_public_path__ + \"static/media/wallTile.c21abdef.png\";","module.exports = __webpack_public_path__ + \"static/media/gradient-layer-mask.2be09341.png\";","module.exports = __webpack_public_path__ + \"static/media/explosiveBarrier.4f1da0f2.png\";","module.exports = __webpack_public_path__ + \"static/media/head-sprite.0a5881b1.png\";","module.exports = __webpack_public_path__ + \"static/media/bodyBulletImpact.94466266.wav\";","module.exports = __webpack_public_path__ + \"static/media/GameCover.82b711ae.png\";","module.exports = __webpack_public_path__ + \"static/media/9mm1.604f7da7.wav\";","module.exports = __webpack_public_path__ + \"static/media/9mm2.c11c6dad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/explosion1.9434e92f.wav\";","module.exports = __webpack_public_path__ + \"static/media/explosion_distant.d9a90524.wav\";","module.exports = __webpack_public_path__ + \"static/media/pistolReload.915ac0e1.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeClink.e7168e2c.wav\";","module.exports = __webpack_public_path__ + \"static/media/throw.e7ed00d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/coinCollect.b65cb627.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectAmmo.b05c1059.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectItem.a7bd5386.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquash.6c1046e0.flac\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquish.508e6483.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSmack.eb606367.wav\";","module.exports = __webpack_public_path__ + \"static/media/deathRipSound.733ed512.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpLanding.f703082d.wav\";","module.exports = __webpack_public_path__ + \"static/media/dirtImpact.de2bbd17.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieHurt.2e807e84.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieDeath.0ac25f1f.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain1.e6646ac7.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain2.defb4bdf.wav\";","module.exports = __webpack_public_path__ + \"static/media/playerDeath.e8c5712d.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonAdd.8db1c8cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonSubtract.b240a4d0.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonClick.10d30b9f.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonHover.e0064aca.wav\";","module.exports = __webpack_public_path__ + \"static/media/placeObject.fa092176.flac\";","module.exports = __webpack_public_path__ + \"static/media/cancelSound.0d1ffcde.wav\";","module.exports = __webpack_public_path__ + \"static/media/moneySound.1bae50c5.wav\";","module.exports = __webpack_public_path__ + \"static/media/purchase.4979dc37.wav\";","module.exports = __webpack_public_path__ + \"static/media/shellImpact.8075d182.wav\";","module.exports = __webpack_public_path__ + \"static/media/health.29ff687c.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieGrowl.4792280f.wav\";","module.exports = __webpack_public_path__ + \"static/media/smgFire.b1f03f38.wav\";","module.exports = __webpack_public_path__ + \"static/media/magDrop.1547e6a9.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotShell.f90e6de6.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotgunBlast.4118af72.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement1.dd62d37e.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement2.7a014c29.mp3\";","module.exports = __webpack_public_path__ + \"static/media/achievement3.23db76c0.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpSound.ccaa05f0.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeCharge.31709a11.wav\";","const GameStates = {\r\n  MAIN_MENU: 'main menu',\r\n  GAMEPLAY: 'gameplay',\r\n  PAUSE: 'pause',\r\n  IN_GAME_MENU: 'in-game menu',\r\n  GAMEOVER: 'gameover',\r\n  SHOP_MENU: 'in-game shop menu',\r\n  BUILD_MENU: 'build menu',\r\n  SCORES_VIEW: 'scores view',\r\n}\r\n\r\nexport const SubStates = {\r\n\tNEUTRAL: 'neutral',\r\n\tWAITING: 'waiting',\r\n\tWAVE_STARTED: 'wave started',\r\n\tWAVE_DEFEATED: 'wave defeated',\r\n\tWAVE_CHANGE: 'wave change',\r\n\tPLAYER_DEATH: 'player death',\r\n  PLAYER_RESPAWN: 'player respawn',\r\n  SHOP_QUERY_SUBMENU: 'shop query sub-menu',\r\n  BUILD_PLACEMENT_MODE: 'build trap placement mode'\r\n}\r\n\r\nexport default GameStates\r\n","import GameStates, { SubStates } from '../features/game/constants/GameStates'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_GRENADE } from '../features/game/constants/weapons'\r\n\r\nexport default {\r\n  width: 1200,\r\n  height: 550,\r\n  keys: [],\r\n  score: 0,\r\n  prevScore: 0,\r\n  lvlToWin: 30,\r\n  scoreToggle: false,\r\n  scoreAmounts: {\r\n    zombie: 500,\r\n    meleeConnect: 100,\r\n    zombieStreakBonus: 250,\r\n    zombieKnockedOffStage: 500,\r\n    headShot: 100,\r\n    collectCredit: 10,\r\n    collectHealth: 10,\r\n    collectAmmo: 10,\r\n    waveCompleted: 1000,\r\n    achievement: 5000,\r\n    penalties: {\r\n      respawn: 1000,\r\n      killed: 500,\r\n      damageTaken: 20\r\n    }\r\n  },\r\n  achievements: {\r\n    'SPARTA': { owned: false, description: 'Kicking a zombie off-stage' },\r\n    'Downtown': { owned: false, description: 'Throwing a grenade 2000 ft. and hitting a zombie' },\r\n    'Triplets': { owned: false, description: 'Killing 3 Zombies with one grenade' },\r\n    'Collector': { owned: false, description: 'Buying both the Shotgun and the SMG from the Shop' },\r\n    'P.Modder': { owned: false, description: 'Purchasing all pistol modifications' },\r\n    'SMG Modder': { owned: false, description: 'Purchasing all SMG modifications' },\r\n    'S.Modder': { owned: false, description: 'Purchasing all Shotgun modifications' },\r\n    'Aficionado': { owned: false, description: 'Buying all mods in available' },\r\n    'Jumpshot': { owned: false, description: 'Jumping in the air and firing the final killshot' },\r\n    'Piledrive': { owned: false, description: 'Killing 5 zombies with melee attacks as the final strike' },\r\n    'Traphouse': { owned: false, description: 'Building and placing 3 different traps' },\r\n    'Barricade': { owned: false, description: 'Building and placing 3 different barrier types' },\r\n    'Miner': { owned: false, description: 'Killing at least 3 zombies with landmines' },\r\n    'Gunna': { owned: false, description: 'Killing at least 10 zombies with turrets' }\r\n  },\r\n  stats: {\r\n    zombiesKilled: 0,\r\n    bulletsFired: 0,\r\n    timesReloaded: 0,\r\n    grenadesThrown: 0,\r\n    timesKilled: 0,\r\n    timesRespawned: 0,\r\n    itemsPickedUp: 0,\r\n    creditsEarned: 0,\r\n    storePurchases: 0,\r\n    trapsBuilt: 0,\r\n    barriersBuilt: 0,\r\n    meleeKills: 0,\r\n    mineKills: 0,\r\n    trapsPlaced: 0,\r\n    barriersPlaced: 0,\r\n    turretKills: 0,\r\n    damageTaken: 0,\r\n    damageDealt: 0,\r\n  },\r\n  trapTypesPlaced: {},\r\n  barrierTypesPlaced: {},\r\n  lastAchievementEarned: null, // name of achievement\r\n  lastMagDropped: null, // time\r\n  consecutiveGrenadeKills: 0,\r\n  lastGrenadeKill: null, // time\r\n  zombieLastKilled: null, // time\r\n  filterEffects: false,\r\n  displayZombieHealth: true,\r\n  rightMouseDown: false,\r\n  mouseState: { x: '', y: '', btn: '' },\r\n  mousePosition: { x: 0, y: 0},\r\n  mouseRelativeToPlayerPosition: { x: 0, y: 0},\r\n  textures: {},\r\n  gameState: GameStates.MAIN_MENU,\r\n  lastGameState: null,\r\n  gameSubState: SubStates.NEUTRAL,\r\n  lastGameSubState: null,\r\n  waveNum: 0,\r\n  waveCountToDefeat: null,\r\n  zombiesOnStage: 0,\r\n  showingMessage: false,\r\n  respawnCost: 300,\r\n  respawnToShopCost: 150,\r\n  purchases: 0,\r\n  lastPurchase: {\r\n    item: null,\r\n    amount: null,\r\n  },\r\n  player: {\r\n    perks: {\r\n      magnetism: {\r\n        cost: 750,\r\n        owned: false\r\n      },\r\n      magDmg: {\r\n        cost: 750,\r\n        owned: false\r\n      },\r\n      lastBullet: {\r\n        cost: 750,\r\n        owned: false\r\n      },\r\n      creditDropper: {\r\n        cost: 1250,\r\n        owned: false\r\n      },\r\n      ammoDropper: {\r\n        cost: 1250,\r\n        owned: false\r\n      },\r\n      healthDropper: {\r\n        cost: 1250,\r\n        owned: false\r\n      },\r\n      quickTurret: {\r\n        cost: 1000,\r\n        owned: false\r\n      },\r\n      barrierPlus: {\r\n        cost: 1000,\r\n        owned: false\r\n      },\r\n      cluck: {\r\n        cost: 1000,\r\n        owned: false\r\n      }\r\n    },\r\n    health: 100,\r\n    credits: 500,\r\n    position: { x: 0, y: 0 },\r\n    compositeId: '',\r\n    composite: {\r\n      headId: '',\r\n      bodyId: '',\r\n      armId: ''\r\n    },\r\n    weapons: {\r\n      list: [ WEAPON_TYPE_PISTOL ],\r\n      equipped: null,\r\n      grenadeChargeRate: 0.00035,\r\n      grenadeUpperForceThreshold: 0.025,\r\n      grenadeFuseTime: {\r\n        default: 3\r\n      },\r\n      grenadeExplosionSize: 450,\r\n      laser: {\r\n        'pistol weapon': false,\r\n        'smg weapon': false,\r\n        'shotgun weapon': false,\r\n      },\r\n      meleeDamage: {\r\n        'pistol weapon': 10,\r\n        'smg weapon': 15,\r\n        'shotgun weapon': 20,\r\n      },\r\n      damage: {\r\n        'pistol weapon': { 'min': 4, 'max': 10 },\r\n        'smg weapon': { 'min': 3, 'max': 7 },\r\n        'shotgun weapon': { 'min': 4, 'max': 8 },\r\n        'turret weapon': { min: 4, max: 6 }\r\n      },\r\n      shotLimiter: {\r\n        'pistol weapon': 300,\r\n        'smg weapon': 100,\r\n        'shotgun weapon': 500,\r\n      },\r\n      ammoCapacity: {\r\n        'pistol weapon': 9,\r\n        'smg weapon': 19,\r\n        'shotgun weapon': 6,\r\n        'grenades': 1\r\n      },\r\n      totalAmmo: {\r\n        'pistol weapon': 9 * 5,\r\n        'smg weapon': 19 * 5,\r\n        'shotgun weapon': 6 * 5,\r\n        'grenades': 3\r\n      },\r\n      ammoCostPerBox: {\r\n        'pistol weapon': 10,\r\n        'smg weapon': 20,\r\n        'shotgun weapon': 20,\r\n        'grenades': 80\r\n      },\r\n      lastShot: {\r\n        'pistol weapon': null,\r\n        'smg weapon': null,\r\n        'shotgun weapon': null,\r\n      },\r\n      reloadSpeed: {\r\n        'pistol weapon': .4,\r\n        'smg weapon': .4,\r\n        'shotgun weapon': .4,\r\n      },\r\n      reloadAnimationFrames: {\r\n        'pistol weapon': 55,\r\n        'smg weapon': 60,\r\n        'shotgun weapon': 80,\r\n      },\r\n      bulletVariance: {\r\n        'pistol weapon': 0.0004,\r\n        'smg weapon': 0.001,\r\n        'shotgun weapon': 0.002,\r\n      },\r\n      bulletForce: {\r\n        'pistol weapon': .0075,\r\n        'smg weapon': .0075,\r\n        'shotgun weapon': .0075,\r\n        'turret': .01\r\n      },\r\n      shellEjectionForce: {\r\n        'pistol weapon': { 'min': 0.0003, 'max': 0.0007 },\r\n        'smg weapon': { 'min': 0.0003, 'max': 0.0010 },\r\n        'shotgun weapon': { 'min': 0.0008, 'max': 0.0012 },\r\n      },\r\n      shellRemovalTimeout: {\r\n        'pistol weapon': 2000,\r\n        'smg weapon': 2000,\r\n        'shotgun weapon': 2000,\r\n      },\r\n      buyWeapons: {\r\n        'smg weapon': 1500,\r\n        'shotgun weapon': 2750\r\n      },\r\n    },\r\n    constants: {\r\n      width: 50,\r\n      height: 180\r\n    },\r\n    variables: {\r\n      magnetism: 400,\r\n      magnetismSpeed: 1,\r\n      currentDirection: '',\r\n      lastDirection: '',\r\n      jumping: false,\r\n      jumpForce: -0.4,\r\n      defense: 0,\r\n      acceleration: {\r\n        min: 2,\r\n        max: 5\r\n      },\r\n      deceleration: 0.5\r\n    },\r\n    upgradeTiers: {\r\n      run: { min: 1, current: 1, max: 4 },\r\n      jump: { min: 1, current: 1, max: 4 },\r\n      reload: { min: 1, current: 1, max: 4 },\r\n      defense: { min: 1, current: 1, max: 4 },\r\n      melee: { min: 1, current: 1, max: 4 }\r\n    },\r\n    upgradeCosts: {\r\n      run: 200,\r\n      jump: 200,\r\n      reload: 300,\r\n      defense: 400,\r\n      melee: 400\r\n    },\r\n    upgradeAmounts: {\r\n      run: 1,\r\n      jump: -0.1,\r\n      reload: .1,\r\n      defense: 7,\r\n      melee: {\r\n        'pistol weapon': 5,\r\n        'smg weapon': 6,\r\n        'shotgun weapon': 8,\r\n      }\r\n    },\r\n    modTiers: {\r\n      rof: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      },\r\n      powder: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      },\r\n      sight: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      },\r\n      mag: {\r\n        'pistol weapon': { min: 1, current: 1, max: 4 },\r\n        'smg weapon': { min: 1, current: 1, max: 4 },\r\n        'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n      }\r\n    },\r\n    modCosts: {\r\n      rof: {\r\n        'pistol weapon': 300,\r\n        'smg weapon': 400,\r\n        'shotgun weapon': 500,\r\n      },\r\n      powder: {\r\n        'pistol weapon': 400,\r\n        'smg weapon': 550,\r\n        'shotgun weapon': 750,\r\n      },\r\n      sight: {\r\n        'pistol weapon': 200,\r\n        'smg weapon': 300,\r\n        'shotgun weapon': 300,\r\n      },\r\n      mag: {\r\n        'pistol weapon': 350,\r\n        'smg weapon': 600,\r\n        'shotgun weapon': 600,\r\n      }\r\n    },\r\n    modAmounts: {\r\n      rof: {\r\n        'pistol weapon': 20,\r\n        'smg weapon': 15,\r\n        'shotgun weapon': 25,\r\n      },\r\n      powder: {\r\n        'pistol weapon': 3,\r\n        'smg weapon': 2,\r\n        'shotgun weapon': 3,\r\n      },\r\n      sight: {\r\n        'pistol weapon': 0.0001,\r\n        'smg weapon': 0.0002,\r\n        'shotgun weapon': 0.0003,\r\n      },\r\n      mag: {\r\n        'pistol weapon': 3,\r\n        'smg weapon': 5,\r\n        'shotgun weapon': 1,\r\n      }\r\n    }\r\n  },\r\n  barriers: {\r\n    selectedBarrier: null,\r\n    costToBuild: {\r\n      'Wooden': 150,\r\n      'Stone': 250,\r\n      'Metal': 350,\r\n      'Explosive Barrel': 400\r\n    }\r\n  },\r\n  traps: {\r\n    turret: {\r\n      fireDistance: 500,\r\n      cooldown: .5\r\n    },\r\n    selectedTrap: null,\r\n    costToBuild: {\r\n      'Landmine': 250,\r\n      'Remote Mine': 400,\r\n      'Machine Gun Turret': 750,\r\n      'Cluster Bomb': 500\r\n    },\r\n  },\r\n  enemies: {\r\n    zombies: {\r\n      attackDmg: 20,\r\n      attackDmgDefault: 20,\r\n      attackIncrementer: .25,\r\n      walkSpeed: 1.5,\r\n      walkSpeedDefault: 1.5,\r\n      walkSpeedIncrementer: 0.015,\r\n      zombieAttackLimiter: 2000,\r\n      zombieAttackDefaultLimiter: 2000,\r\n      zombieAttackLimiterDecrementer: 15,\r\n      zombieAttackDistance: 150,\r\n      defaultHealth: 100,\r\n      startingHealth: 100,\r\n      healthIncrementer: .5,\r\n      onRight: 0,\r\n      onLeft: 0\r\n    }\r\n  },\r\n  consumables: {\r\n    healthkit: {\r\n      '20': { cost: 40 },\r\n      '50': { cost: 80 },\r\n      full: { cost: 150 },\r\n    }\r\n  }\r\n}","export const WEAPON_TYPE_PISTOL = 'pistol weapon'\r\nexport const WEAPON_TYPE_GRENADE = 'grenades'\r\nexport const WEAPON_TYPE_SMG = 'smg weapon'\r\nexport const WEAPON_TYPE_TURRET = 'turret weapon'\r\nexport const WEAPON_TYPE_SHOTGUN = 'shotgun weapon'\r\n\r\nexport const PISTOL_BULLET_REMOVAL_TIMEOUT = 500\r\nexport const PISTOL_SHELL_REMOVAL_TIMEOUT = 2000\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MIN = 0.0003\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MAX = 0.0007\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN = 0.5\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX = 1.0\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_GRENADE } from './constants/weapons'\r\n// import { original } from 'immer'\r\nimport initialState from '../../app/initialState'\r\n\r\nexport const AchievementDefs = {\r\n  THIS_IS_SPARTA: 'SPARTA',\r\n  FROM_DOWNTOWN: 'Downtown',\r\n  FIRE_IN_THE_HOLE: 'Triplets',\r\n  WEAPONS_COLLECTOR: 'Collector',\r\n  PISTOL_MODDER: 'P.Modder',\r\n  SMG_MODDER: 'SMG Modder',\r\n  SHOTGUN_MODDER: 'S.Modder',\r\n  MOD_AFICIONADO: 'Aficionado',\r\n  THE_JUMP_SHOT: 'Jumpshot',\r\n  PILEDRIVE: 'Piledrive',\r\n  TRAPHOUSE: 'Traphouse',\r\n  BARRICADE: 'Barricade',\r\n  MINER: 'Miner',\r\n  GUNNA: 'Gunna',\r\n}\r\n\r\nexport const StatsDefs = {\r\n  zombiesKilled: 'zombiesKilled',\r\n  bulletsFired: 'bulletsFired',\r\n  timesReloaded: 'timesReloaded',\r\n  grenadesThrown: 'grenadesThrown',\r\n  timesKilled: 'timesKilled',\r\n  timesRespawned: 'timesRespawned',\r\n  itemsPickedUp: 'itemsPickedUp',\r\n  creditsEarned: 'creditsEarned',\r\n  storePurchases: 'storePurchases',\r\n  meleeKills: 'meleeKills',\r\n  mineKills: 'mineKills',\r\n  trapsPlaced: 'trapsPlaced',\r\n  barriersPlaced: 'barriersPlaced',\r\n  turretKills: 'turretKills',\r\n  damageTaken: 'damageTaken',\r\n  damageDealt: 'damageDealt',\r\n}\r\n\r\n// for flattened data game state\r\nexport const gameSlice = createSlice({\r\n\tname: 'game',\r\n  // initialState: {},\r\n  initialState: initialState, //JSON.parse(localStorage.getItem('ZombieChamber-GameSave')) || ,\r\n\treducers: {\r\n    loadLocalStorageState: state => {\r\n      if (localStorage && localStorage.getItem('ZombieChamber-GameSave')) {\r\n        return JSON.parse(localStorage.getItem('ZombieChamber-GameSave'))\r\n      } else {\r\n        return state\r\n      }\r\n    },\r\n    setTrapTypePlaced: (state, action) => ({\r\n      ...state,\r\n      trapTypesPlaced: {\r\n        ...state.trapTypesPlaced,\r\n        [ action.payload ]: state.trapTypesPlaced[ action.payload ] ? state.trapTypesPlaced[ action.payload ] + 1 : 1\r\n      },\r\n    }),\r\n    setBarrierTypePlaced: (state, action) => ({\r\n      ...state,\r\n      barrierTypesPlaced: {\r\n        ...state.barrierTypesPlaced,\r\n        [ action.payload ]: state.barrierTypesPlaced[ action.payload ] ? state.barrierTypesPlaced[ action.payload ] + 1 : 1\r\n      }\r\n    }),\r\n    setLastMagDropped: (state, action) => {\r\n      state.lastMagDropped = action.payload\r\n    },\r\n    increaseStats: (state, action) => {\r\n      state.stats[ action.payload ] += 1\r\n    },\r\n    increaseStatsByAmount: {\r\n      reducer: (state, action) => {\r\n        state.stats[ action.payload.type ] += action.payload.amount\r\n      },\r\n      prepare: (type, amount) => ({ payload: { type, amount } })\r\n    },\r\n    setLastGrenadeKill: (state, action) => {\r\n      state.lastGrenadeKill = action.payload\r\n      state.consecutiveGrenadeKills += 1\r\n    },\r\n    resetConsecutiveGrenadeKills: state => { state.consecutiveGrenadeKills = 0 },\r\n    setZombieLastKilled: (state, action) => {\r\n      state.zombieLastKilled = action.payload\r\n    },\r\n    flipScoreToggle: state => { state.scoreToggle = !state.scoreToggle },\r\n    increaseScore: (state, action) => {\r\n      state.score += action.payload\r\n    },\r\n    decreaseScore: (state, action) => {\r\n      state.score -= action.payload\r\n    },\r\n    updatePrevScore: (state) => {\r\n      state.prevScore = state.score\r\n    },\r\n    addPurchase: {\r\n      reducer: (state, action) => {\r\n        state.purchases += 1\r\n        state.lastPurchase = action.payload\r\n      },\r\n      prepare: (item, amount) => ({ payload: { item, amount } })\r\n    },\r\n    setZombiesOnLeft: (state, action) => { state.enemies.zombies.onLeft = action.payload },\r\n    setZombiesOnRight: (state, action) => { state.enemies.zombies.onRight = action.payload },\r\n    setRightMouseDown: (state, action) => {\r\n      state.rightMouseDown = action.payload\r\n    },\r\n    attachMod: {\r\n      reducer: (state, action) => {\r\n        let { modType, wepType } = action.payload\r\n        switch (modType) {\r\n          case 'rof':\r\n          state.player.modTiers.rof[wepType].current += 1\r\n          state.player.weapons.shotLimiter[wepType] -= state.player.modAmounts.rof[wepType]\r\n          break;\r\n          case 'powder':\r\n          state.player.modTiers.powder[wepType].current += 1\r\n          state.player.weapons.damage[wepType].min += Math.round(state.player.modAmounts.powder[wepType] * .5)\r\n          state.player.weapons.damage[wepType].max += Math.round(state.player.modAmounts.powder[wepType])\r\n          break;\r\n          case 'sight':\r\n          state.player.modTiers.sight[wepType].current += 1\r\n          state.player.weapons.bulletVariance[wepType] -= state.player.modAmounts.sight[wepType]\r\n          break;\r\n          case 'mag':\r\n          state.player.modTiers.mag[wepType].current += 1\r\n          state.player.weapons.ammoCapacity[wepType] += state.player.modAmounts.mag[wepType]\r\n          break;\r\n          default:\r\n        }\r\n      },\r\n      prepare: (modType, wepType) => ({ payload: { modType, wepType } })\r\n    },\r\n    setPlayerCompositeId: (state, action) => { console.log(action.type); state.player.compositeId = action.payload },\r\n\t\tsetKeyPress: (state, action) => { state.keys.push(action.payload) },\r\n\t\tremoveKeyPress: (state, action) => { state.keys.splice(state.keys.indexOf(parseInt(action.payload)), 1) },\r\n\t\tsetLastDirection: (state, action) => { state.player.variables.lastDirection = action.payload },\r\n\t\tsetCurrentDirection: (state, action) => { state.player.variables.currentDirection = action.payload },\r\n\t\tsetJumping: (state, action) => { state.player.variables.jumping = action.payload },\r\n\t\tsetGroundId: (state, action) => { state.groundId = action.payload },\r\n\t\tsetMousePosition: (state, action) => { state.mousePosition = action.payload },\r\n\t\tsetMouseStateX: (state, action) => { state.mouseState.x = action.payload },\r\n\t\tsetMouseStateY: (state, action) => { state.mouseState.y = action.payload },\r\n\t\tsetMouseButtonState: (state, action) => { state.mouseState.btn = action.payload },\r\n\t\tsetWeaponEquipped: (state, action) => { state.player.weapons.equipped = action.payload },\r\n\t\tsetLastShot: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tlet { player: { weapons: { lastShot, equipped } } } = state\r\n\t\t\t\tlastShot[equipped] = action.payload.dateTimeObject\r\n\t\t\t},\r\n\t\t\tprepare: (weapon, dateTimeObject) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: { weapon, dateTimeObject }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetMouseRelativeToPlayerPosition: (state, action) => { state.mouseRelativeToPlayerPosition = action.payload },\r\n\t\tsetCompositeBodyIds: (state, action) => {\r\n\t\t\tstate.player.composite = action.payload\r\n\t\t},\r\n\t\tsetStaticGunAngle: (state, action) => { state.staticGunAngle = action.payload },\r\n\t\tsetStaticGunAngleState: (state, action) => { state.staticGun = action.payload },\r\n\t\tsetTexturePath: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tstate.textures[action.payload.textureName] = action.payload.texturePath\r\n\t\t\t},\r\n\t\t\tprepare: (textureName, texturePath) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttextureName,\r\n\t\t\t\t\t\ttexturePath\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgameStateTransition: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tswitch (action.payload.type) {\r\n\t\t\t\t\tcase 'sub':\r\n\t\t\t\t\tstate.lastGameSubState = action.payload.from\r\n\t\t\t\t\tstate.gameSubState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'main':\r\n\t\t\t\t\tstate.lastGameState = action.payload.from\r\n\t\t\t\t\tstate.gameState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare: (type, from, to) => ({ payload: { type, from, to } })\r\n\t\t},\r\n\t\tincrementWave: (state) => { state.waveNum += 1 },\r\n\t\tdecrementWave: (state) => { state.waveNum -= 1 },\r\n\t\tsetWaveCountToDefeat: (state, action) => { state.waveCountToDefeat = action.payload },\r\n\t\tincrementWaveCountToDefeat: (state, action) => { state.waveCountToDefeat += 1 },\r\n\t\tdecrementWaveCountToDefeat: (state, action) => {\r\n      state.waveCountToDefeat -= 1\r\n      state.zombiesOnStage -= 1\r\n    },\r\n\t\tsetWeaponsList: (state, action) => { state.player.weapons.list = action.payload },\r\n\t\tsetShowingMessage: (state, action) => { state.showingMessage = action.payload },\r\n\t\tunsetAllKeys: (state, action) => { state.keys = [] },\r\n\t\tresetPlayerVariables: state => {\r\n\t\t\tlet _state = Object.assign({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentDirection: '',\r\n\t\t\t\t\tlastDirection: '',\r\n\t\t\t\t\tjumping: false\r\n\t\t\t\t}\r\n      }, state)\r\n      state = _state\r\n\t\t},\r\n\t\tdecrementTotalAmmo: (state, action) => {\r\n\t\t\tlet { player: { weapons: { totalAmmo } } } = state\r\n\t\t\t// original() from the immer package helps us to see values in redux arrays/objects\r\n\t\t\ttotalAmmo[action.payload] -= 1\r\n    },\r\n    addToTotalAmmo: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { totalAmmo } } } = state\r\n        totalAmmo[action.payload.wepType] += action.payload.amount\r\n      },\r\n      prepare: (wepType, amount) => ({ payload: { wepType, amount } })\r\n    },\r\n    updateAmmoCapacity: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { ammoCapacity } } } = state\r\n        ammoCapacity[action.payload.wepType] = action.payload.newCapacityAmount\r\n      },\r\n      prepare: (wepType, newCapacityAmount) => ({ payload: { wepType, newCapacityAmount } })\r\n    },\r\n    setPlayerPosition: (state, action) => { state.player.position = action.payload },\r\n    addToTotalCredits: (state, action) => { state.player.credits += action.payload },\r\n    subtractFromTotalCredits: (state, action) => { state.player.credits -= action.payload },\r\n    upgradeRunSpeed: (state) => {\r\n      state.player.upgradeTiers.run.current += 1\r\n      state.player.variables.acceleration.max = state.player.variables.acceleration.max + state.player.upgradeAmounts.run\r\n    },\r\n    upgradeReloadSpeed: (state) => {\r\n      state.player.upgradeTiers.reload.current += 1\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] = state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] + state.player.upgradeAmounts.reload\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] = state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] + state.player.upgradeAmounts.reload\r\n    },\r\n    upgradeJumpForce: (state) => {\r\n      state.player.upgradeTiers.jump.current += 1\r\n      state.player.variables.jumpForce = state.player.variables.jumpForce + state.player.upgradeAmounts.jump\r\n    },\r\n    upgradeDefense: (state) => {\r\n      state.player.upgradeTiers.defense.current += 1\r\n      state.player.variables.defense = state.player.variables.defense + state.player.upgradeAmounts.defense\r\n    },\r\n    upgradeMelee: (state) => {\r\n      state.player.upgradeTiers.melee.current += 1\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_PISTOL] += state.player.upgradeAmounts.melee[WEAPON_TYPE_PISTOL]\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_SMG] += state.player.upgradeAmounts.melee[WEAPON_TYPE_SMG]\r\n    },\r\n    updatePlayerHealth: (state, action) => {\r\n      state.player.health = action.payload\r\n    },\r\n    decrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] -= 1 },\r\n    incrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] += 1 },\r\n    updateZombieWalkSpeed: (state, action) => {\r\n      let walkSpeedDefault = state.enemies.zombies.walkSpeedDefault\r\n      let incrementer = state.enemies.zombies.walkSpeedIncrementer\r\n      state.enemies.zombies.walkSpeed = walkSpeedDefault + (action.payload * incrementer)\r\n    },\r\n    updateZombieAttackDmg: (state, action) => {\r\n      state.enemies.zombies.attackDmg = Math.round(\r\n        (action.payload * state.enemies.zombies.attackIncrementer) +\r\n        state.enemies.zombies.attackDmgDefault\r\n      )\r\n    },\r\n    decrementZombieAttackTimeLimit: (state, action) => {\r\n      state.enemies.zombies.zombieAttackLimiter = state.enemies.zombies.zombieAttackDefaultLimiter - (action.payload * state.enemies.zombies.zombieAttackLimiterDecrementer)\r\n      console.log(\r\n        state.enemies.zombies.zombieAttackLimiter\r\n      )\r\n    },\r\n    showLaserSight: (state, action) => {\r\n      state.player.weapons.laser[action.payload] = true\r\n    },\r\n    incrementZombieHealth: (state, action) => {\r\n      state.enemies.zombies.startingHealth = Math.round(state.enemies.zombies.defaultHealth + (state.enemies.zombies.healthIncrementer * action.payload))\r\n    },\r\n    setSelectedBarrierToBuild: (state, action) => {\r\n      state.barriers.selectedBarrier = action.payload\r\n    },\r\n    setSelectedTrapToBuild: (state, action) => {\r\n      state.traps.selectedTrap = action.payload\r\n    },\r\n    setLastWaveCountDefeated: (state) => { state.lastWaveCountDefeated = state.waveCountToDefeat },\r\n    incrementZombiesOnStage: state => { state.zombiesOnStage += 1 },\r\n    setZombiesOnStage: (state, action) => { state.zombiesOnStage = action.payload },\r\n    updateWeaponsList: (state, action) => {\r\n      state.player.weapons.list.push(action.payload)\r\n    },\r\n    // Perks\r\n    setPlayerMagnetism: {\r\n      reducer: (state, action) => {\r\n        state.player.variables.magnetism = action.payload.range\r\n        state.player.variables.magnetismSpeed = action.payload.speed\r\n        state.player.perks.magnetism.owned = true\r\n      },\r\n      prepare: (range, speed) => ({ payload: { range, speed } })\r\n    },\r\n    setPlayerMagDamage: (state) => {\r\n      state.player.perks.magDmg.owned = true\r\n    },\r\n    setPlayerLastBullet: (state) => {\r\n      state.player.perks.lastBullet.owned = true\r\n    },\r\n    setPlayerCreditDropper: state => { state.player.perks.creditDropper.owned = true },\r\n    setPlayerAmmoDropper: state => { state.player.perks.ammoDropper.owned = true },\r\n    setPlayerHealthDropper: state => { state.player.perks.healthDropper.owned = true },\r\n    setPlayerQuickTurret: state => {\r\n      state.player.perks.quickTurret.owned = true\r\n      state.traps.turret.cooldown = .25\r\n      state.traps.turret.fireDistance = 600\r\n    },\r\n    setPlayerBarrierPlus: state => {\r\n      state.player.perks.barrierPlus.owned = true\r\n    },\r\n    setPlayerFusterCluck: state => {\r\n      state.player.perks.cluck.owned = true\r\n    },\r\n    toggleFilterEffects: (state, action) => {\r\n      state.filterEffects = action.payload\r\n    },\r\n    toggleZombieHealthDisplay: (state, action) => {\r\n      state.displayZombieHealth = action.payload\r\n    },\r\n    setAchievementOwned: (state, action) => {\r\n      state.achievements[action.payload].owned = true\r\n      state.lastAchievementEarned = action.payload\r\n    }\r\n\t},\r\n})\r\n\r\nexport const {\r\n  loadLocalStorageState,\r\n  increaseStatsByAmount,\r\n  setTrapTypePlaced,\r\n  setBarrierTypePlaced,\r\n  setLastMagDropped,\r\n  increaseStats,\r\n  setAchievementOwned,\r\n  resetConsecutiveGrenadeKills,\r\n  setLastGrenadeKill,\r\n  setZombieLastKilled,\r\n  flipScoreToggle,\r\n  updatePrevScore,\r\n  increaseScore,\r\n  decreaseScore,\r\n  toggleZombieHealthDisplay,\r\n  toggleFilterEffects,\r\n  setPlayerFusterCluck,\r\n  setPlayerBarrierPlus,\r\n  setPlayerQuickTurret,\r\n  setPlayerHealthDropper,\r\n  setPlayerAmmoDropper,\r\n  setPlayerCreditDropper,\r\n  setPlayerLastBullet,\r\n  setPlayerMagDamage,\r\n  setPlayerMagnetism,\r\n  addPurchase,\r\n  setZombiesOnLeft,\r\n  setZombiesOnRight,\r\n  setRightMouseDown,\r\n\tresetPlayerVariables,\r\n\tunsetAllKeys,\r\n\tsetPlayerCompositeId,\r\n\tsetKeyPress, removeKeyPress,\r\n\tsetLastDirection, setCurrentDirection,\r\n\tsetJumping, setGroundId, setMousePosition,\r\n\tsetMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot,\r\n\tsetWeaponEquipped,\r\n\tsetMouseRelativeToPlayerPosition,\r\n\tsetCompositeBodyIds,\r\n\tsetTexturePath,\r\n\tgameStateTransition,\r\n  incrementWave,\r\n  decrementWave,\r\n  incrementWaveCountToDefeat,\r\n\tsetWaveCountToDefeat,\r\n\tdecrementWaveCountToDefeat,\r\n\tsetWeaponsList,\r\n\tsetShowingMessage,\r\n  decrementTotalAmmo,\r\n  addToTotalAmmo,\r\n  updateAmmoCapacity,\r\n  addToTotalCredits,\r\n  subtractFromTotalCredits,\r\n  setPlayerPosition,\r\n  upgradeRunSpeed,\r\n  upgradeReloadSpeed,\r\n  upgradeJumpForce,\r\n  upgradeDefense,\r\n  upgradeMelee,\r\n  updatePlayerHealth,\r\n  attachMod,\r\n  incrementGrenadeCount,\r\n  decrementGrenadeCount,\r\n  updateZombieWalkSpeed,\r\n  updateZombieAttackDmg,\r\n  decrementZombieAttackTimeLimit,\r\n  showLaserSight,\r\n  incrementZombieHealth,\r\n  setSelectedBarrierToBuild,\r\n  setSelectedTrapToBuild,\r\n  lastWaveCountDefeated,\r\n  incrementZombiesOnStage,\r\n  setZombiesOnStage,\r\n  updateWeaponsList\r\n} = gameSlice.actions\r\n\r\nexport default gameSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport game from '../features/game/gameSlice'\r\nimport initialState from './initialState'\r\n\r\n\r\n// let persistedState = (\r\n//   localStorage && localStorage.getItem('ZombieChamber-GameSave') ? JSON.parse(localStorage.getItem('ZombieChamber-GameSave'))\r\n//   : initialState\r\n// )\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    game\r\n  },\r\n  // preloadedState: {\r\n  //   persistedState\r\n  // }\r\n})\r\n\r\nstore.subscribe(() => {\r\n  // if (localStorage) {\r\n  //   localStorage.setItem('ZombieChamber-GameSave', JSON.stringify(store.getState().game))\r\n  // }\r\n})\r\n\r\n\r\nexport default store\r\n","import * as PIXI from 'pixi.js'\r\nimport { Mouse, MouseConstraint, World, Engine, Render, Runner, Composite, Vector } from 'matter-js'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\n\r\nconst width = 1200, height = 550\r\nconst worldWidth = 6000\r\n\r\nconst { getState } = store\r\n\r\nconst { TweenLite: { to } } = window\r\n\r\nexport const applyGsapHover = pixiElt => {\r\n\tpixiElt.on('mouseover', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.05, y: 1.05 })\r\n\t})\r\n\tpixiElt.on('mouseout', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.00, y: 1.00 })\r\n\t})\r\n}\r\n\r\nexport const makePixiSprite = (stringIdentifier) => {\r\n\treturn (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\tPIXI.Texture.from(\r\n\t\t\t\tgetState().game.textures[stringIdentifier]\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport const calcBulletAngle = (position1, position2) => {\r\n  let { game: { player: { weapons: { bulletVariance, equipped, bulletForce } } } } = getState()\r\n\tlet angle = Vector.angle(position1, position2)\r\n\tlet bulletAngle = {\r\n\t\tx: Math.cos(angle) * bulletForce[equipped],\r\n\t\ty: (Math.sin(angle) * bulletForce[equipped]) + random.float(-bulletVariance[equipped], bulletVariance[equipped])\r\n\t}\r\n\treturn bulletAngle\r\n}\r\n\r\nexport const calcGrenadeAngle = (position1, position2, force) => {\r\n  let angle = Vector.angle(position1, position2)\r\n\tlet grenadeAngle = {\r\n\t\tx: Math.cos(angle) * force.x,\r\n\t\ty: Math.sin(angle) * force.y\r\n\t}\r\n\treturn grenadeAngle\r\n}\r\n\r\nexport const getBodyWidth = body => {\r\n\treturn (body.bounds.max.x - body.bounds.min.x)\r\n}\r\n\r\nexport const getBodyHeight = body => {\r\n\treturn (body.bounds.max.y - body.bounds.min.y)\r\n}\r\n\r\nexport const getPlayerPartByType = (type, gameObjects) => {\r\n\tlet {\r\n\t\tgame: {\r\n\t\t\tplayer: {\r\n\t\t\t\tcomposite: {\r\n\t\t\t\t\theadId,\r\n\t\t\t\t\tbodyId,\r\n\t\t\t\t\tarmId,\r\n\t\t\t\t\tgunId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} = getState()\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tif (type === 'head') {\r\n\t\treturn Composite.get(world, headId, 'body')\r\n\t}\r\n\tif (type === 'body') {\r\n\t\treturn Composite.get(world, bodyId, 'body')\r\n\t}\r\n\tif (type === 'arm') {\r\n\t\treturn Composite.get(world, armId, 'body')\r\n\t}\r\n\tif (type === 'gun') {\r\n\t\treturn Composite.get(world, gunId, 'body')\r\n\t}\r\n\r\n}\r\n\r\n// export const getGround = (gameObjects) => {\r\n// \tlet world = gameObjects.getKeyValue('world')\r\n// \tlet { game: { groundId } } = getState()\r\n// \treturn Composite.get(world, groundId, 'body')\r\n// }\r\n\r\nexport const getPlayerGun = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { gunId } } } } = getState()\r\n\treturn Composite.get(world, gunId, 'body')\r\n}\r\n\r\nexport const getPlayerBody = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { bodyId } } } } = getState()\r\n\treturn Composite.get(world, bodyId, 'body')\r\n}\r\n\r\nexport const getPlayerComposite = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { compositeId } } } = getState()\r\n\treturn Composite.get(world, compositeId, 'composite')\r\n}\r\n\r\nexport function setUpPixi(elementId) {\r\n\tlet app = new PIXI.Application({\r\n\t\twidth,\r\n\t\theight,\r\n\t\tantialias: false,\r\n    resolution: 1\r\n\t})\r\n\tPIXI.settings.ROUND_PIXELS = true;\r\n\tdocument.getElementById(elementId).appendChild(app.view)\r\n\t// app.view.style.opacity = .85\r\n\r\n\treturn {\r\n\t\tapp,\r\n\t\tloader: new PIXI.Loader()\r\n\t}\r\n\r\n}\r\n\r\nexport function setUpMatter(elementId, mouseConstraintBool) {\r\n\t// create engine\r\n\tlet engine = Engine.create()\r\n\tlet world = engine.world\r\n\tworld.bounds = {\r\n\t\tmin: { x: -worldWidth, y: height * -2 },\r\n\t\tmax: { x: worldWidth, y: height * 1.5 }\r\n\t}\r\n\r\n\t// create renderer\r\n\tlet render = Render.create({\r\n\t\t\telement: document.getElementById(elementId),\r\n\t\t\tengine: engine,\r\n\t\t\toptions: {\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tpixelRatio: .5\r\n\t\t\t}\r\n\t})\r\n\tRender.run(render)\r\n\r\n\t// Render.lookAt(render, {\r\n\t// \tmin: { x: 0, y: 0 },\r\n\t// \tmax: { x: width, y: height }\r\n\t// })\r\n\r\n\t// create runner\r\n\tlet runner = Runner.create()\r\n\tRunner.run(runner, engine)\r\n\r\n\tif (mouseConstraintBool) {\r\n\t\tlet mouse = Mouse.create(render.canvas)\r\n\t\tlet\tmouseConstraint = MouseConstraint.create(engine, {\r\n\t\t\tmouse: mouse,\r\n\t\t\tconstraint: {\r\n\t\t\t\tstiffness: 0.2,\r\n\t\t\t\trender: {\r\n\t\t\t\t\tvisible: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tWorld.add(world, mouseConstraint)\r\n\t\t// keep the mouse in sync with rendering\r\n\t\trender.mouse = mouse\r\n\t}\r\n\r\n\t// World.add(world, Bodies.rectangle(0,0,20,20))\r\n\r\n\treturn {\r\n\t\tengine,\r\n\t\trender,\r\n\t\trunner,\r\n\t\tworld,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tworldWidth\r\n\t\t// mouse,\r\n\t\t// mouseConstraint\r\n\t}\r\n\r\n}\r\n","export const GREATER_THAN_PLAYER_X_POS = 'greater than player x position'\r\nexport const GREATER_THAN_PLAYER_Y_POS = 'greater than player y position'\r\nexport const LESS_THAN_PLAYER_X_POS = 'less than player x position'\r\nexport const LESS_THAN_PLAYER_Y_POS = 'less than player y position'\r\nexport const MOUSE_UP = 'mouse up'\r\nexport const MOUSE_DOWN = 'mouse down'\r\n","export const playerCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const enemyCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n\r\nexport const itemCollisionOptions = {\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const gibCollisionOptions = {\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbottom: 0;\r\nmargin: auto;\r\ndisplay: block;\r\nposition: absolute;\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : 'none' };\r\n`\r\n\r\nconst Backing = styled.div`\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nopacity: ${ props => props.opacity ? props.opacity : .5 };\r\nbackground-color: ${ props => props.bgcolor ? props.bgcolor : '#222' };\r\n`\r\n\r\nconst MenuTitle = styled.div`\r\nleft: 0;\r\nright: 0;\r\ntop: 20px;\r\nwidth: 300px;\r\nmargin: auto;\r\ndisplay: block;\r\nfont-size: 2em;\r\ntext-align: center;\r\nposition: absolute;\r\n`\r\n\r\nconst MenuButtonContainer = styled.div`\r\ntop: ${ props => props['space-top'] ? props['space-top'] : 80 }px;\r\nfont-size: 1.5em;\r\ntext-align: center;\r\nposition: absolute;\r\nwidth: 100%;\r\n`\r\n\r\nconst MenuButton = styled.div`\r\nopacity: ${ props => props['opacity'] ? props['opacity'] : 1 }\r\ncolor: #fff;\r\nposition: relative;\r\nwidth: ${ props => props['width'] ? props['width'] : 200}px;\r\nheight: ${ props => props['height'] ? props['height'] : 60 }px;\r\nline-height: ${ props => props['height'] ? props['height'] : 60 }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : '#00589b' };\r\nleft: 0; right: 0;\r\ncursor: pointer;\r\nmargin: auto;\r\nborder: 2px solid ${ props => props['bordercolor'] ? props['bordercolor'] : 'rgba(0,0,0,0)' };\r\ntransform: scale(1.00);\r\n&:hover {\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transition: all .35s' };\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transform: scale(1.05)' };\r\n  background-color: ${ props => props['hovercolor'] };\r\n  border: 2px solid ${ props => props['hoverborder'] ? props['hoverborder'] : 'rgba(0,0,0,0)' };\r\n}\r\n`\r\n\r\nconst MenuButtonSpacer = styled.div`\r\npadding: ${ props => props['padding'] ? props['padding'] : 10 }px;\r\n`\r\n\r\nexport default {\r\n  Container,\r\n  Backing, \r\n  MenuTitle,\r\n  MenuButtonContainer,\r\n  MenuButton,\r\n  MenuButtonSpacer\r\n}\r\n","import { increaseScore, decreaseScore, updatePrevScore, flipScoreToggle } from '../gameSlice'\r\nimport store from '../../../app/store'\r\n\r\n\r\nexport const updateScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( increaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n\r\nexport const subtractScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( decreaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { showLaserSight, gameStateTransition, incrementWave, subtractFromTotalCredits, addPurchase, addToTotalAmmo,\r\n  upgradeRunSpeed, upgradeReloadSpeed, upgradeJumpForce, upgradeDefense, upgradeMelee, attachMod, setWeaponEquipped,\r\n  updateWeaponsList, setPlayerMagnetism, setPlayerMagDamage, setPlayerLastBullet, setPlayerCreditDropper,\r\n  setPlayerAmmoDropper, \r\n  setPlayerHealthDropper,\r\n  setPlayerQuickTurret,\r\n  setPlayerBarrierPlus,\r\n  setPlayerFusterCluck,\r\n  setAchievementOwned,\r\n  AchievementDefs} from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_GRENADE, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButton, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const Inline = styled.div`\r\ndisplay: inline-block;\r\nvertical-align: top;\r\nmargin-right: 4px;\r\n`\r\n\r\nconst IncrementDecrement = styled.div`\r\ntop: 0;\r\nwidth: 30px;\r\nheight: 30px;\r\ncolor: darkgreen;\r\nline-height: 30px;\r\ntext-align: center;\r\nposition: absolute;\r\nbackground-color: #ccc;\r\nleft: ${ props => props['left'] ? 0 : 'auto' };\r\nright: ${ props => props['right'] ? 0 : 'auto' };\r\ntransform: scale(1.0);\r\n&:hover {\r\n  transition: all;\r\n  transform: scale(1.05);\r\n  background-color: #fff;\r\n}\r\n`\r\n\r\nconst AmmoCount = styled.div`\r\ncolor: #FFF;\r\ntext-align: center;\r\n`\r\n\r\nconst UPGRADE_SUB_MENU = ' upgrade sub menu'\r\nconst PERKS_MENU = 'perks menu'\r\nconst STANDARD_MENU = 'standard menu'\r\nconst AMMO_MENU = 'ammo menu'\r\nconst HEALTHKIT_MENU = 'healthkit menu'\r\nconst BUY_NEW_WEAPONS_MENU = 'buy weapons menu'\r\nconst WEAPON_MODS_MENU = 'weapon mods menu'\r\nconst PISTOL_MODS_SUBMENU = 'pistol mods submenu'\r\nconst SMG_MODS_SUBMENU = 'smg mods submenu'\r\nconst SHOTGUN_MODS_SUBMENU = 'shotgun mods submenu'\r\nconst PLAYER_ATTRIBUTES_MENU = 'player attributes menu'\r\nconst DEFAULT_SUBMENU = 'none - default'\r\nconst PISTOL_AMMO_SUBMENU = 'pistol ammunition submenu'\r\nconst SMG_AMMO_SUBMENU = 'smg ammunition submenu'\r\nconst SHOTGUN_AMMO_SUBMENU = 'shotgun ammunition submenu'\r\nconst GRENADES_AMMO_SUBMENU = 'grenades submenu'\r\nconst ATTR_RUN_SPEED = 'run'\r\nconst ATTR_RELOAD_SPEED = 'reload'\r\nconst ATTR_JUMP_FORCE = 'jump'\r\nconst ATTR_DEFENSE = 'defense'\r\nconst ATTR_MELEE = 'melee'\r\n\r\nexport const CustomMenuButton = (props) => (\r\n  <MenuButton\r\n  opacity={ props && props.opacity ? props.opacity : 1 }\r\n  bgcolor={ props && props.bgcolor ? props.bgcolor : '#222' }\r\n  bordercolor={ props && props.bordercolor ? props.bordercolor : '#333' }\r\n  hovercolor={ props && props.hovercolor ? props.hovercolor : '#333' }\r\n  hoverborder={ props && props.hoverborder ? props.hoverborder : '#fff' }\r\n  width={ props.width }\r\n  height={ props.height }\r\n  style={ props.style }\r\n  cancelTransition={ props && props.cancelTransition ? props.cancelTransition : false }\r\n  onClick={ () => {\r\n    if (props.onClick) {\r\n      props.onClick()\r\n      let snd = window.gameObjects.getKeyValue('button-click-sound')\r\n      snd.play()\r\n    }\r\n  }}\r\n  onMouseOver={() => {\r\n    if (!props.cancelTransition) {\r\n      // let snd = window.gameObjects.getKeyValue('button-hover-sound')\r\n      // snd.play()\r\n    }\r\n  }}\r\n  >\r\n    { props.children }\r\n  </MenuButton>\r\n)\r\n\r\nexport const BackButton = props => (\r\n  <CustomMenuButton\r\n  width={ props.width ? props.width : 120 }\r\n  height={ 40 }\r\n  style={{ borderRadius: '10px' }}\r\n  bgcolor={ '#444' }\r\n  hovercolor={ '#189969' }\r\n  onClick={ props.onClick }\r\n  >\r\n    {\r\n      props.arrowOnly ?\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0;\r\n        </span>\r\n      :\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0; Back\r\n        </span>\r\n    }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const CornerBackButton = (props) => (\r\n  <div\r\n  style={{\r\n    top: 0,\r\n    right: props.right ? props.right : '20px',\r\n    marginTop: props.marginTop ? props.marginTop : '-40px',\r\n    position: 'absolute'\r\n  }}>\r\n    {\r\n      props.children\r\n      ?\r\n        props.children\r\n      :\r\n        <BackButton\r\n        onClick={ props.onClick }\r\n        width={ props.width ? props.width : 120 }\r\n        arrowOnly={ props.arrowOnly ? props.arrowOnly : false }\r\n        />\r\n    }\r\n  </div>\r\n)\r\n\r\nfunction Modal ({ label, labelClr, width, height, clickConfirmHandler, clickCancelHandler }) {\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ top: '150px' }} width={ width ? width : 500 } height={ height ? height : 300 }>\r\n        <Backing\r\n        width={ width ? width : 500 }\r\n        height={ height ? height : 300 }\r\n        bgcolor={ '#222' }\r\n        opacity={ 1.0 }\r\n        style={{\r\n          borderRadius: '2px',\r\n          boxShadow: '5px 5px rgba(0, 0, 0, 0.2)'\r\n        }}\r\n        />\r\n        <MenuTitle style={{ fontSize: '1.2em' }}>\r\n          <span\r\n          style={{\r\n            color: labelClr\r\n          }}>\r\n          {\r\n            label\r\n          }\r\n          </span>\r\n        </MenuTitle>\r\n        <MenuButtonContainer space-top={ 200 }>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ 'red' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              marginRight: '12px',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickCancelHandler}>\r\n            Nope.\r\n          </MenuButton>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ '#189969' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickConfirmHandler}>\r\n            Confirm\r\n          </MenuButton>\r\n        </MenuButtonContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction AmmoSubMenu ({ type, toDefaultSubMenu, toAmmoSubMenu, toStandardMenu }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const ammoCostPerBox = useSelector(state => state.game.player.weapons.ammoCostPerBox)\r\n  const ammoCap = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const ammoReducer = (ammo, action) => {\r\n    switch (action.type) {\r\n      case 'INCREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] + action.amount\r\n        }\r\n      case 'DECREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] - action.amount\r\n        }\r\n      case 'SET':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: action.amount\r\n        }\r\n      default:\r\n        return ammo\r\n    }\r\n  }\r\n  const [ammoInCart, dispatchAmmoInCart] = React.useReducer(ammoReducer, {\r\n    'pistol weapon': 0,\r\n    'smg weapon': 0,\r\n    'grenades': 0,\r\n    'shotgun weapon': 0\r\n  })\r\n  const [dollarCost, setDollarCost] = React.useState(0)\r\n\r\n  return (\r\n    <>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={ '#28934C' }\r\n        width={100}\r\n        height={30}\r\n        style={{\r\n          borderRadius: '4px',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        { `$${ dollarCost }` }\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        width={150}\r\n        height={ 30 }\r\n        bgcolor={ '#444' }\r\n      >\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] - ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (ammoInCart[type] > 0) {\r\n              dispatchAmmoInCart({ type: 'DECREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-subtract-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          left={true}>\r\n            <span style={{ fontWeight: 'bold' }}>-</span>\r\n        </IncrementDecrement>\r\n        <AmmoCount>{ ammoInCart[type] }</AmmoCount>\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] + ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (credits >= cost) {\r\n              dispatchAmmoInCart({ type: 'INCREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-add-sound')\r\n              snd.play()\r\n            } else {\r\n              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          right={true}>\r\n            <span style={{ fontWeight: 'bold' }}>+</span>\r\n         </IncrementDecrement>\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={'rgba(0,0,0,0)'}\r\n        height={30}\r\n        >\r\n          <div style={{ display: 'inline-block', marginRight: '4px' }}>\r\n            <CustomMenuButton\r\n              onClick={ () => {\r\n                toDefaultSubMenu()\r\n                dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                setDollarCost(0)\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }}\r\n              width={80}\r\n              height={30}\r\n              hoverborder={'#B00000'}\r\n              >\r\n              Cancel\r\n            </CustomMenuButton>\r\n          </div>\r\n          <div style={{ display: 'inline-block' }}>\r\n            {\r\n              dollarCost > 0 ?\r\n              <CustomMenuButton\r\n                onClick={ () => {\r\n                  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n                  batch(() => {\r\n                    dispatch( subtractFromTotalCredits( dollarCost ) )\r\n                    dispatch( addPurchase(type !== WEAPON_TYPE_GRENADE ? `${type} ammo` : dollarCost > ammoCostPerBox[type] ? type : 'a grenade', dollarCost) )\r\n                    dispatch( addToTotalAmmo( type, ammoInCart[type] ) )\r\n                  })\r\n                  dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                  if (type === WEAPON_TYPE_GRENADE) {\r\n                    weaponsUI.updateGrenadeIcons()\r\n                  } else {\r\n                    weaponsUI.select(type)\r\n                    dispatch( setWeaponEquipped(type) )\r\n                    weaponsUI.reload(true)\r\n                  }\r\n                  setDollarCost(0)\r\n                  toDefaultSubMenu()\r\n                }}\r\n                width={100}\r\n                height={30}\r\n                hoverborder={'#189969'}\r\n                >\r\n                Buy\r\n              </CustomMenuButton>\r\n              : null\r\n            }\r\n          </div>\r\n      </MenuButton>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PlayerAttributesMenuButton = ({ type, toDefaultSubMenu, subMenuType, setSubMenuType, toStandardMenu }) => {\r\n\r\n  const upgradeTiers = useSelector(state => state.game.player.upgradeTiers)\r\n  const upgradeCosts = useSelector(state => state.game.player.upgradeCosts)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const dispatch = useDispatch()\r\n  const upgradeTypes = {\r\n    'run': upgradeRunSpeed,\r\n    'jump': upgradeJumpForce,\r\n    'reload': upgradeReloadSpeed,\r\n    'defense': upgradeDefense,\r\n    'melee': upgradeMelee\r\n  }\r\n  const getAttrName = type => {\r\n    switch (type) {\r\n      case 'run':\r\n        return 'Run Speed'\r\n      case 'jump':\r\n        return 'Jump Height'\r\n      case 'reload':\r\n        return 'Reload Speed'\r\n      case 'defense':\r\n        return 'Defense'\r\n      case 'melee':\r\n        return 'Melee Attack Power'\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n      {\r\n        subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1\r\n        ?\r\n          subMenuType === type + UPGRADE_SUB_MENU\r\n          ?\r\n            <Modal\r\n              label={`Upgrade ${ getAttrName(type) } to lvl. ${ upgradeTiers[type].current + 1 }?`}\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( upgradeCosts[type] ) )\r\n                dispatch( addPurchase(`${getAttrName(type)} Boost`, upgradeCosts[type]) )\r\n                dispatch( upgradeTypes[type]() )\r\n                toDefaultSubMenu()\r\n              }}\r\n              clickCancelHandler={() => {\r\n                toDefaultSubMenu()\r\n              }}\r\n              />\r\n          : null\r\n        :\r\n        <>\r\n          <CustomMenuButton\r\n            width={getAttrName(type).length > 14 ? 340 : 240 }\r\n            onClick={() => {\r\n              if (credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max) {\r\n                setSubMenuType( type + UPGRADE_SUB_MENU )\r\n              } else {\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }\r\n            }}>\r\n            { getAttrName(type) } { upgradeTiers[type].current !== upgradeTiers[type].max ? 'Lvl.' : '' }{ upgradeTiers[type].current !== upgradeTiers[type].max ? upgradeTiers[type].current + 1 : '' } - <span style={{ color: credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max ? '#189969' : 'red' }}>\r\n            {\r\n              upgradeTiers[type].current < upgradeTiers[type].max\r\n              ? `$${upgradeCosts[type]}`\r\n              : 'MAXED'\r\n            }</span>\r\n          </CustomMenuButton>\r\n          <br/>\r\n        </>\r\n      }\r\n  </>\r\n  )\r\n}\r\n\r\nfunction ModSubMenu ({ type, setSubMenuType }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const modTiers = useSelector(state => state.game.player.modTiers)\r\n  const modCosts = useSelector(state => state.game.player.modCosts)\r\n  const ammoCapacity = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const getWepText = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        return 'Pistol'\r\n      case WEAPON_TYPE_SMG:\r\n        return 'SMG'\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        return 'SHOTGUN'\r\n      default:\r\n    }\r\n  }\r\n  let wepTxt = getWepText(type)\r\n  const getModDescription = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'RATE OF FIRE MAXED!' : 'Upgrade Rate-of-Fire'\r\n      case 'powder':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'FIREPOWER MAXED!' : 'Increase Firepower'\r\n      case 'sight':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'ACCURACY MAXED!' : 'Upgrade Accuracy'\r\n      case 'mag':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'AMMO CAP MAXED!' : 'Increase Ammo Capacity'\r\n      default:\r\n    }\r\n  }\r\n  const mods = ['rof', 'powder', 'sight', 'mag']\r\n  const [selectedMod, setSelectedMod] = React.useState(null)\r\n  const [selectedType, setSelectedType] = React.useState(null)\r\n  const modPurchaseName = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return `Rate of fire boost for the ${type}`\r\n      case 'powder':\r\n        return `Firepower boost for the ${type}`\r\n      case 'sight':\r\n        return `Accuracy boost for the ${type}`\r\n      case 'mag':\r\n        return `Magazine ammo capacity boost for the ${type}`\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Inline style={{ marginLeft: '40px' }}>\r\n        {\r\n          selectedMod && selectedType ?\r\n          <>\r\n            <Modal\r\n              label={`${getWepText(selectedType)} ${ getModDescription(selectedMod, selectedType) } lvl.${ modTiers[selectedMod][selectedType].current + 1 }?`}\r\n              labelClr={ modTiers[selectedMod][selectedType].current === modTiers[selectedMod][selectedType].max ? 'red' : 'white' }\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( modCosts[selectedMod][selectedType] ) )\r\n                dispatch( addPurchase(modPurchaseName(selectedMod, selectedType), modCosts[selectedMod][selectedType]) )\r\n                dispatch( attachMod(selectedMod, selectedType) )\r\n                if (selectedMod === 'mag') {\r\n                  dispatch( addToTotalAmmo(selectedType, ammoCapacity[selectedType]) )\r\n                  let wepUI = gameObjects.getKeyValue('weapons-ui')\r\n                  wepUI.updateWeaponMagazines(selectedType)\r\n                }\r\n                if (selectedMod === 'sight') {\r\n                  dispatch( showLaserSight(selectedType) )\r\n                }\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n              clickCancelHandler={() => {\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n            />\r\n          </>\r\n          :\r\n          mods.map((mod, i) => (\r\n            <React.Fragment key={i}>\r\n              <CustomMenuButton onClick={() => {\r\n                if (credits >= modCosts[mod][type] && modTiers[mod][type].current < modTiers[mod][type].max) {\r\n                  setSelectedMod(mod)\r\n                  setSelectedType(type)\r\n                } else {\r\n                  let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                  snd.play()\r\n                }\r\n              }} width={520}>{wepTxt}: {getModDescription(mod, type)} { modTiers[mod][type].current === modTiers[mod][type].max ? '' : ' - lvl.' } { modTiers[mod][type].current < modTiers[mod][type].max ? modTiers[mod][type].current + 1 : '' }{ modTiers[mod][type].current < modTiers[mod][type].max ? '-' : '' }<span style={{ color: credits >= modCosts[mod][type] && modTiers[mod][type].current !== modTiers[mod][type].max ? '#189969' : 'red' }}>\r\n                {`\r\n                  ${\r\n                    modTiers[mod][type].current === modTiers[mod][type].max ?\r\n                    '' : `$${ modCosts[mod][type] }`\r\n                  }`\r\n                }\r\n                </span>\r\n              </CustomMenuButton>\r\n              <br/>\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </Inline>\r\n      {\r\n        !selectedMod && !selectedType ?\r\n        <Inline>\r\n          <CustomMenuButton\r\n          onClick={ () => { setSubMenuType(DEFAULT_SUBMENU) }}\r\n          width={80}\r\n          height={30}\r\n          hoverborder={'red'}\r\n          style={{\r\n            marginLeft: '10px'\r\n          }}\r\n          >\r\n            close\r\n          </CustomMenuButton>\r\n        </Inline>\r\n        : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ShopMenu () {\r\n\r\n  const [menuType, setMenuType] = React.useState(STANDARD_MENU)\r\n  const [subMenuType, setSubMenuType] = React.useState(DEFAULT_SUBMENU)\r\n\r\n  const dispatch = useDispatch()\r\n  const game = useSelector(state => state.game)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const { gameObjects } = window\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const player = gameObjects.getKeyValue('player')\r\n\r\n  // const continueToNextWave = () => {\r\n  //   screenUI.unpause()\r\n  //   dispatch(incrementWave())\r\n  //   dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n  //   dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  // }\r\n\r\n  const toDefaultSubMenu = () => {\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const toAmmoMenu = () => {\r\n    setMenuType( AMMO_MENU )\r\n  }\r\n  \r\n  const toHealthkitMenu = () => {\r\n    setMenuType( HEALTHKIT_MENU )\r\n  }\r\n\r\n  const toPlayerAttrMenu = () => {\r\n    setMenuType( PLAYER_ATTRIBUTES_MENU )\r\n  }\r\n\r\n  const backToStandardMenu = () => {\r\n    setMenuType( STANDARD_MENU )\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const openAmmoSubMenu = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        setSubMenuType( PISTOL_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SMG:\r\n        setSubMenuType( SMG_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        setSubMenuType( SHOTGUN_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_GRENADE:\r\n        setSubMenuType( GRENADES_AMMO_SUBMENU )\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  const toWeaponModsMenu = () => {\r\n    setMenuType( WEAPON_MODS_MENU )\r\n  }\r\n\r\n  const toNewWeaponsMenu = () => {\r\n    setMenuType( BUY_NEW_WEAPONS_MENU )\r\n  }\r\n\r\n  const getHealthkitCostStyle = (kitType) => {\r\n    let condition = (\r\n      game.player.credits > game.consumables.healthkit[kitType].cost &&\r\n      game.player.health < 100\r\n    )\r\n    return {\r\n      color: condition ? '#189969' : 'red',\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (menuType === BUY_NEW_WEAPONS_MENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1) {\r\n      dispatch(\r\n        setAchievementOwned( AchievementDefs.WEAPONS_COLLECTOR )\r\n      )\r\n      updateScore( game.scoreAmounts.achievement )\r\n      backToStandardMenu()\r\n    }\r\n\r\n  }, [ game.player.weapons.list, menuType ])\r\n\r\n  React.useEffect(() => {\r\n\r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.PISTOL_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SMG].current === game.player.modTiers['rof'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SMG].current === game.player.modTiers['powder'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SMG].current === game.player.modTiers['sight'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SMG].current === game.player.modTiers['mag'][WEAPON_TYPE_SMG].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SMG_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SHOTGUN_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n      if (\r\n        game.achievements[ AchievementDefs.PISTOL_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SMG_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SHOTGUN_MODDER ].owned\r\n        ) {\r\n          dispatch(\r\n            setAchievementOwned( AchievementDefs.MOD_AFICIONADO )\r\n          )\r\n          updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n  }, [ game.player.modTiers ])\r\n\r\n  return (\r\n    <>\r\n      <Container width={ w * .75 } height={ h * .75 }>\r\n          <Backing width={ w * .75 } height={ h * .75 }/>\r\n          <MenuTitle>Shop</MenuTitle>\r\n          <MenuButtonContainer width={ w }>\r\n            {\r\n              menuType === STANDARD_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton width={350} onClick={ () => { toAmmoMenu() } }>Buy Ammo &amp; Grenades</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toHealthkitMenu() } }>Buy Health Kits</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { setMenuType(PERKS_MENU) } }>Perks</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toPlayerAttrMenu() } }>Upgrade Player</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toWeaponModsMenu() } }>Weapon Mods</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    null\r\n                    :\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={ () => { toNewWeaponsMenu() } }>Buy New Weapons</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ backToShopQuery }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === AMMO_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === PISTOL_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_PISTOL }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_PISTOL) } }>\r\n                          Buy Pistol Ammo\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SMG_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SMG }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SMG) } }>\r\n                            Buy SMG Ammo\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === GRENADES_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_GRENADE }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_GRENADE) } }>\r\n                          Buy Grenades\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SHOTGUN_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SHOTGUN }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SHOTGUN) } }>\r\n                            Buy Shotgun Shells\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton\r\n                    onClick={ () => { backToStandardMenu() } }>\r\n                  </BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === HEALTHKIT_MENU ?\r\n              <>\r\n              <MenuButtonSpacer>\r\n                <Inline>\r\n                  <MenuButtonSpacer>\r\n                    <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={() => {\r\n                        let amount\r\n                        if (game.player.health < 100) {\r\n                          if (game.player.health + 20 > 100) { amount = 100 }\r\n                          else { amount = game.player.health + 20 }\r\n                          player.acceptHealth( amount )\r\n                          dispatch( subtractFromTotalCredits(game.consumables.healthkit['20'].cost) )\r\n                          dispatch( addPurchase('+20 Healthkit', game.consumables.healthkit['20'].cost) )\r\n                          let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                          snd.play()\r\n                        } else {\r\n                          let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                          snd.play()\r\n                        }\r\n                      }}>+20 Healthkit - <span\r\n                      style={ getHealthkitCostStyle('20') }\r\n                      >\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['20'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                        width={ 300 }\r\n                        onClick={() => {\r\n                          let amount\r\n                          if (game.player.health < 100) {\r\n                            if (game.player.health + 50 > 100) { amount = 100 }\r\n                            else { amount = game.player.health + 50 }\r\n                            player.acceptHealth( amount )\r\n                            dispatch( subtractFromTotalCredits(game.consumables.healthkit['50'].cost) )\r\n                            dispatch( addPurchase('+50 Healthkit', game.consumables.healthkit['50'].cost) )\r\n                            let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                            snd.play()\r\n                          } else {\r\n                            let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>+50 Healthkit - <span\r\n                        style={ getHealthkitCostStyle('50') }>\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['50'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <CustomMenuButton\r\n                    width={ 300 }\r\n                    onClick={() => {\r\n                      if (game.player.health < 100) {\r\n                        player.acceptHealth( 100 )\r\n                        dispatch( subtractFromTotalCredits(game.consumables.healthkit['full'].cost) )\r\n                        dispatch( addPurchase('Full Healthkit', game.consumables.healthkit['full'].cost) )\r\n                      let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                        snd.play()\r\n                      } else {\r\n                        let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                        snd.play()\r\n                      }\r\n                    }}>Full Healthkit - <span\r\n                    style={ getHealthkitCostStyle('full') }>\r\n                    { game.player.health < 100 ? `${game.consumables.healthkit['full'].cost}` : 'Health Full' }\r\n                    </span>\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ () => { backToStandardMenu() } }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PLAYER_ATTRIBUTES_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RUN_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_JUMP_FORCE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RELOAD_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_DEFENSE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_MELEE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1 ? null                  \r\n                    :\r\n                    <MenuButtonSpacer>\r\n                      <BackButton\r\n                        onClick={ () => {\r\n                          backToStandardMenu()\r\n                        }}>\r\n                          Back\r\n                      </BackButton>\r\n                    </MenuButtonSpacer>\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PERKS_MENU ?\r\n              <>\r\n                <div\r\n                onClick={() => {\r\n                  setMenuType(STANDARD_MENU)\r\n                }}\r\n                style={{\r\n                  top: 0,\r\n                  right: '20px',\r\n                  marginTop: '-40px',\r\n                  position: 'absolute'\r\n                }}>\r\n                  <BackButton\r\n                  width={50}\r\n                  arrowOnly={true}\r\n                  />\r\n                </div>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['magnetism'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='increase-magnetism'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magnetism'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magnetism'].cost) )\r\n                            dispatch( setPlayerMagnetism(1200, 4) )\r\n                            dispatch( addPurchase('Magnetism perk', game.player.perks['magnetism'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Increase Magnetism\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magnetism'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magnetism'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='increase-magnetism' type='dark'>\r\n                        <span>\r\n                          Will increase the effect of items being drawn to you for easy pick up\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['magDmg'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='mag-damage'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magDmg'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magDmg'].cost) )\r\n                            dispatch( setPlayerMagDamage() )\r\n                            dispatch( addPurchase('Mag Damage perk', game.player.perks['magDmg'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Magazine Damage\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magDmg'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magDmg'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='mag-damage' type='dark'>\r\n                        <span>\r\n                          Ejected magazines will damage enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['lastBullet'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='last-bullet'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['lastBullet'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['lastBullet'].cost) )\r\n                            dispatch( setPlayerLastBullet() )\r\n                            dispatch( addPurchase('Last Bullet Extra Damage perk', game.player.perks['lastBullet'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Last Round\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['lastBullet'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['lastBullet'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='last-bullet' type='dark'>\r\n                        <span>\r\n                          Last bullet fired will cause greater damage to enemies \r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['creditDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='credit-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['creditDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['creditDropper'].cost) )\r\n                            dispatch( setPlayerCreditDropper() )\r\n                            dispatch( addPurchase('Credit Dropper perk', game.player.perks['creditDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Credit Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['creditDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['creditDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='credit-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will drop more credits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['ammoDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='ammo-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['ammoDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['ammoDropper'].cost) )\r\n                            dispatch( setPlayerAmmoDropper() )\r\n                            dispatch( addPurchase('Ammo Dropper perk', game.player.perks['ammoDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Ammo Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['ammoDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['ammoDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='ammo-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop ammunition\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['healthDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='health-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['healthDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['healthDropper'].cost) )\r\n                            dispatch( setPlayerHealthDropper() )\r\n                            dispatch( addPurchase('Health Dropper perk', game.player.perks['healthDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Health Dropper\r\n                          <span\r\n                              style={{\r\n                                color: (\r\n                                  credits >= game.player.perks['healthDropper'].cost ? 'green' : 'red'\r\n                                )\r\n                              }}>\r\n                                &nbsp;${game.player.perks['healthDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='health-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop small health kits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['quickTurret'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='quick-turret'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['quickTurret'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['quickTurret'].cost) )\r\n                            dispatch( setPlayerQuickTurret() )\r\n                            dispatch( addPurchase('Turret Upgrade perk', game.player.perks['quickTurret'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Quick Turrets\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['quickTurret'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['quickTurret'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='quick-turret' type='dark'>\r\n                        <span>\r\n                          Any placed machine gun turrets will now have less delay between fired shots and slightly more range\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['barrierPlus'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='barrier-plus'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['barrierPlus'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['barrierPlus'].cost) )\r\n                            dispatch( setPlayerBarrierPlus() )\r\n                            dispatch( addPurchase('Barrier Plus+ perk', game.player.perks['barrierPlus'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Barrier Plus\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['barrierPlus'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['barrierPlus'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='barrier-plus' type='dark'>\r\n                        <span>\r\n                          Placed barriers will now have increased strength to ward of oncoming enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['cluck'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='big-cluster'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['cluck'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['cluck'].cost) )\r\n                            dispatch( setPlayerFusterCluck() )\r\n                            dispatch( addPurchase('Fuster Cluck perk', game.player.perks['cluck'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Fuster Cluck\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['cluck'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['cluck'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='big-cluster' type='dark'>\r\n                        <span>\r\n                          Cluster bombs will now expel more explosives\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === BUY_NEW_WEAPONS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                            if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) {\r\n                              batch(() => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) )\r\n                                dispatch(\r\n                                  addPurchase('Submachine Gun', game.player.weapons.buyWeapons[WEAPON_TYPE_SMG])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SMG) )\r\n                              })\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                         Buy Submachine Gun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                          if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) {\r\n                            batch(\r\n                              () => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) )\r\n                                dispatch(\r\n                                  addPurchase('Shotgun', game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SHOTGUN) )\r\n                              }\r\n                              )\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                        Buy Shotgun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={() => { backToStandardMenu() }} />\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === WEAPON_MODS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer style={{ marginTop: '-15px' }}>\r\n                  {\r\n                    subMenuType === PISTOL_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_PISTOL} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SMG_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SMG} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SHOTGUN_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SHOTGUN} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === DEFAULT_SUBMENU ?\r\n                    <>\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={() => { setSubMenuType(PISTOL_MODS_SUBMENU) }}>Pistol Mods</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                      {\r\n                         game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SMG_MODS_SUBMENU) }}>SMG Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null \r\n                      }\r\n                      {\r\n                        game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SHOTGUN_MODS_SUBMENU) }}>Shotgun Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null\r\n                      }\r\n                      <MenuButtonSpacer style={{ marginTop: '40px' }}>\r\n                        <BackButton onClick={ backToStandardMenu }>Back</BackButton>\r\n                      </MenuButtonSpacer>\r\n                    </>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n          </MenuButtonContainer>\r\n        </Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport MenuComponents from './MenuComponents'\r\nimport { BackButton, CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\n\r\nexport default ({ backBtnFn }) => {\r\n\r\n  const { gameObjects } = window\r\n  const state = useSelector(state => state)\r\n  let achievementsKeys = Object.keys(state.game.achievements)\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container\r\n      width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n      height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n      >\r\n        <MenuComponents.Backing\r\n        width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n        height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n        ></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>Achievements</MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n            {\r\n              achievementsKeys.map(key => {\r\n                if (state.game.achievements[key].owned) {\r\n                  return (\r\n                    <React.Fragment key={key}>\r\n                    <Inline>\r\n                      <MenuComponents.MenuButtonSpacer data-tip data-for={key+'-description'}>\r\n                        <CustomMenuButton>\r\n                          {key}\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                    <ReactTooltip id={key+'-description'}>\r\n                      <span>\r\n                        Earned by: {state.game.achievements[key].description}\r\n                      </span>\r\n                    </ReactTooltip>\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n          <CornerBackButton marginTop={'-60px'} onClick={ backBtnFn } />\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { makePixiSprite } from '../utils/Utils'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { decrementTotalAmmo, setWeaponEquipped } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport GameStates from '../constants/GameStates'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow'\r\n \r\nconst { getState, dispatch } = store\r\n\r\nconst { TweenLite: { to, from } } = window\r\n\r\nexport default function WeaponsUI () {\r\n\tlet { gameObjects } = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tlet pistolIcon = makePixiSprite('weapon-ui-icon-pistol')\r\n\tlet smgIcon = makePixiSprite('weapon-ui-icon-smg')\r\n\tlet shotgunIcon = makePixiSprite('weapon-ui-icon-shotgun')\r\n  let icons = []\r\n\r\n  let mags\r\n  \r\n  let weaponShadow = new DropShadowFilter({ distance: 3.0, alpha: 1.0 })\r\n  let bulletShadow = new DropShadowFilter({ distance: 1.0, alpha: 2.0 })\r\n\r\n  let iconBG = new PIXI.Graphics()\r\n  iconBG.beginFill(0x425041)\r\n  iconBG.drawRect(0, 0, 120, 90)\r\n  iconBG.alpha = .65\r\n  iconBG.position.x = gameWidth - iconBG.width - 20\r\n  iconBG.position.y = gameHeight - iconBG.height - 20\r\n  // iconBG.filters = [ bulletShadow ]\r\n  container.addChild(iconBG)\r\n\r\n\tpistolIcon.width = pistolIcon.width/2\r\n\tpistolIcon.height = pistolIcon.height/2\r\n\ticons.push(pistolIcon)\r\n\r\n\tsmgIcon.width = smgIcon.width/2\r\n\tsmgIcon.height = smgIcon.height/2\r\n  icons.push(smgIcon)\r\n  \r\n  shotgunIcon.width = shotgunIcon.width/2\r\n\tshotgunIcon.height = shotgunIcon.height/2\r\n  icons.push(shotgunIcon)\r\n\r\n\ticons.forEach(icon => {\r\n\t\ticon.position.x = gameWidth - (icon.width + 20)\r\n\t\ticon.position.y = gameHeight - (icon.height + 10)\r\n    icon.alpha = 0\r\n    // icon.filters = [ weaponShadow ]\r\n\t\tcontainer.addChild(icon)\r\n  })\r\n\r\n  this.keepOnTop = () => {\r\n    container.addChild(iconBG)\r\n    icons.forEach(icon => { container.addChild(icon) })\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL]\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG]\r\n    )\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    )\r\n    .forEach(b => { container.addChild(b) })\r\n    this.grenades.forEach(g => { container.addChild(g) })\r\n    if (this.shaking && !this.reloading) {\r\n      container.addChild(this.emptyText)\r\n    }\r\n  }\r\n  setInterval(this.keepOnTop, 1000)\r\n\r\n  let magazinesByWeaponType = {\r\n\t\t'pistol weapon': null,\r\n\t\t'smg weapon': null,\r\n\t\t'shotgun weapon': null,\r\n  }\r\n\r\n  let bulletMask = new PIXI.Graphics()\r\n  bulletMask.beginFill(0xffffff)\r\n  bulletMask.drawRect(pistolIcon.position.x, pistolIcon.position.y, pistolIcon.width, pistolIcon.height)\r\n  container.addChild(bulletMask)\r\n\r\n  if (!window.gameObjects.getKeyValue('bullet-shell-bevel-ui')) {\r\n    window.gameObjects.setKeyValue('bullet-shell-bevel-ui', new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 }))\r\n  }\r\n  let bulletBevel = window.gameObjects.getKeyValue('bullet-shell-bevel-ui')\r\n\r\n  let makePistolMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL] = magazinesByWeaponType[WEAPON_TYPE_PISTOL].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xBFA522)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 27 - pistolIcon.width/magazinesByWeaponType[WEAPON_TYPE_PISTOL].length * i\r\n      bulletGfc.position.y = pistolIcon.position.y + pistolIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeSMGMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG] = magazinesByWeaponType[WEAPON_TYPE_SMG].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xCEC182)\r\n      bulletGfc.drawRect(0, 0, 2, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5 })\r\n      // bulletGfc.filters = [ bevel ]\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 24 - smgIcon.width/magazinesByWeaponType[WEAPON_TYPE_SMG].length * i\r\n      bulletGfc.position.y = smgIcon.position.y + smgIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeShotgunMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN] = magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x3E1313)\r\n      bulletGfc.beginFill(0xB00000)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      bulletGfc.beginFill(0xBCA845)\r\n      bulletGfc.drawRect(0, 8, 4, 3)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .25 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 32 - shotgunIcon.width/magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].length * i\r\n      bulletGfc.position.y = shotgunIcon.position.y + shotgunIcon.height - 26\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      // SMG bullets too small for bevel filter\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [ bulletBevel ] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [ bulletBevel ] })\r\n      if (this.grenades && this.gbevel && this.gnoise) {\r\n        this.grenades.forEach(g => { g.filters = [ this.gbevel, this.gnoise ] })\r\n      }\r\n    } else {\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [] })\r\n      if (this.grenades) {\r\n        this.grenades.forEach(g => { g.filters = [] })\r\n      }\r\n    }\r\n  }\r\n  \r\n  let makeMagByType = {\r\n    'pistol weapon': makePistolMag,\r\n    'smg weapon': makeSMGMag,\r\n    'shotgun weapon': makeShotgunMag,\r\n  }\r\n\r\n\tlet weaponIcons = {\r\n\t\t'pistol weapon': pistolIcon,\r\n\t\t'smg weapon': smgIcon,\r\n\t\t'shotgun weapon': shotgunIcon,\r\n  }\r\n\r\n  this.updateMagazine = type => {\r\n    let { game: { player: { weapons: { ammoCapacity } } } } = getState()\r\n    if (magazinesByWeaponType[type]) {\r\n      magazinesByWeaponType[type].forEach(b => { b.destroy() })\r\n      magazinesByWeaponType[type] = null\r\n    }\r\n    magazinesByWeaponType[type] = new Array(ammoCapacity[type]).fill(1)\r\n    makeMagByType[type]()\r\n  }\r\n\r\n  // initialize magazines\r\n  this.updateMagazine(WEAPON_TYPE_PISTOL)\r\n  this.updateMagazine(WEAPON_TYPE_SMG)\r\n  this.updateMagazine(WEAPON_TYPE_SHOTGUN)\r\n  mags = [\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n  ]\r\n\r\n  this.swapSwap = (wep) => {\r\n    let { list, equipped } = getState().game.player.weapons\r\n    magazineIndexes[wep] = 0\r\n    let idx = list.indexOf(wep)\r\n    if (idx > -1) {\r\n      this.select(\r\n        list[idx + 1] ?\r\n        list[idx + 1] :\r\n        list[0]\r\n      )\r\n    }\r\n    window.TweenLite.delayedCall(.05, () => {\r\n      this.select(equipped)\r\n    })\r\n  }\r\n\r\n  this.updateWeaponMagazines = wep => {\r\n    let { list } = getState().game.player.weapons\r\n    mags.forEach(mag => { mag.forEach(b => { container.removeChild(b) }) })\r\n    list.forEach(wep => { this.updateMagazine(wep) })\r\n    mags = [\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    ]\r\n    this.reload(true)\r\n    dispatch( setWeaponEquipped(wep) )\r\n    this.swapSwap(wep) // switch to another weapon, the switch back to correct the ammo display\r\n  }\r\n\r\n\tlet magazineIndexes = {\r\n\t\t'pistol weapon': 0,\r\n\t\t'smg weapon': 0,\r\n\t\t'shotgun weapon': 0,\r\n\t}\r\n\r\n\tlet magEmptyBools = {\r\n\t\t'pistol weapon': false,\r\n\t\t'smg weapon': false,\r\n\t\t'shotgun weapon': false,\r\n  }\r\n\r\n  this.checkEmpty = weapon_str => magEmptyBools[weapon_str]\r\n  \r\n  const doTheWiggle = (icon, defaultPos, callback) => {\r\n    to(icon, .1, {\r\n      x: defaultPos + 10,\r\n      onComplete: () => {\r\n        to(icon, .1, {\r\n          x: defaultPos - 10,\r\n          onComplete: () => {\r\n            to(icon, .1, {\r\n              x: defaultPos + 5,\r\n              onComplete: () => {\r\n                to(icon, .1, {\r\n                  x: defaultPos - 5,\r\n                  onComplete: () => {\r\n                    to(icon, .1, {\r\n                      x: defaultPos + 3,\r\n                      onComplete: () => {\r\n                        to(icon, .1, {\r\n                          x: defaultPos - 2,\r\n                          onComplete: () => {\r\n                            to(icon, .1, {\r\n                              x: defaultPos + 1,\r\n                              onComplete: () => {\r\n                                to(icon, .1, {\r\n                                  x: defaultPos,\r\n                                  onComplete: () => {\r\n                                    this.shaking = false\r\n                                    callback()\r\n                                  }\r\n                                })\r\n                              }\r\n                            })\r\n                          }\r\n                        })\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  this.textForEmptyShake = 'RELOAD'\r\n  this.changeTextForEmptyShake = str => {\r\n    this.textForEmptyShake = str\r\n    this.emptyText.text = str\r\n  }\r\n\r\n  this.emptyText = new PIXI.Text(this.textForEmptyShake, { fill: 0xB00000, fontSize: '15px', fontWeight: 'bold' })\r\n  this.emptyText.pivot.x = this.emptyText.width * .5\r\n  this.emptyText.pivot.y = this.emptyText.height * .5\r\n  this.emptyText.position.x = iconBG.position.x + iconBG.width * .5\r\n  this.emptyText.position.y = iconBG.position.y + iconBG.height * .8\r\n  this.removeEmptyText = () => {\r\n    container.removeChild(this.emptyText)\r\n  }\r\n\r\n  this.shaking = false\r\n  this.emptyMagShake = () => {\r\n    container.addChild(this.emptyText)\r\n    if (!this.shaking) {\r\n      this.shaking = true\r\n      icons.forEach(icon => {\r\n        let defaultPos = icon.position.x\r\n        doTheWiggle(icon, defaultPos, this.removeEmptyText)\r\n      })\r\n      doTheWiggle(iconBG, iconBG.position.x, this.removeEmptyText)\r\n    }\r\n  }\r\n\r\n\tthis.reloading = false\r\n\tthis.reload = (forceReload) => {\r\n\t\tif (!this.reloading || forceReload) {\r\n\t\t\tlet { game: { player: { weapons: { reloadAnimationFrames, equipped, totalAmmo } } } } = getState()\r\n      this.removeEmptyText()\r\n      if (magazineIndexes[equipped] !== 0 && totalAmmo[equipped] !== 0 || forceReload) {\r\n        if (forceReload) { magazineIndexes[equipped] = 0 }\r\n        this.reloading = true\r\n\t\t\t\tlet ammoCheck = totalAmmo[equipped] < magazinesByWeaponType[equipped].length\r\n\t\t\t\tmagazinesByWeaponType[equipped].forEach((b, i) => { b.alpha = 0 })\r\n\t\t\t\tfor (let i = 0, limit = (ammoCheck ? totalAmmo[equipped] : magazinesByWeaponType[equipped].length); i < limit; ++i) {\r\n\t\t\t\t\tlet b = magazinesByWeaponType[equipped][i]\r\n\t\t\t\t\tb.alpha = 1\r\n\t\t\t\t\tfrom(b, reloadAnimationFrames[equipped]/60, {\r\n\t\t\t\t\t\tx: gameWidth - (b.width * i),\r\n\t\t\t\t\t\tonComplete: (_i) => {\r\n\t\t\t\t\t\t\tif (_i === limit-1) {\r\n\t\t\t\t\t\t\t\tmagazineIndexes[equipped] = 0\r\n                magEmptyBools[equipped] = false\r\n                this.lastBulletByWepType[equipped] = false\r\n                if (forceReload) {\r\n                  this.reloading = false\r\n                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (totalAmmo[equipped] === 0) {\r\n\t\t\t\t\t\t\t\tthis.reloading = false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonCompleteParams: [i]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  // forceWepEquipped is a weapon type string\r\n\tthis.select = (forceWepEquipped) => {\r\n    let { game: { player: { weapons: { totalAmmo, equipped } } } } = getState()\r\n    icons.forEach(icon => { icon.alpha = 0 })\r\n\t\tmags.forEach(m => {\r\n      m.forEach(b => {\r\n        if (b && b.hasOwnProperty('alpha')) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    })\r\n\t\tweaponIcons[forceWepEquipped ? forceWepEquipped : equipped].alpha = 1\r\n\t\tlet ammoCheck = totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] < magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length\r\n\t\tif (totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] !== 0) {\r\n\t\t\tlet limit = (ammoCheck\r\n\t\t\t\t? totalAmmo[forceWepEquipped ? forceWepEquipped : equipped]\r\n\t\t\t\t: magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped])\r\n\t\t\tlet lastMagIdx = ammoCheck ? magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] : 0\r\n\t\t\tif (ammoCheck) { magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped] = lastMagIdx }\r\n\t\t\tfor (let i = 0; i < limit; ++i) {\r\n\t\t\t\tmagazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped][magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length-1 - i].alpha = 1\r\n\t\t\t}\r\n    }\r\n    // added this code to hide bullets when last mag is less than ammo cap. \r\n    if (magEmptyBools[equipped]) {\r\n      magazinesByWeaponType[equipped].forEach(b => {\r\n        if (!forceWepEquipped) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    }\r\n\t}\r\n\r\n  this.lastBulletByWepType = {\r\n    'pistol weapon': false,\r\n    'smg weapon': false,\r\n    'shotgun weapon': false,\r\n  }\r\n\r\n\tthis.fireBullet = weapon_str => {\r\n\t\tif (magazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]]) {\r\n\t\t\tmagazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]].alpha = 0\r\n\t\t\tmagazineIndexes[weapon_str]++\r\n\t\t\tdispatch( decrementTotalAmmo(weapon_str) )\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n        this.lastBulletByWepType[weapon_str] = true\r\n      }\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n\t\t\t\tmagEmptyBools[weapon_str] = true\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n  \r\n  const makeGrenadeIcon = () => {\r\n    this.gbevel = new BevelFilter()\r\n    this.gnoise = new NoiseFilter()\r\n    this.gbevel.shadowAlpha = .45\r\n    this.gbevel.lightAlpha = .35\r\n    this.gbevel.thickness = 5\r\n    this.gbevel.shadowColor = 0x0\r\n    this.gbevel.lightColor = 0x208C44\r\n    this.gnoise.noise = .1\r\n    this.gnoise.seed = .5\r\n    let grenadeGfc = new PIXI.Graphics()\r\n    grenadeGfc.lineStyle(1, 0x0)\r\n    grenadeGfc.beginFill(0x1F472C)\r\n    grenadeGfc.drawCircle(0, 0, 6)\r\n    grenadeGfc.filters = getState().game.filterEffects ? [ this.gbevel, this.gnoise ] : []\r\n    container.addChild(grenadeGfc)\r\n    \r\n    return grenadeGfc\r\n  }\r\n\r\n  this.grenades = []\r\n\r\n  this.updateGrenadeIcons = () => {\r\n    if (this.grenades) { this.grenades.forEach(g => { g.destroy() }) }\r\n    this.grenades = []\r\n    let grenadeCount = getState().game.player.weapons.totalAmmo['grenades']\r\n    for (let i = 0; i < grenadeCount; ++i) {\r\n      let gnade = makeGrenadeIcon()\r\n      this.grenades.push( gnade )\r\n    }\r\n    this.grenades.forEach((g, i) => {\r\n      g.position.x = getState().game.width - 25 - ((g.width * 1.5) * i)\r\n      g.position.y = getState().game.height - 110 - g.height\r\n      from(g, (.1 * i), { y: g.position.y - 10, alpha: 0 })\r\n    })\r\n  }\r\n\r\n  this.updateGrenadeIcons()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const updateWeaponsUI = () => {\r\n  let { gameObjects } = window\r\n  let { game: { gameState } } = getState()\r\n\tif (gameObjects) {\r\n\t\tlet weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\t\tif (weaponsUI && (!weaponsUI.reloading || gameState === GameStates.SHOP_MENU)) {\r\n      weaponsUI.select()\r\n      gameObjects = null\r\n\t\t}\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport { decrementWave, gameStateTransition, setWaveCountToDefeat, toggleZombieHealthDisplay, toggleFilterEffects, setZombiesOnStage, StatsDefs } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport store from '../../../app/store'\r\nimport { CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { Children } from 'react'\r\nimport { batch, useDispatch, useSelector } from 'react-redux'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport updateScore from '../utils/updateScore'\r\nimport AchievementsView from './AchievementsView'\r\nimport { updateWeaponsUI } from '../ui/WeaponsUI'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const resetWave = () => {\r\n  const screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  const player = window.gameObjects.getKeyValue('player')\r\n  // remove existing zombies, if any\r\n  let zombies = window.gameObjects.getKeyValue('zombies')\r\n  while(zombies.length > 0) {\r\n    zombies.forEach(z => { z.kill(null, true) })\r\n  }\r\n  window.gameObjects.setKeyValue('zombies', [])\r\n  screenUI.unpause()\r\n  if (player.dead) {\r\n    screenUI.respawn()\r\n  }\r\n}\r\n\r\nexport const gotoMainMenu = () => {\r\n  const dispatch = store.dispatch\r\n  resetWave()\r\n  batch(() => {\r\n    dispatch( setZombiesOnStage(0) )\r\n    dispatch( setWaveCountToDefeat(null) )\r\n    dispatch(gameStateTransition('sub', store.getState().game.gameSubState, SubStates.NEUTRAL))\r\n    dispatch( gameStateTransition('main', store.getState().game.gameState, GameStates.MAIN_MENU))\r\n  })\r\n}\r\n\r\nexport const NoTransitionButton = ({ bgcolor, bordercolor, hoverborder, hovercolor, width, height, children }) => (\r\n  <CustomMenuButton\r\n  onMouseOver={ null }\r\n  width={ width ? width : '200px' }\r\n  height={ height ? height : '60px' }\r\n  hovercolor={ hovercolor ? hovercolor : '#222' }\r\n  hoverborder={ hoverborder ? hoverborder : '#333' }\r\n  bordercolor={ bordercolor ? bordercolor : '#333' }\r\n  bgcolor={ bgcolor ? bgcolor : '#222' }\r\n  cancelTransition={true}\r\n  >\r\n    { children }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const Stat = ({ label, stat }) => {\r\n  return (\r\n    <MenuButtonSpacer padding={ 1 }>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 200 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { label }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 400 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.4)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.5)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { stat }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n    </MenuButtonSpacer>\r\n  )\r\n}\r\n\r\nexport default function PauseMenu (props) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const game = useSelector(state => state.game)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const stats = useSelector(state => state.game.stats)\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const pauseMenuStates = {\r\n    DEFAULT: 'Default',\r\n    ACHIEVEMENTS: 'achievements',\r\n    CONTROLS: 'Controls',\r\n    OPTIONS: 'Options',\r\n    STATS: 'Stats',\r\n  }\r\n\r\n  const showControls = () => {\r\n    setPauseMenuState(pauseMenuStates.CONTROLS)\r\n  }\r\n\r\n  const showOptions = () => {\r\n    setPauseMenuState(pauseMenuStates.OPTIONS)\r\n  }\r\n\r\n  const showDefault = () => {\r\n    setPauseMenuState(pauseMenuStates.DEFAULT)\r\n  }\r\n\r\n  const seeScoreboard = () => {\r\n    dispatch(\r\n      gameStateTransition('main', GameStates.MAIN_MENU, GameStates.SCORES_VIEW)\r\n    )\r\n  }\r\n\r\n  const showStats = () => {\r\n    setPauseMenuState(pauseMenuStates.STATS)\r\n  }\r\n\r\n  const [pauseMenuState, setPauseMenuState] = React.useState(pauseMenuStates.DEFAULT)\r\n\r\n  const resumeGame = () => {\r\n    if (gameState === GameStates.PAUSE) {\r\n      window.gameObjects.getKeyValue('screen-ui').togglePause()\r\n    }\r\n  }\r\n\r\n  const playGame = () => {\r\n    dispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n    dispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n    setTimeout(() => {\r\n      let weaponsUI = window.gameObjects.getKeyValue('weapons-ui')\r\n      weaponsUI.updateGrenadeIcons()\r\n      updateWeaponsUI()\r\n      weaponsUI.updateWeaponMagazines(game.player.weapons.equipped)\r\n      let screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n      screenUI.unpause()\r\n    }, 100)\r\n  }\r\n\r\n  const showAchievements = () => {\r\n    setPauseMenuState(pauseMenuStates.ACHIEVEMENTS)\r\n  }\r\n\r\n  const effectFilters = useSelector(state => state.game.filterEffects)\r\n\r\n  const toggleFilters = () => {\r\n    dispatch( toggleFilterEffects(!effectFilters) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => zombie.checkFilters())\r\n    let ammos = window.gameObjects.getKeyValue('ammo-drops-by-type')\r\n    ammos[WEAPON_TYPE_SMG]\r\n    .concat(ammos[WEAPON_TYPE_PISTOL])\r\n    .concat(ammos[WEAPON_TYPE_SHOTGUN])\r\n    .forEach(ammo => ammo.checkFilters())\r\n    let credits = window.gameObjects.getKeyValue('currency-drops')\r\n    credits.forEach(credit => credit.checkFilters())\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    healths.forEach(health => health.checkFilters())\r\n    let player = window.gameObjects.getKeyValue('player')\r\n    player.checkFilters()\r\n    let weaponsUI = window.gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.checkFilters()\r\n  }\r\n\r\n  const displayZombieHealth = useSelector(state => state.game.displayZombieHealth)\r\n\r\n  const toggleZombieHealth = () => {\r\n    dispatch( toggleZombieHealthDisplay(!displayZombieHealth) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => {\r\n      zombie.displayHealth(!displayZombieHealth)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {\r\n      gameObjects ?\r\n        <Container style={{ top: props.margintop ? '100px' : 0 }} width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }>\r\n          { \r\n            props.hidebg ? null :\r\n            <>\r\n              <Backing bgcolor={ '#222' } opacity={ gameState === GameStates.MAIN_MENU ? .35 : .5 } width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }/>\r\n            </>\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.DEFAULT ?\r\n            <>\r\n              {\r\n                props.hidetitle ? null\r\n                : <MenuTitle>Pause Menu</MenuTitle>\r\n              }\r\n              <MenuButtonContainer width={ w ? w : 0 }>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 6 }>\r\n                  {\r\n                    props.playbtn ?\r\n                      <CustomMenuButton\r\n                      height={ 40 }\r\n                      onClick={ playGame }>\r\n                        Play Game\r\n                      </CustomMenuButton>\r\n                    :\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ resumeGame }>\r\n                        Resume Game\r\n                      </CustomMenuButton>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                {\r\n                  gameState !== GameStates.MAIN_MENU ?\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ gotoMainMenu }>\r\n                        Main Menu\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  :\r\n                    <MenuButtonSpacer padding={2}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ seeScoreboard }>\r\n                        Scoreboard\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                }\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showControls }>\r\n                    View Controls\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showOptions }>\r\n                    Options\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showStats }>\r\n                    Stats\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showAchievements }>\r\n                    Achievements\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.ACHIEVEMENTS ?\r\n            <AchievementsView backBtnFn={ showDefault } /> : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.CONTROLS ?\r\n            <>\r\n              <MenuTitle>Controls</MenuTitle>\r\n              <MenuButtonContainer width={ w }>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Jump: W</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Left: A</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Right: D</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Melee Weapon Bash: F</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Aim: Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Shoot: Left Mouse</CustomMenuButton>\r\n                </Inline>\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Charge Grenade Throw: Hold G / Right Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Change Weapon: Space / Mouse Wheel</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Turn Turret: L/R Arrow (while placing)</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Detonate remote mines: Numpad  1 - 9</CustomMenuButton>\r\n                </Inline>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.OPTIONS ?\r\n            <>\r\n              <MenuTitle>Options</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Effect Filters?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='effects-filter'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ effectFilters ? 'white' : 'red' }\r\n                      onClick={ toggleFilters }>\r\n                        <span\r\n                        style={{ color: effectFilters ? 'white' : 'red' }}>\r\n                        { effectFilters ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='effects-filter'>\r\n                      <span >\r\n                        Adds filter effects like glow and motion blur to animations. Turning off could improve performance.\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Display Zombie Health?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='display-zombie-health'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ displayZombieHealth ? 'white' : 'red' }\r\n                      onClick={ toggleZombieHealth }>\r\n                        <span\r\n                        style={{ color: displayZombieHealth ? 'white' : 'red' }}>\r\n                        { displayZombieHealth ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='display-zombie-health'>\r\n                      <span >\r\n                        Displays a yellow text box above each enemy zombie\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.STATS ?\r\n            <>\r\n              <MenuTitle>Stats</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Stat label={ 'Shots Fired' } stat={ stats.bulletsFired } />\r\n                <Stat label={ 'Mags Changed' } stat={ stats.timesReloaded } />\r\n                <Stat label={ 'Grenades Thrown' } stat={ stats.grenadesThrown } />\r\n                <Stat label={ 'Zombies Killed' } stat={ stats.zombiesKilled } />\r\n                <Stat label={ 'Deaths' } stat={ stats.timesKilled } />\r\n                {/* <Stat label={ 'Respawns' } stat={ stats.timesRespawned } /> */}\r\n                \r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n        </Container>\r\n      : null\r\n    }\r\n    </>\r\n  )\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { gameStateTransition, setShowingMessage } from './gameSlice'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { getBodyHeight } from './utils/Utils'\r\nimport { resetWave } from './ReactComponents/PauseMenu'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const createWaveMessage = txt => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: '#FFFFFF',\r\n\t\tfontSize: 40,\r\n    fontWeight: 'bold'\r\n  }, {\r\n    chars: [\r\n      ['a', 'z'],\r\n      ['0', '9'],\r\n      ['A', 'Z'],\r\n      ' .!?'\r\n    ]\r\n  })\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n  } = window\r\n  // let screenUI = gameObjects.getKeyValue('screen-ui')\r\n  let player = gameObjects.getKeyValue('player')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/5\r\n\r\n  container.addChild(text)\r\n  \r\n  const transitionToShopQuery = () => {\r\n    resetWave() // in case any zombies are roaming\r\n    if (getState().game.gameState === GameStates.MAIN_MENU || getState().game.gameState === GameStates.PAUSE) {\r\n      if (getState().game.gameSubState === SubStates.WAVE_DEFEATED || getState().game.gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.NEUTRAL))\r\n      }\r\n    } else {\r\n      if (!player.dead) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n        container.removeChild(text)\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const waveMsgOutro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgOutro, 2000)\r\n    } else {\r\n      to(text, .75, {\r\n        delay: 2,\r\n        x: gameWidth * 1.5,\r\n        ease: Power1.easeIn,\r\n        onUpdate: () => { if (gameObjects.getKeyValue('zombies').length > 0) { resetWave() } },\r\n        onComplete: transitionToShopQuery\r\n      })\r\n    }\r\n  }\r\n  \r\n  const waveMsgIntro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgIntro, 2000)\r\n    } else {\r\n      from(text, .75, {\r\n        x: -100,\r\n        alpha: 0,\r\n        // onUpdate: () => { resetWave() },\r\n        onUpdate: () => { if (gameObjects.getKeyValue('zombies').length > 0) { resetWave() } },\r\n        onComplete: waveMsgOutro\r\n      })\r\n    }\r\n  }\r\n\r\n  waveMsgIntro()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createGenericMessage = (txt, fillColor, durationMotion, durationLinger) => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: fillColor,\r\n\t\tfontSize: 40,\r\n\t\tfontWeight: 'bold'\r\n\t})\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n\t} = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/2\r\n\r\n\tcontainer.addChild(text)\r\n\r\n\tfrom(text, durationMotion, {\r\n\t\tx: -100,\r\n\t\talpha: 0,\r\n\t\tonStart: () => {\r\n\t\t\tdispatch( setShowingMessage(true) )\r\n\t\t},\r\n\t\tonComplete: () => {\r\n\t\t\tto(text, durationMotion, {\r\n\t\t\t\tdelay: durationLinger,\r\n\t\t\t\tx: gameWidth * 1.5,\r\n\t\t\t\tease: Power1.easeIn,\r\n\t\t\t\tonComplete: () => {\r\n\t\t\t\t\tdispatch( setShowingMessage(false) )\r\n\t\t\t\t\tcontainer.removeChild(text)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createTextMessage = (txt, fill, durationMotion, durationLinger, fontSize) => {\r\n\r\n  let {\r\n    gameObjects,\r\n    TweenLite: { to, set }\r\n  } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let texts = gameObjects.getKeyValue('text-messages')\r\n  let playerBody = gameObjects.getKeyValue('player').body\r\n  let msg = new PIXI.Text(txt, { fill, fontSize: fontSize ? fontSize : 13, fontWeight: 'bold' })\r\n  msg.pivot.x = msg.width * .5\r\n  msg.pivot.y = msg.height * .5\r\n  container.addChild(msg)\r\n\r\n  let { game: { player: { position: playerPosition } } } = getState()\r\n  let initialY = playerPosition.y - (getBodyHeight(playerBody) * .65)\r\n\r\n  texts.push(msg)\r\n\r\n  set(msg, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20)\r\n  })\r\n\r\n  to(msg, durationMotion, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20) - 20,\r\n    onComplete: () => {\r\n      to(msg, durationMotion, {\r\n        delay: durationLinger,\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          msg.destroy()\r\n          let idx = texts.indexOf(msg)\r\n          if (idx > -1) {\r\n            texts.splice(idx, 1)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n}\r\n","import { Bodies, Body, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport random from 'random'\r\n\r\nlet { TweenLite: { delayedCall, to } } = window\r\n\r\nexport default function Gib ({ position_x, position_y }, { force_x, force_y }, timeToDisappear) {\r\n  let { gameObjects } = window\r\n  let gibs = gameObjects.getKeyValue('gibs')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let body = Bodies.circle(position_x, position_y, 5, {\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  body.label = 'gib'\r\n  World.add(world, body)\r\n\r\n  let getTexturePNG = () => {\r\n    let gibs = [ 'gib.png', 'gib2.png', 'gib3.png', 'gib4.png' ]\r\n    return gibs[ Math.floor( Math.random() * gibs.length ) ]\r\n  }\r\n  \r\n  let partsSheet = gameObjects.getKeyValue('player-parts-sheet')\r\n  let gfc = new Sprite(\r\n    partsSheet.textures[ getTexturePNG() ]\r\n  )\r\n  container.addChild( gfc )\r\n  \r\n  gibs.push( this )\r\n\r\n  gfc.pivot.x = gfc.width * .5\r\n  gfc.pivot.y = gfc.height * .475\r\n\r\n  Body.applyForce(body, { x: position_x, y: position_y }, { x: random.float(force_x * .25, force_x), y: random.float(force_y * .25, force_y) })\r\n  \r\n  this.animate = renderFn => {\r\n    let { x, y, rotation: rot } = renderFn(body)\r\n    gfc.position = { x, y }\r\n    gfc.rotation = rot\r\n  }\r\n\r\n  this.destroy = () => {\r\n    if (gfc) {\r\n      gfc.destroy()\r\n    }\r\n    if (body) {\r\n      World.remove(world, body)\r\n    }\r\n    let idx = gibs.indexOf(this)\r\n    if ( idx > -1 ) {\r\n      gibs.splice( idx, 1 )\r\n    }\r\n    world = null\r\n    body = null\r\n    container = null\r\n    gibs = null\r\n    gameObjects = null\r\n  }\r\n\r\n  delayedCall(timeToDisappear, () => {\r\n    to(gfc, 2, { alpha: 0, onComplete: () => { this.destroy() }})\r\n  })\r\n\r\n  return this\r\n\r\n}\r\n\r\nexport function GibGenerator (count, position, force, timeToDisappear) {\r\n  let { x: position_x, y: position_y } = position\r\n  force = force || { force_x: 0, force_y: 0 }\r\n  let { x: force_x, y: force_y } = force\r\n  // add some gibs for effect!\r\n\tfor (let gibCnt = 0; gibCnt < count; ++gibCnt) {\r\n\t\tnew Gib({ position_x, position_y }, { force_x, force_y }, timeToDisappear)\r\n\t}\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { GibGenerator } from '../items/Gib'\r\n\r\nexport function PlayerRagdollDecap ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 60 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet maskBody = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  // let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n\t// spineToHead really\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  // let spineToLower = Constraint.create({\r\n  //   bodyA: bodyLower,\r\n  //   bodyB: lower_spineLinks[0],\r\n  //   pointA: { x: 0, y: -bLower.h/2 },\r\n  //   pointB: { x: 0, y: -spine.h/2 },\r\n  //   length: 10\r\n  // })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, maskBody, bodyUpper, //bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['head_gore.png'] )\r\n\tskull._id = 'skull'\r\n\tspriteParts.push( skull )\r\n\t\r\n  let mask = new PIXI.Sprite( parts_spritesheet.textures['mask.png'] )\r\n\tmask._id = 'mask'\r\n  spriteParts.push( mask )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\t// lower_spineLinks.forEach(link => {\r\n  //   let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n  //   entrailGfx.push( entrailGfc )\r\n  //   spriteParts.push( entrailGfc )\r\n  // })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_headless.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  // let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\t// torsoLower._id = 'torso lower'\r\n  // spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.mask = maskBody\r\n  this.bodyUpper = bodyUpper\r\n  // this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => {\r\n\t\t\tsprite.destroy()\r\n\t\t\tsprite = null\r\n\t\t})\r\n\t\tWorld.remove(world, this.composite)\r\n\t\tthis.composite = null\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet maskPos = renderFnc(this.mask)\r\n\t\tmask.position = maskPos\r\n\t\tmask.rotation = maskPos.rotation\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a head constraint\r\n\tComposite.remove(this.composite, bodyToHead)\r\n\tBody.applyForce(this.head, this.head.position, { x: 0, y: -0.1 })\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollHalved ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 35 }\r\n\tlet bLower = { w: 45, h: 5 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n  let bodyLower = Bodies.rectangle(x, y, bLower.w, bLower.h)\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = [], entrailGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: bodyUpper,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: bUpper.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  let spineToLower = Constraint.create({\r\n    bodyA: bodyLower,\r\n    bodyB: lower_spineLinks[0],\r\n    pointA: { x: 0, y: -bLower.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper, bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n  Composite.add(this.composite, lower_spineLinks)\r\n  Composite.add(this.composite, lower_spineConstraints)\r\n  Composite.add(this.composite, spineToLower)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\tlower_spineLinks.forEach(link => {\r\n    let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n    entrailGfx.push( entrailGfc )\r\n    spriteParts.push( entrailGfc )\r\n  })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_upper_gore.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\ttorsoLower._id = 'torso lower'\r\n  spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n  this.bodyUpper = bodyUpper\r\n  this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlower_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      entrailGfx[i].position = linkPos\r\n      entrailGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n\r\n    let torsoLowerPos = renderFnc(this.bodyLower)\r\n\t\ttorsoLower.position = torsoLowerPos\r\n\t\ttorsoLower.rotation = torsoLowerPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollMaim ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')  //gameObjects.getKeyValue('zombie-parts-sheet') //gameObjects.getKeyValue('z-parts-spritesheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull_gore.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach arm constraints\r\n\tComposite.remove(this.composite, [ bodyUpperToArmUpperL, bodyUpperToArmUpperR ])\r\n\tBody.applyForce(this.armLowerL, this.armLowerL.position, { x: -0.01, y: -0.1 })\r\n\tBody.applyForce(this.armLowerR, this.armUpperR.position, { x: 0.01, y: -0.1 })\r\n\r\n\t// auto removal\r\n\t// delayedCall(3, this.destroy)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function PlayerRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}","import { World } from 'matter-js'\r\nimport { AnimatedSprite } from 'pixi.js'\r\n\r\nexport const BLOOD_SPURT_TYPE_1 = 'blood spurt type 1'\r\nexport const BLOOD_SPURT_TYPE_2 = 'blood spurt type 2'\r\nexport const BLOOD_SPURT_TYPE_3 = 'blood spurt type 3'\r\n\r\nlet { TweenLite: { set } } = window\r\n\r\nexport default function BloodSpurt (type, position, scale, bodyToDelete) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n\r\n  let chosenSpurt = null\r\n  \r\n  let bloodSpurt1_sheet = gameObjects.getKeyValue('blood-spurt-1')\r\n  let bloodSpurt1 = new AnimatedSprite( bloodSpurt1_sheet.animations['blood_spurt_1'] )\r\n  \r\n  let bloodSpurt2_sheet = gameObjects.getKeyValue('blood-spurt-2')\r\n  let bloodSpurt2 = new AnimatedSprite( bloodSpurt2_sheet.animations['blood_spurt_2'] )\r\n  \r\n  let bloodSpurt3_sheet = gameObjects.getKeyValue('blood-spurt-3')\r\n  let bloodSpurt3 = new AnimatedSprite( bloodSpurt3_sheet.animations['blood_spurt_3'] )\r\n  \r\n  // randomize the returned spurt\r\n  let spurts = [ BLOOD_SPURT_TYPE_1, BLOOD_SPURT_TYPE_2, BLOOD_SPURT_TYPE_3 ]\r\n  let autoChosen = spurts[ Math.floor( Math.random() * spurts.length ) ]\r\n  \r\n  if (!type) {\r\n    type = autoChosen\r\n  }\r\n  \r\n  if (type === BLOOD_SPURT_TYPE_1) {\r\n    chosenSpurt = bloodSpurt1\r\n  } else if (type === BLOOD_SPURT_TYPE_2) {\r\n    chosenSpurt = bloodSpurt2\r\n  } else {\r\n    chosenSpurt = bloodSpurt3\r\n  }\r\n\r\n  chosenSpurt.onComplete = () => {\r\n    chosenSpurt.destroy()\r\n    if (bodyToDelete) {\r\n      World.remove(world, bodyToDelete)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    chosenSpurt = null\r\n    bloodSpurt1 = null\r\n    bloodSpurt1_sheet = null \r\n    bloodSpurt2 = null\r\n    bloodSpurt2_sheet = null \r\n    bloodSpurt3 = null\r\n    bloodSpurt3_sheet = null \r\n    spurts = null\r\n    autoChosen = null\r\n  }\r\n\r\n  chosenSpurt.animationSpeed = .5\r\n  chosenSpurt.pivot.x = chosenSpurt.width * .5\r\n  chosenSpurt.pivot.y = chosenSpurt.height * .5\r\n  if (scale) {\r\n    set(chosenSpurt.scale, { x: scale, y: scale })\r\n  } else {\r\n    set(chosenSpurt.scale, { x: .5, y: .5 })\r\n  }\r\n  chosenSpurt.position = position\r\n  chosenSpurt.loop = false\r\n  chosenSpurt.updateAnchor = true\r\n  chosenSpurt.play()\r\n  container.addChild( chosenSpurt )\r\n\r\n  return chosenSpurt\r\n\r\n}","export const FELL_OFF = 'fell off of ledge'\r\nexport const KILLED_BY_ZOMBIE = 'killed by zombie'","import { Body, World, Bodies } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nlet { getState } = store\r\n\r\nexport default function Rock(position) {\r\n  let { gameObjects, TweenLite: { to, delayedCall } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let rockPieceAssets = [ 'rock-piece1.png', 'rock-piece2.png', 'rock-piece3.png' ]\r\n  const getRandomRockSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        rockPieceAssets[ Math.floor( Math.random() * rockPieceAssets.length ) ]\r\n      ]\r\n  ))\r\n  let rockSprite = getRandomRockSprite()\r\n  const rockScale = () => random.float(.45, .65)\r\n  rockSprite.pivot.x = rockSprite.width * .48\r\n  rockSprite.pivot.y = rockSprite.height * .48\r\n  rockSprite.scale.x = rockScale()\r\n  rockSprite.scale.y = rockScale()\r\n  container.addChild(rockSprite)\r\n  let rockBody = Bodies.rectangle(position.x, position.y - 50, 10, 10, {\r\n    restitution: .25,\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  Body.applyForce(rockBody, rockBody.position, {\r\n    x: random.float(-0.005, 0.005),\r\n    y: random.float(-0.001, -0.0025),\r\n  })\r\n  World.add(world, rockBody)\r\n  this.animate = renderFn => {\r\n    let { x, y } = renderFn(rockBody)\r\n    rockSprite.position = { x, y }\r\n  }\r\n  this.destroy = () => {\r\n    let idx = rocks.indexOf(this)\r\n    World.remove(world, rockBody)\r\n    container.removeChild(rockSprite)\r\n    if (idx > -1) {\r\n      rocks.splice(idx, 1)\r\n    }\r\n    world = null\r\n    rocks = null\r\n    container = null\r\n    rockBody = null\r\n    rockSprite = null\r\n    gameObjects = null\r\n  }\r\n  delayedCall(\r\n    getState().game.lastWaveCountDefeated &&\r\n    getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n    () => {\r\n      to(rockSprite, .5, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    }\r\n  )\r\n  return this\r\n}\r\n","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class WoodPlank {\r\n\r\n  constructor(pos) {\r\n    this.gameObjects = window.gameObjects\r\n    const { to, delayedCall } = window.TweenLite\r\n    let container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let world = this.gameObjects.getKeyValue('world')\r\n    this.woodPlanksSheet = this.gameObjects.getKeyValue('wood-planks-sheet')\r\n    this.woodPlanks = this.gameObjects.getKeyValue('wood-planks')\r\n    this.plankRange = [ '000.png', '001.png', '002.png' ]\r\n    // this.planks = new Array(random.int(4, 8)).fill(1)\r\n    // this.planks.map(plank => this.getPlank())\r\n    let {x,y} = pos\r\n    this.gfc = this.getPlank()\r\n    this.gfc.width = 50\r\n    this.gfc.height = 15\r\n    this.gfcContainer = new PIXI.Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = this.gfcContainer.width * .5\r\n    this.gfcContainer.pivot.y = this.gfcContainer.height * .5\r\n    this.body = new Bodies.rectangle(x,y,50,15,{collisionFilter:playerCollisionOptions})\r\n    this.body.torque = random.float(-0.5, 0.5)\r\n    Body.applyForce(this.body, this.body.position, {\r\n      x: random.float(-0.02, 0.02),\r\n      y: random.float(-0.01, -0.02)\r\n    })\r\n    World.add(world, this.body)\r\n    container.addChild(this.gfcContainer)\r\n    this.destroy = () => {\r\n      let idx = this.woodPlanks.indexOf(this)\r\n      World.remove(world, this.body)\r\n      container.removeChild(this.gfcContainer)\r\n      if (idx > -1) {\r\n        this.woodPlanks.splice(idx, 1)\r\n      }\r\n      world = null\r\n      container = null\r\n      this.gameObjects = null\r\n      this.woodPlanks = null\r\n      this.gfc = null\r\n    }\r\n    delayedCall(4, () => {\r\n      to(this.gfcContainer, 2, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    })\r\n    return this\r\n  }\r\n\r\n  animate(renderFn) {\r\n    let {x,y,rotation:rot} = renderFn(this.body)\r\n    this.gfcContainer.position = {x,y}\r\n    this.gfcContainer.rotation = rot\r\n  }\r\n\r\n  getPlank() {\r\n    return (\r\n      new PIXI.Sprite(\r\n        this.woodPlanksSheet.textures[\r\n          this.plankRange[Math.floor(Math.random() * this.plankRange.length)]\r\n        ]\r\n      )\r\n    )\r\n  }\r\n\r\n}","import { contains } from 'jquery'\r\nimport { AnimatedSprite } from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport { BlurFilter } from '@pixi/filter-blur'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport store from '../../../app/store'\r\n\r\nexport default class ExplosionSprite {\r\n\r\n  constructor(type, renderBody) {\r\n    this.gameObjects = window.gameObjects\r\n    let { to } = window.TweenLite\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let explosionTexture1 = this.gameObjects.getKeyValue('explosion3d1-sheet')\r\n    let explosionTexture2 = this.gameObjects.getKeyValue('explosion3d2-sheet')\r\n    this.explosion1 = new AnimatedSprite( explosionTexture1.animations['explosion3d'] )\r\n    this.explosion2 = new AnimatedSprite( explosionTexture2.animations['explosion3d'] )\r\n    this.explosions = [ this.explosion1, this.explosion2 ]\r\n    this.explosions.forEach(ex => {\r\n      ex.pivot.x = ex.width * .5\r\n      ex.pivot.y = ex.height * .5\r\n      ex.loop = false\r\n      ex.onComplete = () => {\r\n        this.container.removeChild(ex)\r\n        this.container = null\r\n        this.gameObjects = null\r\n        explosionTexture1 = null\r\n        explosionTexture2 = null\r\n        this.explosions = null\r\n      }\r\n    })\r\n    if (type === 1) {\r\n      this.explosion = this.explosion1\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    if (type === 2) {\r\n      this.explosion = this.explosion2\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    // this.container.addChild(this.explosion)\r\n    this.renderBody = renderBody\r\n    let adjustment = new AdjustmentFilter()\r\n    adjustment.brightness = 20.0\r\n    adjustment.saturation = 3.0\r\n    let blur = new BlurFilter()\r\n    blur.blur = .5\r\n    let glow = new GlowFilter({\r\n      outerStrength: 3.0\r\n    })\r\n    this.filters = store.getState().game.filterEffects ? [\r\n      adjustment,\r\n      blur,\r\n      glow\r\n    ] : []\r\n    this.explosion.filters = this.filters\r\n    to(this.explosion, .35, { alpha: 0 })\r\n    to(adjustment, .5, { brightness: 1.0, saturation: 1.5, onUpdate: () => {\r\n      if (store.getState().game.filterEffects) {\r\n        this.explosion.filters = this.filters\r\n      }\r\n    }})\r\n    this.explosion.play()\r\n  }\r\n\r\n  // checkFilters() {\r\n  //   if (store.getState().game.filterEffects) {\r\n  //     this.explosion.filters = this.filters\r\n  //   } else {\r\n  //     this.explosion.filters = []\r\n  //   }\r\n  // }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.explosion.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.explosion) === -1) {\r\n        this.container.addChild(this.explosion)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport WoodPlank from '../items/WoodPlank'\r\nimport ExplosionSprite from './ExplosionSprite'\r\nimport { Howl, Howler } from 'howler'\r\n\r\nexport default function GrenadeExplosion (position, showRocksBool, options) {\r\n  let { gameObjects, TweenLite: { to } } = window\r\n  let explosion1 = window.gameObjects.getKeyValue('explosion1')\r\n  let explosionSound1 = new Howl({\r\n    src: [ explosion1 ]\r\n  })\r\n  let distantExplosion = window.gameObjects.getKeyValue('distant-explosion')\r\n  let distantExplosionSound = new Howl({\r\n    src: [ distantExplosion ]\r\n  })\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionsArray = gameObjects.getKeyValue('explosions')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\r\n  const getRandomSmokeSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        smokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n      ]\r\n  ))\r\n  let positionalBody = Bodies.rectangle(position.x, position.y, 20, 20, {\r\n    restitution: 0,\r\n    collisionFilter: playerCollisionOptions,\r\n    isStatic: true\r\n  })\r\n  World.add(world, positionalBody)\r\n  this.calcRenderedPosition = renderFn => {\r\n    let { x, y } = renderFn(positionalBody)\r\n    this.calculatedPosition = { x, y }\r\n    // if (container && container.children.indexOf(smokeSprite) === -1) {\r\n    //   container.addChild(smokeSprite)\r\n    // }\r\n  }\r\n  explosionsArray.push( this )\r\n  // put it together\r\n  // smoke animation \r\n  let randInt = random.int(5, 10) // reduced from (10, 20)\r\n  for (let s = 0; s < randInt; ++s) {\r\n    let smokeSprite = getRandomSmokeSprite()\r\n    smokeSprite.pivot.x = smokeSprite.width * .5\r\n    smokeSprite.pivot.y = smokeSprite.height * .5\r\n    let duration = 2 // smoke tween duration \r\n    to(smokeSprite, duration, {\r\n      onStart: () => { container.addChild(smokeSprite) },\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        if (s === randInt - 1) {\r\n          World.remove(world, positionalBody)\r\n          let idx1 = explosionsArray.indexOf(this)\r\n          if (idx1 > -1) { explosionsArray.splice(idx1, 1) }\r\n          world = null\r\n          explosionsArray = null\r\n          explosionAssetsSheet = null\r\n          smokeAssets = null\r\n        }\r\n      }\r\n    })\r\n    let randScale = random.int(1, 2)\r\n    to(smokeSprite.scale, .5, { x: randScale, y: randScale })\r\n    let xyval = { x: 0, y: 0 }\r\n    to(xyval, .5, { x: random.int(-100, 100), y: random.int(-50, 50) })\r\n    to(smokeSprite.position, duration, {\r\n      onUpdate: () => {\r\n        if (this.calculatedPosition) {\r\n          smokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n          smokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        smokeSprite.destroy()\r\n        container = null\r\n        gameObjects = null\r\n      }\r\n    })\r\n  }\r\n  let woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n  // rocks \r\n  if (position.y > 300 || showRocksBool) {\r\n    for (let r = 0; r < random.int(4, 7); ++r) {\r\n      if (options && options.showWood) {\r\n        woodPlanks.push(new WoodPlank(position))\r\n      } else {\r\n        rocks.push(new Rock(position))\r\n      }\r\n    }\r\n    woodPlanks = null\r\n    rocks = null\r\n  }\r\n  if (!options || options.showExplosionSprite) {\r\n    // blender explosion sprite\r\n    let explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    explosionSound1.seek(.5)\r\n    explosionSound1.play()\r\n    distantExplosionSound.play()\r\n    explosionSprites.push(\r\n      new ExplosionSprite(random.int(1, 2), positionalBody)\r\n    )\r\n    explosionSprites = null\r\n  }\r\n}","import { Bodies, Constraint, World } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { getBodyHeight, getBodyWidth, makePixiSprite } from '../utils/Utils'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport store from '../../../app/store'\r\n\r\nexport default function WallBarrier (pos, dimensions, type) {\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite:{ delayedCall } } = window\r\n  let barriersSprites = gameObjects.getKeyValue('barriers-sheet')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let buildObjects = gameObjects.getKeyValue('build-objects')\r\n  let {width:w,height:h} = dimensions\r\n  let woodenBarrier = new PIXI.Sprite(barriersSprites.textures['woodenBarrier.png'])\r\n  let stoneBarrier = new PIXI.Sprite(barriersSprites.textures['stoneBarrier.png'])\r\n  let metalBarrier = new PIXI.Sprite(barriersSprites.textures['metalBarrier.png'])\r\n  let explosiveBarrier = makePixiSprite('explosive-barrel')\r\n  this.types = {\r\n    WOOD: 'Wooden',\r\n    STONE: 'Stone',\r\n    METAL: 'Metal',\r\n    EXPLOSIVE: 'Explosive Barrel'\r\n  }\r\n  let {x,y} = pos\r\n  let objBody = Bodies.rectangle(x, y, w, h, {\r\n    inertia: Infinity,\r\n    label: type === this.types.EXPLOSIVE ? 'explosive barrier' : 'barrier'\r\n  })\r\n  // try to attach barrier to the ground\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  let constraint = Constraint.create({\r\n    bodyA: ground,\r\n    bodyB: objBody,\r\n    pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n    pointB: { x: 0, y: getBodyHeight(objBody)/2 },\r\n    length: 0\r\n  })\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n        break;\r\n      case this.types.STONE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 500 : 250\r\n        break;\r\n      case this.types.METAL:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 800 : 400\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 200 : 100\r\n        break;\r\n      default:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n    }\r\n  }\r\n\r\n  objBody.main = this\r\n  this.destroyed = false\r\n\r\n  this.getBody = () => objBody\r\n\r\n  // World.add(world, objBody)\r\n  World.add(world, [constraint, objBody])\r\n\r\n  let barrierSprite\r\n  let txtStyle = { fill: '#ffffff', fontSize: 12 }\r\n  let healthDisplay = new PIXI.Text(objBody.strength, txtStyle)\r\n  healthDisplay.pivot.x = healthDisplay.width * .5\r\n  healthDisplay.pivot.y = healthDisplay.height * .5\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        barrierSprite = woodenBarrier\r\n        break;\r\n      case this.types.STONE:\r\n        barrierSprite = stoneBarrier\r\n        break;\r\n      case this.types.METAL:\r\n        barrierSprite = metalBarrier\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        barrierSprite = explosiveBarrier\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  barrierSprite.width = w\r\n  barrierSprite.height = h\r\n  let sprite = new PIXI.Container()\r\n  sprite.addChild(barrierSprite)\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * .5\r\n  container.addChild(sprite)\r\n  container.addChild(healthDisplay)\r\n\r\n  let player = gameObjects.getKeyValue('player')\r\n  player.sprites.forEach(sprite => { container.addChild(sprite) })\r\n\r\n  this.takeDamage = (dmg) => {\r\n    objBody.strength -= dmg\r\n    healthDisplay.text = objBody.strength\r\n  }\r\n\r\n  this.displayBarrierStrength = (renderFn) => {\r\n    healthDisplay.position = renderFn(objBody)\r\n    barrierSprite.position = renderFn(objBody)\r\n  }\r\n\r\n  objBody.removeSelf = () => {\r\n    this.destroyed = true\r\n    new GrenadeExplosion(objBody.position, true, {\r\n      showWood: type === this.types.WOOD ? true : false,\r\n      showExplosionSprite: type === this.types.EXPLOSIVE ? true : false\r\n    })\r\n    if (type === this.types.EXPLOSIVE) {\r\n      let {x:_x,y:_y} = objBody.position\r\n      let explosionHitbox = Bodies.rectangle(_x, _y, 400, 300)\r\n      explosionHitbox.label = 'barrel explosion'\r\n      World.add(world, explosionHitbox)\r\n      delayedCall(2, () => {\r\n        if (explosionHitbox) {\r\n          World.remove(world, explosionHitbox)\r\n        }\r\n      })\r\n      explosionHitbox.removeSelf = () => {\r\n        World.remove(world, explosionHitbox)\r\n      }\r\n    }\r\n    World.remove(world, [constraint, objBody])\r\n    container.removeChild(healthDisplay)\r\n    container.removeChild(sprite)\r\n    let idx = buildObjects.indexOf(this)\r\n    if (idx > -1) { buildObjects.splice(idx, 1) }\r\n  }\r\n\r\n  return this\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class Landmine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('landmine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'landmine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['landmine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    new GrenadeExplosion(this.body.position, true)\r\n    let { TweenLite: { delayedCall } } = window\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { Bodies, World, Body, Vector } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { radians } from 'radians'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\n\r\nexport default function Grenade (x, y, r, force, fuseTime) {\r\n  this.grenadeDistance = {\r\n    start: x,\r\n    end: null\r\n  }\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite: { delayedCall, from } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let grenades = gameObjects.getKeyValue('grenades')\r\n  let grenadeBody = Bodies.circle(x, y, r, {\r\n    restitution: .8,\r\n    collisionFilter: { category: 3 }\r\n  })\r\n  grenadeBody.label = 'grenade'\r\n  grenadeBody.main = this\r\n  World.add(world, grenadeBody)\r\n  Body.applyForce(grenadeBody, grenadeBody.position, force)\r\n  grenadeBody.torque = .01\r\n  let grenadeGfc = new PIXI.Graphics()\r\n  grenadeGfc.beginFill(0x1F472C)\r\n  grenadeGfc.drawCircle(0, 0, r)\r\n  this.grenadeBody = grenadeBody\r\n  let bevel = new BevelFilter()\r\n  bevel.shadowAlpha = .45\r\n  bevel.lightAlpha = .35\r\n  bevel.thickness = 5\r\n  bevel.shadowColor = 0x0\r\n  bevel.lightColor = 0x208C44\r\n  let noise = new NoiseFilter()\r\n  noise.noise = .1\r\n  noise.seed = .5\r\n  grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise ] : []\r\n  let motionBlur = new MotionBlurFilter({ velocity: { x: 0, y: 0 } })\r\n  from(motionBlur.velocity, .75, { x: 100, y: 10 })\r\n  container.addChild(grenadeGfc)\r\n  this.animate = renderFn => {\r\n    if (grenadeBody && grenadeGfc) {\r\n      let { x, y, rotation: rot } = renderFn(grenadeBody)\r\n      grenadeGfc.position.x = x\r\n      grenadeGfc.position.y = y\r\n      grenadeGfc.rotation = rot\r\n      bevel.rotation = radians(rot)\r\n      grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise, motionBlur ] : []\r\n    }\r\n  }\r\n\r\n  delayedCall(fuseTime ? fuseTime : getState().game.player.weapons.grenadeFuseTime.default, () => {\r\n    if (!this.exploded) {\r\n      this.explode()\r\n    }\r\n  })\r\n  this.exploded = false\r\n  this.explode = (showRocks) => {\r\n    this.grenadeDistance.end = this.grenadeBody.position.x\r\n    this.exploded = true\r\n    new GrenadeExplosion(grenadeBody.position, showRocks ? showRocks : null)\r\n    let explosionSize = getState().game.player.weapons.grenadeExplosionSize\r\n    this.explosionHitbox = Bodies.rectangle(grenadeBody.position.x, grenadeBody.position.y, explosionSize, explosionSize, {\r\n      // isStatic: true\r\n    })\r\n    grenadeBody.distance = this.grenadeDistance\r\n    this.explosionHitbox.label = 'grenade explosion'\r\n    World.remove(world, grenadeBody)\r\n    World.add(world, this.explosionHitbox)\r\n    container.removeChild(grenadeGfc)\r\n    delayedCall(.01, () => {\r\n      this.destroy()\r\n    })\r\n  }\r\n  this.destroy = () => {\r\n    World.remove(world, this.explosionHitbox)\r\n    let idx = grenades.indexOf(this)\r\n    if (idx > -1) {\r\n      grenades.splice(idx, 1)\r\n    }\r\n    // world = null\r\n    // container = null\r\n    // gameObjects = null\r\n    // this.explosionHitbox = null\r\n    // grenadeBody = null\r\n    // grenadeGfc = null\r\n  }\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\nimport Grenade from '../items/Grenade'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Clustermine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('clustermine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'clustermine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['clustermine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    let r = 10, fuseTime = 4\r\n    let { gameObjects } = window\r\n    let grenades = gameObjects.getKeyValue('grenades') // can replace with different red or blue \"cluster bomb\" graphics\r\n    delayedCall(.25, () => {\r\n      let { getState } = store\r\n      let num = getState().game.player.perks['cluck'].owned ? 8 : 4\r\n      let xforce = getState().game.player.perks['cluck'].owned ? random.float(-0.02, 0.02) : random.float(-0.01, 0.01)\r\n      let yforce = getState().game.player.perks['cluck'] ? random.float(-0.025, -0.075) : random.float(-0.01, -0.05)\r\n      for (let i = 0; i < num; ++i) {\r\n        delayedCall(.1 * i, () => {\r\n          let nade = new Grenade(\r\n            this.body.position.x,\r\n            this.body.position.y - 50,\r\n            r,\r\n            {\r\n              x: xforce,\r\n              y: yforce\r\n            },\r\n            fuseTime\r\n          )\r\n          grenades.push( nade )\r\n        })\r\n      }\r\n    })\r\n    // above code expels additional cluster grenades \r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'clustermine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","export const barrierTypes = {\r\n  WOOD: 'Wooden',\r\n  STONE: 'Stone',\r\n  METAL: 'Metal',\r\n  EXPLOSIVE: 'Explosive Barrel'\r\n}\r\n\r\nexport const trapTypes = {\r\n  LANDMINE: 'Landmine',\r\n  CLUSTER_BOMB: 'Cluster Bomb',\r\n  REMOTE_MINE: 'Remote Mine',\r\n  TURRET: 'Machine Gun Turret'\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class RemoteMine {\r\n\r\n  constructor(pos, mineNumber) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.buildObjects = gameObjects.getKeyValue('build-objects')\r\n    this.remoteMines = gameObjects.getKeyValue('remote-mines')\r\n    this.remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n    let landmineSheet = gameObjects.getKeyValue('remote-mine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5, { collisionFilter: playerCollisionOptions })\r\n    this.body.label = 'remote mine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['remote-mine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n\r\n    // attach a number to the mine to know which key to press to detonate it\r\n    let txtStyle = { fill: '#00FFFF', fontSize: 12 }\r\n    this.num = new Text(`[ ${mineNumber} ]: detonate`, txtStyle)\r\n    this.num.pivot.x = this.num.width * .5\r\n    this.num.pivot.y = this.num.height * .5\r\n    this.container.addChild(this.num)\r\n    \r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n    this.num.position = { x, y: y - 50 }\r\n  }\r\n\r\n  detonate() {\r\n    this.destroy()\r\n  }\r\n\r\n  updateNumber(num) {\r\n    this.num.text = `[ ${num} ]: detonate`\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      this.container.removeChild(this.num)\r\n      let idx = this.buildObjects.indexOf(this)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n      let ridx = this.remoteMinesArr.indexOf(this)\r\n      if (ridx > -1) {\r\n        this.remoteMinesArr.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { World, Body, Bodies, Vector } from 'matter-js'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS, LESS_THAN_PLAYER_Y_POS } from '../constants/mouseStates'\r\nimport { PISTOL_BULLET_REMOVAL_TIMEOUT, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX,\r\n  WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET, WEAPON_TYPE_SHOTGUN\r\n } from '../constants/weapons'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport { calcBulletAngle, getBodyWidth, getBodyHeight, getPlayerBody, getPlayerPartByType } from '../utils/Utils'\r\nimport { createGenericMessage, createTextMessage } from '../createMessages'\r\nimport { setLastShot, StatsDefs } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { increaseStats } from '../gameSlice'\r\nimport { radians } from 'radians'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const calcPistolDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_PISTOL]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcTurretDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_TURRET]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcSMGDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SMG]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcShotgunDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SHOTGUN]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\n// bullet impact\r\nexport function BulletImpact (surfaceType, position, scale) {\r\n\tlet {x,y} = position\r\n\tlet { gameObjects, TweenLite: { to, set, from } } = window\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n\tWorld.add(world, positionalBody)\r\n\r\n\tlet explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n\tlet smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\tconst getRandomSmokeSprite = () => (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\texplosionAssetsSheet.textures[\r\n\t\t\t\tsmokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n\t\t\t]\r\n\t))\r\n\tlet randInt = 2 //random.int(2, 4)\r\n\tfor (let i = 0; i < randInt; ++i) {\r\n\t\tlet smokeSprite = getRandomSmokeSprite()\r\n\t\tif (surfaceType === 'enemy') {\r\n\t\t\tsmokeSprite.tint = 0xFF0000\r\n\t\t}\r\n\t\tsmokeSprite.pivot.x = smokeSprite.width * .5\r\n\t\tsmokeSprite.pivot.y = smokeSprite.height * .5\r\n\t\tto(smokeSprite, scale && scale.alphaDuration ? scale.alphaDuration : .5, {\r\n\t\t\talpha: 0,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tif (i === randInt - 1) {\r\n\t\t\t\t\tWorld.remove(world, positionalBody)\r\n\t\t\t\t\tworld = null \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet randScale\r\n\t\tif (scale && scale.rand && scale.rand.min && scale.rand.max) {\r\n\t\t\trandScale = random.float(scale.rand.min, scale.rand.max)\r\n\t\t} else {\r\n\t\t\trandScale = random.float(.25, .5)\r\n\t\t}\r\n\t\tset(smokeSprite.scale, {\r\n\t\t\tx: scale && scale.set ? scale.set : .1,\r\n\t\t\ty: scale && scale.set ? scale.set : .1\r\n\t\t})\r\n\t\tto(smokeSprite.scale, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: randScale,\r\n\t\t\ty: randScale\r\n\t\t})\r\n\t\tlet xyval = { x: 0, y: 0 }\r\n\t\tto(xyval, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-10, 10),\r\n\t\t\ty: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-50, 0)\r\n\t\t})\r\n\t\tto(smokeSprite.position, 3, {\r\n\t\t\tonUpdate: () => {\r\n\t\t\t\tif (this.calculatedPosition) {\r\n\t\t\t\t\tsmokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n\t\t\t\t\tsmokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n\t\t\t\t\tif (container && container.children.indexOf(smokeSprite) < 0) {\r\n\t\t\t\t\t\tcontainer.addChild(smokeSprite)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tsmokeSprite.destroy()\r\n\t\t\t\tcontainer = null\r\n\t\t\t\tgameObjects = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tthis.renderPosition = (renderFn) => {\r\n\t\tthis.calculatedPosition = renderFn(positionalBody)\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\n// bullet shell\r\nexport function PistolShell(x, y, gameObjects, changeLabelString, overrideOptions) {\r\n\tlet world, container, shells\r\n\tlet { game: { mouseState, player: { weapons: { equipped, shellEjectionForce, shellRemovalTimeout } } } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!shells) { shells = gameObjects.getKeyValue('pistol-shells') }\r\n\t// matter\r\n\tthis.body = overrideOptions && overrideOptions.body\r\n\t? overrideOptions.body\r\n\t: Bodies.rectangle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 30\r\n      : x - 30\r\n    ,\r\n    mouseState.y === LESS_THAN_PLAYER_Y_POS ? y - 40 : y - 20\r\n    , 7, 4, {\r\n\t\trestitution: 0.75,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.body.label = changeLabelString !== undefined ? `player ${changeLabelString} shell` : 'player pistol shell'\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.body.label = 'shotgun shell'\r\n\t}\r\n\tWorld.add(world, this.body)\r\n\tBody.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.force ? overrideOptions.force : {\r\n\t\tx: mouseState.x === GREATER_THAN_PLAYER_X_POS ? random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max) : random.float(shellEjectionForce[equipped].min, shellEjectionForce[equipped].max),\r\n\t\ty: random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max)\r\n\t})\r\n\tBody.setAngularVelocity(this.body, random.float(-PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, -PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX))\r\n\t// pixi\r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(equipped === WEAPON_TYPE_SHOTGUN ? 0xB00000 : 0xAB931E)\r\n\t// if (!shellWd) {\r\n\t// }\r\n\tlet shellWd = getBodyWidth(this.body)\r\n\tlet shellHt = getBodyHeight(this.body)\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 1)\r\n\t} else {\r\n\t\tif (equipped === WEAPON_TYPE_SMG) {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 2)\r\n\t\t} else {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellWd, shellHt)\r\n\t\t}\r\n\t}\r\n\tthis.gfc.endFill()\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.beginFill(0xCCB64D)\r\n\t\tthis.gfc.drawRect(0, shellWd + 1, shellHt, 3)\r\n\t\t// this.gfc.rotation = radians(45)\r\n\t}\r\n\tif (!window.gameObjects.getKeyValue('bullet-shell-bevel')) {\r\n\t\twindow.gameObjects.setKeyValue('bullet-shell-bevel', new BevelFilter({ lightAlpha: 0.5, shadowAlpha: 0.5 }))\r\n\t}\r\n\tlet filters = [ window.gameObjects.getKeyValue('bullet-shell-bevel') ]\r\n\tthis.gfc.filters = getState().game.filterEffects ? filters : []\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tshells.push(this)\r\n\t// methods\r\n\tthis.destroy = function () {\r\n\t\tcontainer.removeChild(this.gfc)\r\n\t\tWorld.remove(world, this.body)\r\n\t\tthis.body = null\r\n\t\tthis.gfc = null\r\n\t\tshells.splice(shells.indexOf(this), 1)\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t\tshells = null\r\n\t}\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), shellRemovalTimeout[equipped])\r\n\treturn this\r\n}\r\n\r\nexport function PistolBullet(x, y, gameObjects, changeLabelString, overrideOptions, extraDamageBool) {\r\n\tlet world, container\r\n\tlet arm, bullets, bulletWd\r\n\tarm = getPlayerPartByType('arm', gameObjects) \r\n  let { game: { mouseRelativeToPlayerPosition, mouseState } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!bullets) { bullets = gameObjects.getKeyValue('pistol-bullets') }\r\n  this.body = overrideOptions && overrideOptions.overrideBody ? overrideOptions.overrideBody : Bodies.circle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 50\r\n      : x - 50\r\n    ,\r\n    y, 4, {\r\n\t\trestitution: 0.3\r\n  })\r\n\r\n\tthis.body.label = (\r\n\t\textraDamageBool ? 'extra damage bullet'\r\n\t\t:\r\n\t\t\tchangeLabelString !== undefined && changeLabelString !== null ?\r\n\t\t\t`player ${changeLabelString} bullet`\r\n\t\t\t:  'player pistol bullet'\r\n\t)\r\n\tthis.body.main = this\r\n  World.add(world, this.body)\r\n\tBody.setAngle(this.body, overrideOptions && overrideOptions.overrideAngle ? overrideOptions.overrideAngle : Vector.angle(this.body.position, mouseRelativeToPlayerPosition))\r\n  Body.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.overrideForce ? overrideOptions.overrideForce : calcBulletAngle(arm.position, mouseRelativeToPlayerPosition))\r\n\r\n\t// pixi \r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(0xFFFFFF)\r\n\tif (!bulletWd) { bulletWd = getBodyWidth(this.body) }\r\n\tthis.gfc.drawRect(0, 0, bulletWd, (bulletWd/3))\r\n\tthis.gfc.endFill()\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tbullets.push(this)\r\n\t// // add bullet trail\r\n  // let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n\t// this.bulletTrail = new PIXI.Graphics()\r\n\t// this.bulletTrail.lineStyle(\r\n\t// \t2,\r\n\t// \t(\r\n\t// \t\toverrideOptions ? 0xFFFFFF\r\n\t// \t\t:\r\n\t// \t\t\ttier === 1 ? 0xFFFFFF\r\n\t// \t\t\t:\r\n\t// \t\t\t\ttier === 2 ? 0xFFD100\r\n\t// \t\t\t\t:\r\n\t// \t\t\t\t\ttier === 3 ? 0xFF6D00\r\n\t// \t\t\t\t\t:\r\n\t// \t\t\t\t\t\ttier === 4 ? 0xFF0000\r\n\t// \t\t\t\t\t\t: 0xFFFFFF\r\n\t// \t),\r\n\t// \t0.8\r\n\t// )\r\n\t// this.linePoints = []\r\n\t// this.lineDrawn = false\r\n\t// this.drawLine = () => {\r\n\t// \tif (this.lineDrawn === false && getState().game.player.weapons.equipped !== WEAPON_TYPE_SHOTGUN) {\r\n\t// \t\tsetTimeout(() => {\r\n\t// \t\t\tif (this.linePoints) {\r\n\t// \t\t\t\tthis.linePoints.forEach((p, i) => {\r\n\t// \t\t\t\t\tif (this.linePoints[i+1]) {\r\n\t// \t\t\t\t\t\tthis.bulletTrail.moveTo(p.x, p.y)\r\n\t// \t\t\t\t\t\tthis.bulletTrail.lineTo(this.linePoints[i+1].x, this.linePoints[i+1].y)\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t}\r\n\t// \t\t}, 200)\r\n\t// \t\tthis.lineDrawn = true\r\n\t// \t}\r\n\t// }\r\n\t// container.addChild(this.bulletTrail)\r\n\r\n\t// methods\r\n\tthis.addImpactEffect = (surfaceType, pos) => {\r\n\t\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\t\tlet impact = new BulletImpact(surfaceType, pos)\r\n\t\tbulletImpacts.push(impact)\r\n\t}\r\n\r\n\tthis.destroyed = false\r\n\tthis.destroy = function (surfaceType) {\r\n\t\tif (!this.destroyed) {\r\n\t\t\tlet bulletLastPos = this.body.position\r\n\t\t\tthis.destroyed = true\r\n\t\t\tcontainer.removeChild(this.gfc)\r\n\t\t\tcontainer.removeChild(this.bulletTrail)\r\n\t\t\tWorld.remove(world, this.body)\r\n\t\t\tthis.linePoints = null\r\n\t\t\tthis.body = null\r\n\t\t\tthis.gfc = null\r\n\t\t\tif (bullets.indexOf(this) > -1) {\r\n\t\t\t\tbullets.splice(bullets.indexOf(this), 1)\r\n\t\t\t}\r\n\t\t\tif (surfaceType) {\r\n\t\t\t\t// add bullet collision impact effect depending on the surface hit\r\n\t\t\t\tthis.addImpactEffect(surfaceType, bulletLastPos)\r\n\t\t\t}\r\n\t\t\tworld = null\r\n\t\t\tcontainer = null\r\n\t\t\tgameObjects = null \r\n\t\t}\r\n\t}\r\n\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), PISTOL_BULLET_REMOVAL_TIMEOUT)\r\n\treturn this\r\n}\r\n\r\nconst fireEquippedWeapon = (gameObjects) => {\r\n\tlet world, weaponsUI, player, playerBody, playerBodyWd, playerBodyHt, arm\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n  if (!weaponsUI) { weaponsUI = gameObjects.getKeyValue('weapons-ui') }\r\n  if (!player) { player = gameObjects.getKeyValue('player') }\r\n\tlet { game: { player: { weapons: { lastShot, totalAmmo, equipped, shotLimiter } } } } = getState()\r\n\tif (JSON.parse(lastShot[equipped]) + shotLimiter[equipped] < Date.now() && !weaponsUI.checkEmpty(equipped) && !weaponsUI.reloading && totalAmmo[equipped] > 0) {\r\n\t\tdispatch( setLastShot(equipped, JSON.stringify(Date.now())) )\r\n\t\tdispatch( increaseStats( StatsDefs.bulletsFired ) )\r\n    weaponsUI.fireBullet(equipped)\r\n    player.fireWeaponAnimation()\r\n\t\tif (!playerBody) { playerBody = getPlayerBody(gameObjects) }\r\n\t\tif (!playerBodyWd) { playerBodyWd = getBodyWidth(playerBody) }\r\n\t\tif (!playerBodyHt) { playerBodyHt = getBodyHeight(playerBody) }\r\n\t\tif (!arm) { arm = getPlayerPartByType('arm', gameObjects) }\r\n\t\tlet extraDmg = (\r\n\t\t\tweaponsUI.lastBulletByWepType[equipped] && getState().game.player.perks['lastBullet'].owned ? true : false\r\n\t\t)\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tnew PistolShell(0, 0, gameObjects, null, {\r\n\t\t\t\tbody: Bodies.rectangle(playerBody.position.x, arm.position.y, 10, 4, { collisionFilter: playerCollisionOptions })\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tnew PistolShell(playerBody.position.x, arm.position.y, gameObjects, (\r\n\t\t\t\tequipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined\r\n\t\t\t))\r\n\t\t}\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\t\tnew PistolBullet(arm.position.x, arm.position.y, gameObjects, 'shotgun', extraDmg)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnew PistolBullet(\r\n\t\t\t\tarm.position.x,\r\n\t\t\t\tarm.position.y,\r\n\t\t\t\tgameObjects,\r\n\t\t\t\t(equipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined),\r\n\t\t\t\tnull,\r\n\t\t\t\textraDmg\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tworld = null \r\n\t\tweaponsUI = null\r\n\t\tplayer = null\r\n\t\tplayerBody = null\r\n\t\tplayerBodyWd = null\r\n\t\tplayerBodyHt = null\r\n\t\tarm = null \r\n\r\n\t} else if (totalAmmo[equipped] === 0 && getState().game.showingMessage === false) {\r\n\t\t// createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n\t\t// make click noise or some other indicator\r\n\t\tif (!weaponsUI.shaking) {\r\n\t\t\tweaponsUI.changeTextForEmptyShake('EMPTY')\r\n\t\t\tweaponsUI.emptyMagShake()\r\n\t\t}\r\n\t} else if (weaponsUI.checkEmpty(equipped) && getState().game.showingMessage === false) {\r\n\t\tif (!weaponsUI.reloading) {\r\n\t\t\t// createGenericMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// createTextMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// make empty mag sound or shake weapon UI\r\n\t\t\tif (!weaponsUI.shaking) {\r\n\t\t\t\tweaponsUI.changeTextForEmptyShake('RELOAD')\r\n\t\t\t\tweaponsUI.emptyMagShake()\r\n\t\t\t}\r\n    }\r\n\t}\r\n}\r\n\r\nexport const firePistol = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireSMG = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireShotgun = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n","import random from 'random'\r\nimport * as PIXI from 'pixi.js'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport store from '../../../app/store'\r\n\r\nexport default class MuzzleFlashFX {\r\n\r\n  constructor() {\r\n    let { gameObjects } = window\r\n    this.to = window.TweenLite.to\r\n    this.set = window.TweenLite.set\r\n    let container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.container = container\r\n    let muzzleFlashesSheet = gameObjects.getKeyValue('muzzle-flashes-sheet')\r\n    let muzzleFlash001 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash1.png']\r\n    )\r\n    let muzzleFlash002 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash2.png']\r\n    )\r\n    let muzzleFlash003 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash3.png']\r\n    )\r\n    let muzzleFlash004 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash4.png']\r\n    )\r\n    let muzzleFlash005 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash5.png']\r\n\t\t)\r\n\t\tlet muzzleFlashes = [\r\n\t\t\tmuzzleFlash001,\r\n\t\t\tmuzzleFlash002,\r\n\t\t\tmuzzleFlash003,\r\n\t\t\tmuzzleFlash004,\r\n\t\t\tmuzzleFlash005\r\n\t\t]\r\n    container.addChild(muzzleFlash001)\r\n    container.addChild(muzzleFlash002)\r\n    container.addChild(muzzleFlash003)\r\n    container.addChild(muzzleFlash004)\r\n    container.addChild(muzzleFlash005)\r\n    muzzleFlash001.visible = false\r\n    muzzleFlash002.visible = false\r\n    muzzleFlash003.visible = false\r\n    muzzleFlash004.visible = false\r\n    muzzleFlash005.visible = false\r\n    // muzzle fire FX \r\n    this.muzzleScale = .65\r\n    this.blurFilter = new PIXI.filters.BlurFilter()\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n    this.blurFilter.quality = 5\r\n    this.glowFilter = new GlowFilter()\r\n    this.glowFilter.innerStrength = 0.1\r\n    this.glowFilter.outerStrength = random.float(1.0, 1.5)\r\n    // this.glowFilter.color = 0xFFFFFF\r\n    this.adjustmentFilter = new AdjustmentFilter()\r\n    this.adjustmentFilter.brightness = 2.0\r\n    this.adjustmentFilter.saturation = 2.0\r\n    this.flashes = []\r\n    muzzleFlashes.forEach(flash => {\r\n      flash.updateAnchor = true\r\n      flash.scale = { x: this.muzzleScale, y: this.muzzleScale }\r\n      flash.filters = store.getState().game.filterEffects ? [\r\n        this.blurFilter,\r\n        this.adjustmentFilter,\r\n        this.glowFilter\r\n      ] : []\r\n      this.flashes.push( flash )\r\n    })\r\n  }\r\n\r\n  get muzzleScale () {\r\n    return this._muzzleScale\r\n  }\r\n\r\n  set muzzleScale (scale) {\r\n    this._muzzleScale = scale\r\n  }\r\n\r\n  fireEffect(pos) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let randFlash = this.getRandomFlash()\r\n    randFlash.visible = true\r\n    if (pos) {\r\n      randFlash.position = pos\r\n    }\r\n    if (store.getState().game.filterEffects) {\r\n      this.adjustmentFilter.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      this.glowFilter.color = (\r\n        tier === 1 ? 0xFFF500\r\n          :\r\n            tier === 2 ? 0xFFD100\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF3800\r\n                : 0xFFFFFF\r\n      )\r\n    }\r\n    randFlash.filters = store.getState().game.filterEffects ? [\r\n      this.glowFilter,\r\n      this.adjustmentFilter,\r\n      this.blurFilter\r\n    ] : []\r\n    this.container.addChild( randFlash )\r\n    this.set(randFlash, { alpha: 1 })\r\n    this.set(randFlash.scale, { x: this.muzzleScale })\r\n    this.to(randFlash, .1, { alpha: 0 })\r\n    this.to(randFlash.scale, .1, { x: this.muzzleScale * 2, onComplete: () => {\r\n      randFlash.visible = false\r\n    }})\r\n  }\r\n\r\n  setMuzzleRotations(rotation) {\r\n    this.flashes.forEach(flash => {\r\n      flash.rotation = rotation\r\n    })\r\n    this.rotation = rotation\r\n  }\r\n\r\n  getRandomBlur() {\r\n    return random.float(0.5, 4.0)\r\n  }\r\n\r\n  changeBlurAmount() {\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n  }\r\n\r\n  getFlashes() {\r\n    return this.flashes\r\n  }\r\n\r\n  getRandomFlash() {\r\n    return this.flashes[ Math.floor( Math.random() * this.flashes.length) ]\r\n  }\r\n\r\n}","import { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { Bodies, World, Constraint } from 'matter-js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { PistolShell, PistolBullet } from '../player/fireWeapons'\r\nimport { radians, degrees } from 'radians'\r\nimport { getBodyHeight, getBodyWidth } from '../utils/Utils'\r\nimport store from '../../../app/store'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport random from 'random'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class MachineGunTurret {\r\n\r\n  constructor(position) {\r\n    let {x,y} = position\r\n    this.delayedCall = window.TweenLite.delayedCall\r\n    this.gameObjects = window.gameObjects\r\n    this.world = this.gameObjects.getKeyValue('world')\r\n    this.buildObjects = this.gameObjects.getKeyValue('build-objects')\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    this.scanAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-scan-sheet').animations['turretScan']\r\n    )\r\n    this.scanAnim.visible = true\r\n    this.scanAnim.loop = true\r\n    this.scanAnim.play()\r\n    this.shootAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-shoot-sheet').animations['turretShoot']\r\n    )\r\n    this.shootAnim.loop = false\r\n    this.shootAnim.onFrameChange = () => {\r\n      // if (this.shootAnim.currentFrame === 2) {\r\n      //   this.fireBullet()\r\n      // }\r\n    }\r\n    this.shootAnim.onComplete = () => {\r\n      this.shootAnim.gotoAndStop(0)\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n    this.shootAnim.visible = false\r\n    this.scanAnim.width = 150\r\n    this.scanAnim.height = 150\r\n    this.scanAnim.pivot.x = this.scanAnim.width * .5\r\n    this.scanAnim.pivot.y = this.scanAnim.height\r\n    this.shootAnim.width = 150\r\n    this.shootAnim.height = 150\r\n    this.shootAnim.pivot.x = this.shootAnim.width * .5\r\n    this.shootAnim.pivot.y = this.shootAnim.height\r\n    this.turret = new Container()\r\n    this.turret.addChild(this.scanAnim, this.shootAnim)\r\n    this.container.addChild(this.turret)\r\n\r\n    this.turret.children.forEach(child => {\r\n    })\r\n\r\n    this.body = Bodies.rectangle(x, y, 50, 50, {\r\n      label: 'turret barrier',\r\n      main: this\r\n    })\r\n    this.body.removeSelf = () => {\r\n      this.destroy()\r\n    }\r\n    let ground = this.gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + position.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n    \r\n    this.body.strength = 250\r\n    this.healthDisplay = new Text(`health: ${this.body.strength}`, { fontSize: 12, fill: 0xFFFFFF })\r\n    this.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n    this.container.addChild(this.healthDisplay)\r\n\r\n    this.direction = 'right'\r\n\r\n    // re-add player sprites on-top\r\n    let player = this.gameObjects.getKeyValue('player')\r\n    if (!player.dead) {\r\n      player.sprites.forEach(s => { this.container.addChild(s) })\r\n    }\r\n\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  takeDamage(dmg) {\r\n    this.body.strength -= dmg\r\n    this.healthDisplay.text = `health: ${this.body.strength}`\r\n  }\r\n\r\n  displayBarrierStrength(renderFn) {\r\n    let {x,y} = renderFn(this.body)\r\n    this.healthDisplay.position = { x, y: y - 100 }\r\n    this.turret.position = { x, y }\r\n  }\r\n\r\n  updateDirection(direction) {\r\n    this.turret.scale.x = direction === 'left' ? -1 : 1\r\n    this.direction = direction\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  resumeScan() {\r\n    if (!this.scanning) {\r\n      this.scanning = true\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n  }\r\n\r\n  fireBullet() {\r\n    if (!this.destroyed) {\r\n      if (!this.muzzleFlashFX) {\r\n        this.muzzleFlashFX = new MuzzleFlashFX()\r\n        this.muzzleFlashFX.setMuzzleRotations(this.direction === 'left' ? degrees(-92) : degrees(92))\r\n      }\r\n      // fire bullet\r\n      let { game: { player: { weapons: { bulletForce } } } } = store.getState()\r\n      let { x, y } = this.body.position\r\n      this.muzzleFlashFX.fireEffect(\r\n        this.direction == 'left'\r\n        ? { x: this.turret.position.x - 100, y: this.turret.position.y - 25 }\r\n        : { x: this.turret.position.x + 100, y: this.turret.position.y - 25  }\r\n      )\r\n      let overrideBody = Bodies.circle(x, y - 25, 5)\r\n      let _ejectY = random.float(-0.0005, -0.00075)\r\n      new PistolShell(0, 0, this.gameObjects, null, {\r\n        body: Bodies.rectangle(x, y - 50, 7, 4, { collisionFilter: playerCollisionOptions }),\r\n        force: this.direction === 'right' ?\r\n        {\r\n          \"x\": random.float(-0.00035, -0.00075),\r\n          \"y\": _ejectY\r\n        } : {\r\n          \"x\": random.float(0.00035, 0.00075),\r\n          \"y\": _ejectY\r\n        },\r\n      })\r\n      new PistolBullet(0, 0, this.gameObjects, 'turret', {\r\n        overrideBody,\r\n        overrideForce: this.direction === 'left' ?\r\n        {\r\n          \"x\": -0.01,\r\n          \"y\": -0.00075\r\n        } : {\r\n          \"x\": 0.01,\r\n          \"y\": -0.00075\r\n        },\r\n        overrideAngle: this.direction === 'left' ? -3.0 : 0.1\r\n      })\r\n    }\r\n  }\r\n\r\n  shoot() {\r\n    if (!this.shooting && !this.destroyed) {\r\n      let { game: { traps: { turret: { cooldown } } } } = store.getState()\r\n      this.fireBullet()\r\n      this.shooting = true\r\n      this.scanAnim.visible = false\r\n      this.shootAnim.visible = true\r\n      this.shootAnim.play()\r\n      this.delayedCall(cooldown, () => {\r\n        this.shooting = false\r\n      })\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      new GrenadeExplosion(this.body.position, true)\r\n      this.container.removeChild(this.turret, this.healthDisplay)\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      let idx = this.buildObjects.indexOf(this, 1)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { AnimatedSprite } from 'pixi.js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Spark {\r\n\r\n  constructor (type, renderBody, options) {\r\n    let spark1 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('sparks-sheet').animations['spark-particle']\r\n    )\r\n    let spark2 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('muzzle-sparks-sheet').animations['muzzleSparks']\r\n    )\r\n    let sparks = [ spark1, spark2 ]\r\n    sparks.forEach(spark => {\r\n      let scale = options && options.scale ? options.scale : 1.0\r\n      if (scale !== 1.0) {\r\n        spark.scale.x = scale\r\n        spark.scale.y = scale\r\n      }\r\n      spark.pivot.x = spark.width  * .5\r\n      spark.pivot.y = spark.height * .5\r\n      spark.loop = false\r\n      spark.animationSpeed = options && options.animationSpeed ? options.animationSpeed : 1.0\r\n      spark.onComplete = () => {\r\n        this.container.removeChild(spark)\r\n        this.container = null\r\n        spark = null\r\n        spark1 = null\r\n        spark2 = null\r\n        sparks = null\r\n      }\r\n    })\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    switch (type) {\r\n      case 1:\r\n        this.spark = spark1\r\n        if (options && options.tint) {\r\n          this.spark.tint = options.tint\r\n        }\r\n        break;\r\n      case 2:\r\n        this.spark = spark2\r\n        this.blurFilter = new PIXI.filters.BlurFilter(random.float(0.5, 0.75), 5)\r\n        this.adjFilter = new AdjustmentFilter()\r\n        this.glowFilter = new GlowFilter()\r\n        this.adjFilter.saturation = 2.0\r\n        this.adjFilter.brightness = 1.5\r\n        // glowFilter.outerStrength = 1.0\r\n        this.glowFilter.color = 0xFFFFFF //0xFFD100 //0xFF9C00 //0xFFFFFF\r\n        this.filters = store.getState().game.filterEffects ? [\r\n          this.blurFilter,\r\n          this.adjFilter,\r\n          this.glowFilter\r\n        ] : []\r\n        this.spark.filters = this.filters\r\n        break;\r\n        default:\r\n    }\r\n    if (options && options.scale) {\r\n      let sparkContainer = new PIXI.Container()\r\n      this.spark.scale.x = options.scale\r\n      this.spark.scale.y = options.scale\r\n      sparkContainer.addChild(this.spark)\r\n      sparkContainer.pivot.x = sparkContainer.width * (options.scale * .5)\r\n      sparkContainer.pivot.y = sparkContainer.height * (options.scale * .5)\r\n      this.spark = sparkContainer\r\n    }\r\n\r\n    this.renderBody = renderBody\r\n    if (!options || (options && !options.stop)) {\r\n      if (this.spark.play) {\r\n        this.spark.play()\r\n      }\r\n      if (this.spark.children && this.spark.children[0]) {\r\n        this.spark.children[0].play()\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  getFilters() {\r\n    return {\r\n      glow: this.glowFilter,\r\n      adjust: this.adjFilter,\r\n      blur: this.blurFilter\r\n    }\r\n  }\r\n\r\n  updateFilters(filters) {\r\n    this.filters = filters\r\n    this.spark.filters = this.filters\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.spark.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.spark) === -1) {\r\n        this.container.addChild(this.spark)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import store from '../../../app/store'\r\nimport { MOUSE_UP } from '../constants/mouseStates'\r\nimport { setMouseButtonState, unsetAllKeys } from '../gameSlice'\r\n\r\nconst { dispatch } = store\r\n\r\nexport default () => {\r\n  dispatch( unsetAllKeys() )\r\n  dispatch( setMouseButtonState(MOUSE_UP) )\r\n  if (localStorage) {\r\n    localStorage.setItem('ZombieChamber-GameSave', JSON.stringify(store.getState().game))\r\n  }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { CustomMenuButton, Inline } from './ShopMenu'\r\nimport { gameStateTransition, incrementWave } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport saveGame from '../utils/saveGame'\r\nimport Axios from 'axios'\r\nimport { Container } from 'pixi.js'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nposition: absolute;\r\nmargin: auto;\r\ntop: 40px;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nbackground-color: #222;\r\nopacity: .5;\r\n`\r\n\r\nexport const nextWave = () => {\r\n  let { dispatch, getState } = store\r\n  let { waveNum:wave, lvlToWin, gameState, gameSubState } = getState().game\r\n  let screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  if (wave < lvlToWin) {\r\n    saveGame()\r\n    screenUI.unpause()\r\n    // dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  } else {\r\n    alert('You win!')\r\n  }\r\n}\r\n\r\nexport const processScoreInput = (name) => {\r\n  const { getState } = store\r\n  Axios.post('http://localhost:8080/scores', { name, score: getState().game.score })\r\n  .catch(err => console.log(err))\r\n  .then(result => {\r\n    console.log(result)\r\n  })\r\n}\r\n\r\nfunction ScoreSubmitScreen () {\r\n\r\n  const [nameInputValue, setNameInputValue] = React.useState('')\r\n\r\n  const handleNameInput = e => {\r\n    e.preventDefault()\r\n    setNameInputValue( e.value )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <MenuButtonContainer space-top={2}>\r\n          <Inline>\r\n            <MenuButtonSpacer padding={4}>\r\n              <input onChange={ handleNameInput }></input>\r\n            </MenuButtonSpacer>\r\n          </Inline>\r\n          <Inline>\r\n            <MenuButtonSpacer padding={4}>\r\n              <CustomMenuButton\r\n                width={300}\r\n                height={40}\r\n                onClick={\r\n                  () => {\r\n                    processScoreInput(nameInputValue)\r\n                }}>\r\n                Shop\r\n              </CustomMenuButton>\r\n            </MenuButtonSpacer>\r\n          </Inline>\r\n        </MenuButtonContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default function ShopQuery () {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const wave = useSelector(state => state.game.waveNum)\r\n  const lvlToWin = useSelector(state => state.game.lvlToWin)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const [shopQueryMenuState, setQueryMenuState] = React.useState('')\r\n\r\n  const gotoShop = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.SHOP_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n  \r\n  const gotoBuildMenu = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n\r\n  const gotoScoreSubmitScreen = () => {\r\n    setQueryMenuState('score submit screen')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        shopQueryMenuState === 'score submit screen' ?\r\n        <>\r\n          <ScoreSubmitScreen backToShopQuery={ () => setQueryMenuState('') } />\r\n        </>\r\n        :\r\n        <BottomBanner className='shop-query-menu'>\r\n          <Back />\r\n          <MenuButtonContainer space-top={2}>\r\n            <MenuButtonSpacer>\r\n              <Inline>\r\n                <MenuButtonSpacer padding={4}>\r\n                  <CustomMenuButton width={300} height={40} onClick={ gotoShop }>Shop</CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n              </Inline>\r\n              <Inline>\r\n                <MenuButtonSpacer padding={4}>\r\n                  <CustomMenuButton width={300} height={40} onClick={ gotoBuildMenu }>Build Barriers/Traps</CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n              </Inline>\r\n            </MenuButtonSpacer>\r\n            <MenuButtonSpacer padding={2}>\r\n              <CustomMenuButton width={300} height={40} onClick={ wave < lvlToWin ? nextWave : gotoScoreSubmitScreen }>\r\n                { wave < lvlToWin ? 'Next Wave' : 'Submit your score!' }\r\n              </CustomMenuButton>\r\n            </MenuButtonSpacer>\r\n            <MenuButtonSpacer padding={2}>\r\n              <CustomMenuButton width={300} height={40} onClick={ gotoScoreSubmitScreen }>\r\n                Submit your score\r\n              </CustomMenuButton>\r\n            </MenuButtonSpacer>\r\n          </MenuButtonContainer>\r\n        </BottomBanner>\r\n\r\n      }\r\n  </>\r\n  )\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { degrees } from 'radians'\r\nimport { World, Body, Bodies, Constraint, Composite, Vector } from 'matter-js'\r\nimport { setMousePosition, setPlayerCompositeId, setKeyPress,\r\n\tremoveKeyPress, setJumping, setMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot, setWeaponEquipped, setCompositeBodyIds, decrementGrenadeCount,\r\n   gameStateTransition, unsetAllKeys, resetPlayerVariables, addToTotalAmmo, addToTotalCredits,\r\n   updatePlayerHealth, subtractFromTotalCredits, setRightMouseDown, setLastMagDropped, increaseStats, StatsDefs, setAchievementOwned, AchievementDefs, setBarrierTypePlaced, setTrapTypePlaced, increaseStatsByAmount } from '../gameSlice'\r\nimport { getPlayerBody, getPlayerComposite, getBodyWidth, getBodyHeight, makePixiSprite } from '../utils/Utils'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS,\r\n\tLESS_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_Y_POS,\r\n\tMOUSE_DOWN, MOUSE_UP } from '../constants/mouseStates'\r\nimport { WEAPON_TYPE_GRENADE, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { batch } from 'react-redux'\r\nimport { createTextMessage } from '../createMessages'\r\nimport PlayerRagdoll, { PlayerRagdollHalved, PlayerRagdollDecap, PlayerRagdollMaim } from './PlayerRagdoll'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { KILLED_BY_ZOMBIE, FELL_OFF } from '../constants/DeathTypes'\r\nimport { calcGrenadeAngle } from '../utils/Utils'\r\nimport WallBarrier from '../BuildItems/WallBarrier'\r\nimport random from 'random'\r\nimport Landmine from '../BuildItems/Landmine'\r\nimport Grenade from '../items/Grenade'\r\nimport Clustermine from '../BuildItems/Clustermine'\r\nimport { trapTypes } from '../constants/buildTypes'\r\nimport RemoteMine from '../BuildItems/RemoteMine'\r\nimport MachineGunTurret from '../BuildItems/MachineGunTurret'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport Spark from '../FX/Sparks'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { Howl, Howler } from 'howler'\r\nimport { updateScore, subtractScore } from '../utils/updateScore'\r\nimport { processScoreInput } from '../ReactComponents/ShopQuery'\r\n\r\nexport class EnhancedMuzzleSpark {\r\n  constructor(renderBody) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let to = window.TweenLite.to\r\n    let gameObjects = window.gameObjects\r\n    let muzzleSpark = new Spark(2, renderBody)\r\n    let sparks = gameObjects.getKeyValue('spark-sprites')\r\n    muzzleSpark.spark.scale.x = .5 //random.float(.5, 1.0)\r\n    muzzleSpark.spark.scale.y = .5\r\n    sparks.push( muzzleSpark )\r\n    muzzleSpark.spark.gotoAndPlay( random.int(10, 15) )\r\n    if (store.getState().game.filterEffects) {\r\n      let { adjust, glow, blur } = muzzleSpark.getFilters()\r\n      adjust.brightness = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          : \r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 3.5\r\n              : 1.0\r\n      )\r\n      adjust.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      glow.color = (\r\n        tier === 1 ? 0xFFFFFF\r\n          :\r\n            tier === 2 ? 0xFFF500\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF6D00\r\n                : 0xFFFFFF\r\n      )\r\n      muzzleSpark.updateFilters([ glow, blur, adjust ])\r\n    }\r\n\r\n    to(muzzleSpark.spark.scale, .1, { x: 0.55, y: 0.55 })\r\n    return muzzleSpark\r\n  }\r\n}\r\n\r\nexport default function Player() {\r\n\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet { getState, dispatch } = store\r\n\tlet { game: { width: gameWidth, height: gameHeight, player: { constants: { width: wd, height: ht } } } } = getState()\r\n\tlet { TweenLite } = window\r\n\tlet { delayedCall, to, from, set } = TweenLite\r\n\r\n\tthis.body = Bodies.rectangle(400, 200, wd, ht, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.arm = Bodies.rectangle(400, 200, 30, 15, {\r\n\t\tfriction: 0,\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n  })\r\n  // this.armPointBody = Bodies.rectangle(400, 200, 10, 10, {\r\n  //   friction: 0,\r\n  //   inertia: Infinity,\r\n  //   collisionFilter: playerCollisionOptions\r\n  // })\r\n  // this.armPoint = Constraint.create({\r\n  //   bodyA: this.arm,\r\n  //   bodyB: this.armPointBody,\r\n  //   pointA: { x: -60, y: 0 },\r\n  //   pointB: { x: 0, y: 0 },\r\n  //   length: 0,\r\n  //   // stiffness: 1\r\n  // })\r\n\tthis.armAttach = Constraint.create({\r\n\t\tbodyA: this.arm,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 12, y: 0 },\r\n\t\tpointB: { x: 0, y: -80 },\r\n\t\tlength: 0\r\n\t})\r\n\t// head\r\n\tthis.head = Bodies.rectangle(400, 200, 20, 24, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.headAttach = Constraint.create({\r\n\t\tbodyA: this.head,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 0, y: 10 },\r\n\t\tpointB: { x: 0, y: -((ht/2) + 5) },\r\n\t\tlength: 0\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n\t\t// bodies\r\n\t\tthis.body,\r\n\t\tthis.arm,\r\n\t\tthis.head,\r\n\t\t// constraints\r\n\t\t// this.armPoint,\r\n\t\tthis.armAttach,\r\n\t\tthis.headAttach\r\n\t])\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.label = 'player character'\r\n\t\tbody.main = this\r\n\t})\r\n\tdispatch(setPlayerCompositeId(this.composite.id))\r\n\tdispatch(setCompositeBodyIds({\r\n\t\tbodyId: this.body.id,\r\n\t\theadId: this.head.id,\r\n\t\tarmId: this.arm.id\r\n  }))\r\n  dispatch(\r\n    setLastMagDropped( JSON.stringify(Date.now()) )\r\n  )\r\n\r\n\tthis.composite.body = this.body\r\n\tthis.composite.arm = this.arm\r\n\r\n\tWorld.add(world, this.composite)\r\n\r\n\tdispatch( setLastShot(WEAPON_TYPE_PISTOL, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SMG, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SHOTGUN, JSON.stringify(Date.now())) )\r\n\r\n\t// create player lifebar UI\r\n\tthis.life = 100\r\n  \r\n\tlet lifebarOutline = new PIXI.Graphics()\r\n\tlifebarOutline.lineStyle(1.0, 0x202D0A)\r\n\tlifebarOutline.drawRect(0, 0, gameWidth * .75, 12)\r\n  container.addChild(lifebarOutline)\r\n\r\n  let lifebarGreen = 0x00FA9A\r\n  let damageRed = 0xDD0E0E\r\n\tlet lifebar = new PIXI.Graphics()\r\n  lifebar.beginFill(0xFFFFFF)\r\n  lifebar.tint = lifebarGreen\r\n  lifebar.drawRect(0, 0, (gameWidth * .75) - 2, 10)\r\n  let bevel = new BevelFilter({ thickness: 5, lightAlpha: .5, lightColor: 0xffffff, shadowAlpha: .4, shadowColor: 0x0 })\r\n  lifebar.filters = getState().game.filterEffects ? [ bevel ] : []\r\n\tcontainer.addChild(lifebar)\r\n\tthis.initialLifebarWidth = lifebar.width\r\n\r\n\tlifebarOutline.position.x = 50\r\n\tlifebarOutline.position.y = gameHeight - 60\r\n\tlifebar.position.x = lifebarOutline.position.x + 1\r\n  lifebar.position.y = lifebarOutline.position.y + 1\r\n  let lifebarDefaultPosition = lifebar.position\r\n\r\n  //-- Reloading weapons\r\n  // this.reloading = false\r\n  // reload pistol anim\r\n  let charReloadPistolSpritesheet = gameObjects.getKeyValue('char-reload-pistol-sheet')\r\n  let charReloadPistolSprite = new PIXI.AnimatedSprite(charReloadPistolSpritesheet.animations['char_reload_pistol'])\r\n  charReloadPistolSprite.loop = false\r\n  charReloadPistolSprite.animationSpeed = .5\r\n  charReloadPistolSprite.updateAnchor = true\r\n  charReloadPistolSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadPistolSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadPistolSprite.visible = false\r\n  charReloadPistolSprite.onComplete = () => {\r\n    charReloadPistolSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadPistolSprite)\r\n\r\n  // reload smg anim\r\n  let charReloadSMGSpritesheet = gameObjects.getKeyValue('char-reload-smg-sheet')\r\n  let charReloadSMGSprite = new PIXI.AnimatedSprite(charReloadSMGSpritesheet.animations['char_reload_smg'])\r\n  charReloadSMGSprite.loop = false\r\n  charReloadSMGSprite.animationSpeed = .5\r\n  charReloadSMGSprite.updateAnchor = true\r\n  charReloadSMGSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadSMGSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadSMGSprite.visible = false\r\n  charReloadSMGSprite.onComplete = () => {\r\n    charReloadSMGSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadSMGSprite)\r\n  \r\n  // reload shotgun anim\r\n  let charReloadShotgunSpritesheet = gameObjects.getKeyValue('char-reload-shotgun-sheet')\r\n  let charReloadShotgunSprite = new PIXI.AnimatedSprite(charReloadShotgunSpritesheet.animations['shotgunReload'])\r\n  charReloadShotgunSprite.loop = false\r\n  charReloadShotgunSprite.animationSpeed = .5\r\n  charReloadShotgunSprite.updateAnchor = true\r\n  charReloadShotgunSprite.pivot.x = charReloadShotgunSprite.width * .725\r\n  charReloadShotgunSprite.pivot.y = charReloadShotgunSprite.height * .5\r\n  charReloadShotgunSprite.visible = false\r\n  this.shotgunShellLoadIterations = 0\r\n  this.gotoToEndOfShotgunReload = true\r\n  charReloadShotgunSprite.onComplete = () => {\r\n    charReloadShotgunSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n    this.shotgunShellLoadIterations = 0\r\n    this.gotoToEndOfShotgunReload = true\r\n  }\r\n  container.addChild(charReloadShotgunSprite)\r\n\r\n  this.reloadAnimsByType = {\r\n    'pistol weapon': charReloadPistolSprite,\r\n    'smg weapon': charReloadSMGSprite,\r\n    'shotgun weapon': charReloadShotgunSprite\r\n  }\r\n\r\n  this.reloadAnims = [\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite\r\n  ]\r\n\r\n  //-- Melee anims\r\n  let motionBlur = new MotionBlurFilter()\r\n  motionBlur.kernelSize = 5\r\n  motionBlur.velocity.x = 30\r\n  motionBlur.velocity.y = 40\r\n  // pistol melee\r\n  let meleePistolSpritesheet = gameObjects.getKeyValue('melee-pistol-sheet')\r\n  let meleePistolAnim = new PIXI.AnimatedSprite(meleePistolSpritesheet.animations['melee_pistol'])\r\n  meleePistolAnim.loop = false\r\n  meleePistolAnim.animationSpeed = .75\r\n  meleePistolAnim.updateAnchor = true\r\n  meleePistolAnim.pivot.x = meleePistolAnim.width * .5\r\n  meleePistolAnim.pivot.y = meleePistolAnim.height * .5\r\n  meleePistolAnim.visible = false\r\n  meleePistolAnim.onComplete = () => {\r\n    meleePistolAnim.gotoAndStop(0)\r\n    meleePistolAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleePistolAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleePistolAnim.currentFrame > 12 && meleePistolAnim.currentFrame < 15) {\r\n      meleePistolAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleePistolAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleePistolAnim)\r\n  \r\n  // ump melee\r\n  let meleeUMPSpritesheet = gameObjects.getKeyValue('melee-ump-sheet')\r\n  let meleeUMPAnim = new PIXI.AnimatedSprite(meleeUMPSpritesheet.animations['melee_ump'])\r\n  meleeUMPAnim.loop = false\r\n  meleeUMPAnim.animationSpeed = .75\r\n  meleeUMPAnim.updateAnchor = true\r\n  meleeUMPAnim.pivot.x = meleeUMPAnim.width * .5\r\n  meleeUMPAnim.pivot.y = meleeUMPAnim.height * .5\r\n  meleeUMPAnim.visible = false\r\n  meleeUMPAnim.onComplete = () => {\r\n    meleeUMPAnim.gotoAndStop(0)\r\n    meleeUMPAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeUMPAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeUMPAnim.currentFrame > 11 && meleeUMPAnim.currentFrame < 14) {\r\n      meleeUMPAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeUMPAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeUMPAnim)\r\n\r\n  // shotgun melee\r\n  let meleeShotgunSpritesheet = gameObjects.getKeyValue('melee-shotgun-sheet')\r\n  let meleeShotgunAnim = new PIXI.AnimatedSprite(meleeShotgunSpritesheet.animations['meleeShotgun'])\r\n  meleeShotgunAnim.loop = false\r\n  meleeShotgunAnim.animationSpeed = .5\r\n  meleeShotgunAnim.updateAnchor = true\r\n  meleeShotgunAnim.pivot.x = meleeShotgunAnim.width * .75\r\n  meleeShotgunAnim.pivot.y = meleeShotgunAnim.height * .5\r\n  meleeShotgunAnim.visible = false\r\n  meleeShotgunAnim.onComplete = () => {\r\n    meleeShotgunAnim.gotoAndStop(0)\r\n    meleeShotgunAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeShotgunAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeShotgunAnim.currentFrame > 6 && meleeShotgunAnim.currentFrame < 9) {\r\n      meleeShotgunAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeShotgunAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeShotgunAnim)\r\n\r\n  this.meleeSprites = [\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim\r\n  ]\r\n\r\n  //-- Grenade throws \r\n  this.grenadeThrowInProgress = false\r\n  this.grenadeForce = { x: 0.001, y: 0.001 }\r\n  this.chargingGrenade = false\r\n  this.chargeGrenade = () => {\r\n    this.chargeGrenadeSound = gameObjects.getKeyValue('charging-grenade-sound')\r\n    if (this.chargeGrenadeSound && !this.chargingGrenade) {\r\n      this.chargeGrenadeSound.play()\r\n    }\r\n    container.addChild(this.meter)\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.chargingGrenade = true\r\n    if (this.grenadeForce.x <= this.grenadeUpperForceThreshold) {\r\n      this.grenadeForce.x += this.grenadeChargeRate\r\n      this.grenadeForce.y += this.grenadeChargeRate\r\n    }\r\n  }\r\n\r\n  const createGrenadeChargeMeter = () => {\r\n    this.meter = new PIXI.Graphics()\r\n    this.meter.beginFill(0xffa23f)\r\n    this.meter.drawRect(0, 0, 100, 10)\r\n    container.addChild(this.meter)\r\n  }\r\n  createGrenadeChargeMeter()\r\n\r\n  this.renderGrenadeChargeMeter = renderFn => {\r\n    let { x, y } = renderFn(this.body)\r\n    this.grenadeUpperForceThreshold = getState().game.player.weapons.grenadeUpperForceThreshold\r\n    if (this.meter && this.chargingGrenade) {\r\n      this.meter.position.x = x - this.meter.width/2\r\n      this.meter.position.y = y - getBodyHeight(this.body) * .75\r\n      this.meter.width = this.grenadeForce.x/this.grenadeUpperForceThreshold * 100\r\n    } else {\r\n      this.meter.width = 0\r\n    }\r\n  }\r\n  \r\n  this.createGrenade = () => {\r\n    let r = 8\r\n    let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.updateGrenadeIcons()\r\n    let grenades = gameObjects.getKeyValue('grenades')\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.calculatedGrenadeForce = calcGrenadeAngle(this.arm.position, getState().game.mouseRelativeToPlayerPosition, this.grenadeForce)\r\n    grenades.push(\r\n      new Grenade(\r\n        getState().game.mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) : this.body.position.x - getBodyWidth(this.body),\r\n        this.body.position.y - (getBodyHeight(this.body)/2),\r\n        r,\r\n        this.calculatedGrenadeForce\r\n      )\r\n    )\r\n    this.grenadeForce = { x: 0.001, y: 0.001 }\r\n    this.chargingGrenade = false\r\n  }\r\n\r\n  this.throwGrenade = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (grenadeThrowPistolAnim.currentFrame < 1) {\r\n          grenadeThrowPistolAnim.visible = true\r\n          grenadeThrowPistolAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (grenadeThrowUMPAnim.currentFrame < 1) {\r\n          grenadeThrowUMPAnim.visible = true\r\n          grenadeThrowUMPAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (grenadeThrowShotgunAnim.currentFrame < 1) {\r\n          grenadeThrowShotgunAnim.visible = true\r\n          grenadeThrowShotgunAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n    }\r\n    if (!this.grenadeThrowInProgress) {\r\n      if (this.chargeGrenadeSound) {\r\n        this.chargeGrenadeSound.stop()\r\n      }\r\n      delayedCall(.2, () => {\r\n        let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n        _throw.play()\r\n        this.createGrenade()\r\n      })\r\n      this.chargingGrenade = false\r\n      this.grenadeThrowInProgress = true\r\n      if (attacks[equipped]) {\r\n        attacks[equipped]()\r\n        batch(() => {\r\n          dispatch( decrementGrenadeCount() )\r\n          dispatch( increaseStats( StatsDefs.grenadesThrown ) )\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // pistol equpped - 'nade throw\r\n  let grenadeThrowPistolSpritesheet = gameObjects.getKeyValue('grenade-pistol-sheet')\r\n  let grenadeThrowPistolAnim = new PIXI.AnimatedSprite(grenadeThrowPistolSpritesheet.animations['grenade_throw_pistol'])\r\n  grenadeThrowPistolAnim.loop = false\r\n  grenadeThrowPistolAnim.animationSpeed = 1.00\r\n  grenadeThrowPistolAnim.updateAnchor = true\r\n  grenadeThrowPistolAnim.pivot.x = grenadeThrowPistolAnim.width * .5\r\n  grenadeThrowPistolAnim.pivot.y = grenadeThrowPistolAnim.height * .5\r\n  grenadeThrowPistolAnim.visible = false\r\n  grenadeThrowPistolAnim.onComplete = () => {\r\n    grenadeThrowPistolAnim.gotoAndStop(0)\r\n    grenadeThrowPistolAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowPistolAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowPistolAnim.currentFrame > 22) {\r\n      if (!this.grenadeThrown) {\r\n        // this.createGrenade()\r\n        this.grenadeThrown = true\r\n        delayedCall(.5, () => { this.grenadeThrown = false })\r\n      }\r\n    }\r\n    if (grenadeThrowPistolAnim.currentFrame > 27) {\r\n      grenadeThrowPistolAnim.gotoAndStop(0)\r\n      grenadeThrowPistolAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowPistolAnim)\r\n  // ump equipped - 'nade throw\r\n  let grenadeThrowUMPSpritesheet = gameObjects.getKeyValue('grenade-ump-sheet')\r\n  let grenadeThrowUMPAnim = new PIXI.AnimatedSprite(grenadeThrowUMPSpritesheet.animations['grenade_throw_ump'])\r\n  grenadeThrowUMPAnim.loop = false\r\n  grenadeThrowUMPAnim.animationSpeed = 1.00\r\n  grenadeThrowUMPAnim.updateAnchor = true\r\n  grenadeThrowUMPAnim.pivot.x = grenadeThrowUMPAnim.width * .5\r\n  grenadeThrowUMPAnim.pivot.y = grenadeThrowUMPAnim.height * .5\r\n  grenadeThrowUMPAnim.visible = false\r\n  grenadeThrowUMPAnim.onComplete = () => {\r\n    grenadeThrowUMPAnim.gotoAndStop(0)\r\n    grenadeThrowUMPAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowUMPAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowUMPAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowUMPAnim.currentFrame > 27) {\r\n      grenadeThrowUMPAnim.gotoAndStop(0)\r\n      grenadeThrowUMPAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowUMPAnim)\r\n  // shotgun equipped - 'nade throw\r\n  let grenadeThrowShotgunSpritesheet = gameObjects.getKeyValue('grenade-shotgun-sheet')\r\n  let grenadeThrowShotgunAnim = new PIXI.AnimatedSprite(grenadeThrowShotgunSpritesheet.animations['shotgunGrenadeThrow'])\r\n  grenadeThrowShotgunAnim.loop = false\r\n  grenadeThrowShotgunAnim.animationSpeed = 1.00\r\n  grenadeThrowShotgunAnim.updateAnchor = true\r\n  grenadeThrowShotgunAnim.pivot.x = grenadeThrowShotgunAnim.width * .5\r\n  grenadeThrowShotgunAnim.pivot.y = grenadeThrowShotgunAnim.height * .5\r\n  grenadeThrowShotgunAnim.visible = false\r\n  grenadeThrowShotgunAnim.onComplete = () => {\r\n    grenadeThrowShotgunAnim.gotoAndStop(0)\r\n    grenadeThrowShotgunAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowShotgunAnim.onFrameChange = () => {\r\n    if (grenadeThrowShotgunAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowShotgunAnim.currentFrame > 27) {\r\n      grenadeThrowShotgunAnim.gotoAndStop(0)\r\n      grenadeThrowShotgunAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowShotgunAnim)\r\n\r\n  this.grenadeSprites = [\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n\r\n  this.grenadeSpritesByEquipped = {\r\n    'pistol weapon': grenadeThrowPistolAnim,\r\n    'smg weapon': grenadeThrowUMPAnim,\r\n    'shotgun weapon': grenadeThrowShotgunAnim\r\n  }\r\n  \r\n  this.ejectedMags = []\r\n\r\n  this.reloadMagazineActionsByType = {\r\n    'pistol weapon': () => {\r\n      let { game: { player: { weapons: { equipped, reloadSpeed }, perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y, 7, 20, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n        })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.0025, 0.005) : random.float(-0.0025, -0.005)),\r\n          y: random.float(-0.0025, -0.005)\r\n        })\r\n      // make some simple magazing gfx\r\n      let pistolMag = new PIXI.Graphics()\r\n      pistolMag.beginFill(0x333333)\r\n      pistolMag.drawRect(0, 0, 7, 20)\r\n      pistolMag.pivot.x = pistolMag.width/2\r\n      pistolMag.pivot.y = pistolMag.height/2\r\n      let magObj = {\r\n        gfx: pistolMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(pistolMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        pistolMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'smg weapon': () => {\r\n      let { game: { player: { perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y - (getBodyHeight(this.body)/2), 7, 42, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n      })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.004, 0.01) : random.float(-0.004, -0.01)),\r\n          y: random.float(-0.0015, -0.01)\r\n        })\r\n      // make some simple magazing gfx\r\n      let smgMag = new PIXI.Graphics()\r\n      smgMag.beginFill(0x333333)\r\n      smgMag.drawRect(0, 0, 7, 42)\r\n      smgMag.pivot.x = smgMag.width/2\r\n      smgMag.pivot.y = smgMag.height/2\r\n      let magObj = {\r\n        gfx: smgMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(smgMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        smgMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'shotgun weapon': () => {\r\n      const reloadShell = () => {\r\n        delayedCall(.3, () => {\r\n          if (this.shotgunShellLoadIterations > 5) {\r\n            charReloadShotgunSprite.gotoAndPlay(21)\r\n          } else {\r\n            charReloadShotgunSprite.gotoAndPlay(10)\r\n            this.shotgunShellLoadIterations++\r\n            reloadShell()\r\n          }\r\n        })\r\n      }\r\n      reloadShell()\r\n    }\r\n  }\r\n\r\n  this.updateEjectedMagPositions = (renderFn) => {\r\n    this.ejectedMags.forEach(mag => {\r\n      let { x, y, rotation: rot } = renderFn(mag.body)\r\n      mag.gfx.position = { x, y }\r\n      mag.gfx.rotation = rot\r\n    })\r\n  }\r\n\r\n  this.reloadWeapon = () => {\r\n    // this.reloading = true\r\n    let { game: { player: { weapons: { reloadSpeed, reloadAnimationFrames, equipped } } } } = getState()\r\n    this.reloadAnimsByType[equipped].animationSpeed = reloadSpeed[equipped]\r\n    this.reloadAnimsByType[equipped].gotoAndPlay(1)\r\n    delayedCall(\r\n      equipped === WEAPON_TYPE_PISTOL ? reloadSpeed[equipped]/4 //1\r\n      : equipped === WEAPON_TYPE_SMG ? (reloadSpeed[equipped] * 2) + (reloadSpeed[equipped]/2) //1.00\r\n      : equipped === WEAPON_TYPE_SHOTGUN ? reloadSpeed[equipped] + (reloadSpeed[equipped]/4) //.5\r\n      : 0\r\n    , () => {\r\n      if (this.reloadAnimsByType[equipped].visible === true) {\r\n        dispatch( increaseStats( StatsDefs.timesReloaded ) )\r\n        this.reloadMagazineActionsByType[equipped]()\r\n      }\r\n    })\r\n  }\r\n  \r\n  // fire pistol right arm\r\n  let charRightArmFirePistolSpritesheet = gameObjects.getKeyValue('right-arm-pistol-fire-sheet')\r\n  let charRightArmFirePistolSprite = new PIXI.AnimatedSprite(charRightArmFirePistolSpritesheet.animations['right_char_arm_pistol_fire'])\r\n  charRightArmFirePistolSprite.play()\r\n  charRightArmFirePistolSprite.loop = false\r\n  charRightArmFirePistolSprite.animationSpeed = .35\r\n  charRightArmFirePistolSprite.updateAnchor = true\r\n  charRightArmFirePistolSprite.pivot.x = charRightArmFirePistolSprite.width * .6\r\n  charRightArmFirePistolSprite.pivot.y = charRightArmFirePistolSprite.height * .4\r\n  charRightArmFirePistolSprite.onComplete = () => {\r\n    charRightArmFirePistolSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFirePistolSprite)\r\n\r\n  // fire smg right arm\r\n  let charRightArmFireSMGSpritesheet = gameObjects.getKeyValue('right-arm-smg-fire-sheet')\r\n  let charRightArmFireSMGSprite = new PIXI.AnimatedSprite(charRightArmFireSMGSpritesheet.animations['char_right_arm_smg_fire'])\r\n  charRightArmFireSMGSprite.play()\r\n  charRightArmFireSMGSprite.loop = false\r\n  charRightArmFireSMGSprite.animationSpeed = .35\r\n  charRightArmFireSMGSprite.updateAnchor = true\r\n  charRightArmFireSMGSprite.pivot.x = charRightArmFireSMGSprite.width * .6\r\n  charRightArmFireSMGSprite.pivot.y = charRightArmFireSMGSprite.height * .4\r\n  charRightArmFireSMGSprite.onComplete = () => {\r\n    charRightArmFireSMGSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireSMGSprite)\r\n\r\n  // fire shotgun right arm\r\n  let charArmsFireShotgunSpritesheet = gameObjects.getKeyValue('arms-fire-shotgun-sheet')\r\n  let charRightArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['rightArmFireShotgun'])\r\n  charRightArmFireShotgunSprite.play()\r\n  charRightArmFireShotgunSprite.loop = false\r\n  charRightArmFireShotgunSprite.animationSpeed = .5\r\n  charRightArmFireShotgunSprite.updateAnchor = true\r\n  charRightArmFireShotgunSprite.pivot.x = charRightArmFireShotgunSprite.width * .6\r\n  charRightArmFireShotgunSprite.pivot.y = charRightArmFireShotgunSprite.height * .4\r\n  charRightArmFireShotgunSprite.onComplete = () => {\r\n    charRightArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireShotgunSprite)\r\n\r\n  // head sprite\r\n  let headSprite = makePixiSprite('char-head')\r\n  container.addChild(headSprite)\r\n  this.positionHeadSprite = renderObj => {\r\n    let { game: { keys, mouseState: { x: _mx }, mousePosition, player: { variables: { jumping, currentDirection }, weapons: { equipped } } } } = getState()\r\n    let { mx, my, fn: renderFn } = renderObj\r\n    let { x, y } = renderFn(this.head)\r\n    if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n      if (currentDirection === 'right') {\r\n        if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x + 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      } else if (currentDirection === 'left') {\r\n        if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x - 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      }\r\n    } else {\r\n      headSprite.position.x = x\r\n    }\r\n    \r\n    headSprite.position.y = y + 12\r\n\r\n    if (!jumping) {\r\n      if (my === LESS_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => { sprite.pivot.y = sprite.height * .45 })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = 2.5\r\n        }\r\n        else {\r\n          headSprite.rotation = 0.9570\r\n        }\r\n      } else if (my === GREATER_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .65\r\n          sprite.pivot.y = sprite.height * .45\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x > 550 && mousePosition.x < 650) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x < 750 && mousePosition.y > 250 && mx === GREATER_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -2.7230\r\n      } else if (mousePosition.x > 450 && mousePosition.y > 250 && mx === LESS_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -0.5532\r\n      } else {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .6\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = charLeftArmFirePistolSprite.rotation\r\n      }\r\n    } else {\r\n      this.armsSpritesByType[equipped].forEach(sprite => {\r\n        sprite.pivot.x = sprite.width * .6\r\n        sprite.pivot.y = sprite.height * .47\r\n      })\r\n    }\r\n  }\r\n  headSprite.pivot.x = headSprite.width * .52\r\n  headSprite.pivot.y = headSprite.height * .17\r\n  this.headSprite = headSprite\r\n \r\n  // run anim\r\n  let charRunSpritesheet = gameObjects.getKeyValue('char-run-sheet')\r\n  let charRunSprite = new PIXI.AnimatedSprite(charRunSpritesheet.animations['char_run'])\r\n  charRunSprite.loop = true\r\n  charRunSprite.animationSpeed = 1.0\r\n  charRunSprite.updateAnchor = true\r\n  charRunSprite.pivot.x = charRunSprite.width * .52\r\n  charRunSprite.pivot.y = charRunSprite.height * .5\r\n  container.addChild(charRunSprite)\r\n \r\n  // idle anim\r\n  let charIdleSpritesheet = gameObjects.getKeyValue('char-idle-sheet')\r\n  let charIdleSprite = new PIXI.AnimatedSprite(charIdleSpritesheet.animations['char_idle'])\r\n  charIdleSprite.play()\r\n  charIdleSprite.loop = true\r\n  charIdleSprite.animationSpeed = .1\r\n  charIdleSprite.updateAnchor = true\r\n  charIdleSprite.pivot.x = charIdleSprite.width * .52\r\n  charIdleSprite.pivot.y = charIdleSprite.height * .5\r\n  container.addChild(charIdleSprite)\r\n  \r\n  // jump anim\r\n  let charJumpSpritesheet = gameObjects.getKeyValue('char-jump-sheet')\r\n  let charJumpSprite = new PIXI.AnimatedSprite(charJumpSpritesheet.animations['char_jump'])\r\n  charJumpSprite.loop = false\r\n  charJumpSprite.animationSpeed = .35\r\n  charJumpSprite.updateAnchor = true\r\n  charJumpSprite.pivot.x = charJumpSprite.width * .52\r\n  charJumpSprite.pivot.y = charJumpSprite.height * .5\r\n  //  set(charJumpSprite.scale, { x: .5, y: 1.0 })\r\n  charJumpSprite.visible = false\r\n  container.addChild(charJumpSprite)\r\n \r\n  this.stopJumpAnimation = () => {\r\n    charJumpSprite.gotoAndStop(0)\r\n    charJumpSprite.visible = false\r\n  }\r\n\r\n  charJumpSprite.onComplete = () => {\r\n    let { jumping } = getState().game.player.variables\r\n    if (!jumping) {\r\n      this.stopJumpAnimation()\r\n    } else {\r\n      this.resumeJumpAnimation()\r\n    }\r\n  }\r\n\r\n  let jumpMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.resumeJumpAnimation = () => {\r\n  charJumpSprite.gotoAndPlay(3)\r\n  charJumpSprite.visible = true\r\n  charRunSprite.visible = false\r\n  charIdleSprite.visible = false\r\n  // charJumpSprite.animationSpeed = .1\r\n  }\r\n\r\n  this.playJumpAnimation = () => {\r\n    if (getState().game.filterEffects) {\r\n      charJumpSprite.filters = [ jumpMotionBlur ]\r\n      from(jumpMotionBlur.velocity, .35, {\r\n        y: 50,\r\n        onUpdate: () => {\r\n          charJumpSprite.filters = [ jumpMotionBlur ]\r\n        }\r\n      })\r\n    }\r\n    charJumpSprite.gotoAndPlay(0)\r\n    charJumpSprite.visible = true\r\n    charRunSprite.visible = false\r\n    charIdleSprite.visible = false\r\n  }\r\n\r\n  // motion blur\r\n  let charLeftArmFirePistolSpritesheet = gameObjects.getKeyValue('left-arm-pistol-fire-sheet')\r\n  let charLeftArmFirePistolSprite = new PIXI.AnimatedSprite(charLeftArmFirePistolSpritesheet.animations['left_char_arm_pistol_fire'])\r\n  charLeftArmFirePistolSprite.play()\r\n  charLeftArmFirePistolSprite.loop = false\r\n  charLeftArmFirePistolSprite.animationSpeed = .35\r\n  charLeftArmFirePistolSprite.updateAnchor = true\r\n  charLeftArmFirePistolSprite.pivot.x = charLeftArmFirePistolSprite.width * .6\r\n  charLeftArmFirePistolSprite.pivot.y = charLeftArmFirePistolSprite.height * .4\r\n  charLeftArmFirePistolSprite.onComplete = () => {\r\n    charLeftArmFirePistolSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFirePistolSprite)\r\n   \r\n  // fire smg left arm (front)\r\n  let charLeftArmFireSMGSpritesheet = gameObjects.getKeyValue('left-arm-smg-fire-sheet')\r\n  let charLeftArmFireSMGSprite = new PIXI.AnimatedSprite(charLeftArmFireSMGSpritesheet.animations['char_left_arm_smg_fire'])\r\n  charLeftArmFireSMGSprite.play()\r\n  charLeftArmFireSMGSprite.loop = false\r\n  charLeftArmFireSMGSprite.animationSpeed = .35\r\n  charLeftArmFireSMGSprite.updateAnchor = true\r\n  charLeftArmFireSMGSprite.pivot.x = charLeftArmFireSMGSprite.width * .6\r\n  charLeftArmFireSMGSprite.pivot.y = charLeftArmFireSMGSprite.height * .4\r\n  charLeftArmFireSMGSprite.onComplete = () => {\r\n    charLeftArmFireSMGSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFireSMGSprite)\r\n\r\n  // fire shotgun left arm (front)\r\n  let charLeftArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['leftArmFireShotgun'])\r\n  charLeftArmFireShotgunSprite.play()\r\n  charLeftArmFireShotgunSprite.loop = false\r\n  charLeftArmFireShotgunSprite.animationSpeed = .5\r\n  charLeftArmFireShotgunSprite.updateAnchor = true\r\n  charLeftArmFireShotgunSprite.pivot.x = charLeftArmFireShotgunSprite.width * .6\r\n  charLeftArmFireShotgunSprite.pivot.y = charLeftArmFireShotgunSprite.height * .4\r\n  charLeftArmFireShotgunSprite.onComplete = () => {\r\n    charLeftArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charLeftArmFireShotgunSprite)\r\n\r\n  let weaponSwapMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.armsSprites = [\r\n    charLeftArmFirePistolSprite,\r\n    charRightArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charRightArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite,\r\n    charRightArmFireShotgunSprite\r\n  ]\r\n\r\n  this.armsSpritesByType = {\r\n    'pistol weapon': [ charLeftArmFirePistolSprite, charRightArmFirePistolSprite ],\r\n    'smg weapon': [ charLeftArmFireSMGSprite, charRightArmFireSMGSprite ],\r\n    'shotgun weapon': [ charLeftArmFireShotgunSprite, charRightArmFireShotgunSprite ]\r\n  }\r\n\r\n  let muzzleFlashFX = new MuzzleFlashFX()\r\n\r\n  let _9mm1 = window.gameObjects.getKeyValue('9mm-sound1')\r\n  let _9mm2 = window.gameObjects.getKeyValue('9mm-sound2')\r\n  let pistolSound1 = new Howl({\r\n    src: [ _9mm1 ],\r\n  })\r\n  let pistolSound2 = new Howl({\r\n    src: [ _9mm2 ],\r\n    sprite: {\r\n      _1: [ 500, 1000 ]\r\n    }\r\n  })\r\n  let pistolReloadSnd = window.gameObjects.getKeyValue('pistol-reload-sound')\r\n  let pistolReloadSound = new Howl({ src: [ pistolReloadSnd ], volume: .25 })\r\n  let jumpSound = gameObjects.getKeyValue('jump-sound')\r\n  let pain1Snd = gameObjects.getKeyValue('pain1-sound')\r\n  let pain2Snd = gameObjects.getKeyValue('pain2-sound')\r\n  let deathRip = gameObjects.getKeyValue('death-rip-sound')\r\n  let playerDeathSnd = gameObjects.getKeyValue('player-death-sound')\r\n  let hitImpact = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n  let smgFire = gameObjects.getKeyValue('smg-fire-sound')\r\n  let shotgunFire = gameObjects.getKeyValue('shotgun-blast-sound')\r\n\r\n  this.fireWeaponAnimation = () => {\r\n    let { game: { mouseState, player: { weapons: { equipped } } } } = getState()\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.visible = true })\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.gotoAndPlay(0) })\r\n    muzzleFlashFX.fireEffect()\r\n    // position muzzle spark particles sprite \r\n    let mSpark = new EnhancedMuzzleSpark(this.arm)\r\n    this.currentMuzzleSpark = mSpark\r\n    // sound\r\n    if (equipped === WEAPON_TYPE_PISTOL) {\r\n      pistolSound1.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SMG) {\r\n      smgFire.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SHOTGUN) {\r\n      shotgunFire.play()\r\n    }\r\n  }\r\n\r\n  this.charRunSprite = charRunSprite\r\n  this.charIdleSprite = charIdleSprite\r\n  this.charJumpSprite = charJumpSprite\r\n  // weapons specific\r\n  this.charReloadPistolSprite = charReloadPistolSprite\r\n  this.charReloadSMGSprite = charReloadSMGSprite\r\n  this.charReloadShotgunSprite = charReloadShotgunSprite\r\n\r\n  this.bodySprites = [\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n  \r\n  this.sprites = [\r\n    charRightArmFirePistolSprite,\r\n    charRightArmFireSMGSprite,\r\n    charRightArmFireShotgunSprite,\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n    charLeftArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite\r\n  ]\r\n\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 60, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n  blur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      this.shadow.alpha = .85\r\n      this.shadow.filters = [blur]\r\n      lifebar.filters = [bevel]\r\n    } else {\r\n      this.shadow.alpha = .45\r\n      this.shadow.filters = []\r\n      lifebar.filters = []\r\n    }\r\n  }\r\n\r\n  this.setBodySpritesPositions = obj => {\r\n    let { fn } = obj\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.bodySprites.forEach(sprite => {\r\n      sprite.position.x = x\r\n      sprite.position.y = y - 15\r\n    })\r\n    if (container && container.children.indexOf(this.shadow) === -1) {\r\n      container.addChild(this.shadow)\r\n    }\r\n    this.shadow.position.x = x\r\n    this.shadow.position.y = this.bodySprites[0].position.y + this.bodySprites[0].height/2 - 5\r\n  }\r\n\r\n  this.setArmsSpritePosition = obj => {\r\n    // .125 is a rotation adjustment so that the arms sprite lines up more accurately with where the bullet is coming from\r\n    let { game: { keys, mouseState: { x: _mx, y: _my }, player: { variables: { jumping, currentDirection } } } } = getState()\r\n    let { fn } = obj\r\n    let { x, y, rotation: rot } = fn(this.arm)\r\n    this.armsSprites.forEach(sprite => {\r\n      // sprite.x = x\r\n      if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n        if (currentDirection === 'right') {\r\n          if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n            sprite.x = x + 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        } else if (currentDirection === 'left') {\r\n          if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n            sprite.x = x - 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        }\r\n      } else {\r\n        sprite.x = x\r\n      }\r\n\r\n      if (jumping) {\r\n        if (_my === LESS_THAN_PLAYER_Y_POS) {\r\n          sprite.y = y - 10\r\n        } else {\r\n          sprite.y = y\r\n        }\r\n      } else {\r\n        sprite.y = y\r\n      }\r\n\r\n      sprite.rotation = rot\r\n    })\r\n    // keep muzzle flashes aligned with gun arm\r\n    let fpos, frot\r\n    muzzleFlashFX.getFlashes().forEach(flash => {\r\n      flash.position = charRightArmFirePistolSprite.position\r\n      flash.rotation = rot - degrees(90)\r\n      flash.pivot.x = -flash.width * .05\r\n      flash.pivot.y = getState().game.player.weapons.equipped === WEAPON_TYPE_SHOTGUN ? flash.height * 3.25 : flash.height * 2.25\r\n      fpos = flash.position\r\n      frot = flash.rotation\r\n    })\r\n    if (this.currentMuzzleSpark) {\r\n      this.currentMuzzleSpark.spark.pivot.x = -this.currentMuzzleSpark.spark.width\r\n      this.currentMuzzleSpark.spark.position = fpos\r\n      this.currentMuzzleSpark.spark.rotation = rot - degrees(180)\r\n    }\r\n  }\r\n\r\n  this.meleeAttackInProgress = false\r\n\r\n  this.createMeleeHitbox = () => {\r\n    let { mouseState, player: { weapons: {equipped} } } = getState().game\r\n    let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n    _throw.play()\r\n    this.meleeHitbox = Bodies.rectangle(\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) * 1.75 : this.body.position.x - getBodyWidth(this.body) * 1.75,\r\n      this.body.position.y - getBodyHeight(this.body)/2,\r\n      getBodyWidth(this.body) * 2,\r\n      getBodyHeight(this.body), {\r\n        isStatic: true\r\n      })\r\n    this.meleeHitbox.main = this\r\n    this.meleeHitbox.label = `melee hitbox ${equipped}`\r\n    World.add(world, this.meleeHitbox)\r\n  }\r\n  this.removeMeleeHitbox = () => {\r\n    if (this.meleeHitbox) {\r\n      World.remove(world, this.meleeHitbox)\r\n    }\r\n  }\r\n\r\n  this.meleeAttack = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (meleePistolAnim.currentFrame < 1) {\r\n          meleePistolAnim.visible = true\r\n          meleePistolAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (meleeUMPAnim.currentFrame < 1) {\r\n          meleeUMPAnim.visible = true\r\n          meleeUMPAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (meleeShotgunAnim.currentFrame < 1) {\r\n          meleeShotgunAnim.visible = true\r\n          meleeShotgunAnim.gotoAndPlay(1)\r\n        }\r\n      }\r\n    }\r\n    if (!this.meleeAttackInProgress) {\r\n      this.meleeAttackInProgress = true\r\n      delayedCall(.35, () => {\r\n        if (!this.dead) {\r\n          this.createMeleeHitbox()\r\n        }\r\n        delayedCall(.1, () => {\r\n          this.removeMeleeHitbox()\r\n        })\r\n      })\r\n      attacks[equipped]()\r\n    }\r\n  }\r\n\r\n  this.collectHealth = (amount) => {\r\n    this.life += amount\r\n    if (this.life > 100) {\r\n      this.life = 100\r\n    }\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    updateScore( getState().game.scoreAmounts.collectHealth )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.collectCredits = (amount) => {\r\n    dispatch(\r\n      addToTotalCredits(amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectCredit )\r\n  }\r\n\r\n  this.collectAmmo = (wepType, amount) => {\r\n    createTextMessage(`+${amount} ${wepType} ammo`, '#32BD6A', .35, 1)\r\n    dispatch(\r\n      addToTotalAmmo(wepType, amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectAmmo )\r\n  }\r\n\r\n\tthis.playerHit = false\r\n\tthis.resetPlayerHit = () => {\r\n\t\tthis.playerHit = true\r\n\t\tdelayedCall(1, () => {\r\n\t\t\tthis.playerHit = false\r\n\t\t})\r\n  }\r\n  \r\n  this.blinkAlpha = () => {\r\n    this.headSprite.alpha = .25\r\n    this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n    this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    delayedCall(.1, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.2, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.3, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.35, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.4, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.45, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.5, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n  }\r\n\r\n\tthis.takeDamage = dmg => {\r\n    let { game: { player: { variables: { defense } } } } = getState()\r\n    this.life -= (dmg - defense)\r\n    subtractScore( getState().game.scoreAmounts.penalties.damageTaken )\r\n    batch(() => {\r\n      dispatch( updatePlayerHealth(this.life) )\r\n      dispatch( increaseStatsByAmount( StatsDefs.damageTaken, dmg ) )\r\n    })\r\n    let randomNum = [ 1, 2 ][Math.floor( Math.random() * 2 )]\r\n    if (randomNum === 1) {\r\n      pain1Snd.play()\r\n    } else {\r\n      pain2Snd.play()\r\n    }\r\n    hitImpact.play()\r\n    lifebar.tint = damageRed\r\n    to(lifebar, .2, { width: (this.life/100 * this.initialLifebarWidth) })\r\n    to(lifebar, .1, {\r\n      y: lifebar.position.y + 2,\r\n      onComplete: () => {\r\n        to(lifebar, .1, {\r\n          y: lifebar.position.y - 3,\r\n          onComplete: () => {\r\n            to(lifebar, .1, {\r\n              y: lifebar.position.y + 1,\r\n              onComplete: () => {\r\n                lifebar.tint = lifebarGreen\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n    let bloodSpurtPos = {\r\n      x: random.float(this.bodySprites[0].position.x - 5, this.bodySprites[0].position.x + 20),\r\n      y: random.float(this.bodySprites[0].position.y, this.bodySprites[0].position.y - 60)\r\n    }\r\n    createTextMessage(`-${dmg}`, '#FF0000', .35, 1, 12)\r\n    new BloodSpurt(null, bloodSpurtPos, .75)\r\n    this.blinkAlpha()\r\n\t\tthis.resetPlayerHit()\r\n\t\tif (this.life <= 0) {\r\n\t\t\tthis.kill()\r\n\t\t}\r\n  }\r\n  \r\n  this.acceptHealth = amt => {\r\n    this.life = amt\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.addSpritesInOrder = () => {\r\n    container.addChild(this.headSprite)\r\n    this.armsSprites.forEach(sprite => container.addChild(sprite))\r\n    this.bodySprites.forEach(sprite => container.addChild(sprite))\r\n    // move front arms back on top\r\n    container.addChild(charLeftArmFirePistolSprite)\r\n    container.addChild(charLeftArmFireSMGSprite)\r\n    container.addChild(charLeftArmFireShotgunSprite)\r\n    container.addChild(lifebar)\r\n  }\r\n\r\n\tthis.respawn = () => {\r\n    engine.timing.timeScale = 1.0\r\n    if (this.playerRagdoll) {\r\n      this.playerRagdoll.destroy()\r\n      this.playerRagdoll = null\r\n    }\r\n    dispatch( increaseStats( StatsDefs.timesRespawned ) )\r\n    subtractScore( getState().game.scoreAmounts.penalties.respawn )\r\n    this.addSpritesInOrder()\r\n\t\tthis.life = 100\r\n\t\tlifebar.width = this.initialLifebarWidth\r\n\t\tthis.dead = false\r\n    lifebar.visible = lifebarOutline.visible = true\r\n    if (this.lastDeathType === FELL_OFF) {\r\n      // place our character back on-stage if he's fallen off\r\n      if (this.lastBodyPosition.x < 0) {\r\n        while (this.body.position.x < 200 && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: 100, y: -100 })\r\n        }\r\n      } else {\r\n        while (this.body.position.x > getState().game.width && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: -100, y: -100 })\r\n        }\r\n      }\r\n    }\r\n    World.add(world, this.composite)\r\n    if (getState().game.lastGameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n      )\r\n    } else {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_RESPAWN)\r\n      )\r\n    }\r\n  }\r\n\r\n\tthis.dead = false\r\n\tthis.kill = (deathType) => {\r\n    if (this.dead === false) {\r\n      if (deathType) {\r\n        this.lastDeathType = deathType\r\n      } else {\r\n        deathRip.play()\r\n        this.lastDeathType = KILLED_BY_ZOMBIE\r\n      }\r\n      dispatch( increaseStats( StatsDefs.timesKilled ) )\r\n      subtractScore( getState().game.scoreAmounts.penalties.killed )\r\n      playerDeathSnd.play()\r\n      engine.timing.timeScale = .5\r\n      lifebar.visible = lifebarOutline.visible = false\r\n      this.life = 0\r\n      this.dead = true\r\n      this.removeMeleeHitbox()\r\n      this.lastBodyPosition = this.body.position\r\n      World.remove(world, this.composite)\r\n      if (this.bodySprites && this.armsSprites) {\r\n        container.removeChild(this.headSprite)\r\n        this.bodySprites.forEach(sprite => container.removeChild(sprite))\r\n        this.armsSprites.forEach(sprite => container.removeChild(sprite))\r\n      }\r\n      let force = {\r\n        x: engine.timing.timeScale === 1\r\n        ? charIdleSprite.scale.x === 1 ? 0.1 : -0.1\r\n        : charIdleSprite.scale.x === 1 ? 0.25 : -0.25\r\n        ,\r\n        y: engine.timing.timeScale === 1\r\n        ? -0.25\r\n        : -0.75\r\n      }\r\n      let parts = [ 'head', 'body', 'limb', 'none' ]\r\n      let partLastDamaged = parts[ Math.floor( Math.random() * parts.length ) ]\r\n      \r\n      if (partLastDamaged === 'head') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollDecap({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'body') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollHalved({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'limb') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollMaim({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdoll({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      }\r\n  \r\n      batch(() => {\r\n        dispatch(unsetAllKeys())\r\n        dispatch(resetPlayerVariables())\r\n        dispatch(setMouseButtonState(MOUSE_UP))\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      })\r\n    }\r\n\t}\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumpForce, jumping } } } } = getState()\r\n\r\n    // jump\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        \r\n        if (e.keyCode === 87 && !jumping && !this.chargingGrenade) {\r\n            dispatch(setJumping(true))\r\n            jumpSound.play()\r\n            this.playJumpAnimation()\r\n            Body.applyForce(this.body, this.body.position, { x: 0, y: jumpForce })\r\n        } else {\r\n            if (keys.indexOf(e.keyCode) < 0) {\r\n              dispatch(setKeyPress(e.keyCode))\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    // melee \r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !jumping && !this.grenadeThrowInProgress) {\r\n        if (e.key === 'f' || e.key === 'F') {\r\n          this.meleeAttack()\r\n        }\r\n      }\r\n    }\r\n\r\n    // Shop / Continue / Build \r\n    if (gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (e.key === 'Enter') {\r\n        processScoreInput()\r\n      }\r\n    }\r\n    // done with build placement\r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (e.key === 'b' || e.key === 'B') {\r\n        let arrow = gameObjects.getKeyValue('object-placement-arrow')\r\n        arrow.changeBack = true\r\n        dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n        dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n      }\r\n    }\r\n\r\n    // cycle weapon [spacebar]\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if (e.keyCode === 32) {\r\n        if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n          let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // remote mine detonation [numbers 1 thru 9]\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      let numKeys = [ '1', '2', '3', '4', '5', '6', '7', '8', '9' ]\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let idx = numKeys.indexOf(e.key.toString())\r\n      console.log(e.key)\r\n      if (idx > -1) {\r\n        if (remoteMines[e.key.toString()]) {\r\n          remoteMines[e.key.toString()].detonate()\r\n          delete remoteMines[e.key.toString()]\r\n        }\r\n      }\r\n    }\r\n    \r\n    // turret placement direction\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (getState().game.traps.selectedTrap === trapTypes.TURRET) {\r\n        let currentTurret = gameObjects.getKeyValue('current-turret')\r\n        if (currentTurret) {\r\n          if (e.key === 'ArrowLeft') {\r\n            currentTurret.updateDirection('left')\r\n          }\r\n          if (e.key === 'ArrowRight') {\r\n            currentTurret.updateDirection('right')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    // reload weapon [R]\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (e.keyCode === 82 && !this.meleeAttackInProgress) {\r\n        let { game: { showingMessage, player: { weapons: { equipped, totalAmmo } } } } = getState()\r\n        if (totalAmmo[equipped] === 0 && showingMessage === false) {\r\n          createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n        } else if (!weaponsUI.reloading && !jumping && !this.dead) {  //&& !this.reloading) {\r\n          this.reloadWeapon()\r\n          weaponsUI.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n\t}\r\n\r\n\tconst handleKeyUp = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumping } } } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tlet idx = keys.indexOf(e.keyCode)\r\n\t\t\t\tif (idx > -1) {\r\n\t\t\t\t\tdispatch(removeKeyPress(e.keyCode))\r\n        }\r\n        // grenade [G]\r\n        if ((e.key === 'g' || e.key === 'G') && getState().game.player.weapons.totalAmmo[WEAPON_TYPE_GRENADE] > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n          if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n            this.throwGrenade()\r\n          }\r\n        }\r\n      }\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMouseDown = e => {\r\n    console.log(e)\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (!this.dead && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        if (e.buttons === 1) {\r\n          dispatch(setMouseButtonState(MOUSE_DOWN))\r\n        } else if (e.buttons === 2) {\r\n          dispatch(setRightMouseDown(true))\r\n          console.log('should charge')\r\n        }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n  \r\n\tconst handleMouseUp = e => {\r\n    let { game: { gameState } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      console.log(e)\r\n      dispatch(setMouseButtonState(MOUSE_UP))\r\n      if (getState().game.rightMouseDown) {\r\n        dispatch(setRightMouseDown(false))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const handleMouseWheel = e => {\r\n    // console.log(e)\r\n    let { gameState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU || gameState !== GameStates.SCORES_VIEW) {\r\n      e.preventDefault()\r\n    }\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n        if (e.deltaY < 0) {\r\n          if (list[list.indexOf(equipped) - 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx - 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[list.length - 1]))\r\n          }\r\n        } else if (e.deltaY > 0) {\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tlet playerBody = getPlayerBody(gameObjects)\r\n\tlet playerArm = getPlayerComposite(gameObjects).bodies[1]\r\n\tlet bh = getBodyHeight(this.body)\r\n\r\n\tconst handleMouseMove = e => {\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (e.target && e.target === document.getElementsByTagName('canvas')[1] && e.target.getBoundingClientRect) {\r\n\t\t\t\tlet armAngle\r\n\t\t\t\tlet mouseX, mouseY\r\n        let rect = e.target.getBoundingClientRect()\r\n        // console.log(e.target)\r\n\t\t\t\tlet x = e.clientX - rect.left\r\n\t\t\t\tlet y = e.clientY - rect.top\r\n\t\t\t\tlet { game: { mouseRelativeToPlayerPosition: mPosRel } } = getState()\r\n\t\t\t\tdispatch(setMousePosition({ x, y }))\r\n\r\n\t\t\t\tif (mPosRel.x > playerBody.position.x) {\r\n\t\t\t\t\tmouseX = GREATER_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.x < playerBody.position.x) {\r\n\t\t\t\t\tmouseX = LESS_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y > playerBody.position.y + bh/2) {\r\n\t\t\t\t\tmouseY = GREATER_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y < playerBody.position.y - bh) {\r\n\t\t\t\t\tmouseY = LESS_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarmAngle = Vector.angle(mPosRel, playerArm.position)\r\n\t\t\t\tBody.setAngle(playerArm, armAngle)\r\n\r\n\t\t\t\tdispatch(setMouseStateX(mouseX))\r\n\t\t\t\tdispatch(setMouseStateY(mouseY))\r\n\t\t\t}\r\n    }\r\n\r\n  }\r\n  \r\n  const handleMouseClick = e => {\r\n    let {game:{player:{credits},mouseRelativeToPlayerPosition,gameSubState,traps:{selectedTrap, costToBuild:costToBuild_trap},barriers:{selectedBarrier,costToBuild:costToBuild_barrier}}} = getState()\r\n    if (gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      let _y = 360\r\n      let position = {\r\n        x: mouseRelativeToPlayerPosition.x,\r\n        y: _y\r\n      }\r\n      let width = 50\r\n      let height = 100\r\n      let buildNewLocation = true\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let buildObjects = gameObjects.getKeyValue('build-objects')\r\n      let placeObjectSound = gameObjects.getKeyValue('place-object-sound')\r\n      let cancelSound = gameObjects.getKeyValue('button-cancel-sound')\r\n      const buildObjectPlacementComparison = (obj) => (position.x + (width/2) < obj.getBody().position.x - getBodyWidth(obj.getBody())/2) ||\r\n      (obj.getBody().position.x + getBodyWidth(obj.getBody())/2 < position.x - (width/2))\r\n      let checkAllowArray = buildObjects.map(obj => {\r\n        if (buildObjectPlacementComparison(obj)) {\r\n          return 'allow placement'\r\n        } else {\r\n          return 'place next to'\r\n        }\r\n      })\r\n\r\n      // find closest build object\r\n      let closestX\r\n      if (buildObjects.length > 0) {\r\n        let buildObjectXPositions = buildObjects.map(obj => obj.getBody().position.x)\r\n        closestX = buildObjectXPositions.reduce((prev, curr) => (\r\n          (Math.abs(curr - position.x) < Math.abs(prev - position.x) ? curr : prev)\r\n        ))\r\n        console.log( closestX )\r\n      }\r\n      \r\n      let idx = checkAllowArray.indexOf('place next to')  //.indexOf('deny')\r\n      if (idx > -1) {\r\n        buildNewLocation = false\r\n      }\r\n      \r\n      if (selectedBarrier) {\r\n        let barrier\r\n        if (credits >= costToBuild_barrier[selectedBarrier]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            barrier = new WallBarrier(position, { width, height }, selectedBarrier)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              barrier = new WallBarrier({ x: closestX - width, y: position.y}, { width, height }, selectedBarrier)\r\n            } else {\r\n              barrier = new WallBarrier({ x: closestX + width, y: position.y}, { width, height }, selectedBarrier)\r\n            }\r\n          }\r\n          if (barrier) {\r\n            batch(() => {\r\n              dispatch( setBarrierTypePlaced( selectedBarrier ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_barrier[selectedBarrier]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.barrierTypesPlaced) {\r\n                // console.log( getState().game.barrierTypesPlaced )\r\n                if (Object.keys(getState().game.barrierTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.BARRICADE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.BARRICADE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_barrier[selectedBarrier]}`, 0xFF0000, .5, .75)\r\n            buildObjects.push(barrier)\r\n            placeObjectSound.play()\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n\r\n      const buildTrap = (trapPosition) => {\r\n        switch (selectedTrap) {\r\n          case trapTypes.LANDMINE:\r\n            return new Landmine(trapPosition)\r\n          case trapTypes.CLUSTER_BOMB:\r\n            return new Clustermine(trapPosition)\r\n          case trapTypes.REMOTE_MINE:\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            return new RemoteMine(trapPosition, remoteMinesArr.length + 1)\r\n          case trapTypes.TURRET:\r\n            return new MachineGunTurret(trapPosition)\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (selectedTrap) {\r\n        let trap\r\n        if (credits >= costToBuild_trap[selectedTrap]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            trap = buildTrap(position)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              trap = buildTrap({ x: closestX - width, y: position.y })\r\n            } else {\r\n              trap = buildTrap({ x: closestX + width, y: position.y })\r\n            }\r\n          }\r\n          if (trap) {\r\n            batch(() => {\r\n              dispatch( setTrapTypePlaced( selectedTrap ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_trap[selectedTrap]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.trapTypesPlaced) {\r\n                // console.log( getState().game.trapTypesPlaced )\r\n                if (Object.keys(getState().game.trapTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.TRAPHOUSE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.TRAPHOUSE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_trap[selectedTrap]}`, 0xFF0000, .5, .75)\r\n            placeObjectSound.play()\r\n            buildObjects.push(trap)\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            if (selectedTrap === trapTypes.REMOTE_MINE) {\r\n              if (remoteMinesArr.length < 10) {\r\n                let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n                remoteMinesArr.push( trap )\r\n                remoteMinesArr.forEach((mine, i) => {\r\n                  remoteMines[i + 1] = mine\r\n                  mine.updateNumber(i + 1)\r\n                })\r\n              } else {\r\n                cancelSound.play()\r\n                createTextMessage('can hold up to 9 remote mines at a time', 0xFF0000, .5, .75)\r\n              }\r\n            }\r\n            if (selectedTrap === trapTypes.TURRET) {\r\n              createTextMessage('Press Left or Right arrow to change turret direction', 0xFFFFFF, .75, 2)\r\n              gameObjects.setKeyValue('current-turret', trap)\r\n            }\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleRightClick = e => {\r\n    // console.log(e)\r\n    e.preventDefault()\r\n    let { game: { gameState, gameSubState, player: { variables: {jumping}, weapons:{ totalAmmo:{ grenades:grenadesCount } }} } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (grenadesCount > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n          this.throwGrenade()\r\n          console.log('throw!')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tif (!window.keydownListenersAdded) {\r\n\t\twindow.addEventListener('keydown', handleKeyDown)\r\n\t\twindow.addEventListener('keyup', handleKeyUp)\r\n\t\twindow.addEventListener('mousemove', handleMouseMove)\r\n\t\twindow.addEventListener('mousedown', handleMouseDown)\r\n    window.addEventListener('mouseup', handleMouseUp)\r\n    window.addEventListener('click', handleMouseClick)\r\n    window.addEventListener('contextmenu', handleRightClick)\r\n    window.addEventListener('wheel', handleMouseWheel)\r\n\t\twindow.keydownListenersAdded = true\r\n  }\r\n  \r\n  this.pause = () => {\r\n    if (this.charRunSprite.currentFrame !== 0) {\r\n      this.charRunSprite.play()\r\n    }\r\n    if (this.charReloadPistolSprite.currentFrame !== 0) {\r\n      this.charReloadPistolSprite.play()\r\n    }\r\n    if (this.charReloadSMGSprite.currentFrame !== 0) {\r\n      this.charReloadSMGSprite.play()\r\n    }\r\n    if (charJumpSprite.currentFrame !== 0) {\r\n      charJumpSprite.play()\r\n    }\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.charRunSprite.stop()\r\n    this.charReloadPistolSprite.stop()\r\n    this.charReloadSMGSprite.stop()\r\n    charJumpSprite.stop()\r\n    dispatch( setJumping(false) )\r\n    // charJumpSprite.animationSpeed = .35\r\n  }\r\n\r\n\treturn this\r\n\r\n}\r\n","import * as PIXI from 'pixi.js'\r\n\r\nconst { TweenLite: { to, from, kill } } = window\r\n\r\nexport default function Crosshairs(gameObjects) {\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tthis.crosshair = new PIXI.Container()\r\n\tthis.cross = new PIXI.Graphics()\r\n\tthis.cross.lineStyle(2, 0xB00000, 0.75)\r\n\tthis.cross.moveTo(0, -15)\r\n\tthis.cross.lineTo(0, 15)\r\n\tthis.cross.moveTo(-15, 0)\r\n\tthis.cross.lineTo(15, 0)\r\n\tthis.crosshair.addChild(this.cross)\r\n\tthis.circle = new PIXI.Graphics()\r\n\tthis.circle.lineStyle(1, 0xB00000, 0.75)\r\n\tthis.circle.drawCircle(0, 0, 10)\r\n\tthis.crosshair.addChild(this.circle)\r\n  this.changed = false\r\n  this.changeBack = false\r\n\tthis._new = null\r\n  container.addChild(this.crosshair)\r\n\r\n\tthis.crosshair.buildArrow = (color) => {\r\n\t\tlet crosshair = gameObjects.getKeyValue('crosshair')\r\n    container.removeChild(crosshair)\r\n    let _new = new PIXI.Graphics()\r\n    _new.lineStyle(2, color, 1.0)\r\n    _new.beginFill(0x777777, 0.0)\r\n    _new.moveTo(0,0)\r\n    _new.lineTo(20, 0)\r\n    _new.lineTo(20, 30)\r\n    _new.lineTo(30, 30)\r\n    _new.lineTo(10, 45)\r\n    _new.lineTo(-10, 30)\r\n    _new.lineTo(0, 30)\r\n    _new.lineTo(0, 0)\r\n    _new.endFill()\r\n    _new.pivot.x = _new.width * .5\r\n    _new.pivot.y = _new.height * .5\r\n    container.addChild(_new)\r\n    this._new = _new\r\n    crosshair._new = _new\r\n    crosshair.changed = true\r\n    gameObjects.setKeyValue('object-placement-arrow', _new)\r\n    // animated arrow loop\r\n    this.animationLoop = () => {\r\n      to(_new.scale, .5, {\r\n        x: 1.2,\r\n        y: .75,\r\n        onComplete: () => {\r\n          to(_new.scale, .5, {\r\n            x: .9,\r\n            y: 1.2,\r\n            onComplete: this.animationLoop\r\n          })\r\n        }\r\n      })\r\n    }\r\n    this.animationLoop()\r\n\r\n\t\treturn _new\r\n\t}\r\n\r\n\treturn this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport random from 'random'\r\n\r\nexport default function GroundEffect (pos, type, bodyPart) {\r\n  let {x,y} = pos\r\n  let {gameObjects,TweenLite:{to,delayedCall}} = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n  let fxSheet = gameObjects.getKeyValue('ground-fx-sheet')\r\n  let bulletTextures = [\r\n    'bullet-impact1.png',\r\n    'bullet-impact2.png'\r\n  ]\r\n  let groundBloodSpatters = [\r\n    'ground-blood-spatter1.png',\r\n    'ground-blood-spatter2.png',\r\n    'ground-blood-spatter3.png',\r\n  ]\r\n  const getRandomRoundBulletImpact = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        bulletTextures[ Math.floor( Math.random() * bulletTextures.length ) ]\r\n      ]\r\n  ))\r\n  const getRandomBloodSpatter = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        groundBloodSpatters[ Math.floor( Math.random() * groundBloodSpatters.length ) ]\r\n      ]\r\n  ))\r\n  \r\n  let sprite\r\n  if (type === 'bullet impact') {\r\n    sprite = getRandomRoundBulletImpact()\r\n  }\r\n  if (type === 'blood spatter') {\r\n    sprite = getRandomBloodSpatter()\r\n  }\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * (bodyPart ? .2 : .5)\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  if (\r\n    sprite.position.x - sprite.width > ground.bounds.min.x ||\r\n    sprite.position.x + (sprite.width/2) < ground.bounds.max.x\r\n    ) {\r\n  }\r\n  // re-add player sprites on-top\r\n  let player = gameObjects.getKeyValue('player')\r\n  if (!player.dead) {\r\n    player.sprites.forEach(s => { container.addChild(s) })\r\n  }\r\n\r\n  let positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n  World.add(world, positionalBody)\r\n\r\n  this.renderPosition = renderFn => {\r\n    sprite.position = renderFn(positionalBody)\r\n    if (container && container.children.indexOf(sprite) === -1) {\r\n      container.addChild(sprite)\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    World.remove(world, positionalBody)\r\n    container.removeChild(sprite)\r\n    let idx = groundFx.indexOf(this)\r\n    if (idx > -1) {\r\n      groundFx.splice(idx, 1)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    groundFx = null\r\n    fxSheet = null\r\n    bulletTextures = null\r\n    groundBloodSpatters = null\r\n    positionalBody = null\r\n  }\r\n\r\n  const tweenOut = () => {\r\n    to(sprite, .5, {\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        this.destroy()\r\n      }\r\n    })\r\n  }\r\n  delayedCall(1, tweenOut)\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { Body, Render, World } from 'matter-js'\r\nimport { getBodyWidth, getBodyHeight, getPlayerPartByType, makePixiSprite } from './utils/Utils'\r\nimport { setLastDirection, setCurrentDirection, setJumping, setLastMagDropped, setMouseRelativeToPlayerPosition, setPlayerPosition, setZombiesOnLeft, setZombiesOnRight, setAchievementOwned, AchievementDefs } from './gameSlice'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET } from './constants/weapons'\r\nimport { MOUSE_DOWN, GREATER_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_X_POS } from './constants/mouseStates'\r\nimport { firePistol, fireSMG, fireShotgun, calcPistolDamage, calcShotgunDamage, calcSMGDamage, calcTurretDamage } from './player/fireWeapons'\r\nimport Crosshairs from './player/crosshairs'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { FELL_OFF } from './constants/DeathTypes'\r\nimport store from '../../app/store'\r\nimport GroundEffect from './FX/GroundEffect'\r\nimport Spark from './FX/Sparks'\r\nimport { degrees } from 'radians'\r\nimport WallTile from './WallTile'\r\nimport { updateScore } from './utils/updateScore'\r\n\r\nconst { getState, dispatch } = store\r\nlet { width, height } = getState().game\r\nconst { TweenLite: { delayedCall } } = window\r\n\r\nconst createCollision = (e, i, { body1_label, body2_label, callback }) => {\r\n  let bodies = {}\r\n  if (e.pairs[i].bodyA.label.indexOf(body1_label) > -1 && e.pairs[i].bodyB.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyA\r\n    bodies.body2 = e.pairs[i].bodyB\r\n    callback(bodies)\r\n  } else if (e.pairs[i].bodyB.label.indexOf(body1_label) > -1 && e.pairs[i].bodyA.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyB\r\n    bodies.body2 = e.pairs[i].bodyA\r\n    callback(bodies)\r\n  }\r\n}\r\n\r\nconst calculateDamageAmount = (weapon_str, body) => {\r\n  if (weapon_str === WEAPON_TYPE_PISTOL) { return calcPistolDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SMG) { return calcSMGDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SHOTGUN) { return calcShotgunDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_TURRET) { return calcTurretDamage(body) }\r\n  return calcPistolDamage(body)\r\n}\r\n\r\nexport const checkCollisionStart = (e, i, gameObjects) => {\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ground',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'barrier',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'gib',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter'))\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'zombie body part',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let zombieBodyPartBool = true\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter', zombieBodyPartBool))      \r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'player character',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let world = gameObjects.getKeyValue('world')\r\n      World.remove(world, bodies.body1)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'turret bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_TURRET, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part, null, null, 'turret')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_PISTOL, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SMG, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SHOTGUN, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'extra damage bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { max } = getState().game.player.weapons.damage[\r\n          getState().game.player.weapons.equipped\r\n        ]\r\n        bodies.body2.main.takeDamage(max * 3, 'head', 'critical')\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (getState().game.lastMagDropped && JSON.parse(getState().game.lastMagDropped) + 200 < Date.now()) {\r\n        let snd = gameObjects.getKeyValue('mag-drop-sound')\r\n        snd.play()\r\n      }\r\n      dispatch(\r\n        setLastMagDropped( JSON.stringify(Date.now()) )\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.takeDamage(20, 'head')\r\n      }\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF7500 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox',\r\n    body2_label: 'enemy zombie body',\r\n    callback: bodies => {\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF0000 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n      // apply extra knockback\r\n      let direction = getState().game.player.variables.currentDirection \r\n      let x = 0\r\n      let knockback = getState().game.player.upgradeTiers.melee.current * 3\r\n      while(x < 10) {\r\n        x++\r\n        Body.translate(bodies.body2, {\r\n          x: direction === 'right' ? -knockback : knockback,\r\n          y: -0.25\r\n        })\r\n      }\r\n      // increase score\r\n      updateScore( getState().game.scoreAmounts.meleeConnect )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox pistol',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_PISTOL]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox smg',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SMG]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox shotgun',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SHOTGUN]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'clustermine explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrel explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'barrel explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'grenade explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'enemy',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        delayedCall(.1, () => {\r\n          bodies.body2.main.explode()\r\n          if (\r\n            bodies.body2.distance.start - bodies.body2.distance.end > 2000 ||\r\n            bodies.body2.distance.end - bodies.body2.distance.start > 2000\r\n            ) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.FROM_DOWNTOWN )\r\n            )\r\n            updateScore( getState().game.scoreAmounts.achievement )\r\n          }\r\n        })\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.takeDamage) {\r\n        let dmg = getState().game.enemies.zombies.attackDmg, player = bodies.body1.main\r\n        if (!player.playerHit) {\r\n          player.takeDamage(dmg)\r\n        }\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'explosive barrier',\r\n    body2_label: 'bullet',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n      gameObjects.getKeyValue('spark-sprites').push(\r\n        new Spark(1, bodies.body2, { scale: .5, animationSpeed: 2.0 })\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrier',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'health drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectHealth) {\r\n        player.collectHealth(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ammo drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectAmmo) {\r\n        player.collectAmmo(bodies.body2.ammo_type, bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('ammo-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'currency drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectCredits) {\r\n        player.collectCredits(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('coin-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'shotgun shell',\r\n    callback: bodies => {\r\n      let snd = gameObjects.getKeyValue('shot-shell-sound')\r\n      snd.play()\r\n      snd.fade(1, 0, 200)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      let grenadeClink = gameObjects.getKeyValue('grenade-clink-sound')\r\n      grenadeClink.play()\r\n      grenadeClink.fade(1, 0, 500)\r\n    }\r\n  })\r\n}\r\n\r\nlet gameTickVarsDefined = false\r\nlet weaponsUI, render, groundTex, groundBody, groundFx, player, playerBody, acceleration ,pistolBullets, pistolBulletWd, pistolBulletHt, bulletImpacts,\r\npistolShells, pistolShellWd, pistolShellHt, ammoDrops, pistolAmmoDrops, smgAmmoDrops, shotgunAmmoDrops, creditDrops, crosshair, crosshairs, zombies, zombieRags,\r\nbuildObjects, gibs, grenades, explosions, rocks, woodPlanks, container, gameWidth, leftEnemyCount, rightEnemyCount, leftEnemyCountDisplay, rightEnemyCountDisplay,\r\nexplosionSprites, sparkSprites, healthdrops, wallTile\r\n\r\nconst getZombieRadarTextStyle = (count) => ({\r\n  fill: count === 0  ? '#00e595' : '#FF0000',\r\n  fontSize: 12\r\n})\r\n\r\nexport const gameTickHandler = (e, gameObjects) => {\r\n\r\n  if (!gameTickVarsDefined) {\r\n    render = gameObjects.getKeyValue('render')\r\n    container = gameObjects.getKeyValue('container')\r\n    gameWidth = gameObjects.getKeyValue('game-width')\r\n    weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    groundTex = gameObjects.getKeyValue('ground-texture')\r\n    groundBody = gameObjects.getKeyValue('ground')\r\n    groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n    acceleration = getState().game.player.variables.acceleration.min\r\n    // zombies left / right counters\r\n    leftEnemyCountDisplay = new PIXI.Text('')\r\n    leftEnemyCountDisplay.position = { x: 10, y: 5 }\r\n    rightEnemyCountDisplay = new PIXI.Text('zombies on right: 0')\r\n    rightEnemyCountDisplay.pivot.x = rightEnemyCountDisplay.width * .075\r\n    rightEnemyCountDisplay.position = { x: gameWidth, y: 5 }\r\n    // player \r\n    player = gameObjects.getKeyValue('player')\r\n    playerBody = getPlayerPartByType('body', gameObjects)\r\n    crosshairs = new Crosshairs(gameObjects)\r\n    crosshair = crosshairs.crosshair\r\n    gameObjects.setKeyValue('crosshair-shape', crosshairs.crosshair)\r\n    gameObjects.setKeyValue('crosshair', crosshair)\r\n    // items\r\n    gibs = gameObjects.getKeyValue('gibs')\r\n    grenades = gameObjects.getKeyValue('grenades')\r\n    explosions = gameObjects.getKeyValue('explosions')\r\n    rocks = gameObjects.getKeyValue('rocks')\r\n    woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n    buildObjects = gameObjects.getKeyValue('build-objects')\r\n    explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n    // container\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n    wallTile = new WallTile()\r\n    let gradientAlpha = gameObjects.getKeyValue('gradient-alpha')\r\n    gradientAlpha.alpha = .75\r\n    container.addChild( wallTile, gradientAlpha, groundTex )\r\n    player.addSpritesInOrder()\r\n    container.addChild( leftEnemyCountDisplay )\r\n    container.addChild( rightEnemyCountDisplay )\r\n    // vars declared?\r\n    gameTickVarsDefined = true\r\n  }\r\n\r\n  // enemies\r\n  zombies = gameObjects.getKeyValue('zombies')\r\n  zombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n  // items \r\n  pistolShells = gameObjects.getKeyValue('pistol-shells')\r\n  pistolBullets = gameObjects.getKeyValue('pistol-bullets')\r\n  bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n  ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n  creditDrops = gameObjects.getKeyValue('currency-drops')\r\n  healthdrops = gameObjects.getKeyValue('health-drops')\r\n  pistolAmmoDrops = ammoDrops[WEAPON_TYPE_PISTOL]\r\n  smgAmmoDrops = ammoDrops[WEAPON_TYPE_SMG]\r\n  shotgunAmmoDrops = ammoDrops[WEAPON_TYPE_SHOTGUN]\r\n\r\n  let {\r\n    game: {\r\n      keys,\r\n      // width: gameWidth,\r\n      // height: gameHeight,\r\n      gameState,\r\n      gameSubState,\r\n      mouseState,\r\n      mousePosition,\r\n      player: {\r\n        variables: { magnetism, magnetismSpeed, currentDirection, jumping, acceleration: { max: accelMax }, deceleration },\r\n        weapons: { laser: laserSight, equipped, totalAmmo: { grenades: grenadesCount } }\r\n      },\r\n      enemies: {\r\n        zombies: {\r\n          zombieAttackLimiter,\r\n          zombieAttackDistance\r\n        }\r\n      },\r\n      traps: {\r\n        turret: { fireDistance }\r\n      },\r\n      mouseState: { x: mx, y: my, btn: mouseButtonState }\r\n    }\r\n  } = getState()\r\n  let mPosRel = {\r\n    x: mousePosition.x + playerBody.position.x - (width / 2),\r\n    y: mousePosition.y + playerBody.position.y - (height / 2)\r\n  }\r\n  dispatch(setMouseRelativeToPlayerPosition({ x: mPosRel.x, y: mPosRel.y }))\r\n\r\n  // Render pixi graphics in-line with matter objects\r\n  const renderPositionFn = part => {\r\n    return {\r\n      x: part.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration),\r\n      y: part.position.y - playerBody.position.y + (height / 2),\r\n      rotation: part.angle\r\n    }\r\n  }\r\n\r\n  if (gameState === GameStates.GAMEPLAY) {\r\n\r\n    // render tile bg\r\n    wallTile.renderPosition(renderPositionFn, playerBody, acceleration)\r\n    // wallTile.onUpdate()\r\n\r\n    // Player weapons\r\n    // check if firing\r\n    if (mouseButtonState === MOUSE_DOWN && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // check weapon type\r\n      if (equipped === WEAPON_TYPE_PISTOL) { firePistol(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SMG) { fireSMG(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SHOTGUN) { fireShotgun(gameObjects) }\r\n    }\r\n\r\n    // console.log(width, height)\r\n\r\n    // Set render view to follow player\r\n    Render.lookAt(render, {\r\n      min: { x: playerBody.position.x + (width / 2), y: playerBody.position.y - (height / 2) },\r\n      max: { x: playerBody.position.x - (width / 2), y: playerBody.position.y + (height / 2) }\r\n    })\r\n\r\n    // Player movement / controls\r\n    Body.setAngle(playerBody, 0)\r\n\r\n    if (!weaponsUI.reloading && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // movement\r\n      if (keys.indexOf(68) > -1 || keys.indexOf(65) > -1) {\r\n        if (acceleration < accelMax) {\r\n          acceleration += .25\r\n        }\r\n      } else {\r\n        dispatch(setLastDirection(currentDirection))\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1 && keys.indexOf(65) > -1) {\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1) {\r\n        dispatch(setCurrentDirection('right'))\r\n        Body.translate(playerBody, { x: acceleration, y: 0 })\r\n      }\r\n      if (keys.indexOf(65) > -1) {\r\n        dispatch(setCurrentDirection('left'))\r\n        Body.translate(playerBody, { x: -acceleration, y: 0 })\r\n      }\r\n\r\n      // grenades\r\n      if (keys.indexOf(71) > -1 && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n        }\r\n      }\r\n      if (getState().game.rightMouseDown && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n          console.log('should charge grenade from engineHandlers')\r\n        }\r\n      }\r\n    }\r\n\r\n    let { x: playerPosX, y: playerPosY } = renderPositionFn(playerBody)\r\n    dispatch(setPlayerPosition({ x: playerPosX, y: playerPosY }))\r\n\r\n    // render health drops\r\n    healthdrops.forEach(health => {\r\n      health.renderPosition(renderPositionFn)\r\n    })\r\n\r\n    // render ammo boxes\r\n    pistolAmmoDrops.concat(\r\n      smgAmmoDrops\r\n    ).concat(\r\n      shotgunAmmoDrops\r\n    ).forEach(box => {\r\n      box.positionAmmoBox(renderPositionFn)\r\n      if (box.body && box.body.position.y > 500) {\r\n        box.destroy()\r\n      }\r\n      if (box.body) {\r\n        if (playerBody.position.x > box.body.position.x && ((playerBody.position.x - box.body.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: magnetismSpeed, y: 0 })\r\n        }\r\n        if (playerBody.position.x < box.body.position.x && ((box.body.position.x - playerBody.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: -magnetismSpeed, y: 0 })\r\n        }\r\n      }\r\n    })\r\n\r\n    // render currency drops\r\n    creditDrops.forEach(coin => {\r\n      coin.positionCreditGfx(renderPositionFn)\r\n      if (coin.creditBody && coin.creditBody.position.y > 500) {\r\n        coin.destroy()\r\n      }\r\n      if (coin.creditBody) {\r\n        if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: (magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n        if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: -(magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: -magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // render player graphics\r\n    player.setBodySpritesPositions({ mx, fn: renderPositionFn })\r\n    player.setArmsSpritePosition({ mx, my, fn: renderPositionFn })\r\n    player.positionHeadSprite({ mx, my, fn: renderPositionFn })\r\n    player.renderGrenadeChargeMeter(renderPositionFn)\r\n\r\n    if (player.charRunSprite && player.charIdleSprite && player.charJumpSprite) {\r\n\r\n      if (keys.indexOf(65) > -1 || keys.indexOf(68) > -1) {\r\n        if (!jumping) {\r\n          player.charRunSprite.play()\r\n          player.charRunSprite.visible = true\r\n          player.charIdleSprite.visible = false\r\n          player.stopJumpAnimation()\r\n        }\r\n      } else {\r\n        player.charRunSprite.stop()\r\n        player.charRunSprite.visible = false\r\n        player.charIdleSprite.visible = true\r\n        // added below lines to stop sprites overlapping\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnims.forEach(sprite => { sprite.visible = false })\r\n      }\r\n\r\n      if (\r\n        (keys.indexOf(65) > -1 && mouseState.x === GREATER_THAN_PLAYER_X_POS) ||\r\n        (keys.indexOf(68) > -1 && mouseState.x === LESS_THAN_PLAYER_X_POS)\r\n      ) {\r\n        player.charRunSprite.animationSpeed = -1\r\n      } else {\r\n        player.charRunSprite.animationSpeed = 1\r\n      }\r\n\r\n      if (mouseState.x === GREATER_THAN_PLAYER_X_POS) {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = -1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = -1 })\r\n        player.headSprite.scale.y = -1\r\n      } else {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = 1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = 1 })\r\n        player.headSprite.scale.y = 1\r\n      }\r\n\r\n      if (weaponsUI.reloading) {\r\n        player.bodySprites.forEach(sprite => { sprite.visible = false })\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnimsByType[equipped].visible = true\r\n        player.charIdleSprite.visible = false\r\n      } else {\r\n        if (player.armsSpritesByType[equipped]) {\r\n          player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.visible = true\r\n          })\r\n          player.reloadAnimsByType[equipped].visible = false\r\n        }\r\n      }\r\n\r\n      if (jumping || weaponsUI.reloading || player.meleeAttackInProgress || player.grenadeThrowInProgress) {\r\n        player.headSprite.visible = false\r\n      } else {\r\n        player.headSprite.visible = true\r\n      }\r\n\r\n      if (!jumping) {\r\n        player.stopJumpAnimation()\r\n      } else {\r\n        player.charIdleSprite.visible = false\r\n        if (player.charJumpSprite.currentFrame < 2) {\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.y += 80\r\n          })\r\n        }\r\n      }\r\n\r\n      if (player.meleeAttackInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.meleeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n      if (player.grenadeThrowInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.grenadeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    // render player ragdoll\r\n    if (gameObjects.getKeyValue('player-ragdoll') !== null) {\r\n      let playerRag = gameObjects.getKeyValue('player-ragdoll')\r\n      if (playerRag && playerRag.animateRagParts) {\r\n        playerRag.animateRagParts(renderPositionFn)\r\n      }\r\n    }\r\n\r\n  } // -- end if gameState === GameState.GAMEPLAY\r\n\r\n  if (player.body.position.y > 500) {\r\n    player.kill(FELL_OFF)\r\n  }\r\n\r\n  // render pistol shells\r\n  for (let i = 0; i < pistolShells.length; ++i) {\r\n    if (!pistolShellWd) { pistolShellWd = getBodyWidth(pistolShells[i].body) }\r\n    if (!pistolShellHt) { pistolShellHt = getBodyHeight(pistolShells[i].body) }\r\n    pistolShells[i].gfc.position.x = pistolShells[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolShells[i].gfc.position.y = pistolShells[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolShells[i].gfc.rotation = equipped === WEAPON_TYPE_SHOTGUN ? pistolShells[i].body.angle + degrees(90) : pistolShells[i].body.angle\r\n  }\r\n  // render pistol bullets\r\n  for (let i = 0; i < pistolBullets.length; ++i) {\r\n    if (!pistolBulletWd) { pistolBulletWd = getBodyWidth(pistolBullets[i].body) }\r\n    if (!pistolBulletHt) { pistolBulletHt = getBodyHeight(pistolBullets[i].body) }\r\n    pistolBullets[i].gfc.position.x = pistolBullets[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolBullets[i].gfc.position.y = pistolBullets[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolBullets[i].gfc.rotation = pistolBullets[i].body.angle\r\n  }\r\n\r\n  // render grenades\r\n  grenades.forEach(grenade => {\r\n    grenade.animate(renderPositionFn)\r\n  })\r\n\r\n  // explosions tracking\r\n  explosions.forEach(explosion => {\r\n    explosion.calcRenderedPosition(renderPositionFn)\r\n  })\r\n  rocks.forEach(rock => { rock.animate(renderPositionFn) })\r\n  woodPlanks.forEach(wood => { wood.animate(renderPositionFn) })\r\n\r\n  // update ejected mags\r\n  player.updateEjectedMagPositions(renderPositionFn)\r\n\r\n  // render gibs / guts \r\n  gibs.forEach(gib => {\r\n    gib.animate(renderPositionFn)\r\n  })\r\n\r\n  // for zombie count radar\r\n  leftEnemyCount = 0\r\n  rightEnemyCount = 0\r\n\r\n  // keep zombie arm angle inline with player position\r\n  zombies.forEach(zombie => {\r\n    zombie.setPlayerVars({ player, playerDirection: currentDirection, playerBody })\r\n    if (!zombie.paused) {\r\n      zombie.walk()\r\n    }\r\n    Body.setAngle(zombie.body, 0)\r\n    zombie.setSpritesPositions(renderPositionFn)\r\n    // kill zombies who fall off the ledge\r\n    if (zombie.body.position.y > 500) {\r\n      let killType = 'fell off'\r\n      zombie.kill(null, null, killType)\r\n    }\r\n    // trigger zombie attack\r\n    if (\r\n      (playerBody.position.x > zombie.body.position.x && ((playerBody.position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n      (playerBody.position.x < zombie.body.position.x && ((zombie.body.position.x - playerBody.position.x) < zombieAttackDistance))) {\r\n      if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n        zombie.attack()\r\n      }\r\n    }\r\n    // trigger attack if next to a wall\r\n    buildObjects.forEach(obj => {\r\n      if (obj && !obj.destroyed && obj.getBody().label !== 'remote mine trap') {\r\n        // zombie attack barrier control \r\n        if (\r\n          (obj.getBody().position.x > zombie.body.position.x && ((obj.getBody().position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n          (obj.getBody().position.x < zombie.body.position.x && ((zombie.body.position.x - obj.getBody().position.x) < zombieAttackDistance))) {\r\n          if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n            if (obj.getBody().label !== 'landmine trap') {\r\n              zombie.attack()\r\n            }\r\n          }\r\n        }\r\n        // turret fire control\r\n        if (\r\n          obj.direction && obj.direction === 'right' && zombie.body.position.x > obj.getBody().position.x - 10 && zombie.body.position.x - obj.getBody().position.x < fireDistance ||\r\n          obj.direction && obj.direction === 'left' && zombie.body.position.x < obj.getBody().position.x - 10 && obj.getBody().position.x - zombie.body.position.x < fireDistance\r\n          ) {\r\n            obj.shoot()\r\n        }\r\n      }\r\n    })\r\n    // count zombies on left and right side of player\r\n    if (!zombie.dead) {\r\n      if (zombie.body.position.x < playerBody.position.x) {\r\n        leftEnemyCount += 1\r\n      }\r\n      if (zombie.body.position.x > playerBody.position.x) {\r\n        rightEnemyCount += 1\r\n      }\r\n    }\r\n  })\r\n  \r\n  // build traps and barriers\r\n  buildObjects.forEach(obj => {\r\n    if (obj && !obj.destroyed && obj.displayBarrierStrength) {\r\n      obj.displayBarrierStrength(renderPositionFn)\r\n    }\r\n    if (obj.updatePosition) {\r\n      obj.updatePosition(renderPositionFn)\r\n    }\r\n  })\r\n\r\n  // double-check in case radar counts are inaccurate\r\n  if (getState().game.waveCountToDefeat === 0 || getState().game.waveCountToDefeat === null) {\r\n    // for zombie count radar\r\n    leftEnemyCount = 0\r\n    rightEnemyCount = 0\r\n  }\r\n\r\n  // update zombie count on sides of player\r\n  leftEnemyCountDisplay.text = `${leftEnemyCount}`\r\n  leftEnemyCountDisplay.style = getZombieRadarTextStyle(leftEnemyCount)\r\n  rightEnemyCountDisplay.text = `${rightEnemyCount}`\r\n  rightEnemyCountDisplay.style = getZombieRadarTextStyle(rightEnemyCount)\r\n\r\n  zombieRags.forEach(rag => {\r\n    rag.animateRagParts(renderPositionFn)\r\n  })\r\n\r\n  // render crosshair\r\n  if (gameSubState !== SubStates.PLAYER_DEATH) {\r\n    crosshair.position = mousePosition\r\n  }\r\n\r\n  if (crosshair.changed) {\r\n    crosshair = crosshair._new\r\n    crosshair.changed = false\r\n  }\r\n\r\n  // if crosshair is an arrow..\r\n  if (crosshair.changeBack) {\r\n    container.removeChild(crosshair)\r\n    crosshair = crosshairs.crosshair\r\n    container.addChild(crosshairs.crosshair)\r\n    crosshair.changeBack = false\r\n  }\r\n\r\n  // ground\r\n  groundTex.position = renderPositionFn(groundBody)\r\n\r\n  // bullet impacts\r\n  bulletImpacts.forEach(impact => { impact.renderPosition(renderPositionFn) })\r\n  groundFx.forEach(fx => { fx.renderPosition(renderPositionFn) })\r\n\r\n  // fx\r\n  explosionSprites.forEach(ex => { ex.renderPosition(renderPositionFn) })\r\n  sparkSprites.forEach(spark => { spark.renderPosition(renderPositionFn) })\r\n\r\n  // keep cursor on top\r\n  container.addChild(crosshairs.crosshair)\r\n\r\n}\r\n","import { Texture } from '@pixi/core'\r\nimport { TilingSprite } from '@pixi/sprite-tiling'\r\nimport store from '../../app/store'\r\n\r\nexport default class WallTile extends TilingSprite {\r\n    constructor() {\r\n        // console.log(gameObjects)\r\n        const texture = Texture.from(\r\n          window.gameObjects.getKeyValue('wall-tile')\r\n        )\r\n        super(texture, 1, texture.height) //width 1 because we will call onResize from App anyway\r\n        this.width = window.gameObjects.getKeyValue('game-width')\r\n        this.height = window.gameObjects.getKeyValue('game-height')\r\n        this.alpha = .2\r\n    }\r\n\r\n    onResize(width, height) {\r\n        // this.width = width\r\n    }\r\n\r\n    onUpdate(delta) {\r\n    \tthis.tilePosition.x -= delta * 4\r\n    }\r\n\r\n    renderPosition(renderFn, body, acceleration) {\r\n      let { x, y } = renderFn(body)\r\n      let { getState } = store\r\n      let { game: { keys, player: { variables: { currentDirection, jumping } } } } = getState()\r\n      if (currentDirection === 'right' && keys.indexOf(68) > -1) {\r\n        this.tilePosition.x -= .35 //(acceleration * .25)\r\n      }\r\n      if (currentDirection === 'left' && keys.indexOf(65) > -1) {\r\n        this.tilePosition.x += .35 //(acceleration * .25)\r\n      }\r\n      if (jumping) {\r\n        this.tilePosition.y += .25\r\n      }\r\n      // let player = window.gameObjects.getKeyValue('player')\r\n      // console.log( player.body )\r\n    }\r\n}","import { Graphics } from 'pixi.js'\r\nimport { Bodies, Body, World } from 'matter-js'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport store from '../../../app/store'\r\n\r\nexport default class HealthDrop {\r\n\r\n  constructor(amt, pos) {\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    let _amt = amt * 3\r\n    this.gfc = new Graphics()\r\n    this.gfc.lineStyle(2, 0x0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.gfc.lineStyle(0, 0x0, 0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.bevel = new BevelFilter({ thickness: 3, lightAlpha: .5, shadowAlpha: .5, shadowColor: 0x247F4D })\r\n    this.glow = new GlowFilter({ outerStrength: .5 })\r\n    this.gfc.filters = store.getState().game.filterEffects ? [\r\n      this.glow, this.bevel,\r\n    ] : []\r\n\r\n    this.body = Bodies.rectangle(pos.x, pos.y, _amt, _amt, {\r\n      restitution: .65,\r\n      collisionFilter: itemCollisionOptions\r\n    })\r\n    this.body.main = this\r\n    this.body.amount = amt\r\n    this.body.label = 'health drop'\r\n    World.add(window.gameObjects.getKeyValue('world'), this.body)\r\n    window.gameObjects.getKeyValue('health-drops').push( this )\r\n    \r\n    return this\r\n  }\r\n\r\n  checkFilters() {\r\n    if (this.gfc && store.getState().game.filterEffects) {\r\n      this.gfc.filters = [ this.bevel, this.glow ]\r\n    } else {\r\n      if (this.gfc) {\r\n        this.gfc.filters = []\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    let idx = healths.indexOf(this)\r\n    if (idx > -1) { healths.splice(idx, 1) }\r\n    this.gfc.destroy()\r\n    this.gfc = null\r\n    World.remove(window.gameObjects.getKeyValue('world'), this.body)\r\n    this.body = null\r\n    healths = null\r\n    idx = null\r\n    this.container = null\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.container && this.container.children.indexOf(this.gfc) === -1) {\r\n      this.container.addChild(this.gfc)\r\n    }\r\n    this.gfc.position = renderFn(this.body)\r\n  }\r\n\r\n}","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Text, Container, filters } from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\n\r\nexport default function AmmoDrop (position, weaponType, amount) {\r\n  let { BlurFilter } = filters  \r\n  let { gameObjects } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n\r\n  let colors = {\r\n    'pistol weapon': 0x0254FF,\r\n    'smg weapon': 0xFF9D02,\r\n    'shotgun weapon': 0xA52121,\r\n  }\r\n\r\n  let text = {\r\n    'pistol weapon': 'PISTOL',\r\n    'smg weapon': 'SMG',\r\n    'shotgun weapon': 'SHOTGUN',\r\n  }\r\n  \r\n  let props = {\r\n    x: position.x, y: position.y,\r\n    w: 50, h: 20\r\n  }\r\n\r\n  let ammoBox = Bodies.rectangle(props.x, props.y, props.w, props.h, {\r\n    collisionFilter: itemCollisionOptions\r\n  })\r\n  ammoBox.label = 'ammo drop'\r\n  ammoBox.ammo_type = weaponType\r\n  ammoBox.amount = amount\r\n  let world = gameObjects.getKeyValue('world')\r\n  World.add(world, ammoBox)\r\n\r\n  ammoBox.main = this\r\n\r\n  let ammoGfc = new Container()\r\n\r\n  let boxGfc = new Graphics()\r\n  boxGfc.beginFill(colors[weaponType])\r\n  boxGfc.drawRect(0, 0, props.w, props.h)\r\n  boxGfc.pivot.x = boxGfc.width * .5\r\n  boxGfc.pivot.y = boxGfc.height * .5\r\n  let bevelFilter = new BevelFilter()\r\n  bevelFilter.thickness = 5\r\n  bevelFilter.lightColor = 0xffffff\r\n  bevelFilter.lightAlpha = 0.25\r\n  bevelFilter.shadowColor = 0x0\r\n  bevelFilter.shadowAlpha = 0.25\r\n  boxGfc.filters = store.getState().game.filterEffects ? [\r\n    bevelFilter\r\n  ] : []\r\n\r\n  let blurGfc, blurFilter\r\n  blurGfc = new Graphics()\r\n  blurGfc.beginFill(0x000000)\r\n  blurGfc.drawRect(0, props.h/2, props.w, props.h/2)\r\n  blurGfc.pivot.x = blurGfc.width * .5\r\n  blurGfc.pivot.y = blurGfc.height * .5\r\n  blurFilter = new BlurFilter(5, 3)\r\n  blurGfc.alpha = .85\r\n  blurGfc.filters = store.getState().game.filterEffects ? [\r\n    blurFilter\r\n  ] : []\r\n  // if (store.getState().game.filterEffects) {\r\n  // }\r\n\r\n  let mask = new Graphics()\r\n  mask.beginFill(colors[weaponType])\r\n  mask.drawRect(0, 0, props.w, props.h)\r\n  mask.pivot.x = mask.width * .5\r\n  mask.pivot.y = mask.height * .5\r\n  blurGfc.mask = mask\r\n\r\n  if (store.getState().game.filterEffects) {\r\n    ammoGfc.addChild(boxGfc, blurGfc, mask)\r\n  } else {\r\n    ammoGfc.addChild(boxGfc, mask)\r\n  }\r\n\r\n  let boxTxt = new Text(text[weaponType], { fontSize: '9px', fill: '#FFF', fontWeight: 'bold' })\r\n  boxTxt.pivot.x = boxTxt.width * .5\r\n  boxTxt.pivot.y = boxTxt.height * .5\r\n  let glow = new GlowFilter()\r\n  glow.color = 0x0\r\n  glow.outerStrength = 1.0\r\n  boxTxt.filters = store.getState().game.filterEffects ? [ glow ] : []\r\n  ammoGfc.addChild(boxTxt)\r\n\r\n  // container.addChild(ammoGfc)\r\n\r\n  this.gfc = ammoGfc\r\n  this.body = ammoBox\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      ammoGfc.addChild(blurGfc, boxTxt)\r\n      boxGfc.filters = [ bevelFilter ]\r\n      blurGfc.filters = [ blurFilter ]\r\n      boxTxt.filters = [ glow ]\r\n    } else {\r\n      if (ammoGfc.children.indexOf(blurGfc) > -1) {\r\n        ammoGfc.removeChild(blurGfc)\r\n      }\r\n      boxGfc.filters = []\r\n      blurGfc.filters = []\r\n      boxTxt.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    const idx = ammoDrops[weaponType].indexOf(this)\r\n    if (idx > -1) {\r\n      ammoDrops[weaponType].splice(idx, 1)\r\n      ammoGfc.destroy()\r\n      World.remove(world, ammoBox)\r\n    }\r\n  }\r\n  \r\n  // auto time-out to destroy self \r\n  setTimeout(() => {\r\n    this.destroy()\r\n  }, 20000)\r\n\r\n  ammoDrops[weaponType].push(this)\r\n\r\n  this.positionAmmoBox = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(ammoBox)\r\n    ammoGfc.position = { x, y }\r\n    ammoGfc.rotation = rot\r\n    if (container && container.children.indexOf(this.gfc) === -1) {\r\n      container.addChild(ammoGfc)\r\n    }\r\n  }\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { getBodyHeight } from '../utils/Utils'\r\nimport { decrementWaveCountToDefeat, increaseScore, incrementZombiesOnStage,\r\n\tupdatePrevScore, setZombieLastKilled, setLastGrenadeKill, resetConsecutiveGrenadeKills, setAchievementOwned, increaseStats, StatsDefs } from '../gameSlice'\r\nimport { GibGenerator } from '../items/Gib'\r\nimport store from '../../../app/store'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { BulletImpact } from '../player/fireWeapons'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport HealthDrop from '../items/HealthDrop'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { degrees } from 'radians'\r\nimport { createTextMessage } from '../createMessages'\r\nimport { AchievementDefs } from '../gameSlice'\r\nimport AchievementsView from '../ReactComponents/AchievementsView'\r\n\r\nexport function ZombieRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { TweenLite: { delayedCall, to } } = window\r\n\tlet world, container, zombieRags\r\n\tlet { gameObjects } = window\r\n\tif (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n\tif (!container) {\r\n\t\tcontainer = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tif (!zombieRags) {\r\n\t\tzombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n\t}\r\n\tlet bloodSmack = gameObjects.getKeyValue('death-rip-sound')\r\n\tbloodSmack.play()\r\n\tlet deathSnd = gameObjects.getKeyValue('zombie-death-sound')\r\n\tdeathSnd.play()\r\n\r\n\tlet b = { w: 40, h: 90 }\r\n  let h = { w: 20, h: 30 }\r\n\tlet a = { w: 15, h: 40 }\r\n\tlet l = { w: 15, h: 40 }\r\n\tlet hnd = { w: 15, h: 35 }\r\n\tlet f = { w: 15, h: 35 }\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: -b.w/4, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n  this.composite = Composite.create()\r\n  this.bodies = [\r\n    head,\r\n    armUpperL, armUpperR,\r\n    armLowerL, armLowerR,\r\n    legUpperL, legUpperR,\r\n    legLowerL, legLowerR,\r\n    footL, footR\r\n\t]\r\n\tthis.bodies.forEach(body => { body.label = 'zombie body part' })\r\n\tbodyUpper.label = 'torso'\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\tthis.constraints = [\r\n\t\tbodyToHead,\r\n\t\thandToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t]\r\n\r\n\tWorld.add(world, this.composite)\r\n  Body.applyForce(bodyUpper, bodyUpper.position, force)\r\n  this.bodies.forEach(_body => {\r\n    Body.applyForce(_body, _body.position, { x: random.float(-0.01, -0.05), y: random.float(-0.01, -0.05) })\r\n  })\r\n\tzombieRags.push(this)\r\n\r\n\t// add sprites\r\n\tlet z_parts_spritesheet = gameObjects.getKeyValue('zombie-parts-gored-sheet')\r\n\r\n  const getSkullTex = () => {\r\n    let skulls = [ 'skull_gored.png', 'skull_gored2.png', 'skull_gored3.png' ]\r\n    return skulls[Math.floor(Math.random() * skulls.length)]\r\n  }\r\n\tlet skull = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[ getSkullTex() ]\r\n  )\r\n\tskull._id = 'skull'\r\n\tlet torso = new PIXI.Sprite( z_parts_spritesheet.textures['torso_whole_gored.png'] )\r\n\ttorso._id = 'torso'\r\n\t\r\n\tlet spriteParts = []\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_leg_lower_gored.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_arm_hand_gored.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_arm_forearm_gored.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n  \r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_leg_upper_gored.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n\tlet foot2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_leg_foot_gored.png']\r\n\t)\r\n\tfoot2._id = 'foot 2'\r\n\tspriteParts.push( foot2 )\r\n  \r\n  spriteParts.push( torso, skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_leg_lower_gored.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\t\r\n\tlet hand1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_arm_hand_gored.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n\tlet arm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_forearm_gored.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tlet foot1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_leg_foot_gored.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n\t\tpart.updateAnchor = true\r\n\t\tpart.pivot.x = part.width * .5\r\n\t\tpart.pivot.y = part.height * .5\r\n\t\tcontainer.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = (\r\n    force ? \r\n      force.x < 0 ?\r\n      { x: -0.002 }\r\n      : { x: 0.002 }\r\n    : { x: random.float(-0.002, 0.002) }\r\n  )\r\n\tgibForce.y = -0.005\r\n\t\r\n\tnew GibGenerator(\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? random.int(5, 10) : 3,  //random.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 2 : 1\r\n  )\r\n\r\n\tthis.destroy = () => {\r\n\t\tspriteParts.forEach((sprite, i) => {\r\n      to(sprite, getState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 1 : .5, {\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          container.removeChild(sprite)\r\n          if (i === spriteParts.length - 1) {\r\n            World.remove(world, this.composite)\r\n\t\t\t\t\t\tzombieRags.splice(zombieRags.indexOf(this), 1)\r\n\t\t\t\t\t\tzombieRags = null\r\n\t\t\t\t\t\tworld = null\r\n\t\t\t\t\t\t// container = null\r\n\t\t\t\t\t\tthis.bodies.forEach(b => { b = null })\r\n\t\t\t\t\t\tthis.constraints.forEach(c => { c = null })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\t}\r\n  \r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n\t\tskull.rotation = skullPos.rotation\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a random constraint\r\n\tconst randomConstraintToRemove = () => this.constraints[ Math.floor( Math.random() * this.constraints.length ) ]\r\n\tlet parts = new Array(random.int(1, 10)).fill(1)\r\n  parts = parts.map((item, i) => {\r\n    let rand\r\n    const getARandomConstraint = () => {\r\n      rand = randomConstraintToRemove()\r\n      if (parts.indexOf(rand) > -1) {\r\n        getARandomConstraint()\r\n      } else {\r\n        return rand\r\n      }\r\n    }\r\n    return getARandomConstraint()\r\n  })\r\n  parts.forEach(part => { Composite.remove(this.composite, part) })\r\n\r\n\t// auto removal\r\n\tdelayedCall(\r\n\t\t!getState().game.lastWaveCountDefeated || getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n\t\tthis.destroy\r\n\t)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function Zombie(x, y) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { Power2, TweenLite: { delayedCall, to, set } } = window\r\n\tlet world, zombies, container\r\n\tlet { gameObjects } = window\r\n  if (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n  if (!zombies) {\r\n    zombies = gameObjects.getKeyValue('zombies')\r\n  }\r\n  if (!container) {\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\r\n  dispatch( incrementZombiesOnStage() )\r\n\t\r\n  let b = { w: 60, h: 125 }\r\n\tlet h = { w: 40, h: 60 }\r\n\t// let zombieWalkSpeed = .65\r\n\tlet zombieWalkSpeed = getState().game.enemies.zombies.walkSpeed\r\n\r\n  let body = Bodies.rectangle(x, y, b.w, b.h, { collisionFilter: enemyCollisionOptions })\r\n  let head = Bodies.rectangle(x, y, h.w, h.h, { collisionFilter: enemyCollisionOptions, inertia: Infinity })\r\n  \r\n\tbody.label = 'enemy zombie body'\r\n\thead.label = 'enemy zombie head'\r\n\r\n  let headToBody = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: body,\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -b.h/2 },\r\n    length: 0,\r\n  })\r\n\r\n  let zombie = Composite.create()\r\n\r\n  this.composite = zombie\r\n  this.body = body\r\n  this.head = head\r\n\r\n  Composite.add(zombie, [\r\n    body, head,\r\n    headToBody\r\n  ])\r\n  World.add(world, zombie)\r\n\r\n  // pixi stuff\r\n  let zWalkSheet = gameObjects.getKeyValue('zombie-walk-sheet') //gameObjects.getKeyValue('z-walk-spritesheet')\r\n\tlet zAttackSheet = gameObjects.getKeyValue('zombie-attack1-sheet')  // gameObjects.getKeyValue('z-attack-spritesheet')\r\n\tlet idleSheet = gameObjects.getKeyValue('zombie-idle-sheet')\r\n\tlet idleAnim = new PIXI.AnimatedSprite( idleSheet.animations['idle'] )\r\n\tlet zWalk = new PIXI.AnimatedSprite(zWalkSheet.animations['walkcycle'])\r\n\tlet zAttack = new PIXI.AnimatedSprite(zAttackSheet.animations['attack1'])\r\n\tlet zAttack2 = new PIXI.AnimatedSprite(gameObjects.getKeyValue('zombie-attack2-sheet').animations['attackTwo'])\r\n\t\r\n\t// slash fx \r\n\tlet slashFX = gameObjects.getKeyValue('zombie-slash-fx-sheet')\r\n  let slashAnim = new PIXI.AnimatedSprite( slashFX.animations['slash'] )\r\n\t\r\n\tslashAnim.loop = false\r\n\tslashAnim.animationSpeed = .5\r\n\tslashAnim.updateAnchor = true\r\n\tslashAnim.pivot.x = slashAnim.width * .5\r\n\tslashAnim.pivot.y = slashAnim.height * .5\r\n\tslashAnim.visible = false\r\n\tslashAnim.onComplete = () => {\r\n\t\tslashAnim.visible = false\r\n\t}\r\n  container.addChild(slashAnim)\r\n  \r\n  // shadow\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 80, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n\tblur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n  if (container && container.children.indexOf(this.shadow) === -1) {\r\n    container.addChild(this.shadow)\r\n  }\r\n\r\n\tidleAnim.loop = true\r\n\tidleAnim.animationSpeed = .5\r\n\tidleAnim.updateAnchor = true\r\n\tidleAnim.pivot.x = idleAnim.width * .5\r\n\tidleAnim.pivot.y = idleAnim.height * .6\r\n\tcontainer.addChild(idleAnim)\r\n\r\n  zWalk.loop = true\r\n  zWalk.animationSpeed = 0.5\r\n  zWalk.updateAnchor = true\r\n  zWalk.pivot.x = zWalk.width * .5\r\n  zWalk.pivot.y = zWalk.height * .6\r\n  container.addChild(zWalk)\r\n\r\n\tzAttack.loop = false\r\n  zAttack.animationSpeed = 0.65\r\n  zAttack.updateAnchor = true\r\n  zAttack.pivot.x = zAttack.width * .5\r\n  zAttack.pivot.y = zAttack.height * .6\r\n  container.addChild(zAttack)\r\n\tzAttack.visible = false\r\n\t\r\n\tzAttack2.loop = false\r\n  zAttack2.animationSpeed = 0.65\r\n  zAttack2.updateAnchor = true\r\n  zAttack2.pivot.x = zAttack2.width * .5\r\n  zAttack2.pivot.y = zAttack2.height * .6\r\n  container.addChild(zAttack2)\r\n\tzAttack2.visible = false\r\n\r\n\tthis.walkAnim = zWalk\r\n\tthis.attackAnim = zAttack\r\n\tthis.attackAnim2 = zAttack2\r\n\tthis.idleAnim = idleAnim\r\n\r\n\tthis.anims = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim\r\n\t]\r\n\tthis.anims.forEach(anim => {\r\n\t\twindow.TweenLite.from(\r\n\t\t\tanim, 1, { alpha: 0 }\r\n\t\t)\r\n\t})\r\n\r\n\tthis.playerBodyPosition = null\r\n\r\n\tthis.playSlashAnim = () => {\r\n\t\tif (this.attackAnim.visible) {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = 1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x\r\n\t\t\tslashAnim.rotation = degrees(0)\r\n\t\t} else {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = -1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x * -1\r\n\t\t\tslashAnim.rotation = degrees(180)\r\n\t\t}\r\n\t\tslashAnim.visible = true\r\n\t\tslashAnim.gotoAndPlay(0)\r\n\t}\r\n\r\n\tthis.setSpritesPositions = fn => {\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.shadow.position.x = x\r\n\t\tthis.shadow.position.y = y + this.walkAnim.height/4 + 10\r\n\t\tthis.walkAnim.position.x = x\r\n\t\tthis.walkAnim.position.y = y\r\n\t\tthis.attackAnim.position.x = x\r\n\t\tthis.attackAnim.position.y = y\r\n\t\tthis.attackAnim2.position.x = x\r\n\t\tthis.attackAnim2.position.y = y\r\n\t\tthis.idleAnim.position.x = x\r\n\t\tthis.idleAnim.position.y = y\t\r\n\t\t// set timescale according to whether player is alive\r\n\t\tif (this.player.dead) {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.2\r\n\t\t\tthis.idleAnim.animationSpeed = 0.2\r\n\t\t\tslashAnim.animationSpeed = 0.2\r\n\t\t} else {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.5\r\n\t\t\tthis.attackAnim.animationSpeed = 0.65\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.65\r\n\t\t\tthis.idleAnim.animationSpeed = 0.5\r\n\t\t\tslashAnim.animationSpeed = 0.5\r\n\t\t}\r\n\t\tif (this.shouldDisplayHealth && this.healthDisplay !== undefined) {\r\n\t\t\tthis.moveLifeDisplay( fn(this.body) )\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setPlayerVars = ({ player, playerDirection, playerBody }) => {\r\n\t\tthis.player = player\r\n\t\tthis.playerBodyPosition = playerBody.position\r\n\t\tthis.playerBody = playerBody\r\n\t\tthis.playerDirection = playerDirection\r\n\t}\r\n\t\r\n\tconst zombieFarFromPlayer = (distance) => {\r\n\t\treturn (this.playerBody.position.x - (distance ? distance : 120) > this.body.position.x || this.playerBody.position.x + (distance ? distance : 120) < this.body.position.x)\r\n\t}\r\n\r\n\tthis.playIdleAnim = () => {\r\n\t\tif (!zAttack.playing && !zAttack2.playing && !this.walkAnimPlaying) {\r\n\t\t\tidleAnim.play()\r\n\t\t\tidleAnim.visible = true\r\n\t\t}\r\n\t}\r\n\r\n\tthis.stopIdleAnim = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\r\n\tthis.walkAnimPlaying = false\r\n\tthis.playWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === false) {\r\n\t\t\tthis.stopIdleAnim()\r\n\t\t\tthis.walkAnim.visible = true\r\n\t\t\tthis.walkAnim.play()\r\n\t\t\tthis.walkAnimPlaying = true\r\n\t\t} else {\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n\tthis.stopWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === true) {\r\n\t\t\tthis.walkAnim.stop()\r\n\t\t\tthis.walkAnim.gotoAndStop(0)\r\n\t\t\tthis.walkAnimPlaying = false\r\n\t\t\tthis.walkAnim.visible = false\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n  this.playWalkAnim()\r\n  \r\n  this.healthOffsetY = 160\r\n  this.damageDisplayOptions = {\r\n    fill: '#FF0000',\r\n    fontSize: 11\r\n  }\r\n  this.healthDisplayOptions = {\r\n    fill: '#FFFF00',\r\n    fontSize: 11\r\n  }\r\n\tthis.healthDisplay = new PIXI.Text(this.health, this.healthDisplayOptions)\r\n\tthis.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n\tif (getState().game.displayZombieHealth) {\r\n\t\tthis.shouldDisplayHealth = true\r\n\t\tcontainer.addChild(this.healthDisplay)\r\n\t}\r\n\r\n  this.moveLifeDisplay = (renderFnResult) => {\r\n\t\tif (this.shouldDisplayHealth) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tthis.healthDisplay.text = this.health\r\n\t\t\t} else {\r\n\t\t\t\tthis.healthDisplay.text = 0\r\n\t\t\t}\r\n\t\t\tthis.healthDisplay.position = {\r\n\t\t\t\tx: renderFnResult.x,\r\n\t\t\t\ty: renderFnResult.y - this.healthOffsetY\r\n\t\t\t}\r\n\t\t} else if (container.children.indexOf(this.healthDisplay) > -1) {\r\n\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t}\r\n  }\r\n\r\n  // runs via the engine loop, so will repeat 30-60 times a second\r\n  this.walk = () => {\r\n\t\tlet comparison = (this.playerBody.position.x < this.body.position.x)\r\n\t\tif (zombieFarFromPlayer() && !zAttack.playing && !zAttack2.playing && !this.player.dead) {\r\n\t\t\tthis.playWalkAnim()\r\n      if (comparison) {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = 1 })\r\n      } else {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = -1 })\r\n      }\r\n      let alteredWalkSpeed\r\n      if (zombieFarFromPlayer(800)) {\r\n        zWalk.animationSpeed = 1.00\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(2.8, 3.2)\r\n      } else if (zombieFarFromPlayer(400)) {\r\n        zWalk.animationSpeed = .75\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(1.8, 2.2)\r\n      } else {\r\n        zWalk.animationSpeed = 0.5\r\n        alteredWalkSpeed = zombieWalkSpeed\r\n      }\r\n      Body.translate(this.body, { x: comparison ? -alteredWalkSpeed : alteredWalkSpeed, y: 0 })\r\n\t\t} else {\r\n\t\t\tthis.stopWalkAnim()\r\n\t\t}\r\n  }\r\n\r\n\tthis.health = getState().game.enemies.zombies.startingHealth\r\n\r\n\tthis.checkFilters = () => {\r\n\t\t// if (getState().game.filterEffects) {\r\n\t\t// \tthis.shadow.filters = [ blur ]\r\n\t\t// \tthis.shadow.alpha = 1.0\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = [ this.criticalGlow ]\r\n\t\t// \t}\r\n\t\t// } else {\r\n\t\t// \tthis.shadow.filters = []\r\n\t\t// \tthis.shadow.alpha = .5\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = []\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\t// this.shouldDisplayHealth = true\r\n\tthis.displayHealth = bool => {\r\n\t\tthis.shouldDisplayHealth = bool\r\n\t\tif (bool) {\r\n\t\t\tcontainer.addChild(this.healthDisplay)\r\n\t\t} else {\r\n\t\t\tif (container.children.indexOf(this.healthDisplay)) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.sprites = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim,\r\n    slashAnim\r\n\t]\r\n\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.main = this\r\n\t})\r\n\r\n\tthis.dead = false\r\n\r\n  this.dmgTxts = []\r\n\tthis.dmgIterator = 0\r\n\tthis.tintAmounts = {\r\n\t\t1: 0xFF9C00,\r\n\t\t2: 0xFF2E00,\r\n\t\t3: 0xFF0000,\r\n\t\t4: 0xB7000F\r\n\t}\r\n\tthis.takeDamage = (dmg, partDamaged, isCritical, isMelee, attackType) => {\r\n\t\t// randomize relative position of blood spurt \r\n\t\tlet spurtPos\r\n\t\tlet spurtPosLow = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y, this.walkAnim.position.y + 50)\r\n\t\t}\r\n\t\tlet spurtPosHi = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y - 100, this.walkAnim.position.y - 50)\r\n\t\t}\r\n\t\tif (!partDamaged || partDamaged === 'head') {\r\n\t\t\tspurtPos = spurtPosHi\r\n\t\t} else {\r\n\t\t\tspurtPos = spurtPosLow\r\n\t\t}\r\n\t\tnew BloodSpurt( null, spurtPos )\r\n\t\tthis.health -= dmg\r\n\t\tthis.directionX = this.playerBodyPosition ? this.playerBodyPosition.x > this.body.position.x : false\r\n\t\tif (this.health <= 0 && !this.dead) {\r\n\t\t\tif (attackType === 'turret') {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tthis.kill(partDamaged, null, attackType ? attackType : null)\r\n      if (isMelee) {\r\n        dispatch(\r\n          increaseStats( StatsDefs.meleeKills )\r\n        )\r\n        setTimeout(() => {\r\n          if (getState().game.stats.meleeKills === 5 && !getState().game.achievements[ AchievementDefs.PILEDRIVE ].owned) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.PILEDRIVE )\r\n            )\r\n          }\r\n        }, 0)\r\n      }\r\n\t\t}\r\n\t\tthis.sprites.forEach(sprite => {\r\n\t\t\tif (sprite !== slashAnim) {\r\n\t\t\t\tif (this.health < 25) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[3]\r\n\t\t\t\t}\r\n\t\t\t\tif (this.health < 10) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[4]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n  }\r\n  \r\n  this.removeZombieFromMatterWorld = () => {\r\n    this.dead = true\r\n    // remove attack hit box in case the zombie was killed on that exact frame and\r\n\t\t// attack box didn't get removed \r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (this.healthDisplay) {\r\n      container.removeChild(this.healthDisplay)\r\n    }\r\n\t\t// if health is depleted, remove all enemy sprites and bodies\r\n\t\tthis.sprites.forEach(sprite => { container.removeChild(sprite) })\r\n    if (this.attackHitbox) { World.remove(world, this.attackHitbox) }\r\n\t\tWorld.remove(world, this.composite)\r\n    return 'zombie removed'\r\n  }\r\n\r\n  this.removeZombieFromZombiesArray = () => {\r\n    let idx = zombies.indexOf(this)\r\n    if (idx > -1) {\r\n      zombies.splice(idx, 1)\r\n    }\r\n  }\r\n  \r\n\tthis.kill = (partLastDamaged, skipZombieRag, killType) => {\r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (!this.dead) {\r\n      this.dead = true\r\n\t\t\tthis.health = 0\r\n\t\t\tif (this.healthDisplay) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n      }\r\n      // if (this.criticalText) {\r\n      //   container.removeChild(this.criticalText)\r\n      // }\r\n      if (this.shadow) {\r\n        container.removeChild(this.shadow)\r\n      }\r\n\t\t\tcontainer.removeChild(this.shadow)\r\n      this.removeZombieFromMatterWorld()\r\n      this.removeZombieFromZombiesArray()\r\n      let force = { x: this.directionX ? -0.2 : 0.2, y: -0.25 }\r\n\t\t\tlet dropPos = {\r\n\t\t\t\tx: this.directionX ? this.body.position.x - 20 : this.body.position.x + 20,\r\n\t\t\t\ty: this.body.position.y - 60\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n\t\t\t\tGenerateRandomCreditDrops(dropPos)\r\n\t\t\t\tif (getState().game.player.perks['ammoDropper'].owned) {\r\n\t\t\t\t\tlet { list } = getState().game.player.weapons\r\n\t\t\t\t\tnew AmmoDrop(dropPos, list[Math.floor(Math.random() * list.length)], random.int(4, 16))\r\n\t\t\t\t}\r\n\t\t\t\tif (getState().game.player.perks['healthDropper'].owned) {\r\n\t\t\t\t\tnew HealthDrop(random.int(2, 6), dropPos)\r\n\t\t\t\t}\r\n\t\t\t\tbulletImpacts.push(\r\n\t\t\t\t\tnew BulletImpact('enemy', this.body.position, {\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\talphaDuration: 3,\r\n\t\t\t\t\t\tset: 1,\r\n\t\t\t\t\t\trand: {\r\n\t\t\t\t\t\t\tmin: 1, max: 4\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n        dispatch(decrementWaveCountToDefeat())\r\n\t\t\t\tlet scoreAmt = getState().game.scoreAmounts.zombie\r\n\t\t\t\tif (partLastDamaged === 'head') {\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.headShot\r\n\t\t\t\t}\r\n\t\t\t\tif (Date.now() - JSON.parse(getState().game.zombieLastKilled) < 1000) {\r\n\t\t\t\t\tcreateTextMessage('kill streak bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieStreakBonus\r\n\t\t\t\t}\r\n\t\t\t\tif (killType && killType === 'fell off') {\r\n\t\t\t\t\tif (!getState().game.achievements[AchievementDefs.THIS_IS_SPARTA].owned) {\r\n\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.THIS_IS_SPARTA ))\r\n\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcreateTextMessage('knockoff bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieKnockedOffStage\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tsetZombieLastKilled( JSON.stringify(Date.now()) )\r\n\t\t\t\t)\r\n\t\t\t\tif (killType === 'grenade explosion') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tsetLastGrenadeKill( JSON.stringify(Date.now()) )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (Date.now() - JSON.parse(getState().game.lastGrenadeKill < 100)) {\r\n\t\t\t\t\t\t\tif (getState().game.consecutiveGrenadeKills > 2) {\r\n\t\t\t\t\t\t\t\tif (!getState().game.achievements[ AchievementDefs.FIRE_IN_THE_HOLE ].owned) {\r\n\t\t\t\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.FIRE_IN_THE_HOLE ))\r\n\t\t\t\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdispatch( resetConsecutiveGrenadeKills() )\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'landmine') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.mineKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.mineKills > 2 && !getState().game.achievements[ AchievementDefs.MINER ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.MINER))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'turret') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.turretKills > 9 && !getState().game.achievements[ AchievementDefs.GUNNA ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.GUNNA))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\t\tgetState().game.player.variables.jumping &&\r\n\t\t\t\t\t\t!getState().game.achievements[ AchievementDefs.THE_JUMP_SHOT ].owned &&\r\n\t\t\t\t\t\tkillType !== 'grenade explosion' &&\r\n\t\t\t\t\t\tkillType !== 'landmine' &&\r\n\t\t\t\t\t\tkillType !== 'landmine explosion' &&\r\n\t\t\t\t\t\tkillType !== 'clustermine explosion'\r\n\t\t\t\t\t) {\r\n          \tdispatch(\r\n            \tsetAchievementOwned( AchievementDefs.THE_JUMP_SHOT )\r\n          \t)\r\n        }\r\n\t\t\t\tupdateScore( scoreAmt )\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.zombiesKilled )\r\n\t\t\t\t)\r\n\t\t\t\tnew ZombieRagdoll({\r\n\t\t\t\t\tx: this.body.position.x,\r\n\t\t\t\t\ty: this.body.position.y - getBodyHeight(this.body)\r\n\t\t\t\t}, force, partLastDamaged)\r\n\t\t\t}\r\n      if (this.attackHitbox) {\r\n        World.remove(world, this.attackHitbox)\r\n      }\r\n\t\t\tzombies = 1\r\n\t\t\tzombies = null\r\n      // container = 1\r\n\t\t\t// container = null\r\n    }\r\n\t}\r\n\r\n\t// const getRandomInt = () => random.int(2, 5)\r\n\r\n\tconst makeAttackHitbox = (num) => {\r\n\t\tif (this.playerBodyPosition) {\r\n\t\t\tlet comparison = (this.playerBodyPosition.x > this.body.position.x)\r\n\t\t\tlet compareResult = comparison ? 80 : -80\r\n\t\t\treturn Bodies.rectangle(this.body.position.x + compareResult, this.body.position.y - getBodyHeight(this.body)/2, num === 2 ? 120 : 100, 150, {\r\n\t\t\t\tlabel: 'enemy zombie attack',\r\n\t\t\t\tisStatic: true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// zAttack.onFrameChange = () => {\r\n\t// \tif (zAttack.currentFrame === 6) {\r\n\t// \t\tthis.playSlashAnim()\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 8) {\r\n\t// \t\tWorld.add(world, this.attackHitbox)\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 9) {\r\n\t// \t\tWorld.remove(world, this.attackHitbox)\r\n\t// \t\t// this.attackHitbox = null\r\n\t// \t}\r\n\t// }\r\n\tzAttack.onFrameChange = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\tzAttack.onComplete = () => {\r\n\t\tzAttack.gotoAndStop(0)\r\n\t\tzAttack.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\tzAttack2.onComplete = () => {\r\n\t\tzAttack2.gotoAndStop(0)\r\n\t\tzAttack2.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\t//hitbox will be a matter body that appears for a few frames\r\n\tthis.timeSinceLastAttack = Date.now() + 500\r\n\tlet zombieGrowl = gameObjects.getKeyValue('zombie-growl-sound')\r\n\tthis.attack = () => {\r\n\t\tif (!this.paused && zombies.indexOf(this) > -1 && !this.player.dead && !this.dead) {\r\n\t\t\tthis.timeSinceLastAttack = Date.now()\r\n\t\t\tlet oneOfTwo = [ 1, 2 ][ Math.floor( Math.random() * 2 ) ]\r\n\t\t\tthis.attackHitbox = makeAttackHitbox(oneOfTwo)\r\n\t\t\tzombieGrowl.play()\r\n\t\t\t// change frames to an attack animation here\r\n\t\t\tzWalk.visible = false\r\n\t\t\tif (oneOfTwo === 1) {\r\n\t\t\t\tzAttack.visible = true\r\n\t\t\t\tzAttack.play()\r\n\t\t\t} else {\r\n\t\t\t\tzAttack2.visible = true\r\n\t\t\t\tzAttack2.play()\r\n\t\t\t}\r\n\t\t\tidleAnim.visible = false\r\n\t\t\tdelayedCall(.15, () => {\r\n\t\t\t\tthis.playSlashAnim()\r\n\t\t\t})\r\n\t\t\tdelayedCall(.2, () => {\r\n\t\t\t\tWorld.add(world, this.attackHitbox)\r\n\t\t\t\tdelayedCall(.1, () => {\r\n\t\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tif (this.attackHitbox) {\r\n\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t// this.attackHitbox = null\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  this.pause = () => {\r\n    this.paused = true\r\n    // this.stopWalkAnim()\r\n    idleAnim.stop()\r\n    this.walkAnim.stop()\r\n    this.attackAnim.stop()\r\n    this.attackAnim2.stop()\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.paused = false\r\n    this.walkAnim.play()\r\n    if (zAttack.currentFrame !== 0) {\r\n      zAttack.play()\r\n    }\r\n  }\r\n\r\n  zombies.push(this)\r\n\r\n  return this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Container, filters} from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport store from '../../../app/store'\r\n\r\nexport default function CreditDrop (position, amount) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let currencyDrops = gameObjects.getKeyValue('currency-drops')\r\n  let { x: _x, y: _y } = position\r\n\r\n  // init\r\n  // matter body \r\n  let creditBody = Bodies.circle(_x, _y, amount * .25, { restitution: .5, collisionFilter: itemCollisionOptions })\r\n  creditBody.label = 'currency drop'\r\n  creditBody.amount = amount\r\n  // console.log(creditBody.amount)\r\n  World.add(world, creditBody)\r\n  // gfx -- blurred\r\n  let creditContainer = new Container()\r\n  let creditBlur = new Graphics()\r\n  creditBlur.beginFill(0x0eead8)\r\n  creditBlur.drawCircle(0, 0, amount * .25)\r\n  let blurFilter = new filters.BlurFilter()\r\n  blurFilter.blur = 3\r\n  creditBlur.filters = store.getState().game.filterEffects ? [ blurFilter ] : []\r\n  creditBlur.pivot.x = (creditBlur.width * .25) * .5\r\n  creditBlur.pivot.y = (creditBlur.height * .25) * .5\r\n  creditBlur.scale.x = 1.1\r\n  creditBlur.scale.y = 1.1\r\n  creditContainer.addChild(creditBlur)\r\n  // gfx -- clear\r\n  let creditGfc = new Graphics()\r\n  creditGfc.beginFill(0x0eead8)\r\n  creditGfc.drawCircle(0, 0, amount * .25)\r\n  creditGfc.pivot.x = (creditGfc.width * .25) * .5\r\n  creditGfc.pivot.y = (creditGfc.height * .25) * .5\r\n  creditContainer.addChild(creditGfc)\r\n  let bevel = new BevelFilter()\r\n  bevel.lightColor = 0xffffff\r\n  bevel.lightAlpha = .3\r\n  bevel.shadowColor = 0x0\r\n  bevel.shadowAlpha = .3\r\n  creditContainer.filters = store.getState().game.filterEffects ? [ bevel ] : []\r\n  // add to stage\r\n  container.addChild(creditContainer)\r\n  \r\n  currencyDrops.push(this)\r\n\r\n  creditBody.main = this\r\n\r\n  this.creditBody = creditBody\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      creditContainer.filters = [bevel]\r\n      creditBlur.filters = [blurFilter]\r\n    } else {\r\n      creditContainer.filters = []\r\n      creditBlur.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroyed = false\r\n  this.destroy = () => {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      let idx = currencyDrops.indexOf(this)\r\n      if (idx > -1) {\r\n        currencyDrops.splice(idx, 1)\r\n        creditContainer.destroy()\r\n        World.remove(world, creditBody)\r\n        world = null\r\n        container = null\r\n        currencyDrops = null\r\n        gameObjects = null\r\n        creditBody = null\r\n        this.creditBody = null\r\n        creditContainer = null\r\n      }\r\n    }\r\n  }\r\n\r\n  setTimeout(() => { this.destroy() }, 20000)\r\n\r\n  this.positionCreditGfx = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(creditBody)\r\n    creditContainer.position = { x, y }\r\n    creditContainer.rotation = rot\r\n  }\r\n\r\n  return this\r\n\r\n} ","import Zombie from '../enemies/Zombie'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport CreditDrop from '../items/CurrencyCredit'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\n\r\nconst { getState } = store\r\nconst { TweenLite: { delayedCall } } = window\r\nconst yStartPos = getState().game.height/2\r\n\r\nexport const GenerateZombies = (count) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  \r\n  const startZombieCreation = () => {\r\n    let numOnStage = (\r\n      getState().game.waveNum > 20 ? 4\r\n      : getState().game.waveNum > 10 ? 3\r\n      : 2\r\n    )\r\n    for (let i = 0; i < count; ++i) {\r\n      const getAZombie = () => {\r\n        if (\r\n          getState().game.zombiesOnStage < numOnStage &&\r\n          getState().game.gameState !== GameStates.PAUSE &&\r\n          getState().game.gameState !== GameStates.MAIN_MENU &&\r\n          (getState().game.gameSubState === SubStates.WAVE_STARTED || getState().game.gameSubState === SubStates.PLAYER_RESPAWN)\r\n          ) {\r\n          console.log('should create a zombo')\r\n          if (getState().game.gameSubState !== SubStates.WAVE_DEFEATED) {\r\n            new Zombie(random.int(buffer, width - buffer), yStartPos)\r\n          }\r\n        } else {\r\n          setTimeout(() => { getAZombie() }, 2000)\r\n        }\r\n      }\r\n      getAZombie()\r\n    }\r\n  }\r\n  startZombieCreation()\r\n  \r\n}\r\n\r\nexport const GenerateRandomAmmoDrops = (position, amountLimits, overrideCount) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let { game: { player: { weapons: { list, ammoCapacity } } } } = getState()\r\n  let randCount = overrideCount ? overrideCount : random.int(1, 2)\r\n  let type = list[Math.floor(Math.random() * list.length)]\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new AmmoDrop(\r\n      position ? position : { x: random.int(buffer, width - buffer), y: 200 },\r\n      type,\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : random.int(5, ammoCapacity[type]))\r\n  }\r\n}\r\n\r\nexport const GenerateRandomCreditDrops = (position, amountLimits) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let randCount = getState().game.player.perks['creditDropper'].owned ? random.int(5, 8) : random.int(4, 5)\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new CreditDrop(\r\n      position ?\r\n        { x: position.x, y: position.y - random.int(0, 75) }\r\n        : { x: random.int(buffer, width - buffer), y: 200 - random.int(0, 75) },\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : getState().game.player.perks['creditDropper'].owned ? random.int(15, 30) : random.int(5, 20)\r\n    )\r\n  }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { applyGsapHover } from '../utils/Utils'\r\nimport { gameStateTransition, unsetAllKeys } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { createGenericMessage } from '../createMessages'\r\nimport { FELL_OFF } from '../constants/DeathTypes'\r\nimport random from 'random'\r\n\r\nconst { dispatch, getState } = store\r\n\r\nfunction RespawnButton () {\r\n\tlet container = new PIXI.Container()\r\n\tlet btn = new PIXI.Graphics()\r\n\tbtn.beginFill(0x555555)\r\n\tbtn.drawRect(0, 0, 150, 50)\r\n\tcontainer.addChild(btn)\r\n\r\n\tconst text = new PIXI.Text('Respawn?', { font: 'Arial', fill: '#FFFFFF', fontSize: 20, fontWeight: 'bold' })\r\n\ttext.position.x = btn.width/2 - text.width/2\r\n\ttext.position.y = btn.height/2 - text.height/2\r\n\tcontainer.addChild(text)\r\n\r\n\treturn container\r\n}\r\n\r\nexport default function ScreenUI () {\r\n\tlet { gameObjects, TweenLite: { from }, Bounce } = window\r\n  let gameContainer = gameObjects.getKeyValue('game-pixi-container')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n\r\n  // let zombies = gameObjects.getKeyValue('zombies')\r\n\r\n\tthis.respawnButton = new RespawnButton()\r\n\tgameContainer.addChild(this.respawnButton)\r\n\tthis.respawnButton.visible = false\r\n\tthis.respawnButton.interactive = true\r\n\tthis.respawnButton.pivot.x = this.respawnButton.width/2\r\n\tthis.respawnButton.pivot.y = this.respawnButton.height/2\r\n\tthis.respawnButton.position.x = (this.respawnButton.width/2) + 20\r\n\tthis.respawnButton.position.y = (this.respawnButton.height/2) + 20\r\n\r\n  this.respawn = () => {\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.respawn()\r\n    createGenericMessage('Still alive!', 0xFFFFFF, .5, .75)\r\n    if (player.lastDeathType !== FELL_OFF) {\r\n      GenerateRandomAmmoDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      },\r\n      {\r\n        min: 10, max: getState().game.player.weapons.ammoCapacity[getState().game.player.weapons.equipped] * 2\r\n      },\r\n      random.int(1, 2))\r\n      GenerateRandomCreditDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      })\r\n    }\r\n  }\r\n\r\n\tthis.respawnButton.on('click', () => {\r\n\t\tthis.respawn()\r\n\t\tthis.respawnButton.visible = false\r\n\t})\r\n\r\n\tapplyGsapHover(this.respawnButton)\r\n\r\n\tthis.showRespawnButton = () => {\r\n\t\tthis.respawnButton.visible = true\r\n\t\tfrom(this.respawnButton.scale, 1.5, { x: .5, y: .5, ease: Bounce.easeOut })\r\n  }\r\n\r\n  const unpause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    // player \r\n    let player = gameObjects.getKeyValue('player')\r\n    player.pause()\r\n    // zombies \r\n    zombies.forEach(zombie => {\r\n      zombie.unpause()\r\n    })\r\n    // resume physics engine\r\n    engine.timing.timeScale = 1\r\n  }\r\n\r\n  const pause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    dispatch( unsetAllKeys() )\r\n    // character\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.unpause()\r\n    // zombies\r\n    zombies.forEach(zombie => {\r\n      zombie.pause()\r\n    })\r\n    // pause physics engine\r\n    engine.timing.timeScale = 0.05\r\n  }\r\n\r\n  this.unpause = unpause\r\n  this.pause = pause\r\n  \r\n  this.togglePause = () => {\r\n    let { gameState, gameSubState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU && gameState !== GameStates.SHOP_MENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameState !== GameStates.BUILD_MENU && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.WAVE_DEFEATED) {\r\n      let player = gameObjects.getKeyValue('player')\r\n      if (!player.dead) {\r\n        if (gameState !== GameStates.PAUSE && gameSubState !== SubStates.WAITING) {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.PAUSE) )\r\n          pause()\r\n        } else {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.GAMEPLAY) )\r\n          if (gameSubState === SubStates.WAVE_STARTED) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAVE_STARTED) )\r\n          } else if (gameSubState === SubStates.NEUTRAL) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n          }\r\n          unpause()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // add a pause listener to the screen UI ('P' (80) or ESC (27) key)\r\n  document.body.addEventListener('keydown', e => {\r\n    if (e.key === 'p' || e.key === 'P' || e.key === 'Escape') {\r\n      console.log('pause key was pressed')\r\n      this.togglePause()\r\n    }\r\n  })\r\n\r\n\treturn this\r\n\r\n}\r\n","// Matter and Custom\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { makePixiSprite, setUpMatter, setUpPixi } from './utils/Utils'\r\nimport { World, Bodies, Events } from 'matter-js'\r\nimport Player from './player/Player'\r\nimport createGameObjects from './createGameObjects'\r\nimport { setTexturePath, gameStateTransition, setZombiesOnStage, setWaveCountToDefeat, loadLocalStorageState } from './gameSlice'\r\nimport { gameTickHandler, checkCollisionStart } from './engineHandlers'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport WeaponsUI from './ui/WeaponsUI'\r\nimport ScreenUI from './ui/ScreenUI'\r\n// images\r\nimport weaponUI_pistolIcon from '../../images/pistol-icon.png'\r\nimport weaponUI_smgIcon from '../../images/smg-icon.png'\r\nimport weaponUI_shotgunIcon from '../../images/shotgun-icon.png'\r\n// environment textures \r\nimport groundTexture from '../../images/GroundTexture_Optimized.png'\r\nimport wallTile from '../../images/wallTile.png'\r\nimport gradientAlpha from '../../images/gradient-layer-mask.png'\r\n// game cover art\r\nimport coverArt from '../../images/GameCover.png'\r\n// explosive barrel \r\nimport explosiveBarrel from '../../images/explosiveBarrier.png'\r\n// player head\r\nimport charHead from '../../images/head-sprite.png'\r\n// Sound FX\r\nimport { Howl, Howler } from 'howler'\r\nimport _9mm1 from '../../sounds/9mm1.wav'\r\nimport _9mm2 from '../../sounds/9mm2.mp3'\r\nimport explosion1 from '../../sounds/explosion1.wav'\r\nimport distant_explosion from '../../sounds/explosion_distant.wav' \r\nimport pistolReloadSnd from '../../sounds/pistolReload.wav'\r\nimport bulletImpact_body from '../../sounds/bodyBulletImpact.wav'\r\nimport grenadeClink from '../../sounds/grenadeClink.wav'\r\nimport throwSound from '../../sounds/throw.wav'\r\nimport coinCollectSound from '../../sounds/coinCollect.wav'\r\nimport ammoCollectSound from '../../sounds/collectAmmo.wav'\r\nimport itemCollectSound from '../../sounds/collectItem.wav'\r\nimport bloodSquash from '../../sounds/bloodSquash.flac'\r\nimport bloodSquish from '../../sounds/bloodSquish.wav'\r\nimport bloodSmack from '../../sounds/bloodSmack.wav'\r\nimport deathRipSound from '../../sounds/deathRipSound.wav'\r\nimport jumpLandingSound from '../../sounds/jumpLanding.wav'\r\nimport dirtImpactSound from '../../sounds/dirtImpact.wav'\r\nimport zombieHurtSound from '../../sounds/zombieHurt.wav'\r\nimport zombieDeathSound from '../../sounds/zombieDeath.wav'\r\nimport pain1Sound from '../../sounds/pain1.wav'\r\nimport pain2Sound from '../../sounds/pain2.wav'\r\nimport playerDeathSound from '../../sounds/playerDeath.wav'\r\nimport buttonAddSound from '../../sounds/buttonAdd.wav'\r\nimport buttonSubtractSound from '../../sounds/buttonSubtract.wav'\r\nimport buttonClickSound from '../../sounds/buttonClick.wav'\r\nimport buttonHoverSound from '../../sounds/buttonHover.wav'\r\nimport placeObjectSound from '../../sounds/placeObject.flac'\r\nimport buttonCancelSound from '../../sounds/cancelSound.wav'\r\nimport purchaseSound from '../../sounds/moneySound.wav'\r\nimport confirmSound from '../../sounds/purchase.wav'\r\nimport shellImpactSound from '../../sounds/shellImpact.wav'\r\nimport healthPickupSound from '../../sounds/health.wav'\r\nimport zombieGrowl from '../../sounds/zombieGrowl.wav'\r\nimport smgFire from '../../sounds/smgFire.wav'\r\nimport magDrop from '../../sounds/magDrop.wav'\r\nimport shotShell from '../../sounds/shotShell.wav'\r\nimport shotgunBlast from '../../sounds/shotgunBlast.wav'\r\nimport achievement1 from '../../sounds/achievement1.wav'\r\nimport achievement2 from '../../sounds/achievement2.mp3'\r\nimport achievement3 from '../../sounds/achievement3.wav'\r\nimport jumpSound from '../../sounds/jumpSound.wav'\r\nimport chargingNade from '../../sounds/grenadeCharge.wav'\r\nimport { gotoMainMenu } from './ReactComponents/PauseMenu'\r\n\r\n// spritesheets in /public folder to use pixi .loader, not webpack \r\nconst zombieWalkcycleTest = './spritesheet-assets/zombie_walkcycle_test.json'\r\nconst z_walk_spritesheet = './spritesheet-assets/z_walk/z_walk.json'\r\nconst z_attack_spritesheet = './spritesheet-assets/z_attack/z_attack.json'\r\nconst z_parts_spritesheet = './spritesheet-assets/z_parts/limbs.json'\r\nconst muzzle_flashes_spritesheet = './spritesheet-assets/FX/muzzle_flashes/muzzle-flashes.json'\r\n// updated zombie sprites\r\nconst zomb_idle_sheet = './spritesheet-assets/enemy-spritesheets/zombie/idle/idle.json'\r\nconst zomb_walk_sheet = './spritesheet-assets/enemy-spritesheets/zombie/walkcycle/walkcycle.json'\r\nconst zomb_attack1_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack1/attack1.json'\r\nconst zomb_attack2_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack2/attack2.json'\r\nconst zomb_parts_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts.json'\r\nconst zomb_parts_gored_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts_gored.json'\r\nconst zomb_slash_fx_sheet = './spritesheet-assets/enemy-spritesheets/zombie/slash_fx/slash_fx.json'\r\n\r\n// barriers\r\nconst barriers_sheet = './spritesheet-assets/barriers/barriers.json'\r\n\r\n// updated character sprites \r\nconst char_parts = './spritesheet-assets/character-spritesheets/parts/player_parts.json'\r\nconst char_idle_sheet = './spritesheet-assets/character-spritesheets/idle/char_idle_anim.json'\r\nconst char_run_sheet = './spritesheet-assets/character-spritesheets/run/char_run_anim.json'\r\nconst char_jump_sheet = './spritesheet-assets/character-spritesheets/jump/char_jump_anim.json'\r\nconst char_reload_pistol_sheet = './spritesheet-assets/character-spritesheets/reloadPistol/char_reload_pistol_anim.json'\r\nconst char_reload_smg_sheet = './spritesheet-assets/character-spritesheets/reloadSMG/char_reload_smg_anim.json'\r\nconst left_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmPistolFire/char_left_arm_pistol_fire.json'\r\nconst right_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmPistolFire/char_right_arm_pistol_fire.json'\r\nconst left_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmSMGFire/char_left_arm_smg_fire.json'\r\nconst right_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmSMGFire/char_right_arm_smg_fire.json'\r\nconst melee_pistol_sheet = './spritesheet-assets/character-spritesheets/melee/melee_pistol/melee_pistol.json'\r\nconst melee_ump_sheet = './spritesheet-assets/character-spritesheets/melee/melee_ump/melee_ump.json'\r\nconst melee_shotgun_sheet = './spritesheet-assets/character-spritesheets/melee/melee_shotgun/melee_shotgun.json'\r\nconst grenade_pistol_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/pistolEquipped/grenade_throw_pistol.json'\r\nconst grenade_ump_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/umpEquipped/grenade_throw_ump.json'\r\nconst grenade_shotgun_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/shotgunEquipped/grenade_throw_shotgun.json'\r\nconst arms_fire_shotgun = './spritesheet-assets/character-spritesheets/armsFireShotgun/arms_fire_shotgun_anim.json'\r\nconst char_reload_shotgun_sheet = './spritesheet-assets/character-spritesheets/reloadShotgun/reloadShotgun.json'\r\n\r\n// blood effects\r\nconst blood_spurt_1 = './spritesheet-assets/FX/blood_fx/blood_spurt_1/blood_spurt_1.json'\r\nconst blood_spurt_2 = './spritesheet-assets/FX/blood_fx/blood_spurt_2/blood_spurt_2.json'\r\nconst blood_spurt_3 = './spritesheet-assets/FX/blood_fx/blood_spurt_3/blood_spurt_3.json'\r\n\r\n// landmine\r\nconst landmine_sheet = './spritesheet-assets/landmine/landmine.json'\r\nconst clustermine_sheet = './spritesheet-assets/clustermine/clustermine.json'\r\nconst remote_mine_sheet = './spritesheet-assets/remote-mine/remote-mine.json'\r\n\r\n// turret\r\nconst turret_scan_sheet = './spritesheet-assets/turret/sheets/turret_scan.json'\r\nconst turret_shoot_sheet = './spritesheet-assets/turret/sheets/turret_shoot.json'\r\n\r\n// explosion assts\r\nconst explosion_assets_sheet = './spritesheet-assets/FX/explosion_fx/explosion_assets.json'\r\nconst wood_planks_sheet = './spritesheet-assets/FX/wood_planks/wood_planks.json'\r\n\r\n// ground spatters \r\nconst ground_effects_sheet = './spritesheet-assets/FX/ground_fx/ground_fx.json'\r\n\r\n// FX\r\nconst explosion3d1_sheet = './spritesheet-assets/FX/explosion3d/explosion3d1.json'\r\nconst explosion3d2_sheet = './spritesheet-assets/FX/explosion3d/explosion3d2.json'\r\nconst sparks_sheet = './spritesheet-assets/FX/spark-particle/spark_particle.json'\r\nconst muzzle_sparks_sheet = './spritesheet-assets/FX/muzzle-sparks/muzzle_sparks.json'\r\n\r\nlet { dispatch, getState } = store\r\n\r\nlet { TweenLite: { to } } = window\r\n\r\nconst { world, render, engine, width, height, worldWidth } = setUpMatter('app-container', true)\r\n\r\nconst { app, loader } = setUpPixi('app-container')\r\n\r\nconst addGround = () => {\r\n\tlet ground = Bodies.rectangle(worldWidth/2, height, worldWidth, height/2, { \r\n    isStatic: true,\r\n    collisionFilter: {\r\n      mask: 3\r\n    }\r\n  })\r\n\tground.label = 'ground'\r\n\tWorld.add(world, ground)\r\n\t// dispatch(setGroundId(ground.id))\r\n\treturn ground\r\n}\r\n\r\nexport default function buildGame() {\r\n\r\n\twindow.onload = () => {\r\n\t\tsetTimeout(() => {\r\n      dispatch(\r\n        loadLocalStorageState()\r\n\t\t\t)\r\n\t\t\tif (getState().game.gameState === GameStates.GAMEPLAY || getState().game.gameState === GameStates.SHOP_MENU || getState().game.gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n\t\t\t\tgotoMainMenu()\r\n\t\t\t}\r\n    }, 1000)\r\n\t}\r\n\r\n\tloader\r\n\t.add(gradientAlpha)\r\n\t.add(wallTile)\r\n\t.add(char_reload_shotgun_sheet)\r\n\t.add(arms_fire_shotgun)\r\n\t.add(sparks_sheet)\r\n\t.add(muzzle_sparks_sheet)\r\n\t.add(explosion3d1_sheet)\r\n\t.add(explosion3d2_sheet)\r\n  .add(turret_scan_sheet)\r\n  .add(turret_shoot_sheet)\r\n\t.add(remote_mine_sheet)\r\n\t.add(clustermine_sheet)\r\n\t.add(landmine_sheet)\r\n\t.add(explosiveBarrel)\r\n  .add(barriers_sheet)\r\n\t.add(groundTexture)\r\n\t.add(zombieWalkcycleTest)\r\n\t.add(z_walk_spritesheet)\r\n\t.add(z_attack_spritesheet)\r\n\t.add(z_parts_spritesheet)\r\n\t.add(zomb_idle_sheet)\r\n\t.add(zomb_walk_sheet)\r\n\t.add(zomb_attack1_sheet)\r\n\t.add(zomb_attack2_sheet)\r\n\t.add(zomb_parts_sheet)\r\n\t.add(zomb_parts_gored_sheet)\r\n\t.add(zomb_slash_fx_sheet)\r\n\t.add(muzzle_flashes_spritesheet)\r\n\t.add(blood_spurt_1)\r\n\t.add(blood_spurt_2)\r\n  .add(blood_spurt_3)\r\n\t.add(explosion_assets_sheet)\r\n\t.add(wood_planks_sheet)\r\n\t.add(ground_effects_sheet)\r\n\t.add(char_parts)\r\n  .add(char_idle_sheet)\r\n  .add(char_run_sheet)\r\n  .add(char_jump_sheet)\r\n  .add(char_reload_pistol_sheet)\r\n  .add(char_reload_smg_sheet)\r\n  .add(melee_pistol_sheet)\r\n\t.add(melee_ump_sheet)\r\n\t.add(melee_shotgun_sheet)\r\n  .add(grenade_pistol_sheet)\r\n  .add(grenade_ump_sheet)\r\n  .add(grenade_shotgun_sheet)\r\n  .add(left_arm_pistol_fire_sheet)\r\n  .add(right_arm_pistol_fire_sheet)\r\n  .add(left_arm_smg_fire_sheet)\r\n  .add(right_arm_smg_fire_sheet)\r\n  .add(charHead)\r\n\t.add(weaponUI_pistolIcon)\r\n\t.add(weaponUI_smgIcon)\r\n\t.add(weaponUI_shotgunIcon)\r\n\t.load(setUp)\r\n\r\n\tfunction setUp () {\r\n\r\n\t\twindow.gameObjects = createGameObjects()\r\n\t\tlet { gameObjects } = window\r\n\r\n\t\t// images\r\n\t\tdispatch(setTexturePath('game-cover', coverArt))\r\n\t\tdispatch(setTexturePath('char-head', charHead))\r\n\t\tdispatch(setTexturePath('gradient-alpha', gradientAlpha))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-pistol', weaponUI_pistolIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-smg', weaponUI_smgIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-shotgun', weaponUI_shotgunIcon))\r\n\t\tdispatch(setTexturePath('ground-texture', groundTexture))\r\n\t\tdispatch(setTexturePath('explosive-barrel', explosiveBarrel))\r\n\t\t// env textures\r\n    let groundTex = makePixiSprite('ground-texture')\r\n    groundTex.pivot.x = groundTex.width * .5\r\n\t\tgroundTex.pivot.y = groundTex.height * .425\r\n\t\tlet gradientAlphaImg = makePixiSprite('gradient-alpha')\r\n\t\tgradientAlphaImg.width = width\r\n\t\tgradientAlphaImg.height = height\r\n\t\tgameObjects.setKeyValue('gradient-alpha', gradientAlphaImg)\r\n\t\tlet gameCover = makePixiSprite('game-cover')\r\n\t\tgameObjects.setKeyValue('game-cover-art', gameCover)\r\n\t\t// set sound fx\r\n\t\tgameObjects.setKeyValue('9mm-sound1', _9mm1)\r\n\t\tgameObjects.setKeyValue('9mm-sound2', _9mm2)\r\n\t\tgameObjects.setKeyValue('explosion1', explosion1)\r\n\t\tgameObjects.setKeyValue('distant-explosion', distant_explosion)\r\n\t\tgameObjects.setKeyValue('pistol-reload-sound', pistolReloadSnd)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body', bulletImpact_body)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body-sound', new Howl({src:[bulletImpact_body]}))\r\n\t\tgameObjects.setKeyValue('grenade-clink-sound', new Howl({ src: [grenadeClink] }))\r\n\t\tgameObjects.setKeyValue('throw-sound', new Howl({ src: [throwSound] }))\r\n\t\tgameObjects.setKeyValue('confirm-sound', new Howl({ src: [ confirmSound ] }))\r\n\t\tgameObjects.setKeyValue('coin-collect-sound', new Howl({ src: [ coinCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('ammo-collect-sound', new Howl({ src: [ ammoCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('item-collect-sound', new Howl({ src: [ itemCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('blood-squish-sound', new Howl({ src: [ bloodSquish ] }))\r\n\t\tgameObjects.setKeyValue('blood-squash-sound', new Howl({ src: [ bloodSquash ] }))\r\n\t\tgameObjects.setKeyValue('blood-smack-sound', new Howl({ src: [ bloodSmack ] }))\r\n\t\tgameObjects.setKeyValue('death-rip-sound', new Howl({ src: [ deathRipSound ] }))\r\n\t\tgameObjects.setKeyValue('jump-landing-sound', new Howl({ src: [ jumpLandingSound ] }))\r\n\t\tgameObjects.setKeyValue('dirt-impact-sound', new Howl({ src: [ dirtImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-hurt-sound', new Howl({ src: [ zombieHurtSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('zombie-death-sound', new Howl({ src: [ zombieDeathSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('pain1-sound', new Howl({ src: [ pain1Sound ] }))\r\n\t\tgameObjects.setKeyValue('pain2-sound', new Howl({ src: [ pain2Sound ] }))\r\n\t\tgameObjects.setKeyValue('player-death-sound', new Howl({ src: [ playerDeathSound ] }))\r\n\t\tgameObjects.setKeyValue('button-add-sound', new Howl({ src: [ buttonAddSound ] }))\r\n\t\tgameObjects.setKeyValue('button-subtract-sound', new Howl({ src: [ buttonSubtractSound ] }))\r\n\t\tgameObjects.setKeyValue('button-hover-sound', new Howl({ src: [ buttonHoverSound ] }))\r\n\t\tgameObjects.setKeyValue('button-click-sound', new Howl({ src: [ buttonClickSound ] }))\r\n\t\tgameObjects.setKeyValue('place-object-sound', new Howl({ src: [ placeObjectSound ] }))\r\n\t\tgameObjects.setKeyValue('button-cancel-sound', new Howl({ src: [ buttonCancelSound ] }))\r\n\t\tgameObjects.setKeyValue('purchase-sound', new Howl({ src: [ purchaseSound ] }))\r\n\t\tgameObjects.setKeyValue('shell-impact-sound', new Howl({ src: [ shellImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('health-pickup-sound', new Howl({ src: [ healthPickupSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-growl-sound', new Howl({ src: [ zombieGrowl ] }))\r\n\t\tgameObjects.setKeyValue('smg-fire-sound', new Howl({ src: [ smgFire ] }))\r\n\t\tgameObjects.setKeyValue('mag-drop-sound', new Howl({ src: [ magDrop ] }))\r\n\t\tgameObjects.setKeyValue('shot-shell-sound', new Howl({ src: [ shotShell ] }))\r\n\t\tgameObjects.setKeyValue('shotgun-blast-sound', new Howl({ src: [ shotgunBlast ] }))\r\n\t\tgameObjects.setKeyValue('achievement1-sound', new Howl({ src: [ achievement1 ] }))\r\n\t\tgameObjects.setKeyValue('achievement2-sound', new Howl({ src: [ achievement2 ] }))\r\n\t\tgameObjects.setKeyValue('achievement3-sound', new Howl({ src: [ achievement3 ] }))\r\n\t\tgameObjects.setKeyValue('charging-grenade-sound', new Howl({ src: [ chargingNade ] }))\r\n\t\tgameObjects.setKeyValue('jump-sound', new Howl({ src: [ jumpSound ] }))\r\n\t\t// updated zombie sprites\r\n\t\tgameObjects.setKeyValue('zombie-idle-sheet', loader.resources[zomb_idle_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-walk-sheet', loader.resources[zomb_walk_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack1-sheet', loader.resources[zomb_attack1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack2-sheet', loader.resources[zomb_attack2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-sheet', loader.resources[zomb_parts_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-gored-sheet', loader.resources[zomb_parts_gored_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-slash-fx-sheet', loader.resources[zomb_slash_fx_sheet].spritesheet)\r\n    gameObjects.setKeyValue('muzzle-flashes', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('sparks-sheet', loader.resources[sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('muzzle-sparks-sheet', loader.resources[muzzle_sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d1-sheet', loader.resources[explosion3d1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d2-sheet', loader.resources[explosion3d2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-1', loader.resources[blood_spurt_1].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-2', loader.resources[blood_spurt_2].spritesheet)\r\n    gameObjects.setKeyValue('blood-spurt-3', loader.resources[blood_spurt_3].spritesheet)\r\n    gameObjects.setKeyValue('explosion-assets-sheet', loader.resources[explosion_assets_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('wood-planks-sheet', loader.resources[wood_planks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('remote-mine-sheet', loader.resources[remote_mine_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('landmine-sheet', loader.resources[landmine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('clustermine-sheet', loader.resources[clustermine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-scan-sheet', loader.resources[turret_scan_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-shoot-sheet', loader.resources[turret_shoot_sheet].spritesheet)\r\n    gameObjects.setKeyValue('barriers-sheet', loader.resources[barriers_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('ground-fx-sheet', loader.resources[ground_effects_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('player-parts-sheet', loader.resources[char_parts].spritesheet)\r\n    gameObjects.setKeyValue('char-idle-sheet', loader.resources[char_idle_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-run-sheet', loader.resources[char_run_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-jump-sheet', loader.resources[char_jump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-pistol-sheet', loader.resources[char_reload_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-smg-sheet', loader.resources[char_reload_smg_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-shotgun-sheet', loader.resources[char_reload_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('left-arm-pistol-fire-sheet', loader.resources[left_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-pistol-fire-sheet', loader.resources[right_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('left-arm-smg-fire-sheet', loader.resources[left_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-smg-fire-sheet', loader.resources[right_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-pistol-sheet', loader.resources[melee_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-ump-sheet', loader.resources[melee_ump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-shotgun-sheet', loader.resources[melee_shotgun_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-pistol-sheet', loader.resources[grenade_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-ump-sheet', loader.resources[grenade_ump_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('grenade-shotgun-sheet', loader.resources[grenade_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('arms-fire-shotgun-sheet', loader.resources[arms_fire_shotgun].spritesheet)\r\n\t\t\r\n\t\t\r\n    let container = new PIXI.Container()\r\n\t\tcontainer.interactive = true\r\n\t\tcontainer.width = width\r\n\t\tcontainer.height = height\r\n\t\t\r\n    // make dedicated muzzle flashes for re-use instead of making a new image each time\r\n\t\tgameObjects.setKeyValue('muzzle-flashes-sheet', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n    \r\n\t\tlet ground = addGround()\r\n\t\tapp.stage.interactive = true\r\n\t\tapp.stage.addChild(container)\r\n\t\tcontainer.addChild(groundTex)\r\n    \r\n\t\tgameObjects.setKeyValue('pixi-app', app)\r\n\t\tgameObjects.setKeyValue('game-pixi-container', container)\r\n\t\t\r\n    gameObjects.setKeyValue('ammo-drops-by-type', {\r\n\t\t\t'pistol weapon': [],\r\n      'smg weapon': [],\r\n      'shotgun weapon': [],\r\n    })\r\n    gameObjects.setKeyValue('text-messages', [])\r\n    gameObjects.setKeyValue('reload-text-messages', [])\r\n\t\tgameObjects.setKeyValue('gibs', [])\r\n    gameObjects.setKeyValue('grenades', [])\r\n    gameObjects.setKeyValue('explosions', [])\r\n    gameObjects.setKeyValue('rocks', [])\r\n    gameObjects.setKeyValue('currency-drops', [])\r\n\t\tgameObjects.setKeyValue('pistol-shells', [])\r\n\t\tgameObjects.setKeyValue('pistol-bullets', [])\r\n\t\tgameObjects.setKeyValue('build-objects', [])\r\n\t\tgameObjects.setKeyValue('bullet-impacts', [])\r\n\t\tgameObjects.setKeyValue('wood-planks', [])\r\n\t\tgameObjects.setKeyValue('spark-sprites', [])\r\n\t\tgameObjects.setKeyValue('explosion-sprites', [])\r\n\t\tgameObjects.setKeyValue('remote-mines', {})\r\n\t\tgameObjects.setKeyValue('remote-mines-array', [])\r\n\t\tgameObjects.setKeyValue('static-ground-effects', [])\r\n\t\tgameObjects.setKeyValue('zombie-ragdolls', [])\r\n\t\tgameObjects.setKeyValue('zombies', [])\r\n\t\tgameObjects.setKeyValue('health-drops', [])\r\n\t\t\r\n\t\tgameObjects.setKeyValue('wall-tile', wallTile)\r\n\t\tgameObjects.setKeyValue('ground', ground)\r\n\t\tgameObjects.setKeyValue('ground-texture', groundTex)\r\n\t\tgameObjects.setKeyValue('game-width', width)\r\n\t\tgameObjects.setKeyValue('game-height', height)\r\n\t\tgameObjects.setKeyValue('world-width', worldWidth)\r\n\t\tgameObjects.setKeyValue('world', world)\r\n\t\tgameObjects.setKeyValue('render', render)\r\n\t\tgameObjects.setKeyValue('engine', engine)\r\n\t\tlet screenUI = new ScreenUI()\r\n\t\tlet weaponsUI = new WeaponsUI()\r\n\t\tgameObjects.setKeyValue('screen-ui', screenUI)\r\n\t\tgameObjects.setKeyValue('weapons-ui', weaponsUI)\r\n\t\tlet player = new Player()\r\n\t\tgameObjects.setKeyValue('player', player)\r\n\r\n\t\t// window.onload = () => {\r\n\t\t// \tsetTimeout(() => {\r\n\t\t// \t\tdispatch(\r\n\t\t// \t\t\tloadLocalStorageState()\r\n\t\t// \t\t)\r\n\t\t// \t\tweaponsUI.updateGrenadeIcons()\r\n\t\t// \t\tweaponsUI.updateWeaponMagazines()\r\n\t\t// \t}, 1000)\r\n\t\t// }\r\n\t\t\r\n\t\tfunction buildMenu () {\r\n\t\t\t// create a PIXI menu\r\n\t\t\tlet menu = new PIXI.Container()\r\n\t\t\tgameCover.pivot.x = gameCover.width *  .5\r\n\t\t\tgameCover.pivot.y = gameCover.height *  .5\r\n\t\t\tgameCover.scale.x = .51\r\n\t\t\tgameCover.scale.y = .51\r\n\t\t\tcontainer.alpha = 0\r\n\t\t\tmenu.addChild(\r\n\t\t\t\tgameCover\r\n\t\t\t)\r\n\t\t\tcontainer.alpha = 1\r\n\t\t\tmenu.interactive = true\r\n\t\t\tlet playBtn = new PIXI.Container()\r\n\t\t\tlet playBtnGfc = new PIXI.Graphics()\r\n\t\t\tplayBtnGfc.beginFill(0x555555)\r\n\t\t\tplayBtnGfc.drawRect(0, 0, 250, 80)\r\n\t\t\tlet playBtnTxt = new PIXI.Text('Play', {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 36,\r\n\t\t\t\tfill: 0xFFFFFF\r\n\t\t\t})\r\n\t\t\tplayBtn.addChild(playBtnGfc, playBtnTxt)\r\n\t\t\tfunction positionPlayButton() {\r\n\t\t\t\tplayBtn.position.x = width/2 - playBtn.width/2\r\n\t\t\t\tplayBtn.position.y = height/2 - playBtn.height/2\r\n\t\t\t}\r\n\t\t\tpositionPlayButton()\r\n\t\t\tplayBtnTxt.position.x = playBtn.width/2 - playBtnTxt.width/2\r\n\t\t\tplayBtnTxt.position.y = playBtn.height/2 - playBtnTxt.height/2\r\n\t\t\tplayBtn.interactive = true\r\n\t\t\tplayBtn.on('click', () => {\r\n\t\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\tdispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n\t\t\t\tdispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseover', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.05, y: 1.05, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseout', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.00, y: 1.00, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\t// menu.addChild(playBtn) -- remove pixi main menu button \r\n\t\t\tapp.stage.addChild(menu)\r\n\t\t\tgameObjects.setKeyValue('main-menu', menu)\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmenu\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet { menu: mainMenu } = buildMenu()\r\n\r\n\t\tEvents.on(engine, 'tick', e => {\r\n\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\r\n\t\t\tif (window.gameObjects && mainMenu.visible === true) {\r\n\t\t\t\tmainMenu.visible = false\r\n\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t// app.view.style.opacity = .75\r\n\t\t\t}\r\n\t\t\tif (window.gameObjects && gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW) {\r\n        if (mainMenu.visible === false) {\r\n          mainMenu.visible = true\r\n\t\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t\t// app.view.style.opacity = .85\r\n\t\t\t\t}\r\n      }\r\n      if (window.gameObjects && gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW || gameState === GameStates.PAUSE || gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameState === GameStates.SHOP_MENU || gameState === GameStates.BUILD_MENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n\t\t\t\tif (document.getElementsByClassName('App')[0]) {\r\n\t\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t\tdocument.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n\t\t\t\t}\r\n      } else {\r\n\t\t\t\tif (document.getElementsByClassName('App')[0]) {\r\n\t        document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n\t\t\t\t}\r\n\t\t\t}\r\n      if (gameState === GameStates.GAMEPLAY && window.gameObjects) {\r\n        if (gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n          document.body.style.cursor = 'auto'\r\n        } else {\r\n          document.body.style.cursor = 'none'\r\n        }\r\n\t\t\t}\r\n      \r\n      gameTickHandler(e, gameObjects)\r\n\r\n\t\t})\r\n\r\n\t\tEvents.on(engine, 'collisionStart', e => {\r\n\t\t\tlet { game: { gameState } } = getState()\r\n\t\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\t\tfor (let i = 0; i < e.pairs.length; ++i) {\r\n\t\t\t\t\tcheckCollisionStart(e, i, gameObjects)\r\n\t\t\t\t}\r\n\t\t\t}\r\n    })\r\n    \r\n\t}\r\n\r\n}\r\n","// anything that we can't manage with redux will go here,\r\n// meaning full objects and functions with methods for\r\n// manipulating Matter objects\r\nexport default function createGameObjects() {\r\n\tlet state = new State()\r\n\tfunction State() {\r\n\t\tthis.state = {}\r\n\t\tthis.getKeyValue = key => {\r\n      if (this.state[key]) {\r\n        return this.state[key]\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n\t\tthis.setKeyValue = (key, value) => {\r\n      this.state[key] = value\r\n      return this.state[key]\r\n    }\r\n\t\tthis.getFullState = () => { return this.state }\r\n\t\tthis.setFullState = (obj) => { this.state = obj }\r\n\t}\r\n\treturn state\r\n}\r\n","import { batch } from 'react-redux'\r\nimport store from '../../../app/store'\r\nimport { setZombiesOnStage, incrementWave, setWaveCountToDefeat, decrementZombieAttackTimeLimit, incrementZombieHealth, updateZombieWalkSpeed, updateZombieAttackDmg } from '../gameSlice'\r\nimport { createWaveMessage } from '../createMessages'\r\nimport { GenerateZombies } from '../items/ItemGenerators'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { resetWave } from '../ReactComponents/PauseMenu'\r\nimport saveGame from '../utils/saveGame'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const startWave = () => {\r\n\r\n  if (getState().game.waveNum === 0) {\r\n    dispatch(incrementWave())\r\n  }\r\n\r\n  const start = () => {\r\n    let { waveNum } = getState().game\r\n    batch(() => {\r\n      dispatch( updateZombieWalkSpeed( waveNum ) )\r\n      dispatch( updateZombieAttackDmg( waveNum ) )\r\n      dispatch( decrementZombieAttackTimeLimit( waveNum ) )\r\n      dispatch( incrementZombieHealth( waveNum ) )\r\n      dispatch( setWaveCountToDefeat( waveNum ) )\r\n    })\r\n    GenerateZombies( waveNum )\r\n  }\r\n\r\n  if (\r\n    getState().game.gameState === GameStates.GAMEPLAY &&\r\n    getState().game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU &&\r\n    getState().game.gameSubState !== SubStates.WAVE_DEFEATED\r\n    ) {\r\n    start()\r\n    setTimeout(() => {\r\n      if (getState().game.zombiesOnStage === 0 || window.gameObjects.getKeyValue('zombies').length === 0) {\r\n        start()\r\n      }\r\n    }, 2000)\r\n  } else {\r\n    setTimeout(start, 3000)\r\n  }\r\n\r\n}\r\n\r\nconst clearGameObjects = () => {\r\n  // destroy current renderable objects \r\n  let { gameObjects } = window\r\n  let credits = gameObjects.getKeyValue('currency-drops')\r\n  let healthdrops = gameObjects.getKeyValue('health-drops')\r\n  let pistolAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_PISTOL]\r\n  let smgAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SMG]\r\n  let shotgunAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SHOTGUN]\r\n  credits.forEach(credit => { credit.destroy() })\r\n  pistolAmmoDrops\r\n    .concat(smgAmmoDrops)\r\n    .concat(shotgunAmmoDrops)\r\n    .forEach(ammo => { ammo.destroy() })\r\n  healthdrops.forEach(health => { health.destroy() })\r\n}\r\n\r\nexport const waveDefeated = () => {\r\n  dispatch( setZombiesOnStage(0) )\r\n  dispatch( setWaveCountToDefeat(null) )\r\n  createWaveMessage('Wave Defeated!')\r\n  updateScore( getState().game.scoreAmounts.waveCompleted * getState().game.waveNum )\r\n  dispatch(incrementWave())\r\n  saveGame()\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { SubStates } from '../constants/GameStates'\r\nimport { addPurchase, decrementWave, setZombiesOnStage, gameStateTransition, setWaveCountToDefeat, subtractFromTotalCredits } from '../gameSlice'\r\nimport MenuComponents from './MenuComponents'\r\nimport { gotoMainMenu, resetWave } from './PauseMenu'\r\nimport { CustomMenuButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n  \r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const lastGameSubState = useSelector(state => state.game.lastGameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const respawnCost = useSelector(state => state.game.respawnCost)\r\n  const respawnToShopCost = useSelector(state => state.game.respawnToShopCost)\r\n  const waveNum = useSelector(state => state.game.waveNum)\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>\r\n          {\r\n            credits >= respawnToShopCost ? 'Respawn Menu'\r\n            : 'Game Over'\r\n          }\r\n        </MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n          {\r\n            credits >= respawnCost || lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={240}\r\n              onClick={() => {\r\n                screenUI.respawn()\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU && lastGameSubState !== SubStates.PLAYER_RESPAWN && lastGameSubState !== SubStates.WAVE_STARTED) {\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n                }\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n                  dispatch( subtractFromTotalCredits(respawnCost) )\r\n                }\r\n                dispatch( addPurchase('Respawn', respawnCost) )\r\n              }}>\r\n                Respawn? { lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ? '' : `$${respawnCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          {\r\n            credits >= respawnToShopCost && waveNum > 0 && lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={360}\r\n              onClick={() => {\r\n                resetWave()\r\n                batch(() => {\r\n                  dispatch( setZombiesOnStage(0) )\r\n                  dispatch( setWaveCountToDefeat(null) )\r\n                  dispatch( decrementWave() )\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU) )\r\n                  dispatch( subtractFromTotalCredits(respawnToShopCost) )\r\n                  dispatch( addPurchase('Shop Respawn', respawnToShopCost) )\r\n                })\r\n              }}>\r\n                Restart Current Wave from Shop? { `$${respawnToShopCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          <MenuComponents.MenuButtonSpacer>\r\n            <CustomMenuButton\r\n            onClick={gotoMainMenu}>\r\n              Go to Main Menu\r\n            </CustomMenuButton>\r\n          </MenuComponents.MenuButtonSpacer>\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\nimport { gameStateTransition, setSelectedBarrierToBuild, setSelectedTrapToBuild } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { barrierTypes, trapTypes } from '../constants/buildTypes'\r\nimport { CustomMenuButton, BackButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const BuildMenuStates = {\r\n    MAIN: 'main',\r\n    BARRIERS: 'barriers',\r\n    TRAPS: 'traps'\r\n  }\r\n  const [buildMenuState, setBuildMenuState] = React.useState(BuildMenuStates.MAIN)\r\n  const barrierCosts = useSelector(state => state.game.barriers.costToBuild)\r\n  const trapCosts = useSelector(state => state.game.traps.costToBuild)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const showBarriersSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.BARRIERS\r\n    )\r\n  }\r\n\r\n  const showTrapsSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.TRAPS\r\n    )\r\n  }\r\n\r\n  const backToBuildMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.MAIN\r\n    )\r\n  }\r\n\r\n  const gotoPlacementMode = () => {\r\n    let screenUI = gameObjects.getKeyValue('screen-ui')\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.BUILD_PLACEMENT_MODE)\r\n    )\r\n  }\r\n\r\n  const replaceCursorWithObjectToPlace = () => {\r\n    let crosshair = gameObjects.getKeyValue('crosshair')\r\n    crosshair.buildArrow(0xFFFFFF)\r\n  }\r\n  \r\n  const chooseBarrier = filteredType => {\r\n    if (credits >= barrierCosts[filteredType]) {\r\n      dispatch( setSelectedBarrierToBuild(filteredType) )\r\n      dispatch( setSelectedTrapToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n  \r\n  const chooseTrap = filteredType => {\r\n    if (credits >= trapCosts[filteredType]) {\r\n      dispatch( setSelectedTrapToBuild(filteredType) )\r\n      dispatch( setSelectedBarrierToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        {\r\n          buildMenuState === BuildMenuStates.TRAPS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Traps</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.BARRIERS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Barriers</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                <MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.MAIN ?\r\n            <>\r\n              <MenuComponents.MenuTitle>Build Menu</MenuComponents.MenuTitle>\r\n              <MenuComponents.MenuButtonContainer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showBarriersSubMenu }>\r\n                        Barriers\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showTrapsSubMenu }>\r\n                        Traps\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToShopQuery }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n              </MenuComponents.MenuButtonContainer>\r\n            </>\r\n          : null\r\n        }\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nposition: absolute;\r\nbottom: 0;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nbackground-color: #333;\r\nopacity: .8;\r\n`\r\n\r\nexport default () => {\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <MenuButton bgcolor={'#555'} width={500} height={40}>Done Placing Barriers/Traps: Press [ B ]</MenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","// React\r\nimport React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport buildGame from './buildGame'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { startWave, waveDefeated } from './waves/waveManager'\r\nimport { updateWeaponsUI } from './ui/WeaponsUI'\r\nimport { createGenericMessage } from './createMessages'\r\nimport { addToTotalCredits, gameStateTransition, setWeaponEquipped, loadLocalStorageState } from './gameSlice'\r\nimport PauseMenu, { gotoMainMenu } from './ReactComponents/PauseMenu'\r\nimport ShopMenu, { CornerBackButton, Inline } from './ReactComponents/ShopMenu'\r\nimport ShopQuery from './ReactComponents/ShopQuery'\r\nimport RespawnMenu from './ReactComponents/RespawnMenu'\r\nimport BuildMenu from './ReactComponents/BuildMenu'\r\nimport DoneBarrierPlacementBanner from './ReactComponents/DoneBarrierPlacementBanner'\r\nimport MenuComponents from './ReactComponents/MenuComponents'\r\nimport { NoTransitionButton } from './ReactComponents/PauseMenu'\r\nimport AchievementsView from './ReactComponents/AchievementsView'\r\nimport { motion } from 'framer-motion'\r\nimport Axios from 'axios'\r\nimport saveGame from './utils/saveGame';\r\n\r\nconst useScores = (initial) => {\r\n\r\n  const [scores, setScores] = React.useState(initial)\r\n\r\n  return [\r\n    scores,\r\n    setScores\r\n  ]\r\n\r\n}\r\n\r\nexport const ScoresView = (scores) => {\r\n\r\n  return (\r\n    <MenuComponents.Container>\r\n      <MenuComponents.MenuTitle>Top 100 Scores of All-time</MenuComponents.MenuTitle>\r\n      <MenuComponents.MenuButtonContainer\r\n      style={{\r\n        height: 470,\r\n        overflow: 'scroll',\r\n      }}\r\n      >\r\n        {\r\n          scores && scores.scores && scores.scores\r\n          .sort((a, b) => b.score - a.score)\r\n          .map(score => (\r\n            <>\r\n              <NoTransitionButton\r\n              bgcolor={ 'rgba(0, 0, 0, 0.25)' }\r\n              hovercolor={ 'rgba(0, 0, 0, 0.35)' }\r\n              bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n              hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n              >\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    { score.name }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: 0,\r\n                    right: 0,\r\n                  }}>\r\n                    { score.score }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    right: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    {\r\n                      (() => {\r\n                        let date = score.time.substr(0, score.time.indexOf('T'))\r\n                        let year = date.substr(0, score.time.indexOf('-'))\r\n                        let dateNoYear = date.substr(score.time.indexOf('-') + 1, date.length)\r\n                        return (\r\n                          `${dateNoYear} - ${year}`\r\n                        )\r\n                      })()\r\n                    }\r\n                  </div>\r\n                </Inline>\r\n              </NoTransitionButton>            \r\n            </>\r\n          ))\r\n        }\r\n      </MenuComponents.MenuButtonContainer>\r\n      <MenuComponents.MenuButtonContainer>\r\n        <Inline>\r\n          <CornerBackButton\r\n          marginTop={'-60px'}\r\n          onClick={ gotoMainMenu } >\r\n            Refresh List\r\n          </CornerBackButton>\r\n        </Inline>\r\n        <Inline>\r\n          <CornerBackButton\r\n          marginTop={'-60px'}\r\n          onClick={ gotoMainMenu } />\r\n        </Inline>\r\n      </MenuComponents.MenuButtonContainer>\r\n    </MenuComponents.Container>\r\n  )\r\n\r\n}\r\n\r\nexport default function Game () {\r\n\r\n\tconst { gameObjects, TweenLite: { delayedCall } } = window\r\n\tconst dispatch = useDispatch()\r\n\tconst game = useSelector(state => state.game)\r\n  const weaponEquipped = useSelector(state => state.game.player.weapons.equipped)\r\n  const waitInterval = React.useRef(null)\r\n  const cancelWaveStart = React.useRef(false)\r\n  const [scores, setScores] = useScores([])\r\n  const [animateScore, setAnimateScore] = useState(false)\r\n  // const [upgradeToggleAnimate, setUpgradeToggleAnimate] = useState(false)\r\n  const [runUpgraded, setRunUpgraded] = useState(false)\r\n  const [reloadUpgraded, setReloadUpgraded] = useState(false)\r\n  const [jumpUpgraded, setJumpUpgraded] = useState(false)\r\n  const [meleeUpgraded, setMeleeUpgraded] = useState(false)\r\n  const [defenseUpgraded, setDefenseUpgraded] = useState(false)\r\n  // const equipped = useSelector(state => state.game.player.weapons.equipped)\r\n\r\n\t// one-time methods and non-react code will go here\r\n\tReact.useEffect(() => {\r\n\r\n    buildGame()\r\n\r\n  }, []) // do once\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\t// on weapon toggle change..\r\n\t\tupdateWeaponsUI()\r\n\r\n\t}, [weaponEquipped])\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_STARTED) {\r\n      startWave()\r\n\t\t}\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_DEFEATED) {\r\n\t\t\twaveDefeated()\r\n    }\r\n    \r\n    if (game.gameSubState === SubStates.WAITING) {\r\n      let countdown = 3, timeInt = 500\r\n      cancelWaveStart.current = false\r\n      waitInterval.current = setInterval(() => {\r\n        createGenericMessage(`${countdown}`, '#FFFFFF', .25, .5)\r\n        countdown -= 1\r\n      }, timeInt)\r\n      delayedCall((timeInt/1000) * 4, () => {\r\n        if (!cancelWaveStart.current) {\r\n          clearInterval(waitInterval.current)\r\n          dispatch(gameStateTransition('sub', game.gameSubState, SubStates.WAVE_STARTED))\r\n        }\r\n      })\r\n    }\r\n\r\n    if (game.gameSubState === SubStates.PLAYER_DEATH) {\r\n      clearInterval(waitInterval.current)\r\n      cancelWaveStart.current = true\r\n\t\t\tcreateGenericMessage('You died.', '#FF0000', .75, 3)\r\n    }\r\n    \r\n  }, [game.gameSubState, delayedCall, dispatch])\r\n  \r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.waveCountToDefeat === 0 && game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n\t\t\twaveDefeated()\r\n\t\t}\r\n\r\n\t}, [game.waveCountToDefeat, game.lastGameSubState, game.gameSubState, dispatch])\r\n\t\r\n\tReact.useEffect(() => {\r\n\r\n    console.log('Game state has changed')\r\n\r\n    if (game.gameState === GameStates.SHOP_MENU || game.gameState === GameStates.BUILD_MENU) {\r\n      let screenUI = gameObjects.getKeyValue('screen-ui')\r\n      screenUI.pause()\r\n    }\r\n    \r\n    if (game.gameState === GameStates.MAIN_MENU || game.gameState === GameStates.GAMEPLAY) {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n    } else {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n    }\r\n\r\n\t\tif (game.gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (game.player.weapons.equipped === null) {\r\n\t\t\t\tdispatch(setWeaponEquipped('pistol weapon'))\r\n\t\t\t}\r\n    }\r\n\r\n  }, [game.gameState, game.player.weapons.equipped, gameObjects, dispatch])\r\n\r\n  React.useEffect(() => {\r\n    if (game.gameState !== GameStates.MAIN_MENU && game.purchases !== null &&\r\n      game.lastPurchase && game.lastPurchase.item !== null && game.lastPurchase.amount > 0) {\r\n      let snd = window.gameObjects.getKeyValue('purchase-sound')\r\n      snd.play()\r\n      let confirm = window.gameObjects.getKeyValue('confirm-sound')\r\n      confirm.play()\r\n      toast.dark(`You bought ${game.lastPurchase.item} for $${game.lastPurchase.amount}`, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n      saveGame()\r\n    }\r\n  }, [ game.purchases, game.lastPurchase ])\r\n\r\n  React.useEffect(() => {\r\n    if (game.lastAchievementEarned !== null && game.gameState !== GameStates.MAIN_MENU) {\r\n      let snd = window.gameObjects.getKeyValue('achievement2-sound')\r\n      snd.play()\r\n      toast.warning(`Achievement Earned: ${game.lastAchievementEarned}`, {\r\n        position: \"top-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n      dispatch(\r\n        addToTotalCredits( 500 )\r\n      )\r\n      saveGame()\r\n    }\r\n  }, [ game.achievements, game.lastAchievementEarned ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    let isErr\r\n    if (game.gameState === GameStates.SCORES_VIEW) {\r\n      Axios.get('http://localhost:8080/scores')\r\n      .catch(err => {\r\n        console.log(err)\r\n        isErr = true\r\n      })\r\n      .then(scores => {\r\n        if (isErr) {\r\n          console.log('api is on a different port, use yarn build to view working scores')\r\n        } else {\r\n          setScores( scores.data )\r\n        }\r\n      })\r\n    }\r\n\r\n  }, [ game.gameState ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    setAnimateScore(true)\r\n    delayedCall(.1, () => { setAnimateScore(false) })\r\n\r\n  }, [ game.scoreToggle ])\r\n\r\n  React.useEffect(() => {\r\n    setRunUpgraded(true)\r\n    delayedCall(.25, () => { setRunUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.run.current ])\r\n\r\n  React.useEffect(() => {\r\n    setReloadUpgraded(true)\r\n    delayedCall(.25, () => { setReloadUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.reload.current ])\r\n\r\n  React.useEffect(() => {\r\n    setJumpUpgraded(true)\r\n    delayedCall(.25, () => { setJumpUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.jump.current ])\r\n\r\n  React.useEffect(() => {\r\n    setMeleeUpgraded(true)\r\n    delayedCall(.25, () => { setMeleeUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.melee.current ])\r\n\r\n  React.useEffect(() => {\r\n    setDefenseUpgraded(true)\r\n    delayedCall(.25, () => { setDefenseUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.defense.current ])\r\n\r\n\treturn (\r\n\t\t<>\r\n      <ToastContainer />\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SCORES_VIEW ?\r\n          <ScoresView scores={ scores } />\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.MAIN_MENU && window.gameObjects ?\r\n          <>\r\n            <PauseMenu\r\n            margintop={ true }\r\n            hidetitle={ true }\r\n            hidebg={ false }\r\n            bgcolor={ '#222' }\r\n            playbtn={ true }\r\n            />\r\n          </>\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.BUILD_PLACEMENT_MODE && game.gameState === GameStates.GAMEPLAY\r\n          ?\r\n            <>\r\n              <DoneBarrierPlacementBanner />\r\n            </>\r\n          : null \r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          gameObjects && game.gameState === GameStates.PAUSE\r\n          ? <PauseMenu shop-query-visibility={ game.gameSubState === SubStates.SHOP_QUERY_SUBMENU } />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SHOP_MENU\r\n          ? <ShopMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.BUILD_MENU\r\n          ? <BuildMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.SHOP_QUERY_SUBMENU\r\n          ? <ShopQuery />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.PLAYER_DEATH\r\n          ? <RespawnMenu />\r\n          : null\r\n        }\r\n      </>\r\n      \r\n      <>\r\n        {\r\n          /* Wave count and zombies to defeat */\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div\r\n          style={{\r\n            backgroundColor: '#333',\r\n            position: 'absolute',\r\n            margin: 'auto',\r\n            width: '50%',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n            top: '4px',\r\n            left: 0, right: 0,\r\n            textAlign: 'center',\r\n            borderRadius: '2px'\r\n          }}>\r\n            <div style={{ display: 'inline-block' }} className='debug-ui'>\r\n              wave no: {game.waveNum}\r\n            </div>\r\n            <div style={{ marginLeft: '100px', display: 'inline-block' }} className='debug-ui'>\r\n              enemies to defeat: {game.waveCountToDefeat}\r\n            </div>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <motion.div\r\n            className='game-score'\r\n            animate={{\r\n              scale: animateScore ? [ 1.35, 1.0 ] : 1.0\r\n            }}\r\n            transition={{\r\n              duration: .35\r\n            }}\r\n            >\r\n              {\r\n                <span\r\n                style={{\r\n                  color: (\r\n                    game.score < game.prevScore ? 'red'\r\n                    : game.score > game.prevScore ? '#00FF61'\r\n                    : 'white'\r\n                  )\r\n                }}>\r\n                  {\r\n                    game.score\r\n                  }\r\n                </span>\r\n              }\r\n            </motion.div>\r\n          : null\r\n        }\r\n        <div\r\n        className={ game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ? 'player-attributes' : '' }>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <>\r\n            <div className={ reloadUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Reload Lvl. { game.player.upgradeTiers['reload'].current }\r\n            </div>\r\n            <div className={ runUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Run Lvl. { game.player.upgradeTiers['run'].current }\r\n            </div>\r\n            <div className={ jumpUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Jump Lvl. { game.player.upgradeTiers['jump'].current }\r\n            </div>\r\n            <div className={ defenseUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Defense Lvl. { game.player.upgradeTiers['defense'].current }\r\n            </div>\r\n            <div className={ meleeUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Melee Lvl. { game.player.upgradeTiers['melee'].current }\r\n            </div>\r\n          </>\r\n          : null\r\n        }\r\n        </div>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <div className='total-ammo-count-ui'>\r\n              {\r\n                game.player.weapons.totalAmmo[\r\n                  game.player.weapons.equipped\r\n                ]\r\n              }\r\n            </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div className='total-credits-ui'>\r\n            credits: <span style={{ color: '#71DD4D' }}>${ game.player.credits }</span>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW && weaponEquipped ?\r\n          <div className='weapon-stats'>\r\n            <div className='weapon-stats-item'>ROF: { game.player.modTiers['rof'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>PWR: { game.player.modTiers['powder'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>ACC: { game.player.modTiers['sight'][weaponEquipped].current }</div>\r\n            <div className='weapon-stats-item'>CAP: { game.player.modTiers['mag'][weaponEquipped].current }</div>\r\n          </div>\r\n          : null\r\n        }\r\n      </>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n","import React from 'react';\r\nimport Game from './features/game/Game'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\t\t\t\t<Game />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}