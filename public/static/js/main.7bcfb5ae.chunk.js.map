{"version":3,"sources":["images/pistol-icon.png","images/smg-icon.png","images/shotgun-icon.png","images/GroundTexture_Optimized.png","images/wallTile.png","images/gradient-layer-mask.png","images/explosiveBarrier.png","images/head-sprite.png","sounds/bodyBulletImpact.wav","images/GameCover.png","sounds/9mm1.wav","sounds/9mm2.mp3","sounds/explosion1.wav","sounds/explosion_distant.wav","sounds/pistolReload.wav","sounds/grenadeClink.wav","sounds/throw.wav","sounds/coinCollect.wav","sounds/collectAmmo.wav","sounds/collectItem.wav","sounds/bloodSquash.flac","sounds/bloodSquish.wav","sounds/bloodSmack.wav","sounds/deathRipSound.wav","sounds/jumpLanding.wav","sounds/dirtImpact.wav","sounds/zombieHurt.wav","sounds/zombieDeath.wav","sounds/pain1.wav","sounds/pain2.wav","sounds/playerDeath.wav","sounds/buttonAdd.wav","sounds/buttonSubtract.wav","sounds/buttonClick.wav","sounds/buttonHover.wav","sounds/placeObject.flac","sounds/cancelSound.wav","sounds/moneySound.wav","sounds/purchase.wav","sounds/shellImpact.wav","sounds/health.wav","sounds/zombieGrowl.wav","sounds/smgFire.wav","sounds/magDrop.wav","sounds/shotShell.wav","sounds/shotgunBlast.wav","sounds/achievement1.wav","sounds/achievement2.mp3","sounds/achievement3.wav","sounds/jumpSound.wav","sounds/grenadeCharge.wav","features/game/constants/GameStates.js","features/game/gameSlice.js","features/game/constants/weapons.js","app/store.js","features/game/utils/Utils.js","features/game/constants/mouseStates.js","features/game/collisionOptions.js","features/game/ReactComponents/MenuComponents.js","features/game/utils/updateScore.js","features/game/ReactComponents/ShopMenu.js","features/game/ReactComponents/AchievementsView.js","features/game/ReactComponents/PauseMenu.js","features/game/createMessages.js","features/game/items/Gib.js","features/game/player/PlayerRagdoll.js","features/game/FX/BloodSpurt.js","features/game/constants/DeathTypes.js","features/game/items/Rock.js","features/game/items/WoodPlank.js","features/game/FX/ExplosionSprite.js","features/game/FX/GrenadeExplosion.js","features/game/BuildItems/WallBarrier.js","features/game/BuildItems/Landmine.js","features/game/items/Grenade.js","features/game/BuildItems/Clustermine.js","features/game/constants/buildTypes.js","features/game/BuildItems/RemoteMine.js","features/game/player/fireWeapons.js","features/game/FX/MuzzleFlashFX.js","features/game/BuildItems/MachineGunTurret.js","features/game/FX/Sparks.js","features/game/ReactComponents/ShopQuery.js","features/game/player/Player.js","features/game/player/crosshairs.js","features/game/FX/GroundEffect.js","features/game/engineHandlers.js","features/game/WallTile.js","features/game/ui/WeaponsUI.js","features/game/items/HealthDrop.js","features/game/items/AmmoDrop.js","features/game/enemies/Zombie.js","features/game/items/CurrencyCredit.js","features/game/items/ItemGenerators.js","features/game/ui/ScreenUI.js","features/game/buildGame.js","features/game/createGameObjects.js","features/game/waves/waveManager.js","features/game/ReactComponents/RespawnMenu.js","features/game/ReactComponents/BuildMenu.js","features/game/ReactComponents/DoneBarrierPlacementBanner.js","features/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SubStates","GameStates","MAIN_MENU","GAMEPLAY","PAUSE","IN_GAME_MENU","GAMEOVER","SHOP_MENU","BUILD_MENU","SCORES_VIEW","AchievementDefs","THIS_IS_SPARTA","FROM_DOWNTOWN","FIRE_IN_THE_HOLE","WEAPONS_COLLECTOR","PISTOL_MODDER","SMG_MODDER","SHOTGUN_MODDER","MOD_AFICIONADO","THE_JUMP_SHOT","PILEDRIVE","TRAPHOUSE","BARRICADE","MINER","GUNNA","StatsDefs","gameSlice","createSlice","name","initialState","localStorage","getItem","JSON","parse","width","height","keys","score","prevScore","lvlToWin","scoreToggle","scoreAmounts","zombie","meleeConnect","zombieStreakBonus","zombieKnockedOffStage","headShot","collectCredit","collectHealth","collectAmmo","waveCompleted","achievement","penalties","respawn","killed","damageTaken","achievements","owned","description","stats","zombiesKilled","bulletsFired","timesReloaded","grenadesThrown","timesKilled","timesRespawned","itemsPickedUp","creditsEarned","storePurchases","trapsBuilt","barriersBuilt","meleeKills","mineKills","trapsPlaced","barriersPlaced","turretKills","damageDealt","trapTypesPlaced","barrierTypesPlaced","lastAchievementEarned","lastMagDropped","consecutiveGrenadeKills","lastGrenadeKill","zombieLastKilled","filterEffects","displayZombieHealth","rightMouseDown","mouseState","x","y","btn","mousePosition","mouseRelativeToPlayerPosition","textures","gameState","lastGameState","gameSubState","lastGameSubState","waveNum","waveCountToDefeat","zombiesOnStage","showingMessage","respawnCost","respawnToShopCost","purchases","lastPurchase","item","amount","player","perks","magnetism","cost","magDmg","lastBullet","creditDropper","ammoDropper","healthDropper","quickTurret","barrierPlus","cluck","health","credits","position","compositeId","composite","headId","bodyId","armId","weapons","list","equipped","grenadeChargeRate","grenadeUpperForceThreshold","grenadeFuseTime","default","grenadeExplosionSize","laser","meleeDamage","damage","min","max","shotLimiter","ammoCapacity","totalAmmo","ammoCostPerBox","lastShot","reloadSpeed","reloadAnimationFrames","bulletVariance","bulletForce","shellEjectionForce","shellRemovalTimeout","buyWeapons","constants","variables","magnetismSpeed","currentDirection","lastDirection","jumping","jumpForce","defense","acceleration","deceleration","upgradeTiers","run","current","jump","reload","melee","upgradeCosts","upgradeAmounts","modTiers","rof","powder","sight","mag","modCosts","modAmounts","barriers","selectedBarrier","costToBuild","traps","turret","fireDistance","cooldown","selectedTrap","enemies","zombies","attackDmg","attackDmgDefault","attackIncrementer","walkSpeed","walkSpeedDefault","walkSpeedIncrementer","zombieAttackLimiter","zombieAttackDefaultLimiter","zombieAttackLimiterDecrementer","zombieAttackDistance","defaultHealth","startingHealth","healthIncrementer","onRight","onLeft","consumables","healthkit","full","reducers","setTrapTypePlaced","state","action","payload","setBarrierTypePlaced","setLastMagDropped","increaseStats","increaseStatsByAmount","reducer","type","prepare","setLastGrenadeKill","resetConsecutiveGrenadeKills","setZombieLastKilled","flipScoreToggle","increaseScore","decreaseScore","updatePrevScore","addPurchase","setZombiesOnLeft","setZombiesOnRight","setRightMouseDown","attachMod","modType","wepType","Math","round","setPlayerCompositeId","console","log","setKeyPress","push","removeKeyPress","splice","indexOf","parseInt","setLastDirection","setCurrentDirection","setJumping","setGroundId","groundId","setMousePosition","setMouseStateX","setMouseStateY","setMouseButtonState","setWeaponEquipped","setLastShot","dateTimeObject","weapon","setMouseRelativeToPlayerPosition","setCompositeBodyIds","setStaticGunAngle","staticGunAngle","setStaticGunAngleState","staticGun","setTexturePath","textureName","texturePath","gameStateTransition","from","to","incrementWave","decrementWave","setWaveCountToDefeat","incrementWaveCountToDefeat","decrementWaveCountToDefeat","setWeaponsList","setShowingMessage","unsetAllKeys","resetPlayerVariables","Object","assign","decrementTotalAmmo","addToTotalAmmo","updateAmmoCapacity","newCapacityAmount","setPlayerPosition","addToTotalCredits","subtractFromTotalCredits","upgradeRunSpeed","upgradeReloadSpeed","upgradeJumpForce","upgradeDefense","upgradeMelee","updatePlayerHealth","decrementGrenadeCount","incrementGrenadeCount","updateZombieWalkSpeed","incrementer","updateZombieAttackDmg","decrementZombieAttackTimeLimit","showLaserSight","incrementZombieHealth","setSelectedBarrierToBuild","setSelectedTrapToBuild","setLastWaveCountDefeated","lastWaveCountDefeated","incrementZombiesOnStage","setZombiesOnStage","updateWeaponsList","setPlayerMagnetism","range","speed","setPlayerMagDamage","setPlayerLastBullet","setPlayerCreditDropper","setPlayerAmmoDropper","setPlayerHealthDropper","setPlayerQuickTurret","setPlayerBarrierPlus","setPlayerFusterCluck","toggleFilterEffects","toggleZombieHealthDisplay","setAchievementOwned","actions","store","configureStore","game","getState","window","TweenLite","makePixiSprite","stringIdentifier","PIXI","getBodyWidth","body","bounds","getBodyHeight","getPlayerPartByType","gameObjects","gunId","world","getKeyValue","Composite","get","getPlayerBody","GREATER_THAN_PLAYER_X_POS","playerCollisionOptions","group","category","mask","enemyCollisionOptions","itemCollisionOptions","Container","styled","div","props","Backing","opacity","bgcolor","MenuTitle","MenuButtonContainer","MenuButton","cancelTransition","MenuButtonSpacer","updateScore","dispatch","delayedCall","subtractScore","MenuComponents","Inline","IncrementDecrement","AmmoCount","CustomMenuButton","bordercolor","hovercolor","hoverborder","style","onClick","play","onMouseOver","children","BackButton","borderRadius","arrowOnly","fontSize","CornerBackButton","top","right","marginTop","Modal","label","labelClr","clickConfirmHandler","clickCancelHandler","boxShadow","color","space-top","display","marginRight","AmmoSubMenu","toDefaultSubMenu","toAmmoSubMenu","toStandardMenu","useDispatch","useSelector","ammoCap","React","useReducer","ammo","ammoInCart","dispatchAmmoInCart","useState","dollarCost","setDollarCost","fontWeight","left","weaponsUI","updateGrenadeIcons","select","PlayerAttributesMenuButton","subMenuType","setSubMenuType","upgradeTypes","getAttrName","length","ModSubMenu","getWepText","wepTxt","getModDescription","mod","selectedMod","setSelectedMod","selectedType","setSelectedType","marginLeft","modPurchaseName","updateWeaponMagazines","map","i","Fragment","key","ShopMenu","menuType","setMenuType","w","h","screenUI","toAmmoMenu","backToStandardMenu","openAmmoSubMenu","getHealthkitCostStyle","kitType","useEffect","WEAPONS_EXPERT","unpause","acceptHealth","data-tip","data-for","id","batch","backBtnFn","achievementsKeys","resetWave","forEach","z","kill","setKeyValue","dead","gotoMainMenu","NoTransitionButton","Stat","stat","padding","PauseMenu","pauseMenuStates","showDefault","setPauseMenuState","pauseMenuState","effectFilters","margintop","hidebg","hidetitle","playbtn","togglePause","AchievementsView","checkFilters","ammos","concat","credit","displayHealth","createGenericMessage","txt","fillColor","durationMotion","durationLinger","fill","Power1","container","gameWidth","gameHeight","text","font","pivot","addChild","alpha","onStart","onComplete","delay","ease","easeIn","removeChild","createTextMessage","set","texts","playerBody","msg","playerPosition","initialY","destroy","idx","Gib","timeToDisappear","position_x","position_y","force_x","force_y","gibs","Bodies","circle","collisionFilter","World","add","partsSheet","gfc","Sprite","floor","random","getTexturePNG","this","Body","applyForce","float","animate","renderFn","rot","rotation","remove","GibGenerator","count","force","gibCnt","PlayerRagdollDecap","partLastDamaged","bUpper","a","l","hnd","f1","f2","spine","bodyUpper","rectangle","head","maskBody","armUpperL","armUpperR","handL","armLowerL","armLowerR","handR","legUpperL","legUpperR","legLowerL","legLowerR","footL","footR","bodyToHead","Constraint","create","bodyA","bodyB","pointA","pointB","bodyUpperToArmUpperL","bodyUpperToArmUpperR","armUpperLToArmLowerL","armUpperRToArmLowerR","handToLowerL","handToLowerR","bodyLowerToLegUpperL","bodyLowerToLegUpperR","legUpperLToLegLowerL","legUpperRToLegLowerR","footLToLowerLegL","footRToLowerLegR","spineGfx","spineLinks","_si","spineLink","spineConstraints","makeSpine","upper_spineLinks","upper_spineConstraints","spineToUpper","gibForce","int","parts_spritesheet","spriteParts","foot2","_id","leg2","hand2","arm2","upperArm2","foot1","upperLeg2","skull","leg1","upperLeg1","link","spineGfc","torsoUpper","hand1","arm1","upperArm1","part","updateAnchor","sprite","animateRagParts","renderFnc","linkPos","maskPos","skullPos","torsoUpperPos","arm1Pos","upperArm1Pos","hand1Pos","upperLeg1Pos","leg1Pos","foot1Pos","arm2Pos","upperArm2Pos","hand2Pos","upperLeg2Pos","leg2Pos","foot2Pos","PlayerRagdollHalved","bLower","bodyLower","entrailGfx","lower_spineLinks","lower_spineConstraints","spineToLower","entrailGfc","torsoLower","torsoLowerPos","PlayerRagdollMaim","b","bodyUpperToLegUpperL","bodyUpperToLegUpperR","torso","torsoPos","PlayerRagdoll","BloodSpurt","scale","bodyToDelete","chosenSpurt","bloodSpurt1_sheet","bloodSpurt1","AnimatedSprite","animations","bloodSpurt2_sheet","bloodSpurt2","bloodSpurt3_sheet","bloodSpurt3","spurts","autoChosen","animationSpeed","loop","FELL_OFF","Rock","rocks","explosionAssetsSheet","rockPieceAssets","rockSprite","rockScale","rockBody","restitution","WoodPlank","pos","woodPlanksSheet","woodPlanks","plankRange","getPlank","gfcContainer","torque","ExplosionSprite","renderBody","explosionTexture1","explosionTexture2","explosion1","explosion2","explosions","ex","explosion","adjustment","AdjustmentFilter","brightness","saturation","blur","BlurFilter","glow","GlowFilter","outerStrength","filters","onUpdate","GrenadeExplosion","showRocksBool","options","explosionSound1","Howl","src","distantExplosion","distantExplosionSound","explosionsArray","smokeAssets","positionalBody","isStatic","calcRenderedPosition","calculatedPosition","randInt","s","smokeSprite","idx1","randScale","xyval","r","showWood","showExplosionSprite","explosionSprites","seek","WallBarrier","dimensions","barriersSprites","buildObjects","woodenBarrier","stoneBarrier","metalBarrier","explosiveBarrier","types","WOOD","STONE","METAL","EXPLOSIVE","barrierSprite","objBody","inertia","Infinity","ground","constraint","strength","main","destroyed","getBody","healthDisplay","sprites","takeDamage","dmg","displayBarrierStrength","removeSelf","_x","_y","explosionHitbox","Landmine","landmines","landmineSheet","hitbox","Grenade","fuseTime","grenadeDistance","start","end","grenades","grenadeBody","grenadeGfc","beginFill","drawCircle","bevel","BevelFilter","shadowAlpha","lightAlpha","thickness","shadowColor","lightColor","noise","NoiseFilter","seed","motionBlur","MotionBlurFilter","velocity","radians","exploded","explode","showRocks","explosionSize","distance","Clustermine","num","xforce","yforce","nade","barrierTypes","trapTypes","LANDMINE","CLUSTER_BOMB","REMOTE_MINE","TURRET","RemoteMine","mineNumber","remoteMines","remoteMinesArr","Text","calcPistolDamage","BulletImpact","surfaceType","tint","alphaDuration","rand","duration","renderPosition","PistolShell","changeLabelString","overrideOptions","shells","undefined","setAngularVelocity","shellWd","shellHt","drawRect","endFill","setTimeout","bind","PistolBullet","extraDamageBool","arm","bullets","bulletWd","overrideBody","setAngle","overrideAngle","Vector","angle","overrideForce","position1","position2","cos","sin","calcBulletAngle","addImpactEffect","bulletImpacts","impact","bulletLastPos","bulletTrail","linePoints","fireEquippedWeapon","playerBodyWd","playerBodyHt","Date","now","checkEmpty","reloading","stringify","fireBullet","fireWeaponAnimation","extraDmg","lastBulletByWepType","split","shaking","changeTextForEmptyShake","emptyMagShake","MuzzleFlashFX","muzzleFlashesSheet","muzzleFlash001","muzzleFlash002","muzzleFlash003","muzzleFlash004","muzzleFlash005","muzzleFlashes","visible","muzzleScale","blurFilter","getRandomBlur","quality","glowFilter","innerStrength","adjustmentFilter","flashes","flash","tier","randFlash","getRandomFlash","_muzzleScale","MachineGunTurret","scanAnim","shootAnim","onFrameChange","gotoAndStop","child","direction","scanning","muzzleFlashFX","setMuzzleRotations","degrees","fireEffect","_ejectY","shooting","Spark","spark1","spark2","sparks","spark","adjFilter","sparkContainer","stop","adjust","BottomBanner","Back","nextWave","wave","alert","ShopQuery","className","EnhancedMuzzleSpark","muzzleSpark","gotoAndPlay","getFilters","updateFilters","Player","engine","wd","ht","friction","armAttach","headAttach","bodies","life","lifebarOutline","lineStyle","lifebar","initialLifebarWidth","charReloadPistolSpritesheet","charReloadPistolSprite","charReloadSMGSpritesheet","charReloadSMGSprite","charReloadShotgunSpritesheet","charReloadShotgunSprite","shotgunShellLoadIterations","gotoToEndOfShotgunReload","reloadAnimsByType","reloadAnims","kernelSize","meleePistolSpritesheet","meleePistolAnim","meleeAttackInProgress","removeMeleeHitbox","currentFrame","meleeUMPSpritesheet","meleeUMPAnim","meleeShotgunSpritesheet","meleeShotgunAnim","meleeSprites","grenadeThrowInProgress","grenadeForce","chargingGrenade","chargeGrenade","chargeGrenadeSound","meter","renderGrenadeChargeMeter","createGrenade","calculatedGrenadeForce","calcGrenadeAngle","throwGrenade","attacks","grenadeThrowPistolAnim","grenadeThrowUMPAnim","grenadeThrowShotgunAnim","grenadeThrowPistolSpritesheet","grenadeThrown","grenadeThrowUMPSpritesheet","grenadeThrowShotgunSpritesheet","grenadeSprites","grenadeSpritesByEquipped","ejectedMags","reloadMagazineActionsByType","magDmgOwned","mx","pistolReloadSound","fade","_d","magBody","pistolMag","magObj","gfx","unshift","pop","smgMag","reloadShell","updateEjectedMagPositions","reloadWeapon","charRightArmFirePistolSpritesheet","charRightArmFirePistolSprite","charRightArmFireSMGSpritesheet","charRightArmFireSMGSprite","charArmsFireShotgunSpritesheet","charRightArmFireShotgunSprite","headSprite","positionHeadSprite","renderObj","_mx","my","fn","armsSpritesByType","charLeftArmFirePistolSprite","charRunSpritesheet","charRunSprite","charIdleSpritesheet","charIdleSprite","charJumpSpritesheet","charJumpSprite","stopJumpAnimation","resumeJumpAnimation","jumpMotionBlur","playJumpAnimation","charLeftArmFirePistolSpritesheet","charLeftArmFireSMGSpritesheet","charLeftArmFireSMGSprite","charLeftArmFireShotgunSprite","armsSprites","_9mm1","_9mm2","pistolSound1","pistolReloadSnd","_1","volume","jumpSound","pain1Snd","pain2Snd","deathRip","playerDeathSnd","hitImpact","smgFire","shotgunFire","mSpark","currentMuzzleSpark","bodySprites","shadow","drawEllipse","setBodySpritesPositions","obj","setArmsSpritePosition","fpos","_my","getFlashes","createMeleeHitbox","meleeHitbox","meleeAttack","collectCredits","playerHit","resetPlayerHit","blinkAlpha","bloodSpurtPos","amt","addSpritesInOrder","timing","timeScale","playerRagdoll","lastDeathType","lastBodyPosition","translate","deathType","parts","playerArm","getPlayerComposite","bh","keydownListenersAdded","addEventListener","e","keyCode","changeBack","toString","detonate","currentTurret","updateDirection","target","document","getElementsByTagName","getBoundingClientRect","armAngle","mouseX","mouseY","rect","clientX","clientY","mPosRel","buttons","costToBuild_trap","costToBuild_barrier","closestX","barrier","buildNewLocation","placeObjectSound","cancelSound","checkAllowArray","buildObjectPlacementComparison","reduce","prev","curr","abs","trap","buildTrap","trapPosition","mine","updateNumber","preventDefault","grenadesCount","deltaY","pause","Crosshairs","crosshair","cross","moveTo","lineTo","changed","_new","buildArrow","animationLoop","GroundEffect","bodyPart","groundFx","fxSheet","bulletTextures","groundBloodSpatters","render","groundTex","groundBody","pistolBullets","pistolBulletWd","pistolBulletHt","pistolShells","pistolShellWd","pistolShellHt","ammoDrops","pistolAmmoDrops","smgAmmoDrops","shotgunAmmoDrops","creditDrops","crosshairs","zombieRags","leftEnemyCount","rightEnemyCount","leftEnemyCountDisplay","rightEnemyCountDisplay","sparkSprites","healthdrops","wallTile","WallTile","texture","Texture","delta","tilePosition","TilingSprite","createCollision","body1_label","body2_label","callback","pairs","body1","body2","calculateDamageAmount","weapon_str","calcSMGDamage","calcShotgunDamage","calcTurretDamage","checkCollisionStart","snd","knockback","ammo_type","grenadeClink","gameTickVarsDefined","getZombieRadarTextStyle","gameTickHandler","gradientAlpha","accelMax","mouseButtonState","renderPositionFn","firePistol","fireSMG","fireShotgun","Render","lookAt","playerPosX","playerPosY","box","positionAmmoBox","coin","positionCreditGfx","creditBody","playerRag","grenade","rock","wood","gib","setPlayerVars","playerDirection","paused","walk","setSpritesPositions","timeSinceLastAttack","attack","shoot","updatePosition","rag","fx","WeaponsUI","mags","pistolIcon","smgIcon","shotgunIcon","icons","iconBG","DropShadowFilter","icon","keepOnTop","magazinesByWeaponType","g","emptyText","setInterval","bulletMask","bulletBevel","gbevel","gnoise","makeMagByType","bullet","bulletGfc","weaponIcons","updateMagazine","Array","swapSwap","wep","magazineIndexes","magEmptyBools","doTheWiggle","defaultPos","textForEmptyShake","str","removeEmptyText","forceReload","ammoCheck","limit","_i","onCompleteParams","forceWepEquipped","m","hasOwnProperty","lastMagIdx","makeGrenadeIcon","grenadeCount","gnade","HealthDrop","_amt","Graphics","healths","AmmoDrop","weaponType","colors","ammoBox","ammoGfc","boxGfc","blurGfc","bevelFilter","boxTxt","ZombieRagdoll","f","constraints","_body","z_parts_spritesheet","skulls","getSkullTex","c","getARandomConstraint","Zombie","Power2","zombieWalkSpeed","headToBody","zWalkSheet","zAttackSheet","idleSheet","idleAnim","zWalk","zAttack","zAttack2","slashFX","slashAnim","walkAnim","attackAnim","attackAnim2","anims","anim","playerBodyPosition","playSlashAnim","shouldDisplayHealth","moveLifeDisplay","zombieFarFromPlayer","playIdleAnim","playing","walkAnimPlaying","stopIdleAnim","playWalkAnim","stopWalkAnim","healthOffsetY","damageDisplayOptions","healthDisplayOptions","renderFnResult","alteredWalkSpeed","comparison","bool","dmgTxts","dmgIterator","tintAmounts","1","2","3","4","partDamaged","isCritical","isMelee","attackType","spurtPosLow","spurtPosHi","directionX","removeZombieFromMatterWorld","attackHitbox","removeZombieFromZombiesArray","skipZombieRag","killType","dropPos","GenerateRandomCreditDrops","scoreAmt","zombieGrowl","oneOfTwo","compareResult","makeAttackHitbox","CreditDrop","currencyDrops","creditContainer","creditBlur","creditGfc","yStartPos","amountLimits","randCount","RespawnButton","ScreenUI","pixiElt","Bounce","gameContainer","respawnButton","interactive","overrideCount","GenerateRandomAmmoDrops","on","showRespawnButton","easeOut","muzzle_flashes_spritesheet","zomb_idle_sheet","zomb_walk_sheet","zomb_attack1_sheet","zomb_attack2_sheet","zomb_parts_sheet","zomb_parts_gored_sheet","zomb_slash_fx_sheet","barriers_sheet","char_parts","char_idle_sheet","char_run_sheet","char_jump_sheet","char_reload_pistol_sheet","char_reload_smg_sheet","left_arm_pistol_fire_sheet","right_arm_pistol_fire_sheet","left_arm_smg_fire_sheet","right_arm_smg_fire_sheet","melee_pistol_sheet","melee_ump_sheet","melee_shotgun_sheet","grenade_pistol_sheet","grenade_ump_sheet","grenade_shotgun_sheet","arms_fire_shotgun","char_reload_shotgun_sheet","blood_spurt_1","blood_spurt_2","blood_spurt_3","landmine_sheet","wood_planks_sheet","sparks_sheet","elementId","mouseConstraintBool","Engine","element","getElementById","pixelRatio","runner","Runner","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","stiffness","worldWidth","setUpMatter","app","antialias","resolution","ROUND_PIXELS","appendChild","view","loader","setUpPixi","buildGame","explosiveBarrel","groundTexture","charHead","weaponUI_pistolIcon","weaponUI_smgIcon","weaponUI_shotgunIcon","load","value","getFullState","setFullState","coverArt","gradientAlphaImg","gameCover","distant_explosion","bulletImpact_body","throwSound","confirmSound","coinCollectSound","ammoCollectSound","itemCollectSound","bloodSquish","bloodSquash","bloodSmack","deathRipSound","jumpLandingSound","dirtImpactSound","zombieHurtSound","zombieDeathSound","pain1Sound","pain2Sound","playerDeathSound","buttonAddSound","buttonSubtractSound","buttonHoverSound","buttonClickSound","buttonCancelSound","purchaseSound","shellImpactSound","healthPickupSound","magDrop","shotShell","shotgunBlast","achievement1","achievement2","achievement3","chargingNade","resources","spritesheet","addGround","stage","mainMenu","menu","playBtn","playBtnGfc","playBtnTxt","fontFamily","positionPlayButton","buildMenu","Events","cursor","getElementsByClassName","pointerEvents","startWave","numOnStage","getAZombie","startZombieCreation","GenerateZombies","waveDefeated","chars","transitionToShopQuery","waveMsgOutro","waveMsgIntro","createWaveMessage","setItem","BuildMenuStates","buildMenuState","setBuildMenuState","barrierCosts","trapCosts","backToBuildMenu","gotoPlacementMode","replaceCursorWithObjectToPlace","chooseBarrier","filteredType","chooseTrap","filter","ScoresView","scores","overflow","sort","date","time","substr","year","dateNoYear","Game","waitInterval","useRef","cancelWaveStart","initial","useScores","setScores","animateScore","setAnimateScore","runUpgraded","setRunUpgraded","reloadUpgraded","setReloadUpgraded","jumpUpgraded","setJumpUpgraded","meleeUpgraded","setMeleeUpgraded","defenseUpgraded","setDefenseUpgraded","updateWeaponsUI","countdown","timeInt","clearInterval","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warning","isErr","Axios","catch","err","then","data","DoneBarrierPlacementBanner","shop-query-visibility","BuildMenu","RespawnMenu","backgroundColor","margin","lineHeight","textAlign","transition","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,iCCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.7bcfb5ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pistol-icon.7f31cd11.png\";","module.exports = __webpack_public_path__ + \"static/media/smg-icon.3a3ac587.png\";","module.exports = __webpack_public_path__ + \"static/media/shotgun-icon.0cd5d683.png\";","module.exports = __webpack_public_path__ + \"static/media/GroundTexture_Optimized.b017db2f.png\";","module.exports = __webpack_public_path__ + \"static/media/wallTile.c21abdef.png\";","module.exports = __webpack_public_path__ + \"static/media/gradient-layer-mask.2be09341.png\";","module.exports = __webpack_public_path__ + \"static/media/explosiveBarrier.4f1da0f2.png\";","module.exports = __webpack_public_path__ + \"static/media/head-sprite.0a5881b1.png\";","module.exports = __webpack_public_path__ + \"static/media/bodyBulletImpact.94466266.wav\";","module.exports = __webpack_public_path__ + \"static/media/GameCover.82b711ae.png\";","module.exports = __webpack_public_path__ + \"static/media/9mm1.604f7da7.wav\";","module.exports = __webpack_public_path__ + \"static/media/9mm2.c11c6dad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/explosion1.9434e92f.wav\";","module.exports = __webpack_public_path__ + \"static/media/explosion_distant.d9a90524.wav\";","module.exports = __webpack_public_path__ + \"static/media/pistolReload.915ac0e1.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeClink.e7168e2c.wav\";","module.exports = __webpack_public_path__ + \"static/media/throw.e7ed00d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/coinCollect.b65cb627.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectAmmo.b05c1059.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectItem.a7bd5386.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquash.6c1046e0.flac\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquish.508e6483.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSmack.eb606367.wav\";","module.exports = __webpack_public_path__ + \"static/media/deathRipSound.733ed512.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpLanding.f703082d.wav\";","module.exports = __webpack_public_path__ + \"static/media/dirtImpact.de2bbd17.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieHurt.2e807e84.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieDeath.0ac25f1f.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain1.e6646ac7.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain2.defb4bdf.wav\";","module.exports = __webpack_public_path__ + \"static/media/playerDeath.e8c5712d.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonAdd.8db1c8cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonSubtract.b240a4d0.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonClick.10d30b9f.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonHover.e0064aca.wav\";","module.exports = __webpack_public_path__ + \"static/media/placeObject.fa092176.flac\";","module.exports = __webpack_public_path__ + \"static/media/cancelSound.0d1ffcde.wav\";","module.exports = __webpack_public_path__ + \"static/media/moneySound.1bae50c5.wav\";","module.exports = __webpack_public_path__ + \"static/media/purchase.4979dc37.wav\";","module.exports = __webpack_public_path__ + \"static/media/shellImpact.8075d182.wav\";","module.exports = __webpack_public_path__ + \"static/media/health.29ff687c.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieGrowl.4792280f.wav\";","module.exports = __webpack_public_path__ + \"static/media/smgFire.b1f03f38.wav\";","module.exports = __webpack_public_path__ + \"static/media/magDrop.1547e6a9.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotShell.f90e6de6.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotgunBlast.4118af72.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement1.dd62d37e.wav\";","module.exports = __webpack_public_path__ + \"static/media/achievement2.7a014c29.mp3\";","module.exports = __webpack_public_path__ + \"static/media/achievement3.23db76c0.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpSound.ccaa05f0.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeCharge.31709a11.wav\";","const GameStates = {\r\n  MAIN_MENU: 'main menu',\r\n  GAMEPLAY: 'gameplay',\r\n  PAUSE: 'pause',\r\n  IN_GAME_MENU: 'in-game menu',\r\n  GAMEOVER: 'gameover',\r\n  SHOP_MENU: 'in-game shop menu',\r\n  BUILD_MENU: 'build menu',\r\n  SCORES_VIEW: 'scores view',\r\n}\r\n\r\nexport const SubStates = {\r\n\tNEUTRAL: 'neutral',\r\n\tWAITING: 'waiting',\r\n\tWAVE_STARTED: 'wave started',\r\n\tWAVE_DEFEATED: 'wave defeated',\r\n\tWAVE_CHANGE: 'wave change',\r\n\tPLAYER_DEATH: 'player death',\r\n  PLAYER_RESPAWN: 'player respawn',\r\n  SHOP_QUERY_SUBMENU: 'shop query sub-menu',\r\n  BUILD_PLACEMENT_MODE: 'build trap placement mode'\r\n}\r\n\r\nexport default GameStates\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_GRENADE } from './constants/weapons'\r\n// import { original } from 'immer'\r\n\r\nexport const AchievementDefs = {\r\n  THIS_IS_SPARTA: 'SPARTA',\r\n  FROM_DOWNTOWN: 'Downtown',\r\n  FIRE_IN_THE_HOLE: 'Triplets',\r\n  WEAPONS_COLLECTOR: 'Collector',\r\n  PISTOL_MODDER: 'P.Modder',\r\n  SMG_MODDER: 'SMG Modder',\r\n  SHOTGUN_MODDER: 'S.Modder',\r\n  MOD_AFICIONADO: 'Aficionado',\r\n  THE_JUMP_SHOT: 'Jumpshot',\r\n  PILEDRIVE: 'Piledrive',\r\n  TRAPHOUSE: 'Traphouse',\r\n  BARRICADE: 'Barricade',\r\n  MINER: 'Miner',\r\n  GUNNA: 'Gunna',\r\n}\r\n\r\nexport const StatsDefs = {\r\n  zombiesKilled: 'zombiesKilled',\r\n  bulletsFired: 'bulletsFired',\r\n  timesReloaded: 'timesReloaded',\r\n  grenadesThrown: 'grenadesThrown',\r\n  timesKilled: 'timesKilled',\r\n  timesRespawned: 'timesRespawned',\r\n  itemsPickedUp: 'itemsPickedUp',\r\n  creditsEarned: 'creditsEarned',\r\n  storePurchases: 'storePurchases',\r\n  meleeKills: 'meleeKills',\r\n  mineKills: 'mineKills',\r\n  trapsPlaced: 'trapsPlaced',\r\n  barriersPlaced: 'barriersPlaced',\r\n  turretKills: 'turretKills',\r\n  damageTaken: 'damageTaken',\r\n  damageDealt: 'damageDealt',\r\n}\r\n\r\n// for flattened data game state\r\nexport const gameSlice = createSlice({\r\n\tname: 'game',\r\n\tinitialState: localStorage && localStorage.getItem('ZombieChamber-gameSave') ? JSON.parse(localStorage.getItem('ZombieChamber-gameSave')) : {\r\n\t\twidth: 1200,\r\n\t\theight: 550,\r\n    keys: [],\r\n    score: 0,\r\n    prevScore: 0,\r\n    lvlToWin: 30,\r\n    scoreToggle: false,\r\n    scoreAmounts: {\r\n      zombie: 500,\r\n      meleeConnect: 100,\r\n      zombieStreakBonus: 250,\r\n      zombieKnockedOffStage: 500,\r\n      headShot: 100,\r\n      collectCredit: 10,\r\n      collectHealth: 10,\r\n      collectAmmo: 10,\r\n      waveCompleted: 1000,\r\n      achievement: 5000,\r\n      penalties: {\r\n        respawn: 1000,\r\n        killed: 500,\r\n        damageTaken: 20\r\n      }\r\n    },\r\n    achievements: {\r\n      'SPARTA': { owned: false, description: 'Kicking a zombie off-stage' },\r\n      'Downtown': { owned: false, description: 'Throwing a grenade 2000 ft. and hitting a zombie' },\r\n      'Triplets': { owned: false, description: 'Killing 3 Zombies with one grenade' },\r\n      'Collector': { owned: false, description: 'Buying both the Shotgun and the SMG from the Shop' },\r\n      'P.Modder': { owned: false, description: 'Purchasing all pistol modifications' },\r\n      'SMG Modder': { owned: false, description: 'Purchasing all SMG modifications' },\r\n      'S.Modder': { owned: false, description: 'Purchasing all Shotgun modifications' },\r\n      'Aficionado': { owned: false, description: 'Buying all mods in available' },\r\n      'Jumpshot': { owned: false, description: 'Jumping in the air and firing the final killshot' },\r\n      'Piledrive': { owned: false, description: 'Killing 5 zombies with melee attacks as the final strike' },\r\n      'Traphouse': { owned: false, description: 'Building and placing 3 different traps' },\r\n      'Barricade': { owned: false, description: 'Building and placing 3 different barrier types' },\r\n      'Miner': { owned: false, description: 'Killing at least 3 zombies with landmines' },\r\n      'Gunna': { owned: false, description: 'Killing at least 10 zombies with turrets' }\r\n    },\r\n    stats: {\r\n      zombiesKilled: 0,\r\n      bulletsFired: 0,\r\n      timesReloaded: 0,\r\n      grenadesThrown: 0,\r\n      timesKilled: 0,\r\n      timesRespawned: 0,\r\n      itemsPickedUp: 0,\r\n      creditsEarned: 0,\r\n      storePurchases: 0,\r\n      trapsBuilt: 0,\r\n      barriersBuilt: 0,\r\n      meleeKills: 0,\r\n      mineKills: 0,\r\n      trapsPlaced: 0,\r\n      barriersPlaced: 0,\r\n      turretKills: 0,\r\n      damageTaken: 0,\r\n      damageDealt: 0,\r\n    },\r\n    trapTypesPlaced: {},\r\n    barrierTypesPlaced: {},\r\n    lastAchievementEarned: null, // name of achievement\r\n    lastMagDropped: null, // time\r\n    consecutiveGrenadeKills: 0,\r\n    lastGrenadeKill: null, // time\r\n    zombieLastKilled: null, // time\r\n    filterEffects: false,\r\n    displayZombieHealth: true,\r\n    rightMouseDown: false,\r\n\t\tmouseState: { x: '', y: '', btn: '' },\r\n\t\tmousePosition: { x: 0, y: 0},\r\n\t\tmouseRelativeToPlayerPosition: { x: 0, y: 0},\r\n\t\ttextures: {},\r\n\t\tgameState: GameStates.MAIN_MENU,\r\n\t\tlastGameState: null,\r\n\t\tgameSubState: SubStates.NEUTRAL,\r\n\t\tlastGameSubState: null,\r\n\t\twaveNum: 0,\r\n    waveCountToDefeat: null,\r\n    zombiesOnStage: 0,\r\n    showingMessage: false,\r\n    respawnCost: 300,\r\n    respawnToShopCost: 150,\r\n    purchases: 0,\r\n    lastPurchase: {\r\n      item: null,\r\n      amount: null,\r\n    },\r\n\t\tplayer: {\r\n      perks: {\r\n        magnetism: {\r\n          cost: 750,\r\n          owned: false\r\n        },\r\n        magDmg: {\r\n          cost: 750,\r\n          owned: false\r\n        },\r\n        lastBullet: {\r\n          cost: 750,\r\n          owned: false\r\n        },\r\n        creditDropper: {\r\n          cost: 1250,\r\n          owned: false\r\n        },\r\n        ammoDropper: {\r\n          cost: 1250,\r\n          owned: false\r\n        },\r\n        healthDropper: {\r\n          cost: 1250,\r\n          owned: false\r\n        },\r\n        quickTurret: {\r\n          cost: 1000,\r\n          owned: false\r\n        },\r\n        barrierPlus: {\r\n          cost: 1000,\r\n          owned: false\r\n        },\r\n        cluck: {\r\n          cost: 1000,\r\n          owned: false\r\n        }\r\n      },\r\n      health: 100,\r\n      credits: 500,\r\n      position: { x: 0, y: 0 },\r\n\t\t\tcompositeId: '',\r\n\t\t\tcomposite: {\r\n\t\t\t\theadId: '',\r\n\t\t\t\tbodyId: '',\r\n\t\t\t\tarmId: ''\r\n      },\r\n\t\t\tweapons: {\r\n\t\t\t\tlist: [ WEAPON_TYPE_PISTOL ],\r\n        equipped: null,\r\n        grenadeChargeRate: 0.00035,\r\n        grenadeUpperForceThreshold: 0.025,\r\n        grenadeFuseTime: {\r\n          default: 3\r\n        },\r\n        grenadeExplosionSize: 450,\r\n        laser: {\r\n          'pistol weapon': false,\r\n          'smg weapon': false,\r\n          'shotgun weapon': false,\r\n        },\r\n        meleeDamage: {\r\n          'pistol weapon': 10,\r\n          'smg weapon': 15,\r\n          'shotgun weapon': 20,\r\n        },\r\n        damage: {\r\n          'pistol weapon': { 'min': 4, 'max': 10 },\r\n          'smg weapon': { 'min': 3, 'max': 7 },\r\n          'shotgun weapon': { 'min': 4, 'max': 8 },\r\n          'turret weapon': { min: 4, max: 6 }\r\n        },\r\n        shotLimiter: {\r\n          'pistol weapon': 300,\r\n          'smg weapon': 100,\r\n          'shotgun weapon': 500,\r\n        },\r\n        ammoCapacity: {\r\n          'pistol weapon': 9,\r\n          'smg weapon': 19,\r\n          'shotgun weapon': 6,\r\n          'grenades': 1\r\n        },\r\n\t\t\t\ttotalAmmo: {\r\n\t\t\t\t\t'pistol weapon': 9 * 5,\r\n          'smg weapon': 19 * 5,\r\n          'shotgun weapon': 6 * 5,\r\n          'grenades': 3\r\n        },\r\n        ammoCostPerBox: {\r\n          'pistol weapon': 10,\r\n          'smg weapon': 20,\r\n          'shotgun weapon': 20,\r\n          'grenades': 80\r\n        },\r\n\t\t\t\tlastShot: {\r\n\t\t\t\t\t'pistol weapon': null,\r\n\t\t\t\t\t'smg weapon': null,\r\n\t\t\t\t\t'shotgun weapon': null,\r\n        },\r\n        reloadSpeed: {\r\n          'pistol weapon': .4,\r\n          'smg weapon': .4,\r\n          'shotgun weapon': .4,\r\n        },\r\n        reloadAnimationFrames: {\r\n          'pistol weapon': 55,\r\n          'smg weapon': 60,\r\n          'shotgun weapon': 80,\r\n        },\r\n        bulletVariance: {\r\n          'pistol weapon': 0.0004,\r\n          'smg weapon': 0.001,\r\n          'shotgun weapon': 0.002,\r\n        },\r\n        bulletForce: {\r\n          'pistol weapon': .0075,\r\n          'smg weapon': .0075,\r\n          'shotgun weapon': .0075,\r\n          'turret': .01\r\n        },\r\n        shellEjectionForce: {\r\n          'pistol weapon': { 'min': 0.0003, 'max': 0.0007 },\r\n          'smg weapon': { 'min': 0.0003, 'max': 0.0010 },\r\n          'shotgun weapon': { 'min': 0.0008, 'max': 0.0012 },\r\n        },\r\n        shellRemovalTimeout: {\r\n          'pistol weapon': 2000,\r\n          'smg weapon': 2000,\r\n          'shotgun weapon': 2000,\r\n        },\r\n        buyWeapons: {\r\n          'smg weapon': 1500,\r\n          'shotgun weapon': 2750\r\n        },\r\n      },\r\n\t\t\tconstants: {\r\n\t\t\t\twidth: 50,\r\n\t\t\t\theight: 180\r\n\t\t\t},\r\n\t\t\tvariables: {\r\n        magnetism: 400,\r\n        magnetismSpeed: 1,\r\n\t\t\t\tcurrentDirection: '',\r\n\t\t\t\tlastDirection: '',\r\n\t\t\t\tjumping: false,\r\n        jumpForce: -0.4,\r\n        defense: 0,\r\n        acceleration: {\r\n\t\t\t\t\tmin: 2,\r\n\t\t\t\t\tmax: 5\r\n        },\r\n        deceleration: 0.5\r\n      },\r\n      upgradeTiers: {\r\n        run: { min: 1, current: 1, max: 4 },\r\n        jump: { min: 1, current: 1, max: 4 },\r\n        reload: { min: 1, current: 1, max: 4 },\r\n        defense: { min: 1, current: 1, max: 4 },\r\n        melee: { min: 1, current: 1, max: 4 }\r\n      },\r\n      upgradeCosts: {\r\n        run: 200,\r\n        jump: 200,\r\n        reload: 300,\r\n        defense: 400,\r\n        melee: 400\r\n      },\r\n      upgradeAmounts: {\r\n        run: 1,\r\n        jump: -0.1,\r\n        reload: .1,\r\n        defense: 7,\r\n        melee: {\r\n          'pistol weapon': 5,\r\n          'smg weapon': 6,\r\n          'shotgun weapon': 8,\r\n        }\r\n      },\r\n      modTiers: {\r\n        rof: {\r\n          'pistol weapon': { min: 1, current: 1, max: 4 },\r\n          'smg weapon': { min: 1, current: 1, max: 4 },\r\n          'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n        },\r\n        powder: {\r\n          'pistol weapon': { min: 1, current: 1, max: 4 },\r\n          'smg weapon': { min: 1, current: 1, max: 4 },\r\n          'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n        },\r\n        sight: {\r\n          'pistol weapon': { min: 1, current: 1, max: 4 },\r\n          'smg weapon': { min: 1, current: 1, max: 4 },\r\n          'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n        },\r\n        mag: {\r\n          'pistol weapon': { min: 1, current: 1, max: 4 },\r\n          'smg weapon': { min: 1, current: 1, max: 4 },\r\n          'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n        }\r\n      },\r\n      modCosts: {\r\n        rof: {\r\n          'pistol weapon': 300,\r\n          'smg weapon': 400,\r\n          'shotgun weapon': 500,\r\n        },\r\n        powder: {\r\n          'pistol weapon': 400,\r\n          'smg weapon': 550,\r\n          'shotgun weapon': 750,\r\n        },\r\n        sight: {\r\n          'pistol weapon': 200,\r\n          'smg weapon': 300,\r\n          'shotgun weapon': 300,\r\n        },\r\n        mag: {\r\n          'pistol weapon': 350,\r\n          'smg weapon': 600,\r\n          'shotgun weapon': 600,\r\n        }\r\n      },\r\n      modAmounts: {\r\n        rof: {\r\n          'pistol weapon': 20,\r\n          'smg weapon': 15,\r\n          'shotgun weapon': 25,\r\n        },\r\n        powder: {\r\n          'pistol weapon': 3,\r\n          'smg weapon': 2,\r\n          'shotgun weapon': 3,\r\n        },\r\n        sight: {\r\n          'pistol weapon': 0.0001,\r\n          'smg weapon': 0.0002,\r\n          'shotgun weapon': 0.0003,\r\n        },\r\n        mag: {\r\n          'pistol weapon': 3,\r\n          'smg weapon': 5,\r\n          'shotgun weapon': 1,\r\n        }\r\n      }\r\n    },\r\n    barriers: {\r\n      selectedBarrier: null,\r\n      costToBuild: {\r\n        'Wooden': 150,\r\n        'Stone': 250,\r\n        'Metal': 350,\r\n        'Explosive Barrel': 400\r\n      }\r\n    },\r\n    traps: {\r\n      turret: {\r\n        fireDistance: 500,\r\n        cooldown: .5\r\n      },\r\n      selectedTrap: null,\r\n      costToBuild: {\r\n        'Landmine': 250,\r\n        'Remote Mine': 400,\r\n        'Machine Gun Turret': 750,\r\n        'Cluster Bomb': 500\r\n      },\r\n    },\r\n    enemies: {\r\n      zombies: {\r\n        attackDmg: 20,\r\n        attackDmgDefault: 20,\r\n        attackIncrementer: .25,\r\n        walkSpeed: 1.5,\r\n        walkSpeedDefault: 1.5,\r\n        walkSpeedIncrementer: 0.015,\r\n        zombieAttackLimiter: 2000,\r\n        zombieAttackDefaultLimiter: 2000,\r\n        zombieAttackLimiterDecrementer: 15,\r\n        zombieAttackDistance: 150,\r\n        defaultHealth: 100,\r\n        startingHealth: 100,\r\n        healthIncrementer: .5,\r\n        onRight: 0,\r\n        onLeft: 0\r\n      }\r\n    },\r\n    consumables: {\r\n      healthkit: {\r\n        '20': { cost: 40 },\r\n        '50': { cost: 80 },\r\n        full: { cost: 150 },\r\n      }\r\n    }\r\n\t},\r\n\treducers: {\r\n    setTrapTypePlaced: (state, action) => ({\r\n      ...state,\r\n      trapTypesPlaced: {\r\n        ...state.trapTypesPlaced,\r\n        [ action.payload ]: state.trapTypesPlaced[ action.payload ] ? state.trapTypesPlaced[ action.payload ] + 1 : 1\r\n      },\r\n    }),\r\n    setBarrierTypePlaced: (state, action) => ({\r\n      ...state,\r\n      barrierTypesPlaced: {\r\n        ...state.barrierTypesPlaced,\r\n        [ action.payload ]: state.barrierTypesPlaced[ action.payload ] ? state.barrierTypesPlaced[ action.payload ] + 1 : 1\r\n      }\r\n    }),\r\n    setLastMagDropped: (state, action) => {\r\n      state.lastMagDropped = action.payload\r\n    },\r\n    increaseStats: (state, action) => {\r\n      state.stats[ action.payload ] += 1\r\n    },\r\n    increaseStatsByAmount: {\r\n      reducer: (state, action) => {\r\n        state.stats[ action.payload.type ] += action.payload.amount\r\n      },\r\n      prepare: (type, amount) => ({ payload: { type, amount } })\r\n    },\r\n    setLastGrenadeKill: (state, action) => {\r\n      state.lastGrenadeKill = action.payload\r\n      state.consecutiveGrenadeKills += 1\r\n    },\r\n    resetConsecutiveGrenadeKills: state => { state.consecutiveGrenadeKills = 0 },\r\n    setZombieLastKilled: (state, action) => {\r\n      state.zombieLastKilled = action.payload\r\n    },\r\n    flipScoreToggle: state => { state.scoreToggle = !state.scoreToggle },\r\n    increaseScore: (state, action) => {\r\n      state.score += action.payload\r\n    },\r\n    decreaseScore: (state, action) => {\r\n      state.score -= action.payload\r\n    },\r\n    updatePrevScore: (state) => {\r\n      state.prevScore = state.score\r\n    },\r\n    addPurchase: {\r\n      reducer: (state, action) => {\r\n        state.purchases += 1\r\n        state.lastPurchase = action.payload\r\n      },\r\n      prepare: (item, amount) => ({ payload: { item, amount } })\r\n    },\r\n    setZombiesOnLeft: (state, action) => { state.enemies.zombies.onLeft = action.payload },\r\n    setZombiesOnRight: (state, action) => { state.enemies.zombies.onRight = action.payload },\r\n    setRightMouseDown: (state, action) => {\r\n      state.rightMouseDown = action.payload\r\n    },\r\n    attachMod: {\r\n      reducer: (state, action) => {\r\n        let { modType, wepType } = action.payload\r\n        switch (modType) {\r\n          case 'rof':\r\n          state.player.modTiers.rof[wepType].current += 1\r\n          state.player.weapons.shotLimiter[wepType] -= state.player.modAmounts.rof[wepType]\r\n          break;\r\n          case 'powder':\r\n          state.player.modTiers.powder[wepType].current += 1\r\n          state.player.weapons.damage[wepType].min += Math.round(state.player.modAmounts.powder[wepType] * .5)\r\n          state.player.weapons.damage[wepType].max += Math.round(state.player.modAmounts.powder[wepType])\r\n          break;\r\n          case 'sight':\r\n          state.player.modTiers.sight[wepType].current += 1\r\n          state.player.weapons.bulletVariance[wepType] -= state.player.modAmounts.sight[wepType]\r\n          break;\r\n          case 'mag':\r\n          state.player.modTiers.mag[wepType].current += 1\r\n          state.player.weapons.ammoCapacity[wepType] += state.player.modAmounts.mag[wepType]\r\n          break;\r\n          default:\r\n        }\r\n      },\r\n      prepare: (modType, wepType) => ({ payload: { modType, wepType } })\r\n    },\r\n    setPlayerCompositeId: (state, action) => { console.log(action.type); state.player.compositeId = action.payload },\r\n\t\tsetKeyPress: (state, action) => { state.keys.push(action.payload) },\r\n\t\tremoveKeyPress: (state, action) => { state.keys.splice(state.keys.indexOf(parseInt(action.payload)), 1) },\r\n\t\tsetLastDirection: (state, action) => { state.player.variables.lastDirection = action.payload },\r\n\t\tsetCurrentDirection: (state, action) => { state.player.variables.currentDirection = action.payload },\r\n\t\tsetJumping: (state, action) => { state.player.variables.jumping = action.payload },\r\n\t\tsetGroundId: (state, action) => { state.groundId = action.payload },\r\n\t\tsetMousePosition: (state, action) => { state.mousePosition = action.payload },\r\n\t\tsetMouseStateX: (state, action) => { state.mouseState.x = action.payload },\r\n\t\tsetMouseStateY: (state, action) => { state.mouseState.y = action.payload },\r\n\t\tsetMouseButtonState: (state, action) => { state.mouseState.btn = action.payload },\r\n\t\tsetWeaponEquipped: (state, action) => { state.player.weapons.equipped = action.payload },\r\n\t\tsetLastShot: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tlet { player: { weapons: { lastShot, equipped } } } = state\r\n\t\t\t\tlastShot[equipped] = action.payload.dateTimeObject\r\n\t\t\t},\r\n\t\t\tprepare: (weapon, dateTimeObject) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: { weapon, dateTimeObject }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetMouseRelativeToPlayerPosition: (state, action) => { state.mouseRelativeToPlayerPosition = action.payload },\r\n\t\tsetCompositeBodyIds: (state, action) => {\r\n\t\t\tstate.player.composite = action.payload\r\n\t\t},\r\n\t\tsetStaticGunAngle: (state, action) => { state.staticGunAngle = action.payload },\r\n\t\tsetStaticGunAngleState: (state, action) => { state.staticGun = action.payload },\r\n\t\tsetTexturePath: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tstate.textures[action.payload.textureName] = action.payload.texturePath\r\n\t\t\t},\r\n\t\t\tprepare: (textureName, texturePath) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttextureName,\r\n\t\t\t\t\t\ttexturePath\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgameStateTransition: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tswitch (action.payload.type) {\r\n\t\t\t\t\tcase 'sub':\r\n\t\t\t\t\tstate.lastGameSubState = action.payload.from\r\n\t\t\t\t\tstate.gameSubState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'main':\r\n\t\t\t\t\tstate.lastGameState = action.payload.from\r\n\t\t\t\t\tstate.gameState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare: (type, from, to) => ({ payload: { type, from, to } })\r\n\t\t},\r\n\t\tincrementWave: (state) => { state.waveNum += 1 },\r\n\t\tdecrementWave: (state) => { state.waveNum -= 1 },\r\n\t\tsetWaveCountToDefeat: (state, action) => { state.waveCountToDefeat = action.payload },\r\n\t\tincrementWaveCountToDefeat: (state, action) => { state.waveCountToDefeat += 1 },\r\n\t\tdecrementWaveCountToDefeat: (state, action) => {\r\n      state.waveCountToDefeat -= 1\r\n      state.zombiesOnStage -= 1\r\n    },\r\n\t\tsetWeaponsList: (state, action) => { state.player.weapons.list = action.payload },\r\n\t\tsetShowingMessage: (state, action) => { state.showingMessage = action.payload },\r\n\t\tunsetAllKeys: (state, action) => { state.keys = [] },\r\n\t\tresetPlayerVariables: state => {\r\n\t\t\tlet _state = Object.assign({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentDirection: '',\r\n\t\t\t\t\tlastDirection: '',\r\n\t\t\t\t\tjumping: false\r\n\t\t\t\t}\r\n      }, state)\r\n      state = _state\r\n\t\t},\r\n\t\tdecrementTotalAmmo: (state, action) => {\r\n\t\t\tlet { player: { weapons: { totalAmmo } } } = state\r\n\t\t\t// original() from the immer package helps us to see values in redux arrays/objects\r\n\t\t\ttotalAmmo[action.payload] -= 1\r\n    },\r\n    addToTotalAmmo: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { totalAmmo } } } = state\r\n        totalAmmo[action.payload.wepType] += action.payload.amount\r\n      },\r\n      prepare: (wepType, amount) => ({ payload: { wepType, amount } })\r\n    },\r\n    updateAmmoCapacity: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { ammoCapacity } } } = state\r\n        ammoCapacity[action.payload.wepType] = action.payload.newCapacityAmount\r\n      },\r\n      prepare: (wepType, newCapacityAmount) => ({ payload: { wepType, newCapacityAmount } })\r\n    },\r\n    setPlayerPosition: (state, action) => { state.player.position = action.payload },\r\n    addToTotalCredits: (state, action) => { state.player.credits += action.payload },\r\n    subtractFromTotalCredits: (state, action) => { state.player.credits -= action.payload },\r\n    upgradeRunSpeed: (state) => {\r\n      state.player.upgradeTiers.run.current += 1\r\n      state.player.variables.acceleration.max = state.player.variables.acceleration.max + state.player.upgradeAmounts.run\r\n    },\r\n    upgradeReloadSpeed: (state) => {\r\n      state.player.upgradeTiers.reload.current += 1\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] = state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] + state.player.upgradeAmounts.reload\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] = state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] + state.player.upgradeAmounts.reload\r\n    },\r\n    upgradeJumpForce: (state) => {\r\n      state.player.upgradeTiers.jump.current += 1\r\n      state.player.variables.jumpForce = state.player.variables.jumpForce + state.player.upgradeAmounts.jump\r\n    },\r\n    upgradeDefense: (state) => {\r\n      state.player.upgradeTiers.defense.current += 1\r\n      state.player.variables.defense = state.player.variables.defense + state.player.upgradeAmounts.defense\r\n    },\r\n    upgradeMelee: (state) => {\r\n      state.player.upgradeTiers.melee.current += 1\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_PISTOL] += state.player.upgradeAmounts.melee[WEAPON_TYPE_PISTOL]\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_SMG] += state.player.upgradeAmounts.melee[WEAPON_TYPE_SMG]\r\n    },\r\n    updatePlayerHealth: (state, action) => {\r\n      state.player.health = action.payload\r\n    },\r\n    decrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] -= 1 },\r\n    incrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] += 1 },\r\n    updateZombieWalkSpeed: (state, action) => {\r\n      let walkSpeedDefault = state.enemies.zombies.walkSpeedDefault\r\n      let incrementer = state.enemies.zombies.walkSpeedIncrementer\r\n      state.enemies.zombies.walkSpeed = walkSpeedDefault + (action.payload * incrementer)\r\n    },\r\n    updateZombieAttackDmg: (state, action) => {\r\n      state.enemies.zombies.attackDmg = Math.round(\r\n        (action.payload * state.enemies.zombies.attackIncrementer) +\r\n        state.enemies.zombies.attackDmgDefault\r\n      )\r\n    },\r\n    decrementZombieAttackTimeLimit: (state, action) => {\r\n      state.enemies.zombies.zombieAttackLimiter = state.enemies.zombies.zombieAttackDefaultLimiter - (action.payload * state.enemies.zombies.zombieAttackLimiterDecrementer)\r\n      console.log(\r\n        state.enemies.zombies.zombieAttackLimiter\r\n      )\r\n    },\r\n    showLaserSight: (state, action) => {\r\n      state.player.weapons.laser[action.payload] = true\r\n    },\r\n    incrementZombieHealth: (state, action) => {\r\n      state.enemies.zombies.startingHealth = Math.round(state.enemies.zombies.defaultHealth + (state.enemies.zombies.healthIncrementer * action.payload))\r\n    },\r\n    setSelectedBarrierToBuild: (state, action) => {\r\n      state.barriers.selectedBarrier = action.payload\r\n    },\r\n    setSelectedTrapToBuild: (state, action) => {\r\n      state.traps.selectedTrap = action.payload\r\n    },\r\n    setLastWaveCountDefeated: (state) => { state.lastWaveCountDefeated = state.waveCountToDefeat },\r\n    incrementZombiesOnStage: state => { state.zombiesOnStage += 1 },\r\n    setZombiesOnStage: (state, action) => { state.zombiesOnStage = action.payload },\r\n    updateWeaponsList: (state, action) => {\r\n      state.player.weapons.list.push(action.payload)\r\n    },\r\n    // Perks\r\n    setPlayerMagnetism: {\r\n      reducer: (state, action) => {\r\n        state.player.variables.magnetism = action.payload.range\r\n        state.player.variables.magnetismSpeed = action.payload.speed\r\n        state.player.perks.magnetism.owned = true\r\n      },\r\n      prepare: (range, speed) => ({ payload: { range, speed } })\r\n    },\r\n    setPlayerMagDamage: (state) => {\r\n      state.player.perks.magDmg.owned = true\r\n    },\r\n    setPlayerLastBullet: (state) => {\r\n      state.player.perks.lastBullet.owned = true\r\n    },\r\n    setPlayerCreditDropper: state => { state.player.perks.creditDropper.owned = true },\r\n    setPlayerAmmoDropper: state => { state.player.perks.ammoDropper.owned = true },\r\n    setPlayerHealthDropper: state => { state.player.perks.healthDropper.owned = true },\r\n    setPlayerQuickTurret: state => {\r\n      state.player.perks.quickTurret.owned = true\r\n      state.traps.turret.cooldown = .25\r\n      state.traps.turret.fireDistance = 600\r\n    },\r\n    setPlayerBarrierPlus: state => {\r\n      state.player.perks.barrierPlus.owned = true\r\n    },\r\n    setPlayerFusterCluck: state => {\r\n      state.player.perks.cluck.owned = true\r\n    },\r\n    toggleFilterEffects: (state, action) => {\r\n      state.filterEffects = action.payload\r\n    },\r\n    toggleZombieHealthDisplay: (state, action) => {\r\n      state.displayZombieHealth = action.payload\r\n    },\r\n    setAchievementOwned: (state, action) => {\r\n      state.achievements[action.payload].owned = true\r\n      state.lastAchievementEarned = action.payload\r\n    }\r\n\t},\r\n})\r\n\r\nexport const {\r\n  increaseStatsByAmount,\r\n  setTrapTypePlaced,\r\n  setBarrierTypePlaced,\r\n  setLastMagDropped,\r\n  increaseStats,\r\n  setAchievementOwned,\r\n  resetConsecutiveGrenadeKills,\r\n  setLastGrenadeKill,\r\n  setZombieLastKilled,\r\n  flipScoreToggle,\r\n  updatePrevScore,\r\n  increaseScore,\r\n  decreaseScore,\r\n  toggleZombieHealthDisplay,\r\n  toggleFilterEffects,\r\n  setPlayerFusterCluck,\r\n  setPlayerBarrierPlus,\r\n  setPlayerQuickTurret,\r\n  setPlayerHealthDropper,\r\n  setPlayerAmmoDropper,\r\n  setPlayerCreditDropper,\r\n  setPlayerLastBullet,\r\n  setPlayerMagDamage,\r\n  setPlayerMagnetism,\r\n  addPurchase,\r\n  setZombiesOnLeft,\r\n  setZombiesOnRight,\r\n  setRightMouseDown,\r\n\tresetPlayerVariables,\r\n\tunsetAllKeys,\r\n\tsetPlayerCompositeId,\r\n\tsetKeyPress, removeKeyPress,\r\n\tsetLastDirection, setCurrentDirection,\r\n\tsetJumping, setGroundId, setMousePosition,\r\n\tsetMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot,\r\n\tsetWeaponEquipped,\r\n\tsetMouseRelativeToPlayerPosition,\r\n\tsetCompositeBodyIds,\r\n\tsetTexturePath,\r\n\tgameStateTransition,\r\n  incrementWave,\r\n  decrementWave,\r\n  incrementWaveCountToDefeat,\r\n\tsetWaveCountToDefeat,\r\n\tdecrementWaveCountToDefeat,\r\n\tsetWeaponsList,\r\n\tsetShowingMessage,\r\n  decrementTotalAmmo,\r\n  addToTotalAmmo,\r\n  updateAmmoCapacity,\r\n  addToTotalCredits,\r\n  subtractFromTotalCredits,\r\n  setPlayerPosition,\r\n  upgradeRunSpeed,\r\n  upgradeReloadSpeed,\r\n  upgradeJumpForce,\r\n  upgradeDefense,\r\n  upgradeMelee,\r\n  updatePlayerHealth,\r\n  attachMod,\r\n  incrementGrenadeCount,\r\n  decrementGrenadeCount,\r\n  updateZombieWalkSpeed,\r\n  updateZombieAttackDmg,\r\n  decrementZombieAttackTimeLimit,\r\n  showLaserSight,\r\n  incrementZombieHealth,\r\n  setSelectedBarrierToBuild,\r\n  setSelectedTrapToBuild,\r\n  lastWaveCountDefeated,\r\n  incrementZombiesOnStage,\r\n  setZombiesOnStage,\r\n  updateWeaponsList\r\n} = gameSlice.actions\r\n\r\nexport default gameSlice.reducer\r\n","export const WEAPON_TYPE_PISTOL = 'pistol weapon'\r\nexport const WEAPON_TYPE_GRENADE = 'grenades'\r\nexport const WEAPON_TYPE_SMG = 'smg weapon'\r\nexport const WEAPON_TYPE_TURRET = 'turret weapon'\r\nexport const WEAPON_TYPE_SHOTGUN = 'shotgun weapon'\r\n\r\nexport const PISTOL_BULLET_REMOVAL_TIMEOUT = 500\r\nexport const PISTOL_SHELL_REMOVAL_TIMEOUT = 2000\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MIN = 0.0003\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MAX = 0.0007\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN = 0.5\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX = 1.0\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport game from '../features/game/gameSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\t\tgame\r\n  }\r\n})\r\n\r\n\r\nexport default store\r\n","import * as PIXI from 'pixi.js'\r\nimport { Mouse, MouseConstraint, World, Engine, Render, Runner, Composite, Vector } from 'matter-js'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\n\r\nconst width = 1200, height = 550\r\nconst worldWidth = 6000\r\n\r\nconst { getState } = store\r\n\r\nconst { TweenLite: { to } } = window\r\n\r\nexport const applyGsapHover = pixiElt => {\r\n\tpixiElt.on('mouseover', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.05, y: 1.05 })\r\n\t})\r\n\tpixiElt.on('mouseout', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.00, y: 1.00 })\r\n\t})\r\n}\r\n\r\nexport const makePixiSprite = (stringIdentifier) => {\r\n\treturn (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\tPIXI.Texture.from(\r\n\t\t\t\tgetState().game.textures[stringIdentifier]\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport const calcBulletAngle = (position1, position2) => {\r\n  let { game: { player: { weapons: { bulletVariance, equipped, bulletForce } } } } = getState()\r\n\tlet angle = Vector.angle(position1, position2)\r\n\tlet bulletAngle = {\r\n\t\tx: Math.cos(angle) * bulletForce[equipped],\r\n\t\ty: (Math.sin(angle) * bulletForce[equipped]) + random.float(-bulletVariance[equipped], bulletVariance[equipped])\r\n\t}\r\n\treturn bulletAngle\r\n}\r\n\r\nexport const calcGrenadeAngle = (position1, position2, force) => {\r\n  let angle = Vector.angle(position1, position2)\r\n\tlet grenadeAngle = {\r\n\t\tx: Math.cos(angle) * force.x,\r\n\t\ty: Math.sin(angle) * force.y\r\n\t}\r\n\treturn grenadeAngle\r\n}\r\n\r\nexport const getBodyWidth = body => {\r\n\treturn (body.bounds.max.x - body.bounds.min.x)\r\n}\r\n\r\nexport const getBodyHeight = body => {\r\n\treturn (body.bounds.max.y - body.bounds.min.y)\r\n}\r\n\r\nexport const getPlayerPartByType = (type, gameObjects) => {\r\n\tlet {\r\n\t\tgame: {\r\n\t\t\tplayer: {\r\n\t\t\t\tcomposite: {\r\n\t\t\t\t\theadId,\r\n\t\t\t\t\tbodyId,\r\n\t\t\t\t\tarmId,\r\n\t\t\t\t\tgunId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} = getState()\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tif (type === 'head') {\r\n\t\treturn Composite.get(world, headId, 'body')\r\n\t}\r\n\tif (type === 'body') {\r\n\t\treturn Composite.get(world, bodyId, 'body')\r\n\t}\r\n\tif (type === 'arm') {\r\n\t\treturn Composite.get(world, armId, 'body')\r\n\t}\r\n\tif (type === 'gun') {\r\n\t\treturn Composite.get(world, gunId, 'body')\r\n\t}\r\n\r\n}\r\n\r\n// export const getGround = (gameObjects) => {\r\n// \tlet world = gameObjects.getKeyValue('world')\r\n// \tlet { game: { groundId } } = getState()\r\n// \treturn Composite.get(world, groundId, 'body')\r\n// }\r\n\r\nexport const getPlayerGun = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { gunId } } } } = getState()\r\n\treturn Composite.get(world, gunId, 'body')\r\n}\r\n\r\nexport const getPlayerBody = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { bodyId } } } } = getState()\r\n\treturn Composite.get(world, bodyId, 'body')\r\n}\r\n\r\nexport const getPlayerComposite = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { compositeId } } } = getState()\r\n\treturn Composite.get(world, compositeId, 'composite')\r\n}\r\n\r\nexport function setUpPixi(elementId) {\r\n\tlet app = new PIXI.Application({\r\n\t\twidth,\r\n\t\theight,\r\n\t\tantialias: false,\r\n    resolution: 1\r\n\t})\r\n\tPIXI.settings.ROUND_PIXELS = true;\r\n\tdocument.getElementById(elementId).appendChild(app.view)\r\n\t// app.view.style.opacity = .85\r\n\r\n\treturn {\r\n\t\tapp,\r\n\t\tloader: new PIXI.Loader()\r\n\t}\r\n\r\n}\r\n\r\nexport function setUpMatter(elementId, mouseConstraintBool) {\r\n\t// create engine\r\n\tlet engine = Engine.create()\r\n\tlet world = engine.world\r\n\tworld.bounds = {\r\n\t\tmin: { x: -worldWidth, y: height * -2 },\r\n\t\tmax: { x: worldWidth, y: height * 1.5 }\r\n\t}\r\n\r\n\t// create renderer\r\n\tlet render = Render.create({\r\n\t\t\telement: document.getElementById(elementId),\r\n\t\t\tengine: engine,\r\n\t\t\toptions: {\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tpixelRatio: .5\r\n\t\t\t}\r\n\t})\r\n\tRender.run(render)\r\n\r\n\t// Render.lookAt(render, {\r\n\t// \tmin: { x: 0, y: 0 },\r\n\t// \tmax: { x: width, y: height }\r\n\t// })\r\n\r\n\t// create runner\r\n\tlet runner = Runner.create()\r\n\tRunner.run(runner, engine)\r\n\r\n\tif (mouseConstraintBool) {\r\n\t\tlet mouse = Mouse.create(render.canvas)\r\n\t\tlet\tmouseConstraint = MouseConstraint.create(engine, {\r\n\t\t\tmouse: mouse,\r\n\t\t\tconstraint: {\r\n\t\t\t\tstiffness: 0.2,\r\n\t\t\t\trender: {\r\n\t\t\t\t\tvisible: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tWorld.add(world, mouseConstraint)\r\n\t\t// keep the mouse in sync with rendering\r\n\t\trender.mouse = mouse\r\n\t}\r\n\r\n\t// World.add(world, Bodies.rectangle(0,0,20,20))\r\n\r\n\treturn {\r\n\t\tengine,\r\n\t\trender,\r\n\t\trunner,\r\n\t\tworld,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tworldWidth\r\n\t\t// mouse,\r\n\t\t// mouseConstraint\r\n\t}\r\n\r\n}\r\n","export const GREATER_THAN_PLAYER_X_POS = 'greater than player x position'\r\nexport const GREATER_THAN_PLAYER_Y_POS = 'greater than player y position'\r\nexport const LESS_THAN_PLAYER_X_POS = 'less than player x position'\r\nexport const LESS_THAN_PLAYER_Y_POS = 'less than player y position'\r\nexport const MOUSE_UP = 'mouse up'\r\nexport const MOUSE_DOWN = 'mouse down'\r\n","export const playerCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const enemyCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n\r\nexport const itemCollisionOptions = {\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const gibCollisionOptions = {\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbottom: 0;\r\nmargin: auto;\r\ndisplay: block;\r\nposition: absolute;\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : 'none' };\r\n`\r\n\r\nconst Backing = styled.div`\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nopacity: ${ props => props.opacity ? props.opacity : .5 };\r\nbackground-color: ${ props => props.bgcolor ? props.bgcolor : '#222' };\r\n`\r\n\r\nconst MenuTitle = styled.div`\r\nleft: 0;\r\nright: 0;\r\ntop: 20px;\r\nwidth: 300px;\r\nmargin: auto;\r\ndisplay: block;\r\nfont-size: 2em;\r\ntext-align: center;\r\nposition: absolute;\r\n`\r\n\r\nconst MenuButtonContainer = styled.div`\r\ntop: ${ props => props['space-top'] ? props['space-top'] : 80 }px;\r\nfont-size: 1.5em;\r\ntext-align: center;\r\nposition: absolute;\r\nwidth: 100%;\r\n`\r\n\r\nconst MenuButton = styled.div`\r\nopacity: ${ props => props['opacity'] ? props['opacity'] : 1 }\r\ncolor: #fff;\r\nposition: relative;\r\nwidth: ${ props => props['width'] ? props['width'] : 200}px;\r\nheight: ${ props => props['height'] ? props['height'] : 60 }px;\r\nline-height: ${ props => props['height'] ? props['height'] : 60 }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : '#00589b' };\r\nleft: 0; right: 0;\r\ncursor: pointer;\r\nmargin: auto;\r\nborder: 2px solid ${ props => props['bordercolor'] ? props['bordercolor'] : 'rgba(0,0,0,0)' };\r\ntransform: scale(1.00);\r\n&:hover {\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transition: all .35s' };\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transform: scale(1.05)' };\r\n  background-color: ${ props => props['hovercolor'] };\r\n  border: 2px solid ${ props => props['hoverborder'] ? props['hoverborder'] : 'rgba(0,0,0,0)' };\r\n}\r\n`\r\n\r\nconst MenuButtonSpacer = styled.div`\r\npadding: ${ props => props['padding'] ? props['padding'] : 10 }px;\r\n`\r\n\r\nexport default {\r\n  Container,\r\n  Backing, \r\n  MenuTitle,\r\n  MenuButtonContainer,\r\n  MenuButton,\r\n  MenuButtonSpacer\r\n}\r\n","import { increaseScore, decreaseScore, updatePrevScore, flipScoreToggle } from '../gameSlice'\r\nimport store from '../../../app/store'\r\n\r\n\r\nexport const updateScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( increaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n\r\nexport const subtractScore = amount => {\r\n  const { dispatch } = store\r\n  const { TweenLite: { delayedCall } } = window\r\n  dispatch( decreaseScore(amount) )\r\n  dispatch( flipScoreToggle() )\r\n  delayedCall(.25, () => {\r\n    dispatch( updatePrevScore() )\r\n  })\r\n}\r\n","import React, { Children } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { showLaserSight, gameStateTransition, incrementWave, subtractFromTotalCredits, addPurchase, addToTotalAmmo,\r\n  upgradeRunSpeed, upgradeReloadSpeed, upgradeJumpForce, upgradeDefense, upgradeMelee, attachMod, setWeaponEquipped,\r\n  updateWeaponsList, setPlayerMagnetism, setPlayerMagDamage, setPlayerLastBullet, setPlayerCreditDropper,\r\n  setPlayerAmmoDropper, \r\n  setPlayerHealthDropper,\r\n  setPlayerQuickTurret,\r\n  setPlayerBarrierPlus,\r\n  setPlayerFusterCluck,\r\n  setAchievementOwned,\r\n  AchievementDefs} from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_GRENADE, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButton, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const Inline = styled.div`\r\ndisplay: inline-block;\r\nvertical-align: top;\r\nmargin-right: 4px;\r\n`\r\n\r\nconst IncrementDecrement = styled.div`\r\ntop: 0;\r\nwidth: 30px;\r\nheight: 30px;\r\ncolor: darkgreen;\r\nline-height: 30px;\r\ntext-align: center;\r\nposition: absolute;\r\nbackground-color: #ccc;\r\nleft: ${ props => props['left'] ? 0 : 'auto' };\r\nright: ${ props => props['right'] ? 0 : 'auto' };\r\ntransform: scale(1.0);\r\n&:hover {\r\n  transition: all;\r\n  transform: scale(1.05);\r\n  background-color: #fff;\r\n}\r\n`\r\n\r\nconst AmmoCount = styled.div`\r\ncolor: #FFF;\r\ntext-align: center;\r\n`\r\n\r\nconst UPGRADE_SUB_MENU = ' upgrade sub menu'\r\nconst PERKS_MENU = 'perks menu'\r\nconst STANDARD_MENU = 'standard menu'\r\nconst AMMO_MENU = 'ammo menu'\r\nconst HEALTHKIT_MENU = 'healthkit menu'\r\nconst BUY_NEW_WEAPONS_MENU = 'buy weapons menu'\r\nconst WEAPON_MODS_MENU = 'weapon mods menu'\r\nconst PISTOL_MODS_SUBMENU = 'pistol mods submenu'\r\nconst SMG_MODS_SUBMENU = 'smg mods submenu'\r\nconst SHOTGUN_MODS_SUBMENU = 'shotgun mods submenu'\r\nconst PLAYER_ATTRIBUTES_MENU = 'player attributes menu'\r\nconst DEFAULT_SUBMENU = 'none - default'\r\nconst PISTOL_AMMO_SUBMENU = 'pistol ammunition submenu'\r\nconst SMG_AMMO_SUBMENU = 'smg ammunition submenu'\r\nconst SHOTGUN_AMMO_SUBMENU = 'shotgun ammunition submenu'\r\nconst GRENADES_AMMO_SUBMENU = 'grenades submenu'\r\nconst ATTR_RUN_SPEED = 'run'\r\nconst ATTR_RELOAD_SPEED = 'reload'\r\nconst ATTR_JUMP_FORCE = 'jump'\r\nconst ATTR_DEFENSE = 'defense'\r\nconst ATTR_MELEE = 'melee'\r\n\r\nexport const CustomMenuButton = (props) => (\r\n  <MenuButton\r\n  opacity={ props && props.opacity ? props.opacity : 1 }\r\n  bgcolor={ props && props.bgcolor ? props.bgcolor : '#222' }\r\n  bordercolor={ props && props.bordercolor ? props.bordercolor : '#333' }\r\n  hovercolor={ props && props.hovercolor ? props.hovercolor : '#333' }\r\n  hoverborder={ props && props.hoverborder ? props.hoverborder : '#fff' }\r\n  width={ props.width }\r\n  height={ props.height }\r\n  style={ props.style }\r\n  cancelTransition={ props && props.cancelTransition ? props.cancelTransition : false }\r\n  onClick={ () => {\r\n    if (props.onClick) {\r\n      props.onClick()\r\n      let snd = window.gameObjects.getKeyValue('button-click-sound')\r\n      snd.play()\r\n    }\r\n  }}\r\n  onMouseOver={() => {\r\n    if (!props.cancelTransition) {\r\n      // let snd = window.gameObjects.getKeyValue('button-hover-sound')\r\n      // snd.play()\r\n    }\r\n  }}\r\n  >\r\n    { props.children }\r\n  </MenuButton>\r\n)\r\n\r\nexport const BackButton = props => (\r\n  <CustomMenuButton\r\n  width={ props.width ? props.width : 120 }\r\n  height={ 40 }\r\n  style={{ borderRadius: '10px' }}\r\n  bgcolor={ '#444' }\r\n  hovercolor={ '#189969' }\r\n  onClick={ props.onClick }\r\n  >\r\n    {\r\n      props.arrowOnly ?\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0;\r\n        </span>\r\n      :\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0; Back\r\n        </span>\r\n    }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const CornerBackButton = (props) => (\r\n  <div\r\n  style={{\r\n    top: 0,\r\n    right: props.right ? props.right : '20px',\r\n    marginTop: props.marginTop ? props.marginTop : '-40px',\r\n    position: 'absolute'\r\n  }}>\r\n      <BackButton\r\n      onClick={ props.onClick }\r\n      width={ props.width ? props.width : 120 }\r\n      arrowOnly={ props.arrowOnly ? props.arrowOnly : false }\r\n      />\r\n  </div>\r\n)\r\n\r\nfunction Modal ({ label, labelClr, width, height, clickConfirmHandler, clickCancelHandler }) {\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ top: '150px' }} width={ width ? width : 500 } height={ height ? height : 300 }>\r\n        <Backing\r\n        width={ width ? width : 500 }\r\n        height={ height ? height : 300 }\r\n        bgcolor={ '#222' }\r\n        opacity={ 1.0 }\r\n        style={{\r\n          borderRadius: '2px',\r\n          boxShadow: '5px 5px rgba(0, 0, 0, 0.2)'\r\n        }}\r\n        />\r\n        <MenuTitle style={{ fontSize: '1.2em' }}>\r\n          <span\r\n          style={{\r\n            color: labelClr\r\n          }}>\r\n          {\r\n            label\r\n          }\r\n          </span>\r\n        </MenuTitle>\r\n        <MenuButtonContainer space-top={ 200 }>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ 'red' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              marginRight: '12px',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickCancelHandler}>\r\n            Nope.\r\n          </MenuButton>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ '#189969' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickConfirmHandler}>\r\n            Confirm\r\n          </MenuButton>\r\n        </MenuButtonContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction AmmoSubMenu ({ type, toDefaultSubMenu, toAmmoSubMenu, toStandardMenu }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const ammoCostPerBox = useSelector(state => state.game.player.weapons.ammoCostPerBox)\r\n  const ammoCap = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const ammoReducer = (ammo, action) => {\r\n    switch (action.type) {\r\n      case 'INCREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] + action.amount\r\n        }\r\n      case 'DECREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] - action.amount\r\n        }\r\n      case 'SET':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: action.amount\r\n        }\r\n      default:\r\n        return ammo\r\n    }\r\n  }\r\n  const [ammoInCart, dispatchAmmoInCart] = React.useReducer(ammoReducer, {\r\n    'pistol weapon': 0,\r\n    'smg weapon': 0,\r\n    'grenades': 0,\r\n    'shotgun weapon': 0\r\n  })\r\n  const [dollarCost, setDollarCost] = React.useState(0)\r\n\r\n  return (\r\n    <>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={ '#28934C' }\r\n        width={100}\r\n        height={30}\r\n        style={{\r\n          borderRadius: '4px',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        { `$${ dollarCost }` }\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        width={150}\r\n        height={ 30 }\r\n        bgcolor={ '#444' }\r\n      >\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] - ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (ammoInCart[type] > 0) {\r\n              dispatchAmmoInCart({ type: 'DECREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-subtract-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          left={true}>\r\n            <span style={{ fontWeight: 'bold' }}>-</span>\r\n        </IncrementDecrement>\r\n        <AmmoCount>{ ammoInCart[type] }</AmmoCount>\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] + ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (credits >= cost) {\r\n              dispatchAmmoInCart({ type: 'INCREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-add-sound')\r\n              snd.play()\r\n            } else {\r\n              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          right={true}>\r\n            <span style={{ fontWeight: 'bold' }}>+</span>\r\n         </IncrementDecrement>\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={'rgba(0,0,0,0)'}\r\n        height={30}\r\n        >\r\n          <div style={{ display: 'inline-block', marginRight: '4px' }}>\r\n            <CustomMenuButton\r\n              onClick={ () => {\r\n                toDefaultSubMenu()\r\n                dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                setDollarCost(0)\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }}\r\n              width={80}\r\n              height={30}\r\n              hoverborder={'#B00000'}\r\n              >\r\n              Cancel\r\n            </CustomMenuButton>\r\n          </div>\r\n          <div style={{ display: 'inline-block' }}>\r\n            {\r\n              dollarCost > 0 ?\r\n              <CustomMenuButton\r\n                onClick={ () => {\r\n                  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n                  dispatch( subtractFromTotalCredits( dollarCost ) )\r\n                  dispatch( addPurchase(type !== WEAPON_TYPE_GRENADE ? `${type} ammo` : dollarCost > ammoCostPerBox[type] ? type : 'a grenade', dollarCost) )\r\n                  dispatch( addToTotalAmmo( type, ammoInCart[type] ) )\r\n                  dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                  if (type === WEAPON_TYPE_GRENADE) {\r\n                    weaponsUI.updateGrenadeIcons()\r\n                  } else {\r\n                    weaponsUI.select(type)\r\n                    dispatch( setWeaponEquipped(type) )\r\n                    weaponsUI.reload(true)\r\n                  }\r\n                  setDollarCost(0)\r\n                  toDefaultSubMenu()\r\n                }}\r\n                width={100}\r\n                height={30}\r\n                hoverborder={'#189969'}\r\n                >\r\n                Buy\r\n              </CustomMenuButton>\r\n              : null\r\n            }\r\n          </div>\r\n      </MenuButton>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PlayerAttributesMenuButton = ({ type, toDefaultSubMenu, subMenuType, setSubMenuType, toStandardMenu }) => {\r\n\r\n  const upgradeTiers = useSelector(state => state.game.player.upgradeTiers)\r\n  const upgradeCosts = useSelector(state => state.game.player.upgradeCosts)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const dispatch = useDispatch()\r\n  const upgradeTypes = {\r\n    'run': upgradeRunSpeed,\r\n    'jump': upgradeJumpForce,\r\n    'reload': upgradeReloadSpeed,\r\n    'defense': upgradeDefense,\r\n    'melee': upgradeMelee\r\n  }\r\n  const getAttrName = type => {\r\n    switch (type) {\r\n      case 'run':\r\n        return 'Run Speed'\r\n        break;\r\n      case 'jump':\r\n        return 'Jump Height'\r\n        break;\r\n      case 'reload':\r\n        return 'Reload Speed'\r\n        break;\r\n      case 'defense':\r\n        return 'Defense'\r\n        break;\r\n      case 'melee':\r\n        return 'Melee Attack Power'\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n      {\r\n        subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1\r\n        ?\r\n          subMenuType === type + UPGRADE_SUB_MENU\r\n          ?\r\n            <Modal\r\n              label={`Upgrade ${ getAttrName(type) } to lvl. ${ upgradeTiers[type].current + 1 }?`}\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( upgradeCosts[type] ) )\r\n                dispatch( addPurchase(`${getAttrName(type)} Boost`, upgradeCosts[type]) )\r\n                dispatch( upgradeTypes[type]() )\r\n                toDefaultSubMenu()\r\n              }}\r\n              clickCancelHandler={() => {\r\n                toDefaultSubMenu()\r\n              }}\r\n              />\r\n          : null\r\n        :\r\n        <>\r\n          <CustomMenuButton\r\n            width={getAttrName(type).length > 14 ? 340 : 240 }\r\n            onClick={() => {\r\n              if (credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max) {\r\n                setSubMenuType( type + UPGRADE_SUB_MENU )\r\n              } else {\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }\r\n            }}>\r\n            { getAttrName(type) } { upgradeTiers[type].current !== upgradeTiers[type].max ? 'Lvl.' : '' }{ upgradeTiers[type].current !== upgradeTiers[type].max ? upgradeTiers[type].current + 1 : '' } - <span style={{ color: credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max ? '#189969' : 'red' }}>\r\n            {\r\n              upgradeTiers[type].current < upgradeTiers[type].max\r\n              ? `$${upgradeCosts[type]}`\r\n              : 'MAXED'\r\n            }</span>\r\n          </CustomMenuButton>\r\n          <br/>\r\n        </>\r\n      }\r\n  </>\r\n  )\r\n}\r\n\r\nfunction ModSubMenu ({ type, setSubMenuType }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const modTiers = useSelector(state => state.game.player.modTiers)\r\n  const modCosts = useSelector(state => state.game.player.modCosts)\r\n  const ammoCapacity = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const getWepText = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        return 'Pistol'\r\n      case WEAPON_TYPE_SMG:\r\n        return 'SMG'\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        return 'SHOTGUN'\r\n      default:\r\n    }\r\n  }\r\n  let wepTxt = getWepText(type)\r\n  const getModDescription = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'RATE OF FIRE MAXED!' : 'Upgrade Rate-of-Fire'\r\n      case 'powder':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'FIREPOWER MAXED!' : 'Increase Firepower'\r\n      case 'sight':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'ACCURACY MAXED!' : 'Upgrade Accuracy'\r\n      case 'mag':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'AMMO CAP MAXED!' : 'Increase Ammo Capacity'\r\n      default:\r\n    }\r\n  }\r\n  const mods = ['rof', 'powder', 'sight', 'mag']\r\n  const [selectedMod, setSelectedMod] = React.useState(null)\r\n  const [selectedType, setSelectedType] = React.useState(null)\r\n  const modPurchaseName = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return `Rate of fire boost for the ${type}`\r\n      case 'powder':\r\n        return `Firepower boost for the ${type}`\r\n      case 'sight':\r\n        return `Accuracy boost for the ${type}`\r\n      case 'mag':\r\n        return `Magazine ammo capacity boost for the ${type}`\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Inline style={{ marginLeft: '40px' }}>\r\n        {\r\n          selectedMod && selectedType ?\r\n          <>\r\n            <Modal\r\n              label={`${getWepText(selectedType)} ${ getModDescription(selectedMod, selectedType) } lvl.${ modTiers[selectedMod][selectedType].current + 1 }?`}\r\n              labelClr={ modTiers[selectedMod][selectedType].current === modTiers[selectedMod][selectedType].max ? 'red' : 'white' }\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( modCosts[selectedMod][selectedType] ) )\r\n                dispatch( addPurchase(modPurchaseName(selectedMod, selectedType), modCosts[selectedMod][selectedType]) )\r\n                dispatch( attachMod(selectedMod, selectedType) )\r\n                if (selectedMod === 'mag') {\r\n                  dispatch( addToTotalAmmo(selectedType, ammoCapacity[selectedType]) )\r\n                  let wepUI = gameObjects.getKeyValue('weapons-ui')\r\n                  wepUI.updateWeaponMagazines(selectedType)\r\n                }\r\n                if (selectedMod === 'sight') {\r\n                  dispatch( showLaserSight(selectedType) )\r\n                }\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n              clickCancelHandler={() => {\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n            />\r\n          </>\r\n          :\r\n          mods.map((mod, i) => (\r\n            <React.Fragment key={i}>\r\n              <CustomMenuButton onClick={() => {\r\n                if (credits >= modCosts[mod][type] && modTiers[mod][type].current < modTiers[mod][type].max) {\r\n                  setSelectedMod(mod)\r\n                  setSelectedType(type)\r\n                } else {\r\n                  let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                  snd.play()\r\n                }\r\n              }} width={520}>{wepTxt}: {getModDescription(mod, type)} { modTiers[mod][type].current === modTiers[mod][type].max ? '' : ' - lvl.' } { modTiers[mod][type].current < modTiers[mod][type].max ? modTiers[mod][type].current + 1 : '' }{ modTiers[mod][type].current < modTiers[mod][type].max ? '-' : '' }<span style={{ color: credits >= modCosts[mod][type] && modTiers[mod][type].current !== modTiers[mod][type].max ? '#189969' : 'red' }}>\r\n                {`\r\n                  ${\r\n                    modTiers[mod][type].current === modTiers[mod][type].max ?\r\n                    '' : `$${ modCosts[mod][type] }`\r\n                  }`\r\n                }\r\n                </span>\r\n              </CustomMenuButton>\r\n              <br/>\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </Inline>\r\n      {\r\n        !selectedMod && !selectedType ?\r\n        <Inline>\r\n          <CustomMenuButton\r\n          onClick={ () => { setSubMenuType(DEFAULT_SUBMENU) }}\r\n          width={80}\r\n          height={30}\r\n          hoverborder={'red'}\r\n          style={{\r\n            marginLeft: '10px'\r\n          }}\r\n          >\r\n            close\r\n          </CustomMenuButton>\r\n        </Inline>\r\n        : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ShopMenu () {\r\n\r\n  const [menuType, setMenuType] = React.useState(STANDARD_MENU)\r\n  const [subMenuType, setSubMenuType] = React.useState(DEFAULT_SUBMENU)\r\n\r\n  const dispatch = useDispatch()\r\n  const game = useSelector(state => state.game)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const { gameObjects } = window\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const player = gameObjects.getKeyValue('player')\r\n\r\n  const continueToNextWave = () => {\r\n    screenUI.unpause()\r\n    dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  }\r\n\r\n  const toDefaultSubMenu = () => {\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const toAmmoMenu = () => {\r\n    setMenuType( AMMO_MENU )\r\n  }\r\n  \r\n  const toHealthkitMenu = () => {\r\n    setMenuType( HEALTHKIT_MENU )\r\n  }\r\n\r\n  const toPlayerAttrMenu = () => {\r\n    setMenuType( PLAYER_ATTRIBUTES_MENU )\r\n  }\r\n\r\n  const backToStandardMenu = () => {\r\n    setMenuType( STANDARD_MENU )\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const openAmmoSubMenu = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        setSubMenuType( PISTOL_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SMG:\r\n        setSubMenuType( SMG_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        setSubMenuType( SHOTGUN_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_GRENADE:\r\n        setSubMenuType( GRENADES_AMMO_SUBMENU )\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  const toWeaponModsMenu = () => {\r\n    setMenuType( WEAPON_MODS_MENU )\r\n  }\r\n\r\n  const toNewWeaponsMenu = () => {\r\n    setMenuType( BUY_NEW_WEAPONS_MENU )\r\n  }\r\n\r\n  const getHealthkitCostStyle = (kitType) => {\r\n    let condition = (\r\n      game.player.credits > game.consumables.healthkit[kitType].cost &&\r\n      game.player.health < 100\r\n    )\r\n    return {\r\n      color: condition ? '#189969' : 'red',\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (menuType === BUY_NEW_WEAPONS_MENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1) {\r\n      dispatch(\r\n        setAchievementOwned( AchievementDefs.WEAPONS_EXPERT )\r\n      )\r\n      updateScore( game.scoreAmounts.achievement )\r\n      backToStandardMenu()\r\n    }\r\n\r\n  }, [ game.player.weapons.list, menuType ])\r\n\r\n  React.useEffect(() => {\r\n\r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['rof'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['powder'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['sight'][WEAPON_TYPE_PISTOL].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].current === game.player.modTiers['mag'][WEAPON_TYPE_PISTOL].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.PISTOL_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SMG].current === game.player.modTiers['rof'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SMG].current === game.player.modTiers['powder'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SMG].current === game.player.modTiers['sight'][WEAPON_TYPE_SMG].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SMG].current === game.player.modTiers['mag'][WEAPON_TYPE_SMG].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SMG_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n      \r\n      if (\r\n        game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['rof'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['powder'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['sight'][WEAPON_TYPE_SHOTGUN].max &&\r\n        game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].current === game.player.modTiers['mag'][WEAPON_TYPE_SHOTGUN].max\r\n      ) {\r\n        dispatch(\r\n          setAchievementOwned( AchievementDefs.SHOTGUN_MODDER )\r\n        )\r\n        updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n      if (\r\n        game.achievements[ AchievementDefs.PISTOL_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SMG_MODDER ].owned &&\r\n        game.achievements[ AchievementDefs.SHOTGUN_MODDER ].owned\r\n        ) {\r\n          dispatch(\r\n            setAchievementOwned( AchievementDefs.MOD_AFICIONADO )\r\n          )\r\n          updateScore( game.scoreAmounts.achievement )\r\n      }\r\n\r\n  }, [ game.player.modTiers ])\r\n\r\n  return (\r\n    <>\r\n      <Container width={ w * .75 } height={ h * .75 }>\r\n          <Backing width={ w * .75 } height={ h * .75 }/>\r\n          <MenuTitle>Shop</MenuTitle>\r\n          <MenuButtonContainer width={ w }>\r\n            {\r\n              menuType === STANDARD_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton width={350} onClick={ () => { toAmmoMenu() } }>Buy Ammo &amp; Grenades</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toHealthkitMenu() } }>Buy Health Kits</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { setMenuType(PERKS_MENU) } }>Perks</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toPlayerAttrMenu() } }>Upgrade Player</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toWeaponModsMenu() } }>Weapon Mods</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    null\r\n                    :\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={ () => { toNewWeaponsMenu() } }>Buy New Weapons</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ backToShopQuery }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === AMMO_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === PISTOL_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_PISTOL }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_PISTOL) } }>\r\n                          Buy Pistol Ammo\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SMG_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SMG }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SMG) } }>\r\n                            Buy SMG Ammo\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === GRENADES_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_GRENADE }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_GRENADE) } }>\r\n                          Buy Grenades\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SHOTGUN_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SHOTGUN }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SHOTGUN) } }>\r\n                            Buy Shotgun Shells\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton\r\n                    onClick={ () => { backToStandardMenu() } }>\r\n                  </BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === HEALTHKIT_MENU ?\r\n              <>\r\n              <MenuButtonSpacer>\r\n                <Inline>\r\n                  <MenuButtonSpacer>\r\n                    <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={() => {\r\n                        let amount\r\n                        if (game.player.health < 100) {\r\n                          if (game.player.health + 20 > 100) { amount = 100 }\r\n                          else { amount = game.player.health + 20 }\r\n                          player.acceptHealth( amount )\r\n                          dispatch( subtractFromTotalCredits(game.consumables.healthkit['20'].cost) )\r\n                          dispatch( addPurchase('+20 Healthkit', game.consumables.healthkit['20'].cost) )\r\n                          let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                          snd.play()\r\n                        } else {\r\n                          let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                          snd.play()\r\n                        }\r\n                      }}>+20 Healthkit - <span\r\n                      style={ getHealthkitCostStyle('20') }\r\n                      >\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['20'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                        width={ 300 }\r\n                        onClick={() => {\r\n                          let amount\r\n                          if (game.player.health < 100) {\r\n                            if (game.player.health + 50 > 100) { amount = 100 }\r\n                            else { amount = game.player.health + 50 }\r\n                            player.acceptHealth( amount )\r\n                            dispatch( subtractFromTotalCredits(game.consumables.healthkit['50'].cost) )\r\n                            dispatch( addPurchase('+50 Healthkit', game.consumables.healthkit['50'].cost) )\r\n                            let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                            snd.play()\r\n                          } else {\r\n                            let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>+50 Healthkit - <span\r\n                        style={ getHealthkitCostStyle('50') }>\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['50'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <CustomMenuButton\r\n                    width={ 300 }\r\n                    onClick={() => {\r\n                      if (game.player.health < 100) {\r\n                        player.acceptHealth( 100 )\r\n                        dispatch( subtractFromTotalCredits(game.consumables.healthkit['full'].cost) )\r\n                        dispatch( addPurchase('Full Healthkit', game.consumables.healthkit['full'].cost) )\r\n                      let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                        snd.play()\r\n                      } else {\r\n                        let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                        snd.play()\r\n                      }\r\n                    }}>Full Healthkit - <span\r\n                    style={ getHealthkitCostStyle('full') }>\r\n                    { game.player.health < 100 ? `${game.consumables.healthkit['full'].cost}` : 'Health Full' }\r\n                    </span>\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ () => { backToStandardMenu() } }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PLAYER_ATTRIBUTES_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RUN_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_JUMP_FORCE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RELOAD_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_DEFENSE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_MELEE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1 ? null                  \r\n                    :\r\n                    <MenuButtonSpacer>\r\n                      <BackButton\r\n                        onClick={ () => {\r\n                          backToStandardMenu()\r\n                        }}>\r\n                          Back\r\n                      </BackButton>\r\n                    </MenuButtonSpacer>\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PERKS_MENU ?\r\n              <>\r\n                <div\r\n                onClick={() => {\r\n                  setMenuType(STANDARD_MENU)\r\n                }}\r\n                style={{\r\n                  top: 0,\r\n                  right: '20px',\r\n                  marginTop: '-40px',\r\n                  position: 'absolute'\r\n                }}>\r\n                  <BackButton\r\n                  width={50}\r\n                  arrowOnly={true}\r\n                  />\r\n                </div>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['magnetism'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='increase-magnetism'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magnetism'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magnetism'].cost) )\r\n                            dispatch( setPlayerMagnetism(1200, 4) )\r\n                            dispatch( addPurchase('Magnetism perk', game.player.perks['magnetism'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Increase Magnetism\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magnetism'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magnetism'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='increase-magnetism' type='dark'>\r\n                        <span>\r\n                          Will increase the effect of items being drawn to you for easy pick up\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['magDmg'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='mag-damage'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magDmg'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magDmg'].cost) )\r\n                            dispatch( setPlayerMagDamage() )\r\n                            dispatch( addPurchase('Mag Damage perk', game.player.perks['magDmg'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Magazine Damage\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magDmg'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magDmg'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='mag-damage' type='dark'>\r\n                        <span>\r\n                          Ejected magazines will damage enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['lastBullet'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='last-bullet'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['lastBullet'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['lastBullet'].cost) )\r\n                            dispatch( setPlayerLastBullet() )\r\n                            dispatch( addPurchase('Last Bullet Extra Damage perk', game.player.perks['lastBullet'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Last Round\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['lastBullet'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['lastBullet'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='last-bullet' type='dark'>\r\n                        <span>\r\n                          Last bullet fired will cause greater damage to enemies \r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['creditDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='credit-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['creditDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['creditDropper'].cost) )\r\n                            dispatch( setPlayerCreditDropper() )\r\n                            dispatch( addPurchase('Credit Dropper perk', game.player.perks['creditDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Credit Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['creditDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['creditDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='credit-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will drop more credits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['ammoDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='ammo-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['ammoDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['ammoDropper'].cost) )\r\n                            dispatch( setPlayerAmmoDropper() )\r\n                            dispatch( addPurchase('Ammo Dropper perk', game.player.perks['ammoDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Ammo Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['ammoDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['ammoDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='ammo-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop ammunition\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['healthDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='health-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['healthDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['healthDropper'].cost) )\r\n                            dispatch( setPlayerHealthDropper() )\r\n                            dispatch( addPurchase('Health Dropper perk', game.player.perks['healthDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Health Dropper\r\n                          <span\r\n                              style={{\r\n                                color: (\r\n                                  credits >= game.player.perks['healthDropper'].cost ? 'green' : 'red'\r\n                                )\r\n                              }}>\r\n                                &nbsp;${game.player.perks['healthDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='health-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop small health kits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['quickTurret'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='quick-turret'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['quickTurret'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['quickTurret'].cost) )\r\n                            dispatch( setPlayerQuickTurret() )\r\n                            dispatch( addPurchase('Turret Upgrade perk', game.player.perks['quickTurret'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Quick Turrets\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['quickTurret'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['quickTurret'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='quick-turret' type='dark'>\r\n                        <span>\r\n                          Any placed machine gun turrets will now have less delay between fired shots and slightly more range\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['barrierPlus'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='barrier-plus'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['barrierPlus'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['barrierPlus'].cost) )\r\n                            dispatch( setPlayerBarrierPlus() )\r\n                            dispatch( addPurchase('Barrier Plus+ perk', game.player.perks['barrierPlus'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Barrier Plus\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['barrierPlus'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['barrierPlus'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='barrier-plus' type='dark'>\r\n                        <span>\r\n                          Placed barriers will now have increased strength to ward of oncoming enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['cluck'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='big-cluster'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['cluck'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['cluck'].cost) )\r\n                            dispatch( setPlayerFusterCluck() )\r\n                            dispatch( addPurchase('Fuster Cluck perk', game.player.perks['cluck'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Fuster Cluck\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['cluck'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['cluck'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='big-cluster' type='dark'>\r\n                        <span>\r\n                          Cluster bombs will now expel more explosives\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === BUY_NEW_WEAPONS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                            if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) {\r\n                              batch(() => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) )\r\n                                dispatch(\r\n                                  addPurchase('Submachine Gun', game.player.weapons.buyWeapons[WEAPON_TYPE_SMG])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SMG) )\r\n                              })\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                         Buy Submachine Gun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                          if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) {\r\n                            batch(\r\n                              () => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) )\r\n                                dispatch(\r\n                                  addPurchase('Shotgun', game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SHOTGUN) )\r\n                              }\r\n                              )\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                        Buy Shotgun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={() => { backToStandardMenu() }} />\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === WEAPON_MODS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer style={{ marginTop: '-15px' }}>\r\n                  {\r\n                    subMenuType === PISTOL_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_PISTOL} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SMG_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SMG} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SHOTGUN_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SHOTGUN} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === DEFAULT_SUBMENU ?\r\n                    <>\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={() => { setSubMenuType(PISTOL_MODS_SUBMENU) }}>Pistol Mods</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                      {\r\n                         game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SMG_MODS_SUBMENU) }}>SMG Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null \r\n                      }\r\n                      {\r\n                        game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SHOTGUN_MODS_SUBMENU) }}>Shotgun Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null\r\n                      }\r\n                      <MenuButtonSpacer style={{ marginTop: '40px' }}>\r\n                        <BackButton onClick={ backToStandardMenu }>Back</BackButton>\r\n                      </MenuButtonSpacer>\r\n                    </>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n          </MenuButtonContainer>\r\n        </Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport MenuComponents from './MenuComponents'\r\nimport { BackButton, CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\n\r\nexport default ({ backBtnFn }) => {\r\n\r\n  const { gameObjects } = window\r\n  const state = useSelector(state => state)\r\n  let achievementsKeys = Object.keys(state.game.achievements)\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container\r\n      width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n      height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n      >\r\n        <MenuComponents.Backing\r\n        width={ gameObjects ? gameObjects.getKeyValue('game-width') * .75 : 1200 * .75 }\r\n        height={ gameObjects ? gameObjects.getKeyValue('game-height') * .75 : 550 * .75 }\r\n        ></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>Achievements</MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n            {\r\n              achievementsKeys.map(key => {\r\n                if (state.game.achievements[key].owned) {\r\n                  return (\r\n                    <React.Fragment key={key}>\r\n                    <Inline>\r\n                      <MenuComponents.MenuButtonSpacer data-tip data-for={key+'-description'}>\r\n                        <CustomMenuButton>\r\n                          {key}\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                    <ReactTooltip id={key+'-description'}>\r\n                      <span>\r\n                        Earned by: {state.game.achievements[key].description}\r\n                      </span>\r\n                    </ReactTooltip>\r\n                    </React.Fragment>\r\n                  )\r\n                }\r\n              })\r\n            }\r\n          <CornerBackButton marginTop={'-60px'} onClick={ backBtnFn } />\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport { decrementWave, gameStateTransition, setWaveCountToDefeat, toggleZombieHealthDisplay, toggleFilterEffects, setZombiesOnStage, StatsDefs } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport store from '../../../app/store'\r\nimport { CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { Children } from 'react'\r\nimport { batch, useDispatch, useSelector } from 'react-redux'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport updateScore from '../utils/updateScore'\r\nimport AchievementsView from './AchievementsView'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const resetWave = () => {\r\n  const screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  const player = window.gameObjects.getKeyValue('player')\r\n  // remove existing zombies, if any\r\n  let zombies = window.gameObjects.getKeyValue('zombies')\r\n  while(zombies.length > 0) {\r\n    zombies.forEach(z => { z.kill(null, true) })\r\n  }\r\n  window.gameObjects.setKeyValue('zombies', [])\r\n  screenUI.unpause()\r\n  if (player.dead) {\r\n    screenUI.respawn()\r\n  }\r\n}\r\n\r\nexport const gotoMainMenu = () => {\r\n  const dispatch = store.dispatch\r\n  resetWave()\r\n  batch(() => {\r\n    dispatch( setZombiesOnStage(0) )\r\n    dispatch( setWaveCountToDefeat(null) )\r\n    dispatch(gameStateTransition('sub', store.getState().game.gameSubState, SubStates.NEUTRAL))\r\n    dispatch( gameStateTransition('main', store.getState().game.gameState, GameStates.MAIN_MENU))\r\n  })\r\n}\r\n\r\nexport const NoTransitionButton = ({ bgcolor, bordercolor, hoverborder, hovercolor, width, height, children }) => (\r\n  <CustomMenuButton\r\n  onMouseOver={ null }\r\n  width={ width ? width : '200px' }\r\n  height={ height ? height : '60px' }\r\n  hovercolor={ hovercolor ? hovercolor : '#222' }\r\n  hoverborder={ hoverborder ? hoverborder : '#333' }\r\n  bordercolor={ bordercolor ? bordercolor : '#333' }\r\n  bgcolor={ bgcolor ? bgcolor : '#222' }\r\n  cancelTransition={true}\r\n  >\r\n    { children }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const Stat = ({ label, stat }) => {\r\n  return (\r\n    <MenuButtonSpacer padding={ 1 }>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 200 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.75)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { label }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n      <Inline>\r\n        <NoTransitionButton\r\n        width={ 400 }\r\n        height={ 35 }\r\n        bgcolor={ 'rgba(0, 0, 0, 0.4)' }\r\n        hovercolor={ 'rgba(0, 0, 0, 0.5)' }\r\n        bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n        hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n        >\r\n          { stat }\r\n        </NoTransitionButton>\r\n      </Inline>\r\n    </MenuButtonSpacer>\r\n  )\r\n}\r\n\r\nexport default function PauseMenu (props) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const stats = useSelector(state => state.game.stats)\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const pauseMenuStates = {\r\n    DEFAULT: 'Default',\r\n    ACHIEVEMENTS: 'achievements',\r\n    CONTROLS: 'Controls',\r\n    OPTIONS: 'Options',\r\n    STATS: 'Stats',\r\n  }\r\n\r\n  const showControls = () => {\r\n    setPauseMenuState(pauseMenuStates.CONTROLS)\r\n  }\r\n\r\n  const showOptions = () => {\r\n    setPauseMenuState(pauseMenuStates.OPTIONS)\r\n  }\r\n\r\n  const showDefault = () => {\r\n    setPauseMenuState(pauseMenuStates.DEFAULT)\r\n  }\r\n\r\n  const seeScoreboard = () => {\r\n    dispatch(\r\n      gameStateTransition('main', GameStates.MAIN_MENU, GameStates.SCORES_VIEW)\r\n    )\r\n  }\r\n\r\n  const showStats = () => {\r\n    setPauseMenuState(pauseMenuStates.STATS)\r\n  }\r\n\r\n  const [pauseMenuState, setPauseMenuState] = React.useState(pauseMenuStates.DEFAULT)\r\n\r\n  const resumeGame = () => { window.gameObjects.getKeyValue('screen-ui').togglePause() }\r\n\r\n  const playGame = () => {\r\n    dispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n    dispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n  }\r\n\r\n  const showAchievements = () => {\r\n    setPauseMenuState(pauseMenuStates.ACHIEVEMENTS)\r\n  }\r\n\r\n  const effectFilters = useSelector(state => state.game.filterEffects)\r\n\r\n  const toggleFilters = () => {\r\n    dispatch( toggleFilterEffects(!effectFilters) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => zombie.checkFilters())\r\n    let ammos = window.gameObjects.getKeyValue('ammo-drops-by-type')\r\n    ammos[WEAPON_TYPE_SMG]\r\n    .concat(ammos[WEAPON_TYPE_PISTOL])\r\n    .concat(ammos[WEAPON_TYPE_SHOTGUN])\r\n    .forEach(ammo => ammo.checkFilters())\r\n    let credits = window.gameObjects.getKeyValue('currency-drops')\r\n    credits.forEach(credit => credit.checkFilters())\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    healths.forEach(health => health.checkFilters())\r\n    let player = window.gameObjects.getKeyValue('player')\r\n    player.checkFilters()\r\n    let weaponsUI = window.gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.checkFilters()\r\n  }\r\n\r\n  const displayZombieHealth = useSelector(state => state.game.displayZombieHealth)\r\n\r\n  const toggleZombieHealth = () => {\r\n    dispatch( toggleZombieHealthDisplay(!displayZombieHealth) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => {\r\n      zombie.displayHealth(!displayZombieHealth)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {\r\n      gameObjects ?\r\n        <Container style={{ top: props.margintop ? '100px' : 0 }} width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }>\r\n          { \r\n            props.hidebg ? null :\r\n            <>\r\n              <Backing bgcolor={ '#222' } opacity={ gameState === GameStates.MAIN_MENU ? .35 : .5 } width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }/>\r\n            </>\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.DEFAULT ?\r\n            <>\r\n              {\r\n                props.hidetitle ? null\r\n                : <MenuTitle>Pause Menu</MenuTitle>\r\n              }\r\n              <MenuButtonContainer width={ w ? w : 0 }>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 6 }>\r\n                  {\r\n                    props.playbtn ?\r\n                      <CustomMenuButton\r\n                      height={ 40 }\r\n                      onClick={ playGame }>\r\n                        Play Game\r\n                      </CustomMenuButton>\r\n                    :\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ resumeGame }>\r\n                        Resume Game\r\n                      </CustomMenuButton>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                {\r\n                  gameState !== GameStates.MAIN_MENU ?\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ gotoMainMenu }>\r\n                        Main Menu\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  :\r\n                    <MenuButtonSpacer padding={2}>\r\n                      <CustomMenuButton\r\n                      height={40}\r\n                      onClick={ seeScoreboard }>\r\n                        Scoreboard\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                }\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showControls }>\r\n                    View Controls\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 4 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showOptions }>\r\n                    Options\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showStats }>\r\n                    Stats\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={ gameState === GameStates.PAUSE ? 1 : 4 }>\r\n                  <CustomMenuButton\r\n                  height={40}\r\n                  onClick={ showAchievements }>\r\n                    Achievements\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.ACHIEVEMENTS ?\r\n            <AchievementsView backBtnFn={ showDefault } /> : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.CONTROLS ?\r\n            <>\r\n              <MenuTitle>Controls</MenuTitle>\r\n              <MenuButtonContainer width={ w }>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Jump: W</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Left: A</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Right: D</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Melee Weapon Bash: F</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Aim: Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Shoot: Left Mouse</CustomMenuButton>\r\n                </Inline>\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Charge Grenade Throw: Hold G / Right Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Change Weapon: Space / Mouse Wheel</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Turn Turret: L/R Arrow (while placing)</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Detonate remote mines: Numpad  1 - 9</CustomMenuButton>\r\n                </Inline>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.OPTIONS ?\r\n            <>\r\n              <MenuTitle>Options</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Effect Filters?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='effects-filter'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ effectFilters ? 'white' : 'red' }\r\n                      onClick={ toggleFilters }>\r\n                        <span\r\n                        style={{ color: effectFilters ? 'white' : 'red' }}>\r\n                        { effectFilters ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='effects-filter'>\r\n                      <span >\r\n                        Adds filter effects like glow and motion blur to animations. Turning off could improve performance.\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      height={ 60 }\r\n                      >Display Zombie Health?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='display-zombie-health'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ displayZombieHealth ? 'white' : 'red' }\r\n                      onClick={ toggleZombieHealth }>\r\n                        <span\r\n                        style={{ color: displayZombieHealth ? 'white' : 'red' }}>\r\n                        { displayZombieHealth ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='display-zombie-health'>\r\n                      <span >\r\n                        Displays a yellow text box above each enemy zombie\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.STATS ?\r\n            <>\r\n              <MenuTitle>Stats</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Stat label={ 'Shots Fired' } stat={ stats.bulletsFired } />\r\n                <Stat label={ 'Mags Changed' } stat={ stats.timesReloaded } />\r\n                <Stat label={ 'Grenades Thrown' } stat={ stats.grenadesThrown } />\r\n                <Stat label={ 'Zombies Killed' } stat={ stats.zombiesKilled } />\r\n                <Stat label={ 'Deaths' } stat={ stats.timesKilled } />\r\n                {/* <Stat label={ 'Respawns' } stat={ stats.timesRespawned } /> */}\r\n                \r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n        </Container>\r\n      : null\r\n    }\r\n    </>\r\n  )\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { gameStateTransition, setShowingMessage } from './gameSlice'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { getBodyHeight } from './utils/Utils'\r\nimport { resetWave } from './ReactComponents/PauseMenu'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const createWaveMessage = txt => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: '#FFFFFF',\r\n\t\tfontSize: 40,\r\n    fontWeight: 'bold'\r\n  }, {\r\n    chars: [\r\n      ['a', 'z'],\r\n      ['0', '9'],\r\n      ['A', 'Z'],\r\n      ' .!?'\r\n    ]\r\n  })\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n  } = window\r\n  // let screenUI = gameObjects.getKeyValue('screen-ui')\r\n  let player = gameObjects.getKeyValue('player')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/5\r\n\r\n  container.addChild(text)\r\n  \r\n  const transitionToShopQuery = () => {\r\n    resetWave() // in case any zombies are roaming\r\n    if (getState().game.gameState === GameStates.MAIN_MENU || getState().game.gameState === GameStates.PAUSE) {\r\n      if (getState().game.gameSubState === SubStates.WAVE_DEFEATED || getState().game.gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.NEUTRAL))\r\n      }\r\n    } else {\r\n      if (!player.dead) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n        container.removeChild(text)\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const waveMsgOutro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgOutro, 2000)\r\n    } else {\r\n      to(text, .75, {\r\n        delay: 2,\r\n        x: gameWidth * 1.5,\r\n        ease: Power1.easeIn,\r\n        onComplete: transitionToShopQuery\r\n      })\r\n    }\r\n  }\r\n\r\n  const waveMsgIntro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgIntro, 2000)\r\n    } else {\r\n      from(text, .75, {\r\n        x: -100,\r\n        alpha: 0,\r\n        onComplete: waveMsgOutro\r\n      })\r\n    }\r\n  }\r\n\r\n  waveMsgIntro()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createGenericMessage = (txt, fillColor, durationMotion, durationLinger) => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: fillColor,\r\n\t\tfontSize: 40,\r\n\t\tfontWeight: 'bold'\r\n\t})\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n\t} = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/2\r\n\r\n\tcontainer.addChild(text)\r\n\r\n\tfrom(text, durationMotion, {\r\n\t\tx: -100,\r\n\t\talpha: 0,\r\n\t\tonStart: () => {\r\n\t\t\tdispatch( setShowingMessage(true) )\r\n\t\t},\r\n\t\tonComplete: () => {\r\n\t\t\tto(text, durationMotion, {\r\n\t\t\t\tdelay: durationLinger,\r\n\t\t\t\tx: gameWidth * 1.5,\r\n\t\t\t\tease: Power1.easeIn,\r\n\t\t\t\tonComplete: () => {\r\n\t\t\t\t\tdispatch( setShowingMessage(false) )\r\n\t\t\t\t\tcontainer.removeChild(text)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createTextMessage = (txt, fill, durationMotion, durationLinger, fontSize) => {\r\n\r\n  let {\r\n    gameObjects,\r\n    TweenLite: { to, set }\r\n  } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let texts = gameObjects.getKeyValue('text-messages')\r\n  let playerBody = gameObjects.getKeyValue('player').body\r\n  let msg = new PIXI.Text(txt, { fill, fontSize: fontSize ? fontSize : 13, fontWeight: 'bold' })\r\n  msg.pivot.x = msg.width * .5\r\n  msg.pivot.y = msg.height * .5\r\n  container.addChild(msg)\r\n\r\n  let { game: { player: { position: playerPosition } } } = getState()\r\n  let initialY = playerPosition.y - (getBodyHeight(playerBody) * .65)\r\n\r\n  texts.push(msg)\r\n\r\n  set(msg, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20)\r\n  })\r\n\r\n  to(msg, durationMotion, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20) - 20,\r\n    onComplete: () => {\r\n      to(msg, durationMotion, {\r\n        delay: durationLinger,\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          msg.destroy()\r\n          let idx = texts.indexOf(msg)\r\n          if (idx > -1) {\r\n            texts.splice(idx, 1)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n}\r\n","import { Bodies, Body, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport random from 'random'\r\n\r\nlet { TweenLite: { delayedCall, to } } = window\r\n\r\nexport default function Gib ({ position_x, position_y }, { force_x, force_y }, timeToDisappear) {\r\n  let { gameObjects } = window\r\n  let gibs = gameObjects.getKeyValue('gibs')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let body = Bodies.circle(position_x, position_y, 5, {\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  body.label = 'gib'\r\n  World.add(world, body)\r\n\r\n  let getTexturePNG = () => {\r\n    let gibs = [ 'gib.png', 'gib2.png', 'gib3.png', 'gib4.png' ]\r\n    return gibs[ Math.floor( Math.random() * gibs.length ) ]\r\n  }\r\n  \r\n  let partsSheet = gameObjects.getKeyValue('player-parts-sheet')\r\n  let gfc = new Sprite(\r\n    partsSheet.textures[ getTexturePNG() ]\r\n  )\r\n  container.addChild( gfc )\r\n  \r\n  gibs.push( this )\r\n\r\n  gfc.pivot.x = gfc.width * .5\r\n  gfc.pivot.y = gfc.height * .475\r\n\r\n  Body.applyForce(body, { x: position_x, y: position_y }, { x: random.float(force_x * .25, force_x), y: random.float(force_y * .25, force_y) })\r\n  \r\n  this.animate = renderFn => {\r\n    let { x, y, rotation: rot } = renderFn(body)\r\n    gfc.position = { x, y }\r\n    gfc.rotation = rot\r\n  }\r\n\r\n  this.destroy = () => {\r\n    if (gfc) {\r\n      gfc.destroy()\r\n    }\r\n    if (body) {\r\n      World.remove(world, body)\r\n    }\r\n    let idx = gibs.indexOf(this)\r\n    if ( idx > -1 ) {\r\n      gibs.splice( idx, 1 )\r\n    }\r\n    world = null\r\n    body = null\r\n    container = null\r\n    gibs = null\r\n    gameObjects = null\r\n  }\r\n\r\n  delayedCall(timeToDisappear, () => {\r\n    to(gfc, 2, { alpha: 0, onComplete: () => { this.destroy() }})\r\n  })\r\n\r\n  return this\r\n\r\n}\r\n\r\nexport function GibGenerator (count, position, force, timeToDisappear) {\r\n  let { x: position_x, y: position_y } = position\r\n  force = force || { force_x: 0, force_y: 0 }\r\n  let { x: force_x, y: force_y } = force\r\n  // add some gibs for effect!\r\n\tfor (let gibCnt = 0; gibCnt < count; ++gibCnt) {\r\n\t\tnew Gib({ position_x, position_y }, { force_x, force_y }, timeToDisappear)\r\n\t}\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { GibGenerator } from '../items/Gib'\r\n\r\nexport function PlayerRagdollDecap ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 60 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet maskBody = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  // let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n\t// spineToHead really\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  // let spineToLower = Constraint.create({\r\n  //   bodyA: bodyLower,\r\n  //   bodyB: lower_spineLinks[0],\r\n  //   pointA: { x: 0, y: -bLower.h/2 },\r\n  //   pointB: { x: 0, y: -spine.h/2 },\r\n  //   length: 10\r\n  // })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, maskBody, bodyUpper, //bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['head_gore.png'] )\r\n\tskull._id = 'skull'\r\n\tspriteParts.push( skull )\r\n\t\r\n  let mask = new PIXI.Sprite( parts_spritesheet.textures['mask.png'] )\r\n\tmask._id = 'mask'\r\n  spriteParts.push( mask )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\t// lower_spineLinks.forEach(link => {\r\n  //   let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n  //   entrailGfx.push( entrailGfc )\r\n  //   spriteParts.push( entrailGfc )\r\n  // })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_headless.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  // let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\t// torsoLower._id = 'torso lower'\r\n  // spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.mask = maskBody\r\n  this.bodyUpper = bodyUpper\r\n  // this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => {\r\n\t\t\tsprite.destroy()\r\n\t\t\tsprite = null\r\n\t\t})\r\n\t\tWorld.remove(world, this.composite)\r\n\t\tthis.composite = null\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet maskPos = renderFnc(this.mask)\r\n\t\tmask.position = maskPos\r\n\t\tmask.rotation = maskPos.rotation\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a head constraint\r\n\tComposite.remove(this.composite, bodyToHead)\r\n\tBody.applyForce(this.head, this.head.position, { x: 0, y: -0.1 })\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollHalved ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 35 }\r\n\tlet bLower = { w: 45, h: 5 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n  let bodyLower = Bodies.rectangle(x, y, bLower.w, bLower.h)\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = [], entrailGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: bodyUpper,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: bUpper.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  let spineToLower = Constraint.create({\r\n    bodyA: bodyLower,\r\n    bodyB: lower_spineLinks[0],\r\n    pointA: { x: 0, y: -bLower.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper, bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n  Composite.add(this.composite, lower_spineLinks)\r\n  Composite.add(this.composite, lower_spineConstraints)\r\n  Composite.add(this.composite, spineToLower)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\tlower_spineLinks.forEach(link => {\r\n    let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n    entrailGfx.push( entrailGfc )\r\n    spriteParts.push( entrailGfc )\r\n  })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_upper_gore.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\ttorsoLower._id = 'torso lower'\r\n  spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n  this.bodyUpper = bodyUpper\r\n  this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlower_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      entrailGfx[i].position = linkPos\r\n      entrailGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n\r\n    let torsoLowerPos = renderFnc(this.bodyLower)\r\n\t\ttorsoLower.position = torsoLowerPos\r\n\t\ttorsoLower.rotation = torsoLowerPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollMaim ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')  //gameObjects.getKeyValue('zombie-parts-sheet') //gameObjects.getKeyValue('z-parts-spritesheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull_gore.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach arm constraints\r\n\tComposite.remove(this.composite, [ bodyUpperToArmUpperL, bodyUpperToArmUpperR ])\r\n\tBody.applyForce(this.armLowerL, this.armLowerL.position, { x: -0.01, y: -0.1 })\r\n\tBody.applyForce(this.armLowerR, this.armUpperR.position, { x: 0.01, y: -0.1 })\r\n\r\n\t// auto removal\r\n\t// delayedCall(3, this.destroy)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function PlayerRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}","import { World } from 'matter-js'\r\nimport { AnimatedSprite } from 'pixi.js'\r\n\r\nexport const BLOOD_SPURT_TYPE_1 = 'blood spurt type 1'\r\nexport const BLOOD_SPURT_TYPE_2 = 'blood spurt type 2'\r\nexport const BLOOD_SPURT_TYPE_3 = 'blood spurt type 3'\r\n\r\nlet { TweenLite: { set } } = window\r\n\r\nexport default function BloodSpurt (type, position, scale, bodyToDelete) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n\r\n  let chosenSpurt = null\r\n  \r\n  let bloodSpurt1_sheet = gameObjects.getKeyValue('blood-spurt-1')\r\n  let bloodSpurt1 = new AnimatedSprite( bloodSpurt1_sheet.animations['blood_spurt_1'] )\r\n  \r\n  let bloodSpurt2_sheet = gameObjects.getKeyValue('blood-spurt-2')\r\n  let bloodSpurt2 = new AnimatedSprite( bloodSpurt2_sheet.animations['blood_spurt_2'] )\r\n  \r\n  let bloodSpurt3_sheet = gameObjects.getKeyValue('blood-spurt-3')\r\n  let bloodSpurt3 = new AnimatedSprite( bloodSpurt3_sheet.animations['blood_spurt_3'] )\r\n  \r\n  // randomize the returned spurt\r\n  let spurts = [ BLOOD_SPURT_TYPE_1, BLOOD_SPURT_TYPE_2, BLOOD_SPURT_TYPE_3 ]\r\n  let autoChosen = spurts[ Math.floor( Math.random() * spurts.length ) ]\r\n  \r\n  if (!type) {\r\n    type = autoChosen\r\n  }\r\n  \r\n  if (type === BLOOD_SPURT_TYPE_1) {\r\n    chosenSpurt = bloodSpurt1\r\n  } else if (type === BLOOD_SPURT_TYPE_2) {\r\n    chosenSpurt = bloodSpurt2\r\n  } else {\r\n    chosenSpurt = bloodSpurt3\r\n  }\r\n\r\n  chosenSpurt.onComplete = () => {\r\n    chosenSpurt.destroy()\r\n    if (bodyToDelete) {\r\n      World.remove(world, bodyToDelete)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    chosenSpurt = null\r\n    bloodSpurt1 = null\r\n    bloodSpurt1_sheet = null \r\n    bloodSpurt2 = null\r\n    bloodSpurt2_sheet = null \r\n    bloodSpurt3 = null\r\n    bloodSpurt3_sheet = null \r\n    spurts = null\r\n    autoChosen = null\r\n  }\r\n\r\n  chosenSpurt.animationSpeed = .5\r\n  chosenSpurt.pivot.x = chosenSpurt.width * .5\r\n  chosenSpurt.pivot.y = chosenSpurt.height * .5\r\n  if (scale) {\r\n    set(chosenSpurt.scale, { x: scale, y: scale })\r\n  } else {\r\n    set(chosenSpurt.scale, { x: .5, y: .5 })\r\n  }\r\n  chosenSpurt.position = position\r\n  chosenSpurt.loop = false\r\n  chosenSpurt.updateAnchor = true\r\n  chosenSpurt.play()\r\n  container.addChild( chosenSpurt )\r\n\r\n  return chosenSpurt\r\n\r\n}","export const FELL_OFF = 'fell off of ledge'\r\nexport const KILLED_BY_ZOMBIE = 'killed by zombie'","import { Body, World, Bodies } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nlet { getState } = store\r\n\r\nexport default function Rock(position) {\r\n  let { gameObjects, TweenLite: { to, delayedCall } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let rockPieceAssets = [ 'rock-piece1.png', 'rock-piece2.png', 'rock-piece3.png' ]\r\n  const getRandomRockSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        rockPieceAssets[ Math.floor( Math.random() * rockPieceAssets.length ) ]\r\n      ]\r\n  ))\r\n  let rockSprite = getRandomRockSprite()\r\n  const rockScale = () => random.float(.45, .65)\r\n  rockSprite.pivot.x = rockSprite.width * .48\r\n  rockSprite.pivot.y = rockSprite.height * .48\r\n  rockSprite.scale.x = rockScale()\r\n  rockSprite.scale.y = rockScale()\r\n  container.addChild(rockSprite)\r\n  let rockBody = Bodies.rectangle(position.x, position.y - 50, 10, 10, {\r\n    restitution: .25,\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  Body.applyForce(rockBody, rockBody.position, {\r\n    x: random.float(-0.005, 0.005),\r\n    y: random.float(-0.001, -0.0025),\r\n  })\r\n  World.add(world, rockBody)\r\n  this.animate = renderFn => {\r\n    let { x, y } = renderFn(rockBody)\r\n    rockSprite.position = { x, y }\r\n  }\r\n  this.destroy = () => {\r\n    let idx = rocks.indexOf(this)\r\n    World.remove(world, rockBody)\r\n    container.removeChild(rockSprite)\r\n    if (idx > -1) {\r\n      rocks.splice(idx, 1)\r\n    }\r\n    world = null\r\n    rocks = null\r\n    container = null\r\n    rockBody = null\r\n    rockSprite = null\r\n    gameObjects = null\r\n  }\r\n  delayedCall(\r\n    getState().game.lastWaveCountDefeated &&\r\n    getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n    () => {\r\n      to(rockSprite, .5, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    }\r\n  )\r\n  return this\r\n}\r\n","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class WoodPlank {\r\n\r\n  constructor(pos) {\r\n    this.gameObjects = window.gameObjects\r\n    const { to, delayedCall } = window.TweenLite\r\n    let container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let world = this.gameObjects.getKeyValue('world')\r\n    this.woodPlanksSheet = this.gameObjects.getKeyValue('wood-planks-sheet')\r\n    this.woodPlanks = this.gameObjects.getKeyValue('wood-planks')\r\n    this.plankRange = [ '000.png', '001.png', '002.png' ]\r\n    // this.planks = new Array(random.int(4, 8)).fill(1)\r\n    // this.planks.map(plank => this.getPlank())\r\n    let {x,y} = pos\r\n    this.gfc = this.getPlank()\r\n    this.gfc.width = 50\r\n    this.gfc.height = 15\r\n    this.gfcContainer = new PIXI.Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = this.gfcContainer.width * .5\r\n    this.gfcContainer.pivot.y = this.gfcContainer.height * .5\r\n    this.body = new Bodies.rectangle(x,y,50,15,{collisionFilter:playerCollisionOptions})\r\n    this.body.torque = random.float(-0.5, 0.5)\r\n    Body.applyForce(this.body, this.body.position, {\r\n      x: random.float(-0.02, 0.02),\r\n      y: random.float(-0.01, -0.02)\r\n    })\r\n    World.add(world, this.body)\r\n    container.addChild(this.gfcContainer)\r\n    this.destroy = () => {\r\n      let idx = this.woodPlanks.indexOf(this)\r\n      World.remove(world, this.body)\r\n      container.removeChild(this.gfcContainer)\r\n      if (idx > -1) {\r\n        this.woodPlanks.splice(idx, 1)\r\n      }\r\n      world = null\r\n      container = null\r\n      this.gameObjects = null\r\n      this.woodPlanks = null\r\n      this.gfc = null\r\n    }\r\n    delayedCall(4, () => {\r\n      to(this.gfcContainer, 2, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    })\r\n    return this\r\n  }\r\n\r\n  animate(renderFn) {\r\n    let {x,y,rotation:rot} = renderFn(this.body)\r\n    this.gfcContainer.position = {x,y}\r\n    this.gfcContainer.rotation = rot\r\n  }\r\n\r\n  getPlank() {\r\n    return (\r\n      new PIXI.Sprite(\r\n        this.woodPlanksSheet.textures[\r\n          this.plankRange[Math.floor(Math.random() * this.plankRange.length)]\r\n        ]\r\n      )\r\n    )\r\n  }\r\n\r\n}","import { contains } from 'jquery'\r\nimport { AnimatedSprite } from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport { BlurFilter } from '@pixi/filter-blur'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport store from '../../../app/store'\r\n\r\nexport default class ExplosionSprite {\r\n\r\n  constructor(type, renderBody) {\r\n    this.gameObjects = window.gameObjects\r\n    let { to } = window.TweenLite\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let explosionTexture1 = this.gameObjects.getKeyValue('explosion3d1-sheet')\r\n    let explosionTexture2 = this.gameObjects.getKeyValue('explosion3d2-sheet')\r\n    this.explosion1 = new AnimatedSprite( explosionTexture1.animations['explosion3d'] )\r\n    this.explosion2 = new AnimatedSprite( explosionTexture2.animations['explosion3d'] )\r\n    this.explosions = [ this.explosion1, this.explosion2 ]\r\n    this.explosions.forEach(ex => {\r\n      ex.pivot.x = ex.width * .5\r\n      ex.pivot.y = ex.height * .5\r\n      ex.loop = false\r\n      ex.onComplete = () => {\r\n        this.container.removeChild(ex)\r\n        this.container = null\r\n        this.gameObjects = null\r\n        explosionTexture1 = null\r\n        explosionTexture2 = null\r\n        this.explosions = null\r\n      }\r\n    })\r\n    if (type === 1) {\r\n      this.explosion = this.explosion1\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    if (type === 2) {\r\n      this.explosion = this.explosion2\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    // this.container.addChild(this.explosion)\r\n    this.renderBody = renderBody\r\n    let adjustment = new AdjustmentFilter()\r\n    adjustment.brightness = 20.0\r\n    adjustment.saturation = 3.0\r\n    let blur = new BlurFilter()\r\n    blur.blur = .5\r\n    let glow = new GlowFilter({\r\n      outerStrength: 3.0\r\n    })\r\n    this.filters = store.getState().game.filterEffects ? [\r\n      adjustment,\r\n      blur,\r\n      glow\r\n    ] : []\r\n    this.explosion.filters = this.filters\r\n    to(this.explosion, .35, { alpha: 0 })\r\n    to(adjustment, .5, { brightness: 1.0, saturation: 1.5, onUpdate: () => {\r\n      if (store.getState().game.filterEffects) {\r\n        this.explosion.filters = this.filters\r\n      }\r\n    }})\r\n    this.explosion.play()\r\n  }\r\n\r\n  // checkFilters() {\r\n  //   if (store.getState().game.filterEffects) {\r\n  //     this.explosion.filters = this.filters\r\n  //   } else {\r\n  //     this.explosion.filters = []\r\n  //   }\r\n  // }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.explosion.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.explosion) === -1) {\r\n        this.container.addChild(this.explosion)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport WoodPlank from '../items/WoodPlank'\r\nimport ExplosionSprite from './ExplosionSprite'\r\nimport { Howl, Howler } from 'howler'\r\n\r\nexport default function GrenadeExplosion (position, showRocksBool, options) {\r\n  let { gameObjects, TweenLite: { to } } = window\r\n  let explosion1 = window.gameObjects.getKeyValue('explosion1')\r\n  let explosionSound1 = new Howl({\r\n    src: [ explosion1 ]\r\n  })\r\n  let distantExplosion = window.gameObjects.getKeyValue('distant-explosion')\r\n  let distantExplosionSound = new Howl({\r\n    src: [ distantExplosion ]\r\n  })\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionsArray = gameObjects.getKeyValue('explosions')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\r\n  const getRandomSmokeSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        smokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n      ]\r\n  ))\r\n  let positionalBody = Bodies.rectangle(position.x, position.y, 20, 20, {\r\n    restitution: 0,\r\n    collisionFilter: playerCollisionOptions,\r\n    isStatic: true\r\n  })\r\n  World.add(world, positionalBody)\r\n  this.calcRenderedPosition = renderFn => {\r\n    let { x, y } = renderFn(positionalBody)\r\n    this.calculatedPosition = { x, y }\r\n    // if (container && container.children.indexOf(smokeSprite) === -1) {\r\n    //   container.addChild(smokeSprite)\r\n    // }\r\n  }\r\n  explosionsArray.push( this )\r\n  // put it together\r\n  // smoke animation \r\n  let randInt = random.int(5, 10) // reduced from (10, 20)\r\n  for (let s = 0; s < randInt; ++s) {\r\n    let smokeSprite = getRandomSmokeSprite()\r\n    smokeSprite.pivot.x = smokeSprite.width * .5\r\n    smokeSprite.pivot.y = smokeSprite.height * .5\r\n    let duration = 2 // smoke tween duration \r\n    to(smokeSprite, duration, {\r\n      onStart: () => { container.addChild(smokeSprite) },\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        if (s === randInt - 1) {\r\n          World.remove(world, positionalBody)\r\n          let idx1 = explosionsArray.indexOf(this)\r\n          if (idx1 > -1) { explosionsArray.splice(idx1, 1) }\r\n          world = null\r\n          explosionsArray = null\r\n          explosionAssetsSheet = null\r\n          smokeAssets = null\r\n        }\r\n      }\r\n    })\r\n    let randScale = random.int(1, 2)\r\n    to(smokeSprite.scale, .5, { x: randScale, y: randScale })\r\n    let xyval = { x: 0, y: 0 }\r\n    to(xyval, .5, { x: random.int(-100, 100), y: random.int(-50, 50) })\r\n    to(smokeSprite.position, duration, {\r\n      onUpdate: () => {\r\n        if (this.calculatedPosition) {\r\n          smokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n          smokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        smokeSprite.destroy()\r\n        container = null\r\n        gameObjects = null\r\n      }\r\n    })\r\n  }\r\n  let woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n  // rocks \r\n  if (position.y > 300 || showRocksBool) {\r\n    for (let r = 0; r < random.int(4, 7); ++r) {\r\n      if (options && options.showWood) {\r\n        woodPlanks.push(new WoodPlank(position))\r\n      } else {\r\n        rocks.push(new Rock(position))\r\n      }\r\n    }\r\n    woodPlanks = null\r\n    rocks = null\r\n  }\r\n  if (!options || options.showExplosionSprite) {\r\n    // blender explosion sprite\r\n    let explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    explosionSound1.seek(.5)\r\n    explosionSound1.play()\r\n    distantExplosionSound.play()\r\n    explosionSprites.push(\r\n      new ExplosionSprite(random.int(1, 2), positionalBody)\r\n    )\r\n    explosionSprites = null\r\n  }\r\n}","import { Bodies, Constraint, World } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { getBodyHeight, getBodyWidth, makePixiSprite } from '../utils/Utils'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport store from '../../../app/store'\r\n\r\nexport default function WallBarrier (pos, dimensions, type) {\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite:{ delayedCall } } = window\r\n  let barriersSprites = gameObjects.getKeyValue('barriers-sheet')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let buildObjects = gameObjects.getKeyValue('build-objects')\r\n  let {width:w,height:h} = dimensions\r\n  let woodenBarrier = new PIXI.Sprite(barriersSprites.textures['woodenBarrier.png'])\r\n  let stoneBarrier = new PIXI.Sprite(barriersSprites.textures['stoneBarrier.png'])\r\n  let metalBarrier = new PIXI.Sprite(barriersSprites.textures['metalBarrier.png'])\r\n  let explosiveBarrier = makePixiSprite('explosive-barrel')\r\n  this.types = {\r\n    WOOD: 'Wooden',\r\n    STONE: 'Stone',\r\n    METAL: 'Metal',\r\n    EXPLOSIVE: 'Explosive Barrel'\r\n  }\r\n  let {x,y} = pos\r\n  let objBody = Bodies.rectangle(x, y, w, h, {\r\n    inertia: Infinity,\r\n    label: type === this.types.EXPLOSIVE ? 'explosive barrier' : 'barrier'\r\n  })\r\n  // try to attach barrier to the ground\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  let constraint = Constraint.create({\r\n    bodyA: ground,\r\n    bodyB: objBody,\r\n    pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n    pointB: { x: 0, y: getBodyHeight(objBody)/2 },\r\n    length: 0\r\n  })\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n        break;\r\n      case this.types.STONE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 500 : 250\r\n        break;\r\n      case this.types.METAL:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 800 : 400\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 200 : 100\r\n        break;\r\n      default:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n    }\r\n  }\r\n\r\n  objBody.main = this\r\n  this.destroyed = false\r\n\r\n  this.getBody = () => objBody\r\n\r\n  // World.add(world, objBody)\r\n  World.add(world, [constraint, objBody])\r\n\r\n  let barrierSprite\r\n  let txtStyle = { fill: '#ffffff', fontSize: 12 }\r\n  let healthDisplay = new PIXI.Text(objBody.strength, txtStyle)\r\n  healthDisplay.pivot.x = healthDisplay.width * .5\r\n  healthDisplay.pivot.y = healthDisplay.height * .5\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        barrierSprite = woodenBarrier\r\n        break;\r\n      case this.types.STONE:\r\n        barrierSprite = stoneBarrier\r\n        break;\r\n      case this.types.METAL:\r\n        barrierSprite = metalBarrier\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        barrierSprite = explosiveBarrier\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  barrierSprite.width = w\r\n  barrierSprite.height = h\r\n  let sprite = new PIXI.Container()\r\n  sprite.addChild(barrierSprite)\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * .5\r\n  container.addChild(sprite)\r\n  container.addChild(healthDisplay)\r\n\r\n  let player = gameObjects.getKeyValue('player')\r\n  player.sprites.forEach(sprite => { container.addChild(sprite) })\r\n\r\n  this.takeDamage = (dmg) => {\r\n    objBody.strength -= dmg\r\n    healthDisplay.text = objBody.strength\r\n  }\r\n\r\n  this.displayBarrierStrength = (renderFn) => {\r\n    healthDisplay.position = renderFn(objBody)\r\n    barrierSprite.position = renderFn(objBody)\r\n  }\r\n\r\n  objBody.removeSelf = () => {\r\n    this.destroyed = true\r\n    new GrenadeExplosion(objBody.position, true, {\r\n      showWood: type === this.types.WOOD ? true : false,\r\n      showExplosionSprite: type === this.types.EXPLOSIVE ? true : false\r\n    })\r\n    if (type === this.types.EXPLOSIVE) {\r\n      let {x:_x,y:_y} = objBody.position\r\n      let explosionHitbox = Bodies.rectangle(_x, _y, 400, 300)\r\n      explosionHitbox.label = 'barrel explosion'\r\n      World.add(world, explosionHitbox)\r\n      delayedCall(2, () => {\r\n        if (explosionHitbox) {\r\n          World.remove(world, explosionHitbox)\r\n        }\r\n      })\r\n      explosionHitbox.removeSelf = () => {\r\n        World.remove(world, explosionHitbox)\r\n      }\r\n    }\r\n    World.remove(world, [constraint, objBody])\r\n    container.removeChild(healthDisplay)\r\n    container.removeChild(sprite)\r\n    let idx = buildObjects.indexOf(this)\r\n    if (idx > -1) { buildObjects.splice(idx, 1) }\r\n  }\r\n\r\n  return this\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class Landmine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('landmine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'landmine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['landmine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    new GrenadeExplosion(this.body.position, true)\r\n    let { TweenLite: { delayedCall } } = window\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { Bodies, World, Body, Vector } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { radians } from 'radians'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\n\r\nexport default function Grenade (x, y, r, force, fuseTime) {\r\n  this.grenadeDistance = {\r\n    start: x,\r\n    end: null\r\n  }\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite: { delayedCall, from } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let grenades = gameObjects.getKeyValue('grenades')\r\n  let grenadeBody = Bodies.circle(x, y, r, {\r\n    restitution: .8,\r\n    collisionFilter: { category: 3 }\r\n  })\r\n  grenadeBody.label = 'grenade'\r\n  grenadeBody.main = this\r\n  World.add(world, grenadeBody)\r\n  Body.applyForce(grenadeBody, grenadeBody.position, force)\r\n  grenadeBody.torque = .01\r\n  let grenadeGfc = new PIXI.Graphics()\r\n  grenadeGfc.beginFill(0x1F472C)\r\n  grenadeGfc.drawCircle(0, 0, r)\r\n  this.grenadeBody = grenadeBody\r\n  let bevel = new BevelFilter()\r\n  bevel.shadowAlpha = .45\r\n  bevel.lightAlpha = .35\r\n  bevel.thickness = 5\r\n  bevel.shadowColor = 0x0\r\n  bevel.lightColor = 0x208C44\r\n  let noise = new NoiseFilter()\r\n  noise.noise = .1\r\n  noise.seed = .5\r\n  grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise ] : []\r\n  let motionBlur = new MotionBlurFilter({ velocity: { x: 0, y: 0 } })\r\n  from(motionBlur.velocity, .75, { x: 100, y: 10 })\r\n  container.addChild(grenadeGfc)\r\n  this.animate = renderFn => {\r\n    if (grenadeBody && grenadeGfc) {\r\n      let { x, y, rotation: rot } = renderFn(grenadeBody)\r\n      grenadeGfc.position.x = x\r\n      grenadeGfc.position.y = y\r\n      grenadeGfc.rotation = rot\r\n      bevel.rotation = radians(rot)\r\n      grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise, motionBlur ] : []\r\n    }\r\n  }\r\n\r\n  delayedCall(fuseTime ? fuseTime : getState().game.player.weapons.grenadeFuseTime.default, () => {\r\n    if (!this.exploded) {\r\n      this.explode()\r\n    }\r\n  })\r\n  this.exploded = false\r\n  this.explode = (showRocks) => {\r\n    this.grenadeDistance.end = this.grenadeBody.position.x\r\n    this.exploded = true\r\n    new GrenadeExplosion(grenadeBody.position, showRocks ? showRocks : null)\r\n    let explosionSize = getState().game.player.weapons.grenadeExplosionSize\r\n    this.explosionHitbox = Bodies.rectangle(grenadeBody.position.x, grenadeBody.position.y, explosionSize, explosionSize, {\r\n      // isStatic: true\r\n    })\r\n    grenadeBody.distance = this.grenadeDistance\r\n    this.explosionHitbox.label = 'grenade explosion'\r\n    World.remove(world, grenadeBody)\r\n    World.add(world, this.explosionHitbox)\r\n    container.removeChild(grenadeGfc)\r\n    delayedCall(.01, () => {\r\n      this.destroy()\r\n    })\r\n  }\r\n  this.destroy = () => {\r\n    World.remove(world, this.explosionHitbox)\r\n    let idx = grenades.indexOf(this)\r\n    if (idx > -1) {\r\n      grenades.splice(idx, 1)\r\n    }\r\n    // world = null\r\n    // container = null\r\n    // gameObjects = null\r\n    // this.explosionHitbox = null\r\n    // grenadeBody = null\r\n    // grenadeGfc = null\r\n  }\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\nimport Grenade from '../items/Grenade'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Clustermine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('clustermine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'clustermine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['clustermine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    let r = 10, fuseTime = 4\r\n    let { gameObjects } = window\r\n    let grenades = gameObjects.getKeyValue('grenades') // can replace with different red or blue \"cluster bomb\" graphics\r\n    delayedCall(.25, () => {\r\n      let { getState } = store\r\n      let num = getState().game.player.perks['cluck'].owned ? 8 : 4\r\n      let xforce = getState().game.player.perks['cluck'].owned ? random.float(-0.02, 0.02) : random.float(-0.01, 0.01)\r\n      let yforce = getState().game.player.perks['cluck'] ? random.float(-0.025, -0.075) : random.float(-0.01, -0.05)\r\n      for (let i = 0; i < num; ++i) {\r\n        delayedCall(.1 * i, () => {\r\n          let nade = new Grenade(\r\n            this.body.position.x,\r\n            this.body.position.y - 50,\r\n            r,\r\n            {\r\n              x: xforce,\r\n              y: yforce\r\n            },\r\n            fuseTime\r\n          )\r\n          grenades.push( nade )\r\n        })\r\n      }\r\n    })\r\n    // above code expels additional cluster grenades \r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'clustermine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","export const barrierTypes = {\r\n  WOOD: 'Wooden',\r\n  STONE: 'Stone',\r\n  METAL: 'Metal',\r\n  EXPLOSIVE: 'Explosive Barrel'\r\n}\r\n\r\nexport const trapTypes = {\r\n  LANDMINE: 'Landmine',\r\n  CLUSTER_BOMB: 'Cluster Bomb',\r\n  REMOTE_MINE: 'Remote Mine',\r\n  TURRET: 'Machine Gun Turret'\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class RemoteMine {\r\n\r\n  constructor(pos, mineNumber) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.buildObjects = gameObjects.getKeyValue('build-objects')\r\n    this.remoteMines = gameObjects.getKeyValue('remote-mines')\r\n    this.remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n    let landmineSheet = gameObjects.getKeyValue('remote-mine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5, { collisionFilter: playerCollisionOptions })\r\n    this.body.label = 'remote mine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['remote-mine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n\r\n    // attach a number to the mine to know which key to press to detonate it\r\n    let txtStyle = { fill: '#00FFFF', fontSize: 12 }\r\n    this.num = new Text(`[ ${mineNumber} ]: detonate`, txtStyle)\r\n    this.num.pivot.x = this.num.width * .5\r\n    this.num.pivot.y = this.num.height * .5\r\n    this.container.addChild(this.num)\r\n    \r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n    this.num.position = { x, y: y - 50 }\r\n  }\r\n\r\n  detonate() {\r\n    this.destroy()\r\n  }\r\n\r\n  updateNumber(num) {\r\n    this.num.text = `[ ${num} ]: detonate`\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      this.container.removeChild(this.num)\r\n      let idx = this.buildObjects.indexOf(this)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n      let ridx = this.remoteMinesArr.indexOf(this)\r\n      if (ridx > -1) {\r\n        this.remoteMinesArr.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { World, Body, Bodies, Vector } from 'matter-js'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS, LESS_THAN_PLAYER_Y_POS } from '../constants/mouseStates'\r\nimport { PISTOL_BULLET_REMOVAL_TIMEOUT, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX,\r\n  WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET, WEAPON_TYPE_SHOTGUN\r\n } from '../constants/weapons'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport { calcBulletAngle, getBodyWidth, getBodyHeight, getPlayerBody, getPlayerPartByType } from '../utils/Utils'\r\nimport { createGenericMessage, createTextMessage } from '../createMessages'\r\nimport { setLastShot, StatsDefs } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { increaseStats } from '../gameSlice'\r\nimport { radians } from 'radians'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const calcPistolDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_PISTOL]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcTurretDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_TURRET]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcSMGDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SMG]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcShotgunDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SHOTGUN]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\n// bullet impact\r\nexport function BulletImpact (surfaceType, position, scale) {\r\n\tlet {x,y} = position\r\n\tlet { gameObjects, TweenLite: { to, set, from } } = window\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n\tWorld.add(world, positionalBody)\r\n\r\n\tlet explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n\tlet smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\tconst getRandomSmokeSprite = () => (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\texplosionAssetsSheet.textures[\r\n\t\t\t\tsmokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n\t\t\t]\r\n\t))\r\n\tlet randInt = 2 //random.int(2, 4)\r\n\tfor (let i = 0; i < randInt; ++i) {\r\n\t\tlet smokeSprite = getRandomSmokeSprite()\r\n\t\tif (surfaceType === 'enemy') {\r\n\t\t\tsmokeSprite.tint = 0xFF0000\r\n\t\t}\r\n\t\tsmokeSprite.pivot.x = smokeSprite.width * .5\r\n\t\tsmokeSprite.pivot.y = smokeSprite.height * .5\r\n\t\tto(smokeSprite, scale && scale.alphaDuration ? scale.alphaDuration : .5, {\r\n\t\t\talpha: 0,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tif (i === randInt - 1) {\r\n\t\t\t\t\tWorld.remove(world, positionalBody)\r\n\t\t\t\t\tworld = null \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet randScale\r\n\t\tif (scale && scale.rand && scale.rand.min && scale.rand.max) {\r\n\t\t\trandScale = random.float(scale.rand.min, scale.rand.max)\r\n\t\t} else {\r\n\t\t\trandScale = random.float(.25, .5)\r\n\t\t}\r\n\t\tset(smokeSprite.scale, {\r\n\t\t\tx: scale && scale.set ? scale.set : .1,\r\n\t\t\ty: scale && scale.set ? scale.set : .1\r\n\t\t})\r\n\t\tto(smokeSprite.scale, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: randScale,\r\n\t\t\ty: randScale\r\n\t\t})\r\n\t\tlet xyval = { x: 0, y: 0 }\r\n\t\tto(xyval, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-10, 10),\r\n\t\t\ty: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-50, 0)\r\n\t\t})\r\n\t\tto(smokeSprite.position, 3, {\r\n\t\t\tonUpdate: () => {\r\n\t\t\t\tif (this.calculatedPosition) {\r\n\t\t\t\t\tsmokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n\t\t\t\t\tsmokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n\t\t\t\t\tif (container && container.children.indexOf(smokeSprite) < 0) {\r\n\t\t\t\t\t\tcontainer.addChild(smokeSprite)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tsmokeSprite.destroy()\r\n\t\t\t\tcontainer = null\r\n\t\t\t\tgameObjects = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tthis.renderPosition = (renderFn) => {\r\n\t\tthis.calculatedPosition = renderFn(positionalBody)\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\n// bullet shell\r\nexport function PistolShell(x, y, gameObjects, changeLabelString, overrideOptions) {\r\n\tlet world, container, shells\r\n\tlet { game: { mouseState, player: { weapons: { equipped, shellEjectionForce, shellRemovalTimeout } } } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!shells) { shells = gameObjects.getKeyValue('pistol-shells') }\r\n\t// matter\r\n\tthis.body = overrideOptions && overrideOptions.body\r\n\t? overrideOptions.body\r\n\t: Bodies.rectangle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 30\r\n      : x - 30\r\n    ,\r\n    mouseState.y === LESS_THAN_PLAYER_Y_POS ? y - 40 : y - 20\r\n    , 7, 4, {\r\n\t\trestitution: 0.75,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.body.label = changeLabelString !== undefined ? `player ${changeLabelString} shell` : 'player pistol shell'\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.body.label = 'shotgun shell'\r\n\t}\r\n\tWorld.add(world, this.body)\r\n\tBody.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.force ? overrideOptions.force : {\r\n\t\tx: mouseState.x === GREATER_THAN_PLAYER_X_POS ? random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max) : random.float(shellEjectionForce[equipped].min, shellEjectionForce[equipped].max),\r\n\t\ty: random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max)\r\n\t})\r\n\tBody.setAngularVelocity(this.body, random.float(-PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, -PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX))\r\n\t// pixi\r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(equipped === WEAPON_TYPE_SHOTGUN ? 0xB00000 : 0xAB931E)\r\n\t// if (!shellWd) {\r\n\t// }\r\n\tlet shellWd = getBodyWidth(this.body)\r\n\tlet shellHt = getBodyHeight(this.body)\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 1)\r\n\t} else {\r\n\t\tif (equipped === WEAPON_TYPE_SMG) {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 2)\r\n\t\t} else {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellWd, shellHt)\r\n\t\t}\r\n\t}\r\n\tthis.gfc.endFill()\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.beginFill(0xCCB64D)\r\n\t\tthis.gfc.drawRect(0, shellWd + 1, shellHt, 3)\r\n\t\t// this.gfc.rotation = radians(45)\r\n\t}\r\n\tif (!window.gameObjects.getKeyValue('bullet-shell-bevel')) {\r\n\t\twindow.gameObjects.setKeyValue('bullet-shell-bevel', new BevelFilter({ lightAlpha: 0.5, shadowAlpha: 0.5 }))\r\n\t}\r\n\tlet filters = [ window.gameObjects.getKeyValue('bullet-shell-bevel') ]\r\n\tthis.gfc.filters = getState().game.filterEffects ? filters : []\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tshells.push(this)\r\n\t// methods\r\n\tthis.destroy = function () {\r\n\t\tcontainer.removeChild(this.gfc)\r\n\t\tWorld.remove(world, this.body)\r\n\t\tthis.body = null\r\n\t\tthis.gfc = null\r\n\t\tshells.splice(shells.indexOf(this), 1)\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t\tshells = null\r\n\t}\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), shellRemovalTimeout[equipped])\r\n\treturn this\r\n}\r\n\r\nexport function PistolBullet(x, y, gameObjects, changeLabelString, overrideOptions, extraDamageBool) {\r\n\tlet world, container\r\n\tlet arm, bullets, bulletWd\r\n\tarm = getPlayerPartByType('arm', gameObjects) \r\n  let { game: { mouseRelativeToPlayerPosition, mouseState } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!bullets) { bullets = gameObjects.getKeyValue('pistol-bullets') }\r\n  this.body = overrideOptions && overrideOptions.overrideBody ? overrideOptions.overrideBody : Bodies.circle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 50\r\n      : x - 50\r\n    ,\r\n    y, 4, {\r\n\t\trestitution: 0.3\r\n  })\r\n\r\n\tthis.body.label = (\r\n\t\textraDamageBool ? 'extra damage bullet'\r\n\t\t:\r\n\t\t\tchangeLabelString !== undefined && changeLabelString !== null ?\r\n\t\t\t`player ${changeLabelString} bullet`\r\n\t\t\t:  'player pistol bullet'\r\n\t)\r\n\tthis.body.main = this\r\n  World.add(world, this.body)\r\n\tBody.setAngle(this.body, overrideOptions && overrideOptions.overrideAngle ? overrideOptions.overrideAngle : Vector.angle(this.body.position, mouseRelativeToPlayerPosition))\r\n  Body.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.overrideForce ? overrideOptions.overrideForce : calcBulletAngle(arm.position, mouseRelativeToPlayerPosition))\r\n\r\n\t// pixi \r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(0xFFFFFF)\r\n\tif (!bulletWd) { bulletWd = getBodyWidth(this.body) }\r\n\tthis.gfc.drawRect(0, 0, bulletWd, (bulletWd/3))\r\n\tthis.gfc.endFill()\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tbullets.push(this)\r\n\t// // add bullet trail\r\n  // let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n\t// this.bulletTrail = new PIXI.Graphics()\r\n\t// this.bulletTrail.lineStyle(\r\n\t// \t2,\r\n\t// \t(\r\n\t// \t\toverrideOptions ? 0xFFFFFF\r\n\t// \t\t:\r\n\t// \t\t\ttier === 1 ? 0xFFFFFF\r\n\t// \t\t\t:\r\n\t// \t\t\t\ttier === 2 ? 0xFFD100\r\n\t// \t\t\t\t:\r\n\t// \t\t\t\t\ttier === 3 ? 0xFF6D00\r\n\t// \t\t\t\t\t:\r\n\t// \t\t\t\t\t\ttier === 4 ? 0xFF0000\r\n\t// \t\t\t\t\t\t: 0xFFFFFF\r\n\t// \t),\r\n\t// \t0.8\r\n\t// )\r\n\t// this.linePoints = []\r\n\t// this.lineDrawn = false\r\n\t// this.drawLine = () => {\r\n\t// \tif (this.lineDrawn === false && getState().game.player.weapons.equipped !== WEAPON_TYPE_SHOTGUN) {\r\n\t// \t\tsetTimeout(() => {\r\n\t// \t\t\tif (this.linePoints) {\r\n\t// \t\t\t\tthis.linePoints.forEach((p, i) => {\r\n\t// \t\t\t\t\tif (this.linePoints[i+1]) {\r\n\t// \t\t\t\t\t\tthis.bulletTrail.moveTo(p.x, p.y)\r\n\t// \t\t\t\t\t\tthis.bulletTrail.lineTo(this.linePoints[i+1].x, this.linePoints[i+1].y)\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t}\r\n\t// \t\t}, 200)\r\n\t// \t\tthis.lineDrawn = true\r\n\t// \t}\r\n\t// }\r\n\t// container.addChild(this.bulletTrail)\r\n\r\n\t// methods\r\n\tthis.addImpactEffect = (surfaceType, pos) => {\r\n\t\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\t\tlet impact = new BulletImpact(surfaceType, pos)\r\n\t\tbulletImpacts.push(impact)\r\n\t}\r\n\r\n\tthis.destroyed = false\r\n\tthis.destroy = function (surfaceType) {\r\n\t\tif (!this.destroyed) {\r\n\t\t\tlet bulletLastPos = this.body.position\r\n\t\t\tthis.destroyed = true\r\n\t\t\tcontainer.removeChild(this.gfc)\r\n\t\t\tcontainer.removeChild(this.bulletTrail)\r\n\t\t\tWorld.remove(world, this.body)\r\n\t\t\tthis.linePoints = null\r\n\t\t\tthis.body = null\r\n\t\t\tthis.gfc = null\r\n\t\t\tif (bullets.indexOf(this) > -1) {\r\n\t\t\t\tbullets.splice(bullets.indexOf(this), 1)\r\n\t\t\t}\r\n\t\t\tif (surfaceType) {\r\n\t\t\t\t// add bullet collision impact effect depending on the surface hit\r\n\t\t\t\tthis.addImpactEffect(surfaceType, bulletLastPos)\r\n\t\t\t}\r\n\t\t\tworld = null\r\n\t\t\tcontainer = null\r\n\t\t\tgameObjects = null \r\n\t\t}\r\n\t}\r\n\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), PISTOL_BULLET_REMOVAL_TIMEOUT)\r\n\treturn this\r\n}\r\n\r\nconst fireEquippedWeapon = (gameObjects) => {\r\n\tlet world, weaponsUI, player, playerBody, playerBodyWd, playerBodyHt, arm\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n  if (!weaponsUI) { weaponsUI = gameObjects.getKeyValue('weapons-ui') }\r\n  if (!player) { player = gameObjects.getKeyValue('player') }\r\n\tlet { game: { player: { weapons: { lastShot, totalAmmo, equipped, shotLimiter } } } } = getState()\r\n\tif (JSON.parse(lastShot[equipped]) + shotLimiter[equipped] < Date.now() && !weaponsUI.checkEmpty(equipped) && !weaponsUI.reloading && totalAmmo[equipped] > 0) {\r\n\t\tdispatch( setLastShot(equipped, JSON.stringify(Date.now())) )\r\n\t\tdispatch( increaseStats( StatsDefs.bulletsFired ) )\r\n    weaponsUI.fireBullet(equipped)\r\n    player.fireWeaponAnimation()\r\n\t\tif (!playerBody) { playerBody = getPlayerBody(gameObjects) }\r\n\t\tif (!playerBodyWd) { playerBodyWd = getBodyWidth(playerBody) }\r\n\t\tif (!playerBodyHt) { playerBodyHt = getBodyHeight(playerBody) }\r\n\t\tif (!arm) { arm = getPlayerPartByType('arm', gameObjects) }\r\n\t\tlet extraDmg = (\r\n\t\t\tweaponsUI.lastBulletByWepType[equipped] && getState().game.player.perks['lastBullet'].owned ? true : false\r\n\t\t)\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tnew PistolShell(0, 0, gameObjects, null, {\r\n\t\t\t\tbody: Bodies.rectangle(playerBody.position.x, arm.position.y, 10, 4, { collisionFilter: playerCollisionOptions })\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tnew PistolShell(playerBody.position.x, arm.position.y, gameObjects, (\r\n\t\t\t\tequipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined\r\n\t\t\t))\r\n\t\t}\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\t\tnew PistolBullet(arm.position.x, arm.position.y, gameObjects, 'shotgun', extraDmg)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnew PistolBullet(\r\n\t\t\t\tarm.position.x,\r\n\t\t\t\tarm.position.y,\r\n\t\t\t\tgameObjects,\r\n\t\t\t\t(equipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined),\r\n\t\t\t\tnull,\r\n\t\t\t\textraDmg\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tworld = null \r\n\t\tweaponsUI = null\r\n\t\tplayer = null\r\n\t\tplayerBody = null\r\n\t\tplayerBodyWd = null\r\n\t\tplayerBodyHt = null\r\n\t\tarm = null \r\n\r\n\t} else if (totalAmmo[equipped] === 0 && getState().game.showingMessage === false) {\r\n\t\t// createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n\t\t// make click noise or some other indicator\r\n\t\tif (!weaponsUI.shaking) {\r\n\t\t\tweaponsUI.changeTextForEmptyShake('EMPTY')\r\n\t\t\tweaponsUI.emptyMagShake()\r\n\t\t}\r\n\t} else if (weaponsUI.checkEmpty(equipped) && getState().game.showingMessage === false) {\r\n\t\tif (!weaponsUI.reloading) {\r\n\t\t\t// createGenericMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// createTextMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// make empty mag sound or shake weapon UI\r\n\t\t\tif (!weaponsUI.shaking) {\r\n\t\t\t\tweaponsUI.changeTextForEmptyShake('RELOAD')\r\n\t\t\t\tweaponsUI.emptyMagShake()\r\n\t\t\t}\r\n    }\r\n\t}\r\n}\r\n\r\nexport const firePistol = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireSMG = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireShotgun = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n","import random from 'random'\r\nimport * as PIXI from 'pixi.js'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport store from '../../../app/store'\r\n\r\nexport default class MuzzleFlashFX {\r\n\r\n  constructor() {\r\n    let { gameObjects } = window\r\n    this.to = window.TweenLite.to\r\n    this.set = window.TweenLite.set\r\n    let container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.container = container\r\n    let muzzleFlashesSheet = gameObjects.getKeyValue('muzzle-flashes-sheet')\r\n    let muzzleFlash001 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash1.png']\r\n    )\r\n    let muzzleFlash002 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash2.png']\r\n    )\r\n    let muzzleFlash003 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash3.png']\r\n    )\r\n    let muzzleFlash004 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash4.png']\r\n    )\r\n    let muzzleFlash005 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash5.png']\r\n\t\t)\r\n\t\tlet muzzleFlashes = [\r\n\t\t\tmuzzleFlash001,\r\n\t\t\tmuzzleFlash002,\r\n\t\t\tmuzzleFlash003,\r\n\t\t\tmuzzleFlash004,\r\n\t\t\tmuzzleFlash005\r\n\t\t]\r\n    container.addChild(muzzleFlash001)\r\n    container.addChild(muzzleFlash002)\r\n    container.addChild(muzzleFlash003)\r\n    container.addChild(muzzleFlash004)\r\n    container.addChild(muzzleFlash005)\r\n    muzzleFlash001.visible = false\r\n    muzzleFlash002.visible = false\r\n    muzzleFlash003.visible = false\r\n    muzzleFlash004.visible = false\r\n    muzzleFlash005.visible = false\r\n    // muzzle fire FX \r\n    this.muzzleScale = .65\r\n    this.blurFilter = new PIXI.filters.BlurFilter()\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n    this.blurFilter.quality = 5\r\n    this.glowFilter = new GlowFilter()\r\n    this.glowFilter.innerStrength = 0.1\r\n    this.glowFilter.outerStrength = random.float(1.0, 1.5)\r\n    // this.glowFilter.color = 0xFFFFFF\r\n    this.adjustmentFilter = new AdjustmentFilter()\r\n    this.adjustmentFilter.brightness = 2.0\r\n    this.adjustmentFilter.saturation = 2.0\r\n    this.flashes = []\r\n    muzzleFlashes.forEach(flash => {\r\n      flash.updateAnchor = true\r\n      flash.scale = { x: this.muzzleScale, y: this.muzzleScale }\r\n      flash.filters = store.getState().game.filterEffects ? [\r\n        this.blurFilter,\r\n        this.adjustmentFilter,\r\n        this.glowFilter\r\n      ] : []\r\n      this.flashes.push( flash )\r\n    })\r\n  }\r\n\r\n  get muzzleScale () {\r\n    return this._muzzleScale\r\n  }\r\n\r\n  set muzzleScale (scale) {\r\n    this._muzzleScale = scale\r\n  }\r\n\r\n  fireEffect(pos) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let randFlash = this.getRandomFlash()\r\n    randFlash.visible = true\r\n    if (pos) {\r\n      randFlash.position = pos\r\n    }\r\n    if (store.getState().game.filterEffects) {\r\n      this.adjustmentFilter.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      this.glowFilter.color = (\r\n        tier === 1 ? 0xFFF500\r\n          :\r\n            tier === 2 ? 0xFFD100\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF3800\r\n                : 0xFFFFFF\r\n      )\r\n    }\r\n    randFlash.filters = store.getState().game.filterEffects ? [\r\n      this.glowFilter,\r\n      this.adjustmentFilter,\r\n      this.blurFilter\r\n    ] : []\r\n    this.container.addChild( randFlash )\r\n    this.set(randFlash, { alpha: 1 })\r\n    this.set(randFlash.scale, { x: this.muzzleScale })\r\n    this.to(randFlash, .1, { alpha: 0 })\r\n    this.to(randFlash.scale, .1, { x: this.muzzleScale * 2, onComplete: () => {\r\n      randFlash.visible = false\r\n    }})\r\n  }\r\n\r\n  setMuzzleRotations(rotation) {\r\n    this.flashes.forEach(flash => {\r\n      flash.rotation = rotation\r\n    })\r\n    this.rotation = rotation\r\n  }\r\n\r\n  getRandomBlur() {\r\n    return random.float(0.5, 4.0)\r\n  }\r\n\r\n  changeBlurAmount() {\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n  }\r\n\r\n  getFlashes() {\r\n    return this.flashes\r\n  }\r\n\r\n  getRandomFlash() {\r\n    return this.flashes[ Math.floor( Math.random() * this.flashes.length) ]\r\n  }\r\n\r\n}","import { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { Bodies, World, Constraint } from 'matter-js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { PistolShell, PistolBullet } from '../player/fireWeapons'\r\nimport { radians, degrees } from 'radians'\r\nimport { getBodyHeight, getBodyWidth } from '../utils/Utils'\r\nimport store from '../../../app/store'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport random from 'random'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class MachineGunTurret {\r\n\r\n  constructor(position) {\r\n    let {x,y} = position\r\n    this.delayedCall = window.TweenLite.delayedCall\r\n    this.gameObjects = window.gameObjects\r\n    this.world = this.gameObjects.getKeyValue('world')\r\n    this.buildObjects = this.gameObjects.getKeyValue('build-objects')\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    this.scanAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-scan-sheet').animations['turretScan']\r\n    )\r\n    this.scanAnim.visible = true\r\n    this.scanAnim.loop = true\r\n    this.scanAnim.play()\r\n    this.shootAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-shoot-sheet').animations['turretShoot']\r\n    )\r\n    this.shootAnim.loop = false\r\n    this.shootAnim.onFrameChange = () => {\r\n      // if (this.shootAnim.currentFrame === 2) {\r\n      //   this.fireBullet()\r\n      // }\r\n    }\r\n    this.shootAnim.onComplete = () => {\r\n      this.shootAnim.gotoAndStop(0)\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n    this.shootAnim.visible = false\r\n    this.scanAnim.width = 150\r\n    this.scanAnim.height = 150\r\n    this.scanAnim.pivot.x = this.scanAnim.width * .5\r\n    this.scanAnim.pivot.y = this.scanAnim.height\r\n    this.shootAnim.width = 150\r\n    this.shootAnim.height = 150\r\n    this.shootAnim.pivot.x = this.shootAnim.width * .5\r\n    this.shootAnim.pivot.y = this.shootAnim.height\r\n    this.turret = new Container()\r\n    this.turret.addChild(this.scanAnim, this.shootAnim)\r\n    this.container.addChild(this.turret)\r\n\r\n    this.turret.children.forEach(child => {\r\n    })\r\n\r\n    this.body = Bodies.rectangle(x, y, 50, 50, {\r\n      label: 'turret barrier',\r\n      main: this\r\n    })\r\n    this.body.removeSelf = () => {\r\n      this.destroy()\r\n    }\r\n    let ground = this.gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + position.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n    \r\n    this.body.strength = 250\r\n    this.healthDisplay = new Text(`health: ${this.body.strength}`, { fontSize: 12, fill: 0xFFFFFF })\r\n    this.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n    this.container.addChild(this.healthDisplay)\r\n\r\n    this.direction = 'right'\r\n\r\n    // re-add player sprites on-top\r\n    let player = this.gameObjects.getKeyValue('player')\r\n    if (!player.dead) {\r\n      player.sprites.forEach(s => { this.container.addChild(s) })\r\n    }\r\n\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  takeDamage(dmg) {\r\n    this.body.strength -= dmg\r\n    this.healthDisplay.text = `health: ${this.body.strength}`\r\n  }\r\n\r\n  displayBarrierStrength(renderFn) {\r\n    let {x,y} = renderFn(this.body)\r\n    this.healthDisplay.position = { x, y: y - 100 }\r\n    this.turret.position = { x, y }\r\n  }\r\n\r\n  updateDirection(direction) {\r\n    this.turret.scale.x = direction === 'left' ? -1 : 1\r\n    this.direction = direction\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  resumeScan() {\r\n    if (!this.scanning) {\r\n      this.scanning = true\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n  }\r\n\r\n  fireBullet() {\r\n    if (!this.destroyed) {\r\n      if (!this.muzzleFlashFX) {\r\n        this.muzzleFlashFX = new MuzzleFlashFX()\r\n        this.muzzleFlashFX.setMuzzleRotations(this.direction === 'left' ? degrees(-92) : degrees(92))\r\n      }\r\n      // fire bullet\r\n      let { game: { player: { weapons: { bulletForce } } } } = store.getState()\r\n      let { x, y } = this.body.position\r\n      this.muzzleFlashFX.fireEffect(\r\n        this.direction == 'left'\r\n        ? { x: this.turret.position.x - 100, y: this.turret.position.y - 25 }\r\n        : { x: this.turret.position.x + 100, y: this.turret.position.y - 25  }\r\n      )\r\n      let overrideBody = Bodies.circle(x, y - 25, 5)\r\n      let _ejectY = random.float(-0.0005, -0.00075)\r\n      new PistolShell(0, 0, this.gameObjects, null, {\r\n        body: Bodies.rectangle(x, y - 50, 7, 4, { collisionFilter: playerCollisionOptions }),\r\n        force: this.direction === 'right' ?\r\n        {\r\n          \"x\": random.float(-0.00035, -0.00075),\r\n          \"y\": _ejectY\r\n        } : {\r\n          \"x\": random.float(0.00035, 0.00075),\r\n          \"y\": _ejectY\r\n        },\r\n      })\r\n      new PistolBullet(0, 0, this.gameObjects, 'turret', {\r\n        overrideBody,\r\n        overrideForce: this.direction === 'left' ?\r\n        {\r\n          \"x\": -0.01,\r\n          \"y\": -0.00075\r\n        } : {\r\n          \"x\": 0.01,\r\n          \"y\": -0.00075\r\n        },\r\n        overrideAngle: this.direction === 'left' ? -3.0 : 0.1\r\n      })\r\n    }\r\n  }\r\n\r\n  shoot() {\r\n    if (!this.shooting && !this.destroyed) {\r\n      let { game: { traps: { turret: { cooldown } } } } = store.getState()\r\n      this.fireBullet()\r\n      this.shooting = true\r\n      this.scanAnim.visible = false\r\n      this.shootAnim.visible = true\r\n      this.shootAnim.play()\r\n      this.delayedCall(cooldown, () => {\r\n        this.shooting = false\r\n      })\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      new GrenadeExplosion(this.body.position, true)\r\n      this.container.removeChild(this.turret, this.healthDisplay)\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      let idx = this.buildObjects.indexOf(this, 1)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { AnimatedSprite } from 'pixi.js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Spark {\r\n\r\n  constructor (type, renderBody, options) {\r\n    let spark1 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('sparks-sheet').animations['spark-particle']\r\n    )\r\n    let spark2 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('muzzle-sparks-sheet').animations['muzzleSparks']\r\n    )\r\n    let sparks = [ spark1, spark2 ]\r\n    sparks.forEach(spark => {\r\n      let scale = options && options.scale ? options.scale : 1.0\r\n      if (scale !== 1.0) {\r\n        spark.scale.x = scale\r\n        spark.scale.y = scale\r\n      }\r\n      spark.pivot.x = spark.width  * .5\r\n      spark.pivot.y = spark.height * .5\r\n      spark.loop = false\r\n      spark.animationSpeed = options && options.animationSpeed ? options.animationSpeed : 1.0\r\n      spark.onComplete = () => {\r\n        this.container.removeChild(spark)\r\n        this.container = null\r\n        spark = null\r\n        spark1 = null\r\n        spark2 = null\r\n        sparks = null\r\n      }\r\n    })\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    switch (type) {\r\n      case 1:\r\n        this.spark = spark1\r\n        if (options && options.tint) {\r\n          this.spark.tint = options.tint\r\n        }\r\n        break;\r\n      case 2:\r\n        this.spark = spark2\r\n        this.blurFilter = new PIXI.filters.BlurFilter(random.float(0.5, 0.75), 5)\r\n        this.adjFilter = new AdjustmentFilter()\r\n        this.glowFilter = new GlowFilter()\r\n        this.adjFilter.saturation = 2.0\r\n        this.adjFilter.brightness = 1.5\r\n        // glowFilter.outerStrength = 1.0\r\n        this.glowFilter.color = 0xFFFFFF //0xFFD100 //0xFF9C00 //0xFFFFFF\r\n        this.filters = store.getState().game.filterEffects ? [\r\n          this.blurFilter,\r\n          this.adjFilter,\r\n          this.glowFilter\r\n        ] : []\r\n        this.spark.filters = this.filters\r\n        break;\r\n        default:\r\n    }\r\n    if (options && options.scale) {\r\n      let sparkContainer = new PIXI.Container()\r\n      this.spark.scale.x = options.scale\r\n      this.spark.scale.y = options.scale\r\n      sparkContainer.addChild(this.spark)\r\n      sparkContainer.pivot.x = sparkContainer.width * (options.scale * .5)\r\n      sparkContainer.pivot.y = sparkContainer.height * (options.scale * .5)\r\n      this.spark = sparkContainer\r\n    }\r\n\r\n    this.renderBody = renderBody\r\n    if (!options || (options && !options.stop)) {\r\n      if (this.spark.play) {\r\n        this.spark.play()\r\n      }\r\n      if (this.spark.children && this.spark.children[0]) {\r\n        this.spark.children[0].play()\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  getFilters() {\r\n    return {\r\n      glow: this.glowFilter,\r\n      adjust: this.adjFilter,\r\n      blur: this.blurFilter\r\n    }\r\n  }\r\n\r\n  updateFilters(filters) {\r\n    this.filters = filters\r\n    this.spark.filters = this.filters\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.spark.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.spark) === -1) {\r\n        this.container.addChild(this.spark)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { CustomMenuButton, Inline } from './ShopMenu'\r\nimport { gameStateTransition, incrementWave } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nposition: absolute;\r\nmargin: auto;\r\ntop: 40px;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nbackground-color: #222;\r\nopacity: .5;\r\n`\r\n\r\nexport const nextWave = () => {\r\n  let { dispatch, getState } = store\r\n  let { waveNum:wave, lvlToWin, gameState, gameSubState } = getState().game\r\n  let screenUI = window.gameObjects.getKeyValue('screen-ui')\r\n  if (wave < lvlToWin) {\r\n    screenUI.unpause()\r\n    dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  } else {\r\n    alert('You win!')\r\n  }\r\n}\r\n\r\nexport default function ShopQuery () {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const wave = useSelector(state => state.game.waveNum)\r\n  const lvlToWin = useSelector(state => state.game.lvlToWin)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  \r\n  const gotoShop = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.SHOP_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n  \r\n  const gotoBuildMenu = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoShop }>Shop</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoBuildMenu }>Build Barriers/Traps</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n          <MenuButtonSpacer padding={2}>\r\n            <CustomMenuButton width={400} height={40} onClick={ nextWave }>\r\n              {\r\n                wave < lvlToWin ? 'Next Wave' : 'Submit your score!'\r\n              }\r\n            </CustomMenuButton>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { degrees } from 'radians'\r\nimport { World, Body, Bodies, Constraint, Composite, Vector } from 'matter-js'\r\nimport { setMousePosition, setPlayerCompositeId, setKeyPress,\r\n\tremoveKeyPress, setJumping, setMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot, setWeaponEquipped, setCompositeBodyIds, decrementGrenadeCount,\r\n   gameStateTransition, unsetAllKeys, resetPlayerVariables, addToTotalAmmo, addToTotalCredits,\r\n   updatePlayerHealth, subtractFromTotalCredits, setRightMouseDown, setLastMagDropped, increaseStats, StatsDefs, setAchievementOwned, AchievementDefs, setBarrierTypePlaced, setTrapTypePlaced, increaseStatsByAmount } from '../gameSlice'\r\nimport { getPlayerBody, getPlayerComposite, getBodyWidth, getBodyHeight, makePixiSprite } from '../utils/Utils'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS,\r\n\tLESS_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_Y_POS,\r\n\tMOUSE_DOWN, MOUSE_UP } from '../constants/mouseStates'\r\nimport { WEAPON_TYPE_GRENADE, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { batch } from 'react-redux'\r\nimport { createTextMessage } from '../createMessages'\r\nimport PlayerRagdoll, { PlayerRagdollHalved, PlayerRagdollDecap, PlayerRagdollMaim } from './PlayerRagdoll'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { KILLED_BY_ZOMBIE, FELL_OFF } from '../constants/DeathTypes'\r\nimport { calcGrenadeAngle } from '../utils/Utils'\r\nimport WallBarrier from '../BuildItems/WallBarrier'\r\nimport random from 'random'\r\nimport Landmine from '../BuildItems/Landmine'\r\nimport Grenade from '../items/Grenade'\r\nimport Clustermine from '../BuildItems/Clustermine'\r\nimport { trapTypes } from '../constants/buildTypes'\r\nimport RemoteMine from '../BuildItems/RemoteMine'\r\nimport MachineGunTurret from '../BuildItems/MachineGunTurret'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport Spark from '../FX/Sparks'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { Howl, Howler } from 'howler'\r\nimport { updateScore, subtractScore } from '../utils/updateScore'\r\nimport { nextWave } from '../ReactComponents/ShopQuery'\r\n\r\nexport class EnhancedMuzzleSpark {\r\n  constructor(renderBody) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let to = window.TweenLite.to\r\n    let gameObjects = window.gameObjects\r\n    let muzzleSpark = new Spark(2, renderBody)\r\n    let sparks = gameObjects.getKeyValue('spark-sprites')\r\n    muzzleSpark.spark.scale.x = .5 //random.float(.5, 1.0)\r\n    muzzleSpark.spark.scale.y = .5\r\n    sparks.push( muzzleSpark )\r\n    muzzleSpark.spark.gotoAndPlay( random.int(10, 15) )\r\n    if (store.getState().game.filterEffects) {\r\n      let { adjust, glow, blur } = muzzleSpark.getFilters()\r\n      adjust.brightness = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          : \r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 3.5\r\n              : 1.0\r\n      )\r\n      adjust.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      glow.color = (\r\n        tier === 1 ? 0xFFFFFF\r\n          :\r\n            tier === 2 ? 0xFFF500\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF6D00\r\n                : 0xFFFFFF\r\n      )\r\n      muzzleSpark.updateFilters([ glow, blur, adjust ])\r\n    }\r\n\r\n    to(muzzleSpark.spark.scale, .1, { x: 0.55, y: 0.55 })\r\n    return muzzleSpark\r\n  }\r\n}\r\n\r\nexport default function Player() {\r\n\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet { getState, dispatch } = store\r\n\tlet { game: { width: gameWidth, height: gameHeight, player: { constants: { width: wd, height: ht } } } } = getState()\r\n\tlet { TweenLite } = window\r\n\tlet { delayedCall, to, from, set } = TweenLite\r\n\r\n\tthis.body = Bodies.rectangle(400, 200, wd, ht, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.arm = Bodies.rectangle(400, 200, 30, 15, {\r\n\t\tfriction: 0,\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n  })\r\n  // this.armPointBody = Bodies.rectangle(400, 200, 10, 10, {\r\n  //   friction: 0,\r\n  //   inertia: Infinity,\r\n  //   collisionFilter: playerCollisionOptions\r\n  // })\r\n  // this.armPoint = Constraint.create({\r\n  //   bodyA: this.arm,\r\n  //   bodyB: this.armPointBody,\r\n  //   pointA: { x: -60, y: 0 },\r\n  //   pointB: { x: 0, y: 0 },\r\n  //   length: 0,\r\n  //   // stiffness: 1\r\n  // })\r\n\tthis.armAttach = Constraint.create({\r\n\t\tbodyA: this.arm,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 12, y: 0 },\r\n\t\tpointB: { x: 0, y: -80 },\r\n\t\tlength: 0\r\n\t})\r\n\t// head\r\n\tthis.head = Bodies.rectangle(400, 200, 20, 24, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.headAttach = Constraint.create({\r\n\t\tbodyA: this.head,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 0, y: 10 },\r\n\t\tpointB: { x: 0, y: -((ht/2) + 5) },\r\n\t\tlength: 0\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n\t\t// bodies\r\n\t\tthis.body,\r\n\t\tthis.arm,\r\n\t\tthis.head,\r\n\t\t// constraints\r\n\t\t// this.armPoint,\r\n\t\tthis.armAttach,\r\n\t\tthis.headAttach\r\n\t])\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.label = 'player character'\r\n\t\tbody.main = this\r\n\t})\r\n\tdispatch(setPlayerCompositeId(this.composite.id))\r\n\tdispatch(setCompositeBodyIds({\r\n\t\tbodyId: this.body.id,\r\n\t\theadId: this.head.id,\r\n\t\tarmId: this.arm.id\r\n  }))\r\n  dispatch(\r\n    setLastMagDropped( JSON.stringify(Date.now()) )\r\n  )\r\n\r\n\tthis.composite.body = this.body\r\n\tthis.composite.arm = this.arm\r\n\r\n\tWorld.add(world, this.composite)\r\n\r\n\tdispatch( setLastShot(WEAPON_TYPE_PISTOL, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SMG, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SHOTGUN, JSON.stringify(Date.now())) )\r\n\r\n\t// create player lifebar UI\r\n\tthis.life = 100\r\n  \r\n\tlet lifebarOutline = new PIXI.Graphics()\r\n\tlifebarOutline.lineStyle(1.0, 0x202D0A)\r\n\tlifebarOutline.drawRect(0, 0, gameWidth * .75, 12)\r\n  container.addChild(lifebarOutline)\r\n\r\n  let lifebarGreen = 0x00FA9A\r\n  let damageRed = 0xDD0E0E\r\n\tlet lifebar = new PIXI.Graphics()\r\n  lifebar.beginFill(0xFFFFFF)\r\n  lifebar.tint = lifebarGreen\r\n  lifebar.drawRect(0, 0, (gameWidth * .75) - 2, 10)\r\n  let bevel = new BevelFilter({ thickness: 5, lightAlpha: .5, lightColor: 0xffffff, shadowAlpha: .4, shadowColor: 0x0 })\r\n  lifebar.filters = getState().game.filterEffects ? [ bevel ] : []\r\n\tcontainer.addChild(lifebar)\r\n\tthis.initialLifebarWidth = lifebar.width\r\n\r\n\tlifebarOutline.position.x = 50\r\n\tlifebarOutline.position.y = gameHeight - 60\r\n\tlifebar.position.x = lifebarOutline.position.x + 1\r\n  lifebar.position.y = lifebarOutline.position.y + 1\r\n  let lifebarDefaultPosition = lifebar.position\r\n\r\n  //-- Reloading weapons\r\n  // this.reloading = false\r\n  // reload pistol anim\r\n  let charReloadPistolSpritesheet = gameObjects.getKeyValue('char-reload-pistol-sheet')\r\n  let charReloadPistolSprite = new PIXI.AnimatedSprite(charReloadPistolSpritesheet.animations['char_reload_pistol'])\r\n  charReloadPistolSprite.loop = false\r\n  charReloadPistolSprite.animationSpeed = .5\r\n  charReloadPistolSprite.updateAnchor = true\r\n  charReloadPistolSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadPistolSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadPistolSprite.visible = false\r\n  charReloadPistolSprite.onComplete = () => {\r\n    charReloadPistolSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadPistolSprite)\r\n\r\n  // reload smg anim\r\n  let charReloadSMGSpritesheet = gameObjects.getKeyValue('char-reload-smg-sheet')\r\n  let charReloadSMGSprite = new PIXI.AnimatedSprite(charReloadSMGSpritesheet.animations['char_reload_smg'])\r\n  charReloadSMGSprite.loop = false\r\n  charReloadSMGSprite.animationSpeed = .5\r\n  charReloadSMGSprite.updateAnchor = true\r\n  charReloadSMGSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadSMGSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadSMGSprite.visible = false\r\n  charReloadSMGSprite.onComplete = () => {\r\n    charReloadSMGSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadSMGSprite)\r\n  \r\n  // reload shotgun anim\r\n  let charReloadShotgunSpritesheet = gameObjects.getKeyValue('char-reload-shotgun-sheet')\r\n  let charReloadShotgunSprite = new PIXI.AnimatedSprite(charReloadShotgunSpritesheet.animations['shotgunReload'])\r\n  charReloadShotgunSprite.loop = false\r\n  charReloadShotgunSprite.animationSpeed = .5\r\n  charReloadShotgunSprite.updateAnchor = true\r\n  charReloadShotgunSprite.pivot.x = charReloadShotgunSprite.width * .725\r\n  charReloadShotgunSprite.pivot.y = charReloadShotgunSprite.height * .5\r\n  charReloadShotgunSprite.visible = false\r\n  this.shotgunShellLoadIterations = 0\r\n  this.gotoToEndOfShotgunReload = true\r\n  charReloadShotgunSprite.onComplete = () => {\r\n    charReloadShotgunSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n    this.shotgunShellLoadIterations = 0\r\n    this.gotoToEndOfShotgunReload = true\r\n  }\r\n  container.addChild(charReloadShotgunSprite)\r\n\r\n  this.reloadAnimsByType = {\r\n    'pistol weapon': charReloadPistolSprite,\r\n    'smg weapon': charReloadSMGSprite,\r\n    'shotgun weapon': charReloadShotgunSprite\r\n  }\r\n\r\n  this.reloadAnims = [\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite\r\n  ]\r\n\r\n  //-- Melee anims\r\n  let motionBlur = new MotionBlurFilter()\r\n  motionBlur.kernelSize = 5\r\n  motionBlur.velocity.x = 30\r\n  motionBlur.velocity.y = 40\r\n  // pistol melee\r\n  let meleePistolSpritesheet = gameObjects.getKeyValue('melee-pistol-sheet')\r\n  let meleePistolAnim = new PIXI.AnimatedSprite(meleePistolSpritesheet.animations['melee_pistol'])\r\n  meleePistolAnim.loop = false\r\n  meleePistolAnim.animationSpeed = .75\r\n  meleePistolAnim.updateAnchor = true\r\n  meleePistolAnim.pivot.x = meleePistolAnim.width * .5\r\n  meleePistolAnim.pivot.y = meleePistolAnim.height * .5\r\n  meleePistolAnim.visible = false\r\n  meleePistolAnim.onComplete = () => {\r\n    meleePistolAnim.gotoAndStop(0)\r\n    meleePistolAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleePistolAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleePistolAnim.currentFrame > 12 && meleePistolAnim.currentFrame < 15) {\r\n      meleePistolAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleePistolAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleePistolAnim)\r\n  \r\n  // ump melee\r\n  let meleeUMPSpritesheet = gameObjects.getKeyValue('melee-ump-sheet')\r\n  let meleeUMPAnim = new PIXI.AnimatedSprite(meleeUMPSpritesheet.animations['melee_ump'])\r\n  meleeUMPAnim.loop = false\r\n  meleeUMPAnim.animationSpeed = .75\r\n  meleeUMPAnim.updateAnchor = true\r\n  meleeUMPAnim.pivot.x = meleeUMPAnim.width * .5\r\n  meleeUMPAnim.pivot.y = meleeUMPAnim.height * .5\r\n  meleeUMPAnim.visible = false\r\n  meleeUMPAnim.onComplete = () => {\r\n    meleeUMPAnim.gotoAndStop(0)\r\n    meleeUMPAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeUMPAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeUMPAnim.currentFrame > 11 && meleeUMPAnim.currentFrame < 14) {\r\n      meleeUMPAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeUMPAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeUMPAnim)\r\n\r\n  // shotgun melee\r\n  let meleeShotgunSpritesheet = gameObjects.getKeyValue('melee-shotgun-sheet')\r\n  let meleeShotgunAnim = new PIXI.AnimatedSprite(meleeShotgunSpritesheet.animations['meleeShotgun'])\r\n  meleeShotgunAnim.loop = false\r\n  meleeShotgunAnim.animationSpeed = .5\r\n  meleeShotgunAnim.updateAnchor = true\r\n  meleeShotgunAnim.pivot.x = meleeShotgunAnim.width * .75\r\n  meleeShotgunAnim.pivot.y = meleeShotgunAnim.height * .5\r\n  meleeShotgunAnim.visible = false\r\n  meleeShotgunAnim.onComplete = () => {\r\n    meleeShotgunAnim.gotoAndStop(0)\r\n    meleeShotgunAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeShotgunAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeShotgunAnim.currentFrame > 6 && meleeShotgunAnim.currentFrame < 9) {\r\n      meleeShotgunAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeShotgunAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeShotgunAnim)\r\n\r\n  this.meleeSprites = [\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim\r\n  ]\r\n\r\n  //-- Grenade throws \r\n  this.grenadeThrowInProgress = false\r\n  this.grenadeForce = { x: 0.001, y: 0.001 }\r\n  this.chargingGrenade = false\r\n  this.chargeGrenade = () => {\r\n    this.chargeGrenadeSound = gameObjects.getKeyValue('charging-grenade-sound')\r\n    if (this.chargeGrenadeSound && !this.chargingGrenade) {\r\n      this.chargeGrenadeSound.play()\r\n    }\r\n    container.addChild(this.meter)\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.chargingGrenade = true\r\n    if (this.grenadeForce.x <= this.grenadeUpperForceThreshold) {\r\n      this.grenadeForce.x += this.grenadeChargeRate\r\n      this.grenadeForce.y += this.grenadeChargeRate\r\n    }\r\n  }\r\n\r\n  const createGrenadeChargeMeter = () => {\r\n    this.meter = new PIXI.Graphics()\r\n    this.meter.beginFill(0xffa23f)\r\n    this.meter.drawRect(0, 0, 100, 10)\r\n    container.addChild(this.meter)\r\n  }\r\n  createGrenadeChargeMeter()\r\n\r\n  this.renderGrenadeChargeMeter = renderFn => {\r\n    let { x, y } = renderFn(this.body)\r\n    this.grenadeUpperForceThreshold = getState().game.player.weapons.grenadeUpperForceThreshold\r\n    if (this.meter && this.chargingGrenade) {\r\n      this.meter.position.x = x - this.meter.width/2\r\n      this.meter.position.y = y - getBodyHeight(this.body) * .75\r\n      this.meter.width = this.grenadeForce.x/this.grenadeUpperForceThreshold * 100\r\n    } else {\r\n      this.meter.width = 0\r\n    }\r\n  }\r\n  \r\n  this.createGrenade = () => {\r\n    let r = 8\r\n    let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.updateGrenadeIcons()\r\n    let grenades = gameObjects.getKeyValue('grenades')\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.calculatedGrenadeForce = calcGrenadeAngle(this.arm.position, getState().game.mouseRelativeToPlayerPosition, this.grenadeForce)\r\n    grenades.push(\r\n      new Grenade(\r\n        getState().game.mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) : this.body.position.x - getBodyWidth(this.body),\r\n        this.body.position.y - (getBodyHeight(this.body)/2),\r\n        r,\r\n        this.calculatedGrenadeForce\r\n      )\r\n    )\r\n    this.grenadeForce = { x: 0.001, y: 0.001 }\r\n    this.chargingGrenade = false\r\n  }\r\n\r\n  this.throwGrenade = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (grenadeThrowPistolAnim.currentFrame < 1) {\r\n          grenadeThrowPistolAnim.visible = true\r\n          grenadeThrowPistolAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (grenadeThrowUMPAnim.currentFrame < 1) {\r\n          grenadeThrowUMPAnim.visible = true\r\n          grenadeThrowUMPAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (grenadeThrowShotgunAnim.currentFrame < 1) {\r\n          grenadeThrowShotgunAnim.visible = true\r\n          grenadeThrowShotgunAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n    }\r\n    if (!this.grenadeThrowInProgress) {\r\n      if (this.chargeGrenadeSound) {\r\n        this.chargeGrenadeSound.stop()\r\n      }\r\n      delayedCall(.2, () => {\r\n        let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n        _throw.play()\r\n        this.createGrenade()\r\n      })\r\n      this.chargingGrenade = false\r\n      this.grenadeThrowInProgress = true\r\n      if (attacks[equipped]) {\r\n        attacks[equipped]()\r\n        batch(() => {\r\n          dispatch( decrementGrenadeCount() )\r\n          dispatch( increaseStats( StatsDefs.grenadesThrown ) )\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // pistol equpped - 'nade throw\r\n  let grenadeThrowPistolSpritesheet = gameObjects.getKeyValue('grenade-pistol-sheet')\r\n  let grenadeThrowPistolAnim = new PIXI.AnimatedSprite(grenadeThrowPistolSpritesheet.animations['grenade_throw_pistol'])\r\n  grenadeThrowPistolAnim.loop = false\r\n  grenadeThrowPistolAnim.animationSpeed = 1.00\r\n  grenadeThrowPistolAnim.updateAnchor = true\r\n  grenadeThrowPistolAnim.pivot.x = grenadeThrowPistolAnim.width * .5\r\n  grenadeThrowPistolAnim.pivot.y = grenadeThrowPistolAnim.height * .5\r\n  grenadeThrowPistolAnim.visible = false\r\n  grenadeThrowPistolAnim.onComplete = () => {\r\n    grenadeThrowPistolAnim.gotoAndStop(0)\r\n    grenadeThrowPistolAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowPistolAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowPistolAnim.currentFrame > 22) {\r\n      if (!this.grenadeThrown) {\r\n        // this.createGrenade()\r\n        this.grenadeThrown = true\r\n        delayedCall(.5, () => { this.grenadeThrown = false })\r\n      }\r\n    }\r\n    if (grenadeThrowPistolAnim.currentFrame > 27) {\r\n      grenadeThrowPistolAnim.gotoAndStop(0)\r\n      grenadeThrowPistolAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowPistolAnim)\r\n  // ump equipped - 'nade throw\r\n  let grenadeThrowUMPSpritesheet = gameObjects.getKeyValue('grenade-ump-sheet')\r\n  let grenadeThrowUMPAnim = new PIXI.AnimatedSprite(grenadeThrowUMPSpritesheet.animations['grenade_throw_ump'])\r\n  grenadeThrowUMPAnim.loop = false\r\n  grenadeThrowUMPAnim.animationSpeed = 1.00\r\n  grenadeThrowUMPAnim.updateAnchor = true\r\n  grenadeThrowUMPAnim.pivot.x = grenadeThrowUMPAnim.width * .5\r\n  grenadeThrowUMPAnim.pivot.y = grenadeThrowUMPAnim.height * .5\r\n  grenadeThrowUMPAnim.visible = false\r\n  grenadeThrowUMPAnim.onComplete = () => {\r\n    grenadeThrowUMPAnim.gotoAndStop(0)\r\n    grenadeThrowUMPAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowUMPAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowUMPAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowUMPAnim.currentFrame > 27) {\r\n      grenadeThrowUMPAnim.gotoAndStop(0)\r\n      grenadeThrowUMPAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowUMPAnim)\r\n  // shotgun equipped - 'nade throw\r\n  let grenadeThrowShotgunSpritesheet = gameObjects.getKeyValue('grenade-shotgun-sheet')\r\n  let grenadeThrowShotgunAnim = new PIXI.AnimatedSprite(grenadeThrowShotgunSpritesheet.animations['shotgunGrenadeThrow'])\r\n  grenadeThrowShotgunAnim.loop = false\r\n  grenadeThrowShotgunAnim.animationSpeed = 1.00\r\n  grenadeThrowShotgunAnim.updateAnchor = true\r\n  grenadeThrowShotgunAnim.pivot.x = grenadeThrowShotgunAnim.width * .5\r\n  grenadeThrowShotgunAnim.pivot.y = grenadeThrowShotgunAnim.height * .5\r\n  grenadeThrowShotgunAnim.visible = false\r\n  grenadeThrowShotgunAnim.onComplete = () => {\r\n    grenadeThrowShotgunAnim.gotoAndStop(0)\r\n    grenadeThrowShotgunAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowShotgunAnim.onFrameChange = () => {\r\n    if (grenadeThrowShotgunAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowShotgunAnim.currentFrame > 27) {\r\n      grenadeThrowShotgunAnim.gotoAndStop(0)\r\n      grenadeThrowShotgunAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowShotgunAnim)\r\n\r\n  this.grenadeSprites = [\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n\r\n  this.grenadeSpritesByEquipped = {\r\n    'pistol weapon': grenadeThrowPistolAnim,\r\n    'smg weapon': grenadeThrowUMPAnim,\r\n    'shotgun weapon': grenadeThrowShotgunAnim\r\n  }\r\n  \r\n  this.ejectedMags = []\r\n\r\n  this.reloadMagazineActionsByType = {\r\n    'pistol weapon': () => {\r\n      let { game: { player: { weapons: { equipped, reloadSpeed }, perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y, 7, 20, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n        })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.0025, 0.005) : random.float(-0.0025, -0.005)),\r\n          y: random.float(-0.0025, -0.005)\r\n        })\r\n      // make some simple magazing gfx\r\n      let pistolMag = new PIXI.Graphics()\r\n      pistolMag.beginFill(0x333333)\r\n      pistolMag.drawRect(0, 0, 7, 20)\r\n      pistolMag.pivot.x = pistolMag.width/2\r\n      pistolMag.pivot.y = pistolMag.height/2\r\n      let magObj = {\r\n        gfx: pistolMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(pistolMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        pistolMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'smg weapon': () => {\r\n      let { game: { player: { perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y - (getBodyHeight(this.body)/2), 7, 42, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n      })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.004, 0.01) : random.float(-0.004, -0.01)),\r\n          y: random.float(-0.0015, -0.01)\r\n        })\r\n      // make some simple magazing gfx\r\n      let smgMag = new PIXI.Graphics()\r\n      smgMag.beginFill(0x333333)\r\n      smgMag.drawRect(0, 0, 7, 42)\r\n      smgMag.pivot.x = smgMag.width/2\r\n      smgMag.pivot.y = smgMag.height/2\r\n      let magObj = {\r\n        gfx: smgMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(smgMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        smgMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'shotgun weapon': () => {\r\n      const reloadShell = () => {\r\n        delayedCall(.3, () => {\r\n          if (this.shotgunShellLoadIterations > 5) {\r\n            charReloadShotgunSprite.gotoAndPlay(21)\r\n          } else {\r\n            charReloadShotgunSprite.gotoAndPlay(10)\r\n            this.shotgunShellLoadIterations++\r\n            reloadShell()\r\n          }\r\n        })\r\n      }\r\n      reloadShell()\r\n    }\r\n  }\r\n\r\n  this.updateEjectedMagPositions = (renderFn) => {\r\n    this.ejectedMags.forEach(mag => {\r\n      let { x, y, rotation: rot } = renderFn(mag.body)\r\n      mag.gfx.position = { x, y }\r\n      mag.gfx.rotation = rot\r\n    })\r\n  }\r\n\r\n  this.reloadWeapon = () => {\r\n    // this.reloading = true\r\n    let { game: { player: { weapons: { reloadSpeed, reloadAnimationFrames, equipped } } } } = getState()\r\n    this.reloadAnimsByType[equipped].animationSpeed = reloadSpeed[equipped]\r\n    this.reloadAnimsByType[equipped].gotoAndPlay(1)\r\n    delayedCall(\r\n      equipped === WEAPON_TYPE_PISTOL ? reloadSpeed[equipped]/4 //1\r\n      : equipped === WEAPON_TYPE_SMG ? (reloadSpeed[equipped] * 2) + (reloadSpeed[equipped]/2) //1.00\r\n      : equipped === WEAPON_TYPE_SHOTGUN ? reloadSpeed[equipped] + (reloadSpeed[equipped]/4) //.5\r\n      : 0\r\n    , () => {\r\n      if (this.reloadAnimsByType[equipped].visible === true) {\r\n        dispatch( increaseStats( StatsDefs.timesReloaded ) )\r\n        this.reloadMagazineActionsByType[equipped]()\r\n      }\r\n    })\r\n  }\r\n  \r\n  // fire pistol right arm\r\n  let charRightArmFirePistolSpritesheet = gameObjects.getKeyValue('right-arm-pistol-fire-sheet')\r\n  let charRightArmFirePistolSprite = new PIXI.AnimatedSprite(charRightArmFirePistolSpritesheet.animations['right_char_arm_pistol_fire'])\r\n  charRightArmFirePistolSprite.play()\r\n  charRightArmFirePistolSprite.loop = false\r\n  charRightArmFirePistolSprite.animationSpeed = .35\r\n  charRightArmFirePistolSprite.updateAnchor = true\r\n  charRightArmFirePistolSprite.pivot.x = charRightArmFirePistolSprite.width * .6\r\n  charRightArmFirePistolSprite.pivot.y = charRightArmFirePistolSprite.height * .4\r\n  charRightArmFirePistolSprite.onComplete = () => {\r\n    charRightArmFirePistolSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFirePistolSprite)\r\n\r\n  // fire smg right arm\r\n  let charRightArmFireSMGSpritesheet = gameObjects.getKeyValue('right-arm-smg-fire-sheet')\r\n  let charRightArmFireSMGSprite = new PIXI.AnimatedSprite(charRightArmFireSMGSpritesheet.animations['char_right_arm_smg_fire'])\r\n  charRightArmFireSMGSprite.play()\r\n  charRightArmFireSMGSprite.loop = false\r\n  charRightArmFireSMGSprite.animationSpeed = .35\r\n  charRightArmFireSMGSprite.updateAnchor = true\r\n  charRightArmFireSMGSprite.pivot.x = charRightArmFireSMGSprite.width * .6\r\n  charRightArmFireSMGSprite.pivot.y = charRightArmFireSMGSprite.height * .4\r\n  charRightArmFireSMGSprite.onComplete = () => {\r\n    charRightArmFireSMGSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireSMGSprite)\r\n\r\n  // fire shotgun right arm\r\n  let charArmsFireShotgunSpritesheet = gameObjects.getKeyValue('arms-fire-shotgun-sheet')\r\n  let charRightArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['rightArmFireShotgun'])\r\n  charRightArmFireShotgunSprite.play()\r\n  charRightArmFireShotgunSprite.loop = false\r\n  charRightArmFireShotgunSprite.animationSpeed = .5\r\n  charRightArmFireShotgunSprite.updateAnchor = true\r\n  charRightArmFireShotgunSprite.pivot.x = charRightArmFireShotgunSprite.width * .6\r\n  charRightArmFireShotgunSprite.pivot.y = charRightArmFireShotgunSprite.height * .4\r\n  charRightArmFireShotgunSprite.onComplete = () => {\r\n    charRightArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireShotgunSprite)\r\n\r\n  // head sprite\r\n  let headSprite = makePixiSprite('char-head')\r\n  container.addChild(headSprite)\r\n  this.positionHeadSprite = renderObj => {\r\n    let { game: { keys, mouseState: { x: _mx }, mousePosition, player: { variables: { jumping, currentDirection }, weapons: { equipped } } } } = getState()\r\n    let { mx, my, fn: renderFn } = renderObj\r\n    let { x, y } = renderFn(this.head)\r\n    if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n      if (currentDirection === 'right') {\r\n        if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x + 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      } else if (currentDirection === 'left') {\r\n        if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x - 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      }\r\n    } else {\r\n      headSprite.position.x = x\r\n    }\r\n    \r\n    headSprite.position.y = y + 12\r\n\r\n    if (!jumping) {\r\n      if (my === LESS_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => { sprite.pivot.y = sprite.height * .45 })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = 2.5\r\n        }\r\n        else {\r\n          headSprite.rotation = 0.9570\r\n        }\r\n      } else if (my === GREATER_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .65\r\n          sprite.pivot.y = sprite.height * .45\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x > 550 && mousePosition.x < 650) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x < 750 && mousePosition.y > 250 && mx === GREATER_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -2.7230\r\n      } else if (mousePosition.x > 450 && mousePosition.y > 250 && mx === LESS_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -0.5532\r\n      } else {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .6\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = charLeftArmFirePistolSprite.rotation\r\n      }\r\n    } else {\r\n      this.armsSpritesByType[equipped].forEach(sprite => {\r\n        sprite.pivot.x = sprite.width * .6\r\n        sprite.pivot.y = sprite.height * .47\r\n      })\r\n    }\r\n  }\r\n  headSprite.pivot.x = headSprite.width * .52\r\n  headSprite.pivot.y = headSprite.height * .17\r\n  this.headSprite = headSprite\r\n \r\n  // run anim\r\n  let charRunSpritesheet = gameObjects.getKeyValue('char-run-sheet')\r\n  let charRunSprite = new PIXI.AnimatedSprite(charRunSpritesheet.animations['char_run'])\r\n  charRunSprite.loop = true\r\n  charRunSprite.animationSpeed = 1.0\r\n  charRunSprite.updateAnchor = true\r\n  charRunSprite.pivot.x = charRunSprite.width * .52\r\n  charRunSprite.pivot.y = charRunSprite.height * .5\r\n  container.addChild(charRunSprite)\r\n \r\n  // idle anim\r\n  let charIdleSpritesheet = gameObjects.getKeyValue('char-idle-sheet')\r\n  let charIdleSprite = new PIXI.AnimatedSprite(charIdleSpritesheet.animations['char_idle'])\r\n  charIdleSprite.play()\r\n  charIdleSprite.loop = true\r\n  charIdleSprite.animationSpeed = .1\r\n  charIdleSprite.updateAnchor = true\r\n  charIdleSprite.pivot.x = charIdleSprite.width * .52\r\n  charIdleSprite.pivot.y = charIdleSprite.height * .5\r\n  container.addChild(charIdleSprite)\r\n  \r\n  // jump anim\r\n  let charJumpSpritesheet = gameObjects.getKeyValue('char-jump-sheet')\r\n  let charJumpSprite = new PIXI.AnimatedSprite(charJumpSpritesheet.animations['char_jump'])\r\n  charJumpSprite.loop = false\r\n  charJumpSprite.animationSpeed = .35\r\n  charJumpSprite.updateAnchor = true\r\n  charJumpSprite.pivot.x = charJumpSprite.width * .52\r\n  charJumpSprite.pivot.y = charJumpSprite.height * .5\r\n  //  set(charJumpSprite.scale, { x: .5, y: 1.0 })\r\n  charJumpSprite.visible = false\r\n  container.addChild(charJumpSprite)\r\n \r\n  this.stopJumpAnimation = () => {\r\n    charJumpSprite.gotoAndStop(0)\r\n    charJumpSprite.visible = false\r\n  }\r\n\r\n  charJumpSprite.onComplete = () => {\r\n    let { jumping } = getState().game.player.variables\r\n    if (!jumping) {\r\n      this.stopJumpAnimation()\r\n    } else {\r\n      this.resumeJumpAnimation()\r\n    }\r\n  }\r\n\r\n  let jumpMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.resumeJumpAnimation = () => {\r\n  charJumpSprite.gotoAndPlay(3)\r\n  charJumpSprite.visible = true\r\n  charRunSprite.visible = false\r\n  charIdleSprite.visible = false\r\n  // charJumpSprite.animationSpeed = .1\r\n  }\r\n\r\n  this.playJumpAnimation = () => {\r\n    if (getState().game.filterEffects) {\r\n      charJumpSprite.filters = [ jumpMotionBlur ]\r\n      from(jumpMotionBlur.velocity, .35, {\r\n        y: 50,\r\n        onUpdate: () => {\r\n          charJumpSprite.filters = [ jumpMotionBlur ]\r\n        }\r\n      })\r\n    }\r\n    charJumpSprite.gotoAndPlay(0)\r\n    charJumpSprite.visible = true\r\n    charRunSprite.visible = false\r\n    charIdleSprite.visible = false\r\n  }\r\n\r\n  // motion blur\r\n  let charLeftArmFirePistolSpritesheet = gameObjects.getKeyValue('left-arm-pistol-fire-sheet')\r\n  let charLeftArmFirePistolSprite = new PIXI.AnimatedSprite(charLeftArmFirePistolSpritesheet.animations['left_char_arm_pistol_fire'])\r\n  charLeftArmFirePistolSprite.play()\r\n  charLeftArmFirePistolSprite.loop = false\r\n  charLeftArmFirePistolSprite.animationSpeed = .35\r\n  charLeftArmFirePistolSprite.updateAnchor = true\r\n  charLeftArmFirePistolSprite.pivot.x = charLeftArmFirePistolSprite.width * .6\r\n  charLeftArmFirePistolSprite.pivot.y = charLeftArmFirePistolSprite.height * .4\r\n  charLeftArmFirePistolSprite.onComplete = () => {\r\n    charLeftArmFirePistolSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFirePistolSprite)\r\n   \r\n  // fire smg left arm (front)\r\n  let charLeftArmFireSMGSpritesheet = gameObjects.getKeyValue('left-arm-smg-fire-sheet')\r\n  let charLeftArmFireSMGSprite = new PIXI.AnimatedSprite(charLeftArmFireSMGSpritesheet.animations['char_left_arm_smg_fire'])\r\n  charLeftArmFireSMGSprite.play()\r\n  charLeftArmFireSMGSprite.loop = false\r\n  charLeftArmFireSMGSprite.animationSpeed = .35\r\n  charLeftArmFireSMGSprite.updateAnchor = true\r\n  charLeftArmFireSMGSprite.pivot.x = charLeftArmFireSMGSprite.width * .6\r\n  charLeftArmFireSMGSprite.pivot.y = charLeftArmFireSMGSprite.height * .4\r\n  charLeftArmFireSMGSprite.onComplete = () => {\r\n    charLeftArmFireSMGSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFireSMGSprite)\r\n\r\n  // fire shotgun left arm (front)\r\n  let charLeftArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['leftArmFireShotgun'])\r\n  charLeftArmFireShotgunSprite.play()\r\n  charLeftArmFireShotgunSprite.loop = false\r\n  charLeftArmFireShotgunSprite.animationSpeed = .5\r\n  charLeftArmFireShotgunSprite.updateAnchor = true\r\n  charLeftArmFireShotgunSprite.pivot.x = charLeftArmFireShotgunSprite.width * .6\r\n  charLeftArmFireShotgunSprite.pivot.y = charLeftArmFireShotgunSprite.height * .4\r\n  charLeftArmFireShotgunSprite.onComplete = () => {\r\n    charLeftArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charLeftArmFireShotgunSprite)\r\n\r\n  let weaponSwapMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.armsSprites = [\r\n    charLeftArmFirePistolSprite,\r\n    charRightArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charRightArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite,\r\n    charRightArmFireShotgunSprite\r\n  ]\r\n\r\n  this.armsSpritesByType = {\r\n    'pistol weapon': [ charLeftArmFirePistolSprite, charRightArmFirePistolSprite ],\r\n    'smg weapon': [ charLeftArmFireSMGSprite, charRightArmFireSMGSprite ],\r\n    'shotgun weapon': [ charLeftArmFireShotgunSprite, charRightArmFireShotgunSprite ]\r\n  }\r\n\r\n  let muzzleFlashFX = new MuzzleFlashFX()\r\n\r\n  let _9mm1 = window.gameObjects.getKeyValue('9mm-sound1')\r\n  let _9mm2 = window.gameObjects.getKeyValue('9mm-sound2')\r\n  let pistolSound1 = new Howl({\r\n    src: [ _9mm1 ],\r\n  })\r\n  let pistolSound2 = new Howl({\r\n    src: [ _9mm2 ],\r\n    sprite: {\r\n      _1: [ 500, 1000 ]\r\n    }\r\n  })\r\n  let pistolReloadSnd = window.gameObjects.getKeyValue('pistol-reload-sound')\r\n  let pistolReloadSound = new Howl({ src: [ pistolReloadSnd ], volume: .25 })\r\n  let jumpSound = gameObjects.getKeyValue('jump-sound')\r\n  let pain1Snd = gameObjects.getKeyValue('pain1-sound')\r\n  let pain2Snd = gameObjects.getKeyValue('pain2-sound')\r\n  let deathRip = gameObjects.getKeyValue('death-rip-sound')\r\n  let playerDeathSnd = gameObjects.getKeyValue('player-death-sound')\r\n  let hitImpact = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n  let smgFire = gameObjects.getKeyValue('smg-fire-sound')\r\n  let shotgunFire = gameObjects.getKeyValue('shotgun-blast-sound')\r\n\r\n  this.fireWeaponAnimation = () => {\r\n    let { game: { mouseState, player: { weapons: { equipped } } } } = getState()\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.visible = true })\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.gotoAndPlay(0) })\r\n    muzzleFlashFX.fireEffect()\r\n    // position muzzle spark particles sprite \r\n    let mSpark = new EnhancedMuzzleSpark(this.arm)\r\n    this.currentMuzzleSpark = mSpark\r\n    // sound\r\n    if (equipped === WEAPON_TYPE_PISTOL) {\r\n      pistolSound1.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SMG) {\r\n      smgFire.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SHOTGUN) {\r\n      shotgunFire.play()\r\n    }\r\n  }\r\n\r\n  this.charRunSprite = charRunSprite\r\n  this.charIdleSprite = charIdleSprite\r\n  this.charJumpSprite = charJumpSprite\r\n  // weapons specific\r\n  this.charReloadPistolSprite = charReloadPistolSprite\r\n  this.charReloadSMGSprite = charReloadSMGSprite\r\n  this.charReloadShotgunSprite = charReloadShotgunSprite\r\n\r\n  this.bodySprites = [\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n  \r\n  this.sprites = [\r\n    charRightArmFirePistolSprite,\r\n    charRightArmFireSMGSprite,\r\n    charRightArmFireShotgunSprite,\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n    charLeftArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite\r\n  ]\r\n\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 60, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n  blur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      this.shadow.alpha = .85\r\n      this.shadow.filters = [blur]\r\n      lifebar.filters = [bevel]\r\n    } else {\r\n      this.shadow.alpha = .45\r\n      this.shadow.filters = []\r\n      lifebar.filters = []\r\n    }\r\n  }\r\n\r\n  this.setBodySpritesPositions = obj => {\r\n    let { fn } = obj\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.bodySprites.forEach(sprite => {\r\n      sprite.position.x = x\r\n      sprite.position.y = y - 15\r\n    })\r\n    if (container && container.children.indexOf(this.shadow) === -1) {\r\n      container.addChild(this.shadow)\r\n    }\r\n    this.shadow.position.x = x\r\n    this.shadow.position.y = this.bodySprites[0].position.y + this.bodySprites[0].height/2 - 5\r\n  }\r\n\r\n  this.setArmsSpritePosition = obj => {\r\n    // .125 is a rotation adjustment so that the arms sprite lines up more accurately with where the bullet is coming from\r\n    let { game: { keys, mouseState: { x: _mx, y: _my }, player: { variables: { jumping, currentDirection } } } } = getState()\r\n    let { fn } = obj\r\n    let { x, y, rotation: rot } = fn(this.arm)\r\n    this.armsSprites.forEach(sprite => {\r\n      // sprite.x = x\r\n      if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n        if (currentDirection === 'right') {\r\n          if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n            sprite.x = x + 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        } else if (currentDirection === 'left') {\r\n          if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n            sprite.x = x - 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        }\r\n      } else {\r\n        sprite.x = x\r\n      }\r\n\r\n      if (jumping) {\r\n        if (_my === LESS_THAN_PLAYER_Y_POS) {\r\n          sprite.y = y - 10\r\n        } else {\r\n          sprite.y = y\r\n        }\r\n      } else {\r\n        sprite.y = y\r\n      }\r\n\r\n      sprite.rotation = rot\r\n    })\r\n    // keep muzzle flashes aligned with gun arm\r\n    let fpos, frot\r\n    muzzleFlashFX.getFlashes().forEach(flash => {\r\n      flash.position = charRightArmFirePistolSprite.position\r\n      flash.rotation = rot - degrees(90)\r\n      flash.pivot.x = -flash.width * .05\r\n      flash.pivot.y = getState().game.player.weapons.equipped === WEAPON_TYPE_SHOTGUN ? flash.height * 3.25 : flash.height * 2.25\r\n      fpos = flash.position\r\n      frot = flash.rotation\r\n    })\r\n    if (this.currentMuzzleSpark) {\r\n      this.currentMuzzleSpark.spark.pivot.x = -this.currentMuzzleSpark.spark.width\r\n      this.currentMuzzleSpark.spark.position = fpos\r\n      this.currentMuzzleSpark.spark.rotation = rot - degrees(180)\r\n    }\r\n  }\r\n\r\n  this.meleeAttackInProgress = false\r\n\r\n  this.createMeleeHitbox = () => {\r\n    let { mouseState, player: { weapons: {equipped} } } = getState().game\r\n    let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n    _throw.play()\r\n    this.meleeHitbox = Bodies.rectangle(\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) * 1.75 : this.body.position.x - getBodyWidth(this.body) * 1.75,\r\n      this.body.position.y - getBodyHeight(this.body)/2,\r\n      getBodyWidth(this.body) * 2,\r\n      getBodyHeight(this.body), {\r\n        isStatic: true\r\n      })\r\n    this.meleeHitbox.main = this\r\n    this.meleeHitbox.label = `melee hitbox ${equipped}`\r\n    World.add(world, this.meleeHitbox)\r\n  }\r\n  this.removeMeleeHitbox = () => {\r\n    if (this.meleeHitbox) {\r\n      World.remove(world, this.meleeHitbox)\r\n    }\r\n  }\r\n\r\n  this.meleeAttack = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (meleePistolAnim.currentFrame < 1) {\r\n          meleePistolAnim.visible = true\r\n          meleePistolAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (meleeUMPAnim.currentFrame < 1) {\r\n          meleeUMPAnim.visible = true\r\n          meleeUMPAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (meleeShotgunAnim.currentFrame < 1) {\r\n          meleeShotgunAnim.visible = true\r\n          meleeShotgunAnim.gotoAndPlay(1)\r\n        }\r\n      }\r\n    }\r\n    if (!this.meleeAttackInProgress) {\r\n      this.meleeAttackInProgress = true\r\n      delayedCall(.35, () => {\r\n        if (!this.dead) {\r\n          this.createMeleeHitbox()\r\n        }\r\n        delayedCall(.1, () => {\r\n          this.removeMeleeHitbox()\r\n        })\r\n      })\r\n      attacks[equipped]()\r\n    }\r\n  }\r\n\r\n  this.collectHealth = (amount) => {\r\n    this.life += amount\r\n    if (this.life > 100) {\r\n      this.life = 100\r\n    }\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    updateScore( getState().game.scoreAmounts.collectHealth )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.collectCredits = (amount) => {\r\n    dispatch(\r\n      addToTotalCredits(amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectCredit )\r\n  }\r\n\r\n  this.collectAmmo = (wepType, amount) => {\r\n    createTextMessage(`+${amount} ${wepType} ammo`, '#32BD6A', .35, 1)\r\n    dispatch(\r\n      addToTotalAmmo(wepType, amount)\r\n    )\r\n    updateScore( getState().game.scoreAmounts.collectAmmo )\r\n  }\r\n\r\n\tthis.playerHit = false\r\n\tthis.resetPlayerHit = () => {\r\n\t\tthis.playerHit = true\r\n\t\tdelayedCall(1, () => {\r\n\t\t\tthis.playerHit = false\r\n\t\t})\r\n  }\r\n  \r\n  this.blinkAlpha = () => {\r\n    this.headSprite.alpha = .25\r\n    this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n    this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    delayedCall(.1, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.2, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.3, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.35, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.4, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.45, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.5, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n  }\r\n\r\n\tthis.takeDamage = dmg => {\r\n    let { game: { player: { variables: { defense } } } } = getState()\r\n    this.life -= (dmg - defense)\r\n    subtractScore( getState().game.scoreAmounts.penalties.damageTaken )\r\n    batch(() => {\r\n      dispatch( updatePlayerHealth(this.life) )\r\n      dispatch( increaseStatsByAmount( StatsDefs.damageTaken, dmg ) )\r\n    })\r\n    let randomNum = [ 1, 2 ][Math.floor( Math.random() * 2 )]\r\n    if (randomNum === 1) {\r\n      pain1Snd.play()\r\n    } else {\r\n      pain2Snd.play()\r\n    }\r\n    hitImpact.play()\r\n    lifebar.tint = damageRed\r\n    to(lifebar, .2, { width: (this.life/100 * this.initialLifebarWidth) })\r\n    to(lifebar, .1, {\r\n      y: lifebar.position.y + 2,\r\n      onComplete: () => {\r\n        to(lifebar, .1, {\r\n          y: lifebar.position.y - 3,\r\n          onComplete: () => {\r\n            to(lifebar, .1, {\r\n              y: lifebar.position.y + 1,\r\n              onComplete: () => {\r\n                lifebar.tint = lifebarGreen\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n    let bloodSpurtPos = {\r\n      x: random.float(this.bodySprites[0].position.x - 5, this.bodySprites[0].position.x + 20),\r\n      y: random.float(this.bodySprites[0].position.y, this.bodySprites[0].position.y - 60)\r\n    }\r\n    createTextMessage(`-${dmg}`, '#FF0000', .35, 1, 12)\r\n    new BloodSpurt(null, bloodSpurtPos, .75)\r\n    this.blinkAlpha()\r\n\t\tthis.resetPlayerHit()\r\n\t\tif (this.life <= 0) {\r\n\t\t\tthis.kill()\r\n\t\t}\r\n  }\r\n  \r\n  this.acceptHealth = amt => {\r\n    this.life = amt\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.addSpritesInOrder = () => {\r\n    container.addChild(this.headSprite)\r\n    this.armsSprites.forEach(sprite => container.addChild(sprite))\r\n    this.bodySprites.forEach(sprite => container.addChild(sprite))\r\n    // move front arms back on top\r\n    container.addChild(charLeftArmFirePistolSprite)\r\n    container.addChild(charLeftArmFireSMGSprite)\r\n    container.addChild(charLeftArmFireShotgunSprite)\r\n    container.addChild(lifebar)\r\n  }\r\n\r\n\tthis.respawn = () => {\r\n    engine.timing.timeScale = 1.0\r\n    if (this.playerRagdoll) {\r\n      this.playerRagdoll.destroy()\r\n      this.playerRagdoll = null\r\n    }\r\n    dispatch( increaseStats( StatsDefs.timesRespawned ) )\r\n    subtractScore( getState().game.scoreAmounts.penalties.respawn )\r\n    this.addSpritesInOrder()\r\n\t\tthis.life = 100\r\n\t\tlifebar.width = this.initialLifebarWidth\r\n\t\tthis.dead = false\r\n    lifebar.visible = lifebarOutline.visible = true\r\n    if (this.lastDeathType === FELL_OFF) {\r\n      // place our character back on-stage if he's fallen off\r\n      if (this.lastBodyPosition.x < 0) {\r\n        while (this.body.position.x < 200 && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: 100, y: -100 })\r\n        }\r\n      } else {\r\n        while (this.body.position.x > getState().game.width && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: -100, y: -100 })\r\n        }\r\n      }\r\n    }\r\n    World.add(world, this.composite)\r\n    if (getState().game.lastGameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n      )\r\n    } else {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_RESPAWN)\r\n      )\r\n    }\r\n  }\r\n\r\n\tthis.dead = false\r\n\tthis.kill = (deathType) => {\r\n    if (this.dead === false) {\r\n      if (deathType) {\r\n        this.lastDeathType = deathType\r\n      } else {\r\n        deathRip.play()\r\n        this.lastDeathType = KILLED_BY_ZOMBIE\r\n      }\r\n      dispatch( increaseStats( StatsDefs.timesKilled ) )\r\n      subtractScore( getState().game.scoreAmounts.penalties.killed )\r\n      playerDeathSnd.play()\r\n      engine.timing.timeScale = .5\r\n      lifebar.visible = lifebarOutline.visible = false\r\n      this.life = 0\r\n      this.dead = true\r\n      this.removeMeleeHitbox()\r\n      this.lastBodyPosition = this.body.position\r\n      World.remove(world, this.composite)\r\n      if (this.bodySprites && this.armsSprites) {\r\n        container.removeChild(this.headSprite)\r\n        this.bodySprites.forEach(sprite => container.removeChild(sprite))\r\n        this.armsSprites.forEach(sprite => container.removeChild(sprite))\r\n      }\r\n      let force = {\r\n        x: engine.timing.timeScale === 1\r\n        ? charIdleSprite.scale.x === 1 ? 0.1 : -0.1\r\n        : charIdleSprite.scale.x === 1 ? 0.25 : -0.25\r\n        ,\r\n        y: engine.timing.timeScale === 1\r\n        ? -0.25\r\n        : -0.75\r\n      }\r\n      let parts = [ 'head', 'body', 'limb', 'none' ]\r\n      let partLastDamaged = parts[ Math.floor( Math.random() * parts.length ) ]\r\n      \r\n      if (partLastDamaged === 'head') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollDecap({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'body') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollHalved({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'limb') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollMaim({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdoll({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      }\r\n  \r\n      batch(() => {\r\n        dispatch(unsetAllKeys())\r\n        dispatch(resetPlayerVariables())\r\n        dispatch(setMouseButtonState(MOUSE_UP))\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      })\r\n    }\r\n\t}\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumpForce, jumping } } } } = getState()\r\n\r\n    // jump\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        \r\n        if (e.keyCode === 87 && !jumping && !this.chargingGrenade) {\r\n            dispatch(setJumping(true))\r\n            jumpSound.play()\r\n            this.playJumpAnimation()\r\n            Body.applyForce(this.body, this.body.position, { x: 0, y: jumpForce })\r\n        } else {\r\n            if (keys.indexOf(e.keyCode) < 0) {\r\n              dispatch(setKeyPress(e.keyCode))\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    // melee \r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !jumping && !this.grenadeThrowInProgress) {\r\n        if (e.key === 'f' || e.key === 'F') {\r\n          this.meleeAttack()\r\n        }\r\n      }\r\n    }\r\n\r\n    // Shop / Continue / Build \r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (e.key === 'Enter') {\r\n        nextWave()\r\n      }\r\n    }\r\n    // done with build placement\r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (e.key === 'b' || e.key === 'B') {\r\n        let arrow = gameObjects.getKeyValue('object-placement-arrow')\r\n        arrow.changeBack = true\r\n        dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n        dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n      }\r\n    }\r\n\r\n    // cycle weapon [spacebar]\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if (e.keyCode === 32) {\r\n        if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n          let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // remote mine detonation [numbers 1 thru 9]\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      let numKeys = [ '1', '2', '3', '4', '5', '6', '7', '8', '9' ]\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let idx = numKeys.indexOf(e.key.toString())\r\n      console.log(e.key)\r\n      if (idx > -1) {\r\n        if (remoteMines[e.key.toString()]) {\r\n          remoteMines[e.key.toString()].detonate()\r\n          delete remoteMines[e.key.toString()]\r\n        }\r\n      }\r\n    }\r\n    \r\n    // turret placement direction\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (getState().game.traps.selectedTrap === trapTypes.TURRET) {\r\n        let currentTurret = gameObjects.getKeyValue('current-turret')\r\n        if (currentTurret) {\r\n          if (e.key === 'ArrowLeft') {\r\n            currentTurret.updateDirection('left')\r\n          }\r\n          if (e.key === 'ArrowRight') {\r\n            currentTurret.updateDirection('right')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    // reload weapon [R]\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (e.keyCode === 82 && !this.meleeAttackInProgress) {\r\n        let { game: { showingMessage, player: { weapons: { equipped, totalAmmo } } } } = getState()\r\n        if (totalAmmo[equipped] === 0 && showingMessage === false) {\r\n          createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n        } else if (!weaponsUI.reloading && !jumping && !this.dead) {  //&& !this.reloading) {\r\n          this.reloadWeapon()\r\n          weaponsUI.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n\t}\r\n\r\n\tconst handleKeyUp = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumping } } } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tlet idx = keys.indexOf(e.keyCode)\r\n\t\t\t\tif (idx > -1) {\r\n\t\t\t\t\tdispatch(removeKeyPress(e.keyCode))\r\n        }\r\n        // grenade [G]\r\n        if ((e.key === 'g' || e.key === 'G') && getState().game.player.weapons.totalAmmo[WEAPON_TYPE_GRENADE] > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n          if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n            this.throwGrenade()\r\n          }\r\n        }\r\n      }\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMouseDown = e => {\r\n    console.log(e)\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (!this.dead && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        if (e.buttons === 1) {\r\n          dispatch(setMouseButtonState(MOUSE_DOWN))\r\n        } else if (e.buttons === 2) {\r\n          dispatch(setRightMouseDown(true))\r\n          console.log('should charge')\r\n        }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n  \r\n\tconst handleMouseUp = e => {\r\n    let { game: { gameState } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      console.log(e)\r\n      dispatch(setMouseButtonState(MOUSE_UP))\r\n      if (getState().game.rightMouseDown) {\r\n        dispatch(setRightMouseDown(false))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const handleMouseWheel = e => {\r\n    // console.log(e)\r\n    let { gameState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU || gameState !== GameStates.SCORES_VIEW) {\r\n      e.preventDefault()\r\n    }\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n        if (e.deltaY < 0) {\r\n          if (list[list.indexOf(equipped) - 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx - 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[list.length - 1]))\r\n          }\r\n        } else if (e.deltaY > 0) {\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tlet playerBody = getPlayerBody(gameObjects)\r\n\tlet playerArm = getPlayerComposite(gameObjects).bodies[1]\r\n\tlet bh = getBodyHeight(this.body)\r\n\r\n\tconst handleMouseMove = e => {\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (e.target && e.target === document.getElementsByTagName('canvas')[1] && e.target.getBoundingClientRect) {\r\n\t\t\t\tlet armAngle\r\n\t\t\t\tlet mouseX, mouseY\r\n        let rect = e.target.getBoundingClientRect()\r\n        // console.log(e.target)\r\n\t\t\t\tlet x = e.clientX - rect.left\r\n\t\t\t\tlet y = e.clientY - rect.top\r\n\t\t\t\tlet { game: { mouseRelativeToPlayerPosition: mPosRel } } = getState()\r\n\t\t\t\tdispatch(setMousePosition({ x, y }))\r\n\r\n\t\t\t\tif (mPosRel.x > playerBody.position.x) {\r\n\t\t\t\t\tmouseX = GREATER_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.x < playerBody.position.x) {\r\n\t\t\t\t\tmouseX = LESS_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y > playerBody.position.y + bh/2) {\r\n\t\t\t\t\tmouseY = GREATER_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y < playerBody.position.y - bh) {\r\n\t\t\t\t\tmouseY = LESS_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarmAngle = Vector.angle(mPosRel, playerArm.position)\r\n\t\t\t\tBody.setAngle(playerArm, armAngle)\r\n\r\n\t\t\t\tdispatch(setMouseStateX(mouseX))\r\n\t\t\t\tdispatch(setMouseStateY(mouseY))\r\n\t\t\t}\r\n    }\r\n\r\n  }\r\n  \r\n  const handleMouseClick = e => {\r\n    let {game:{player:{credits},mouseRelativeToPlayerPosition,gameSubState,traps:{selectedTrap, costToBuild:costToBuild_trap},barriers:{selectedBarrier,costToBuild:costToBuild_barrier}}} = getState()\r\n    if (gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      let _y = 360\r\n      let position = {\r\n        x: mouseRelativeToPlayerPosition.x,\r\n        y: _y\r\n      }\r\n      let width = 50\r\n      let height = 100\r\n      let buildNewLocation = true\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let buildObjects = gameObjects.getKeyValue('build-objects')\r\n      let placeObjectSound = gameObjects.getKeyValue('place-object-sound')\r\n      let cancelSound = gameObjects.getKeyValue('button-cancel-sound')\r\n      const buildObjectPlacementComparison = (obj) => (position.x + (width/2) < obj.getBody().position.x - getBodyWidth(obj.getBody())/2) ||\r\n      (obj.getBody().position.x + getBodyWidth(obj.getBody())/2 < position.x - (width/2))\r\n      let checkAllowArray = buildObjects.map(obj => {\r\n        if (buildObjectPlacementComparison(obj)) {\r\n          return 'allow placement'\r\n        } else {\r\n          return 'place next to'\r\n        }\r\n      })\r\n\r\n      // find closest build object\r\n      let closestX\r\n      if (buildObjects.length > 0) {\r\n        let buildObjectXPositions = buildObjects.map(obj => obj.getBody().position.x)\r\n        closestX = buildObjectXPositions.reduce((prev, curr) => (\r\n          (Math.abs(curr - position.x) < Math.abs(prev - position.x) ? curr : prev)\r\n        ))\r\n        console.log( closestX )\r\n      }\r\n      \r\n      let idx = checkAllowArray.indexOf('place next to')  //.indexOf('deny')\r\n      if (idx > -1) {\r\n        buildNewLocation = false\r\n      }\r\n      \r\n      if (selectedBarrier) {\r\n        let barrier\r\n        if (credits >= costToBuild_barrier[selectedBarrier]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            barrier = new WallBarrier(position, { width, height }, selectedBarrier)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              barrier = new WallBarrier({ x: closestX - width, y: position.y}, { width, height }, selectedBarrier)\r\n            } else {\r\n              barrier = new WallBarrier({ x: closestX + width, y: position.y}, { width, height }, selectedBarrier)\r\n            }\r\n          }\r\n          if (barrier) {\r\n            batch(() => {\r\n              dispatch( setBarrierTypePlaced( selectedBarrier ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_barrier[selectedBarrier]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.barrierTypesPlaced) {\r\n                // console.log( getState().game.barrierTypesPlaced )\r\n                if (Object.keys(getState().game.barrierTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.BARRICADE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.BARRICADE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_barrier[selectedBarrier]}`, 0xFF0000, .5, .75)\r\n            buildObjects.push(barrier)\r\n            placeObjectSound.play()\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n\r\n      const buildTrap = (trapPosition) => {\r\n        switch (selectedTrap) {\r\n          case trapTypes.LANDMINE:\r\n            return new Landmine(trapPosition)\r\n          case trapTypes.CLUSTER_BOMB:\r\n            return new Clustermine(trapPosition)\r\n          case trapTypes.REMOTE_MINE:\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            return new RemoteMine(trapPosition, remoteMinesArr.length + 1)\r\n          case trapTypes.TURRET:\r\n            return new MachineGunTurret(trapPosition)\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (selectedTrap) {\r\n        let trap\r\n        if (credits >= costToBuild_trap[selectedTrap]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            trap = buildTrap(position)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              trap = buildTrap({ x: closestX - width, y: position.y })\r\n            } else {\r\n              trap = buildTrap({ x: closestX + width, y: position.y })\r\n            }\r\n          }\r\n          if (trap) {\r\n            batch(() => {\r\n              dispatch( setTrapTypePlaced( selectedTrap ) )\r\n              dispatch( increaseStats( StatsDefs.trapsPlaced ) )\r\n              dispatch( subtractFromTotalCredits(costToBuild_trap[selectedTrap]) )\r\n            })\r\n            setTimeout(() => {\r\n              if (getState().game.trapTypesPlaced) {\r\n                // console.log( getState().game.trapTypesPlaced )\r\n                if (Object.keys(getState().game.trapTypesPlaced).length > 2 && !getState().game.achievements[ AchievementDefs.TRAPHOUSE ].owned) {\r\n                  dispatch( setAchievementOwned( AchievementDefs.TRAPHOUSE ) )                \r\n                }\r\n              }\r\n            }, 0)\r\n            createTextMessage(`- $${costToBuild_trap[selectedTrap]}`, 0xFF0000, .5, .75)\r\n            placeObjectSound.play()\r\n            buildObjects.push(trap)\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            if (selectedTrap === trapTypes.REMOTE_MINE) {\r\n              if (remoteMinesArr.length < 10) {\r\n                let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n                remoteMinesArr.push( trap )\r\n                remoteMinesArr.forEach((mine, i) => {\r\n                  remoteMines[i + 1] = mine\r\n                  mine.updateNumber(i + 1)\r\n                })\r\n              } else {\r\n                cancelSound.play()\r\n                createTextMessage('can hold up to 9 remote mines at a time', 0xFF0000, .5, .75)\r\n              }\r\n            }\r\n            if (selectedTrap === trapTypes.TURRET) {\r\n              createTextMessage('Press Left or Right arrow to change turret direction', 0xFFFFFF, .75, 2)\r\n              gameObjects.setKeyValue('current-turret', trap)\r\n            }\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleRightClick = e => {\r\n    // console.log(e)\r\n    e.preventDefault()\r\n    let { game: { gameState, gameSubState, player: { variables: {jumping}, weapons:{ totalAmmo:{ grenades:grenadesCount } }} } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (grenadesCount > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n          this.throwGrenade()\r\n          console.log('throw!')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tif (!window.keydownListenersAdded) {\r\n\t\twindow.addEventListener('keydown', handleKeyDown)\r\n\t\twindow.addEventListener('keyup', handleKeyUp)\r\n\t\twindow.addEventListener('mousemove', handleMouseMove)\r\n\t\twindow.addEventListener('mousedown', handleMouseDown)\r\n    window.addEventListener('mouseup', handleMouseUp)\r\n    window.addEventListener('click', handleMouseClick)\r\n    window.addEventListener('contextmenu', handleRightClick)\r\n    window.addEventListener('wheel', handleMouseWheel)\r\n\t\twindow.keydownListenersAdded = true\r\n  }\r\n  \r\n  this.pause = () => {\r\n    if (this.charRunSprite.currentFrame !== 0) {\r\n      this.charRunSprite.play()\r\n    }\r\n    if (this.charReloadPistolSprite.currentFrame !== 0) {\r\n      this.charReloadPistolSprite.play()\r\n    }\r\n    if (this.charReloadSMGSprite.currentFrame !== 0) {\r\n      this.charReloadSMGSprite.play()\r\n    }\r\n    if (charJumpSprite.currentFrame !== 0) {\r\n      charJumpSprite.play()\r\n    }\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.charRunSprite.stop()\r\n    this.charReloadPistolSprite.stop()\r\n    this.charReloadSMGSprite.stop()\r\n    charJumpSprite.stop()\r\n    dispatch( setJumping(false) )\r\n    // charJumpSprite.animationSpeed = .35\r\n  }\r\n\r\n\treturn this\r\n\r\n}\r\n","import * as PIXI from 'pixi.js'\r\n\r\nconst { TweenLite: { to, from, kill } } = window\r\n\r\nexport default function Crosshairs(gameObjects) {\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tthis.crosshair = new PIXI.Container()\r\n\tthis.cross = new PIXI.Graphics()\r\n\tthis.cross.lineStyle(2, 0xB00000, 0.75)\r\n\tthis.cross.moveTo(0, -15)\r\n\tthis.cross.lineTo(0, 15)\r\n\tthis.cross.moveTo(-15, 0)\r\n\tthis.cross.lineTo(15, 0)\r\n\tthis.crosshair.addChild(this.cross)\r\n\tthis.circle = new PIXI.Graphics()\r\n\tthis.circle.lineStyle(1, 0xB00000, 0.75)\r\n\tthis.circle.drawCircle(0, 0, 10)\r\n\tthis.crosshair.addChild(this.circle)\r\n  this.changed = false\r\n  this.changeBack = false\r\n\tthis._new = null\r\n  container.addChild(this.crosshair)\r\n\r\n\tthis.crosshair.buildArrow = (color) => {\r\n\t\tlet crosshair = gameObjects.getKeyValue('crosshair')\r\n    container.removeChild(crosshair)\r\n    let _new = new PIXI.Graphics()\r\n    _new.lineStyle(2, color, 1.0)\r\n    _new.beginFill(0x777777, 0.0)\r\n    _new.moveTo(0,0)\r\n    _new.lineTo(20, 0)\r\n    _new.lineTo(20, 30)\r\n    _new.lineTo(30, 30)\r\n    _new.lineTo(10, 45)\r\n    _new.lineTo(-10, 30)\r\n    _new.lineTo(0, 30)\r\n    _new.lineTo(0, 0)\r\n    _new.endFill()\r\n    _new.pivot.x = _new.width * .5\r\n    _new.pivot.y = _new.height * .5\r\n    container.addChild(_new)\r\n    this._new = _new\r\n    crosshair._new = _new\r\n    crosshair.changed = true\r\n    gameObjects.setKeyValue('object-placement-arrow', _new)\r\n    // animated arrow loop\r\n    this.animationLoop = () => {\r\n      to(_new.scale, .5, {\r\n        x: 1.2,\r\n        y: .75,\r\n        onComplete: () => {\r\n          to(_new.scale, .5, {\r\n            x: .9,\r\n            y: 1.2,\r\n            onComplete: this.animationLoop\r\n          })\r\n        }\r\n      })\r\n    }\r\n    this.animationLoop()\r\n\r\n\t\treturn _new\r\n\t}\r\n\r\n\treturn this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport random from 'random'\r\n\r\nexport default function GroundEffect (pos, type, bodyPart) {\r\n  let {x,y} = pos\r\n  let {gameObjects,TweenLite:{to,delayedCall}} = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n  let fxSheet = gameObjects.getKeyValue('ground-fx-sheet')\r\n  let bulletTextures = [\r\n    'bullet-impact1.png',\r\n    'bullet-impact2.png'\r\n  ]\r\n  let groundBloodSpatters = [\r\n    'ground-blood-spatter1.png',\r\n    'ground-blood-spatter2.png',\r\n    'ground-blood-spatter3.png',\r\n  ]\r\n  const getRandomRoundBulletImpact = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        bulletTextures[ Math.floor( Math.random() * bulletTextures.length ) ]\r\n      ]\r\n  ))\r\n  const getRandomBloodSpatter = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        groundBloodSpatters[ Math.floor( Math.random() * groundBloodSpatters.length ) ]\r\n      ]\r\n  ))\r\n  \r\n  let sprite\r\n  if (type === 'bullet impact') {\r\n    sprite = getRandomRoundBulletImpact()\r\n  }\r\n  if (type === 'blood spatter') {\r\n    sprite = getRandomBloodSpatter()\r\n  }\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * (bodyPart ? .2 : .5)\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  if (\r\n    sprite.position.x - sprite.width > ground.bounds.min.x ||\r\n    sprite.position.x + (sprite.width/2) < ground.bounds.max.x\r\n    ) {\r\n  }\r\n  // re-add player sprites on-top\r\n  let player = gameObjects.getKeyValue('player')\r\n  if (!player.dead) {\r\n    player.sprites.forEach(s => { container.addChild(s) })\r\n  }\r\n\r\n  let positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n  World.add(world, positionalBody)\r\n\r\n  this.renderPosition = renderFn => {\r\n    sprite.position = renderFn(positionalBody)\r\n    if (container && container.children.indexOf(sprite) === -1) {\r\n      container.addChild(sprite)\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    World.remove(world, positionalBody)\r\n    container.removeChild(sprite)\r\n    let idx = groundFx.indexOf(this)\r\n    if (idx > -1) {\r\n      groundFx.splice(idx, 1)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    groundFx = null\r\n    fxSheet = null\r\n    bulletTextures = null\r\n    groundBloodSpatters = null\r\n    positionalBody = null\r\n  }\r\n\r\n  const tweenOut = () => {\r\n    to(sprite, .5, {\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        this.destroy()\r\n      }\r\n    })\r\n  }\r\n  delayedCall(1, tweenOut)\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { Body, Render, World } from 'matter-js'\r\nimport { getBodyWidth, getBodyHeight, getPlayerPartByType, makePixiSprite } from './utils/Utils'\r\nimport { setLastDirection, setCurrentDirection, setJumping, setLastMagDropped, setMouseRelativeToPlayerPosition, setPlayerPosition, setZombiesOnLeft, setZombiesOnRight, setAchievementOwned, AchievementDefs } from './gameSlice'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET } from './constants/weapons'\r\nimport { MOUSE_DOWN, GREATER_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_X_POS } from './constants/mouseStates'\r\nimport { firePistol, fireSMG, fireShotgun, calcPistolDamage, calcShotgunDamage, calcSMGDamage, calcTurretDamage } from './player/fireWeapons'\r\nimport Crosshairs from './player/crosshairs'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { FELL_OFF } from './constants/DeathTypes'\r\nimport store from '../../app/store'\r\nimport GroundEffect from './FX/GroundEffect'\r\nimport Spark from './FX/Sparks'\r\nimport { degrees } from 'radians'\r\nimport WallTile from './WallTile'\r\nimport { updateScore } from './utils/updateScore'\r\n\r\nconst { getState, dispatch } = store\r\nlet { width, height } = getState().game\r\nconst { TweenLite: { delayedCall } } = window\r\n\r\nconst createCollision = (e, i, { body1_label, body2_label, callback }) => {\r\n  let bodies = {}\r\n  if (e.pairs[i].bodyA.label.indexOf(body1_label) > -1 && e.pairs[i].bodyB.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyA\r\n    bodies.body2 = e.pairs[i].bodyB\r\n    callback(bodies)\r\n  } else if (e.pairs[i].bodyB.label.indexOf(body1_label) > -1 && e.pairs[i].bodyA.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyB\r\n    bodies.body2 = e.pairs[i].bodyA\r\n    callback(bodies)\r\n  }\r\n}\r\n\r\nconst calculateDamageAmount = (weapon_str, body) => {\r\n  if (weapon_str === WEAPON_TYPE_PISTOL) { return calcPistolDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SMG) { return calcSMGDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SHOTGUN) { return calcShotgunDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_TURRET) { return calcTurretDamage(body) }\r\n  return calcPistolDamage(body)\r\n}\r\n\r\nexport const checkCollisionStart = (e, i, gameObjects) => {\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ground',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'barrier',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'gib',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter'))\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'zombie body part',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let zombieBodyPartBool = true\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter', zombieBodyPartBool))      \r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'player character',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let world = gameObjects.getKeyValue('world')\r\n      World.remove(world, bodies.body1)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'turret bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_TURRET, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part, null, null, 'turret')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_PISTOL, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SMG, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SHOTGUN, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'extra damage bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { max } = getState().game.player.weapons.damage[\r\n          getState().game.player.weapons.equipped\r\n        ]\r\n        bodies.body2.main.takeDamage(max * 3, 'head', 'critical')\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (getState().game.lastMagDropped && JSON.parse(getState().game.lastMagDropped) + 200 < Date.now()) {\r\n        let snd = gameObjects.getKeyValue('mag-drop-sound')\r\n        snd.play()\r\n      }\r\n      dispatch(\r\n        setLastMagDropped( JSON.stringify(Date.now()) )\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.takeDamage(20, 'head')\r\n      }\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF7500 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox',\r\n    body2_label: 'enemy zombie body',\r\n    callback: bodies => {\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF0000 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n      // apply extra knockback\r\n      let direction = getState().game.player.variables.currentDirection \r\n      let x = 0\r\n      let knockback = getState().game.player.upgradeTiers.melee.current * 3\r\n      while(x < 10) {\r\n        x++\r\n        Body.translate(bodies.body2, {\r\n          x: direction === 'right' ? -knockback : knockback,\r\n          y: -0.25\r\n        })\r\n      }\r\n      // increase score\r\n      updateScore( getState().game.scoreAmounts.meleeConnect )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox pistol',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_PISTOL]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox smg',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SMG]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox shotgun',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SHOTGUN]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg, null, null, true)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'clustermine explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'landmine')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrel explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'barrel explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill(null, null, 'grenade explosion')\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'enemy',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        delayedCall(.1, () => {\r\n          bodies.body2.main.explode()\r\n          if (\r\n            bodies.body2.distance.start - bodies.body2.distance.end > 2000 ||\r\n            bodies.body2.distance.end - bodies.body2.distance.start > 2000\r\n            ) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.FROM_DOWNTOWN )\r\n            )\r\n            updateScore( getState().game.scoreAmounts.achievement )\r\n          }\r\n        })\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.takeDamage) {\r\n        let dmg = getState().game.enemies.zombies.attackDmg, player = bodies.body1.main\r\n        if (!player.playerHit) {\r\n          player.takeDamage(dmg)\r\n        }\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'explosive barrier',\r\n    body2_label: 'bullet',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n      gameObjects.getKeyValue('spark-sprites').push(\r\n        new Spark(1, bodies.body2, { scale: .5, animationSpeed: 2.0 })\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrier',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'health drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectHealth) {\r\n        player.collectHealth(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ammo drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectAmmo) {\r\n        player.collectAmmo(bodies.body2.ammo_type, bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('ammo-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'currency drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectCredits) {\r\n        player.collectCredits(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('coin-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'shotgun shell',\r\n    callback: bodies => {\r\n      let snd = gameObjects.getKeyValue('shot-shell-sound')\r\n      snd.play()\r\n      snd.fade(1, 0, 200)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      let grenadeClink = gameObjects.getKeyValue('grenade-clink-sound')\r\n      grenadeClink.play()\r\n      grenadeClink.fade(1, 0, 500)\r\n    }\r\n  })\r\n}\r\n\r\nlet gameTickVarsDefined = false\r\nlet weaponsUI, render, groundTex, groundBody, groundFx, player, playerBody, acceleration ,pistolBullets, pistolBulletWd, pistolBulletHt, bulletImpacts,\r\npistolShells, pistolShellWd, pistolShellHt, ammoDrops, pistolAmmoDrops, smgAmmoDrops, shotgunAmmoDrops, creditDrops, crosshair, crosshairs, zombies, zombieRags,\r\nbuildObjects, gibs, grenades, explosions, rocks, woodPlanks, container, gameWidth, leftEnemyCount, rightEnemyCount, leftEnemyCountDisplay, rightEnemyCountDisplay,\r\nexplosionSprites, sparkSprites, healthdrops, wallTile\r\n\r\nconst getZombieRadarTextStyle = (count) => ({\r\n  fill: count === 0  ? '#00e595' : '#FF0000',\r\n  fontSize: 12\r\n})\r\n\r\nexport const gameTickHandler = (e, gameObjects) => {\r\n\r\n  if (!gameTickVarsDefined) {\r\n    render = gameObjects.getKeyValue('render')\r\n    container = gameObjects.getKeyValue('container')\r\n    gameWidth = gameObjects.getKeyValue('game-width')\r\n    weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    groundTex = gameObjects.getKeyValue('ground-texture')\r\n    groundBody = gameObjects.getKeyValue('ground')\r\n    groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n    acceleration = getState().game.player.variables.acceleration.min\r\n    // zombies left / right counters\r\n    leftEnemyCountDisplay = new PIXI.Text('')\r\n    leftEnemyCountDisplay.position = { x: 10, y: 5 }\r\n    rightEnemyCountDisplay = new PIXI.Text('zombies on right: 0')\r\n    rightEnemyCountDisplay.pivot.x = rightEnemyCountDisplay.width * .075\r\n    rightEnemyCountDisplay.position = { x: gameWidth, y: 5 }\r\n    // player \r\n    player = gameObjects.getKeyValue('player')\r\n    playerBody = getPlayerPartByType('body', gameObjects)\r\n    crosshairs = new Crosshairs(gameObjects)\r\n    crosshair = crosshairs.crosshair\r\n    gameObjects.setKeyValue('crosshair-shape', crosshairs.crosshair)\r\n    gameObjects.setKeyValue('crosshair', crosshair)\r\n    // items\r\n    gibs = gameObjects.getKeyValue('gibs')\r\n    grenades = gameObjects.getKeyValue('grenades')\r\n    explosions = gameObjects.getKeyValue('explosions')\r\n    rocks = gameObjects.getKeyValue('rocks')\r\n    woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n    buildObjects = gameObjects.getKeyValue('build-objects')\r\n    explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n    // container\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n    wallTile = new WallTile()\r\n    let gradientAlpha = gameObjects.getKeyValue('gradient-alpha')\r\n    gradientAlpha.alpha = .75\r\n    container.addChild( wallTile, gradientAlpha, groundTex )\r\n    player.addSpritesInOrder()\r\n    container.addChild( leftEnemyCountDisplay )\r\n    container.addChild( rightEnemyCountDisplay )\r\n    // vars declared?\r\n    gameTickVarsDefined = true\r\n  }\r\n\r\n  // enemies\r\n  zombies = gameObjects.getKeyValue('zombies')\r\n  zombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n  // items \r\n  pistolShells = gameObjects.getKeyValue('pistol-shells')\r\n  pistolBullets = gameObjects.getKeyValue('pistol-bullets')\r\n  bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n  ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n  creditDrops = gameObjects.getKeyValue('currency-drops')\r\n  healthdrops = gameObjects.getKeyValue('health-drops')\r\n  pistolAmmoDrops = ammoDrops[WEAPON_TYPE_PISTOL]\r\n  smgAmmoDrops = ammoDrops[WEAPON_TYPE_SMG]\r\n  shotgunAmmoDrops = ammoDrops[WEAPON_TYPE_SHOTGUN]\r\n\r\n  let {\r\n    game: {\r\n      keys,\r\n      // width: gameWidth,\r\n      // height: gameHeight,\r\n      gameState,\r\n      gameSubState,\r\n      mouseState,\r\n      mousePosition,\r\n      player: {\r\n        variables: { magnetism, magnetismSpeed, currentDirection, jumping, acceleration: { max: accelMax }, deceleration },\r\n        weapons: { laser: laserSight, equipped, totalAmmo: { grenades: grenadesCount } }\r\n      },\r\n      enemies: {\r\n        zombies: {\r\n          zombieAttackLimiter,\r\n          zombieAttackDistance\r\n        }\r\n      },\r\n      traps: {\r\n        turret: { fireDistance }\r\n      },\r\n      mouseState: { x: mx, y: my, btn: mouseButtonState }\r\n    }\r\n  } = getState()\r\n  let mPosRel = {\r\n    x: mousePosition.x + playerBody.position.x - (width / 2),\r\n    y: mousePosition.y + playerBody.position.y - (height / 2)\r\n  }\r\n  dispatch(setMouseRelativeToPlayerPosition({ x: mPosRel.x, y: mPosRel.y }))\r\n\r\n  // Render pixi graphics in-line with matter objects\r\n  const renderPositionFn = part => {\r\n    return {\r\n      x: part.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration),\r\n      y: part.position.y - playerBody.position.y + (height / 2),\r\n      rotation: part.angle\r\n    }\r\n  }\r\n\r\n  if (gameState === GameStates.GAMEPLAY) {\r\n\r\n    // render tile bg\r\n    wallTile.renderPosition(renderPositionFn, playerBody, acceleration)\r\n    // wallTile.onUpdate()\r\n\r\n    // Player weapons\r\n    // check if firing\r\n    if (mouseButtonState === MOUSE_DOWN && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // check weapon type\r\n      if (equipped === WEAPON_TYPE_PISTOL) { firePistol(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SMG) { fireSMG(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SHOTGUN) { fireShotgun(gameObjects) }\r\n    }\r\n\r\n    // console.log(width, height)\r\n\r\n    // Set render view to follow player\r\n    Render.lookAt(render, {\r\n      min: { x: playerBody.position.x + (width / 2), y: playerBody.position.y - (height / 2) },\r\n      max: { x: playerBody.position.x - (width / 2), y: playerBody.position.y + (height / 2) }\r\n    })\r\n\r\n    // Player movement / controls\r\n    Body.setAngle(playerBody, 0)\r\n\r\n    if (!weaponsUI.reloading && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // movement\r\n      if (keys.indexOf(68) > -1 || keys.indexOf(65) > -1) {\r\n        if (acceleration < accelMax) {\r\n          acceleration += .25\r\n        }\r\n      } else {\r\n        dispatch(setLastDirection(currentDirection))\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1 && keys.indexOf(65) > -1) {\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1) {\r\n        dispatch(setCurrentDirection('right'))\r\n        Body.translate(playerBody, { x: acceleration, y: 0 })\r\n      }\r\n      if (keys.indexOf(65) > -1) {\r\n        dispatch(setCurrentDirection('left'))\r\n        Body.translate(playerBody, { x: -acceleration, y: 0 })\r\n      }\r\n\r\n      // grenades\r\n      if (keys.indexOf(71) > -1 && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n        }\r\n      }\r\n      if (getState().game.rightMouseDown && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n          console.log('should charge grenade from engineHandlers')\r\n        }\r\n      }\r\n    }\r\n\r\n    let { x: playerPosX, y: playerPosY } = renderPositionFn(playerBody)\r\n    dispatch(setPlayerPosition({ x: playerPosX, y: playerPosY }))\r\n\r\n    // render health drops\r\n    healthdrops.forEach(health => {\r\n      health.renderPosition(renderPositionFn)\r\n    })\r\n\r\n    // render ammo boxes\r\n    pistolAmmoDrops.concat(\r\n      smgAmmoDrops\r\n    ).concat(\r\n      shotgunAmmoDrops\r\n    ).forEach(box => {\r\n      box.positionAmmoBox(renderPositionFn)\r\n      if (box.body && box.body.position.y > 500) {\r\n        box.destroy()\r\n      }\r\n      if (box.body) {\r\n        if (playerBody.position.x > box.body.position.x && ((playerBody.position.x - box.body.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: magnetismSpeed, y: 0 })\r\n        }\r\n        if (playerBody.position.x < box.body.position.x && ((box.body.position.x - playerBody.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: -magnetismSpeed, y: 0 })\r\n        }\r\n      }\r\n    })\r\n\r\n    // render currency drops\r\n    creditDrops.forEach(coin => {\r\n      coin.positionCreditGfx(renderPositionFn)\r\n      if (coin.creditBody && coin.creditBody.position.y > 500) {\r\n        coin.destroy()\r\n      }\r\n      if (coin.creditBody) {\r\n        if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: (magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n        if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: -(magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: -magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // render player graphics\r\n    player.setBodySpritesPositions({ mx, fn: renderPositionFn })\r\n    player.setArmsSpritePosition({ mx, my, fn: renderPositionFn })\r\n    player.positionHeadSprite({ mx, my, fn: renderPositionFn })\r\n    player.renderGrenadeChargeMeter(renderPositionFn)\r\n\r\n    if (player.charRunSprite && player.charIdleSprite && player.charJumpSprite) {\r\n\r\n      if (keys.indexOf(65) > -1 || keys.indexOf(68) > -1) {\r\n        if (!jumping) {\r\n          player.charRunSprite.play()\r\n          player.charRunSprite.visible = true\r\n          player.charIdleSprite.visible = false\r\n          player.stopJumpAnimation()\r\n        }\r\n      } else {\r\n        player.charRunSprite.stop()\r\n        player.charRunSprite.visible = false\r\n        player.charIdleSprite.visible = true\r\n        // added below lines to stop sprites overlapping\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnims.forEach(sprite => { sprite.visible = false })\r\n      }\r\n\r\n      if (\r\n        (keys.indexOf(65) > -1 && mouseState.x === GREATER_THAN_PLAYER_X_POS) ||\r\n        (keys.indexOf(68) > -1 && mouseState.x === LESS_THAN_PLAYER_X_POS)\r\n      ) {\r\n        player.charRunSprite.animationSpeed = -1\r\n      } else {\r\n        player.charRunSprite.animationSpeed = 1\r\n      }\r\n\r\n      if (mouseState.x === GREATER_THAN_PLAYER_X_POS) {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = -1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = -1 })\r\n        player.headSprite.scale.y = -1\r\n      } else {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = 1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = 1 })\r\n        player.headSprite.scale.y = 1\r\n      }\r\n\r\n      if (weaponsUI.reloading) {\r\n        player.bodySprites.forEach(sprite => { sprite.visible = false })\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnimsByType[equipped].visible = true\r\n        player.charIdleSprite.visible = false\r\n      } else {\r\n        if (player.armsSpritesByType[equipped]) {\r\n          player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.visible = true\r\n          })\r\n          player.reloadAnimsByType[equipped].visible = false\r\n        }\r\n      }\r\n\r\n      if (jumping || weaponsUI.reloading || player.meleeAttackInProgress || player.grenadeThrowInProgress) {\r\n        player.headSprite.visible = false\r\n      } else {\r\n        player.headSprite.visible = true\r\n      }\r\n\r\n      if (!jumping) {\r\n        player.stopJumpAnimation()\r\n      } else {\r\n        player.charIdleSprite.visible = false\r\n        if (player.charJumpSprite.currentFrame < 2) {\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.y += 80\r\n          })\r\n        }\r\n      }\r\n\r\n      if (player.meleeAttackInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.meleeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n      if (player.grenadeThrowInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.grenadeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    // render player ragdoll\r\n    if (gameObjects.getKeyValue('player-ragdoll') !== null) {\r\n      let playerRag = gameObjects.getKeyValue('player-ragdoll')\r\n      if (playerRag && playerRag.animateRagParts) {\r\n        playerRag.animateRagParts(renderPositionFn)\r\n      }\r\n    }\r\n\r\n  } // -- end if gameState === GameState.GAMEPLAY\r\n\r\n  if (player.body.position.y > 500) {\r\n    player.kill(FELL_OFF)\r\n  }\r\n\r\n  // render pistol shells\r\n  for (let i = 0; i < pistolShells.length; ++i) {\r\n    if (!pistolShellWd) { pistolShellWd = getBodyWidth(pistolShells[i].body) }\r\n    if (!pistolShellHt) { pistolShellHt = getBodyHeight(pistolShells[i].body) }\r\n    pistolShells[i].gfc.position.x = pistolShells[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolShells[i].gfc.position.y = pistolShells[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolShells[i].gfc.rotation = equipped === WEAPON_TYPE_SHOTGUN ? pistolShells[i].body.angle + degrees(90) : pistolShells[i].body.angle\r\n  }\r\n  // render pistol bullets\r\n  for (let i = 0; i < pistolBullets.length; ++i) {\r\n    if (!pistolBulletWd) { pistolBulletWd = getBodyWidth(pistolBullets[i].body) }\r\n    if (!pistolBulletHt) { pistolBulletHt = getBodyHeight(pistolBullets[i].body) }\r\n    pistolBullets[i].gfc.position.x = pistolBullets[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolBullets[i].gfc.position.y = pistolBullets[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolBullets[i].gfc.rotation = pistolBullets[i].body.angle\r\n  }\r\n\r\n  // render grenades\r\n  grenades.forEach(grenade => {\r\n    grenade.animate(renderPositionFn)\r\n  })\r\n\r\n  // explosions tracking\r\n  explosions.forEach(explosion => {\r\n    explosion.calcRenderedPosition(renderPositionFn)\r\n  })\r\n  rocks.forEach(rock => { rock.animate(renderPositionFn) })\r\n  woodPlanks.forEach(wood => { wood.animate(renderPositionFn) })\r\n\r\n  // update ejected mags\r\n  player.updateEjectedMagPositions(renderPositionFn)\r\n\r\n  // render gibs / guts \r\n  gibs.forEach(gib => {\r\n    gib.animate(renderPositionFn)\r\n  })\r\n\r\n  // for zombie count radar\r\n  leftEnemyCount = 0\r\n  rightEnemyCount = 0\r\n\r\n  // keep zombie arm angle inline with player position\r\n  zombies.forEach(zombie => {\r\n    zombie.setPlayerVars({ player, playerDirection: currentDirection, playerBody })\r\n    if (!zombie.paused) {\r\n      zombie.walk()\r\n    }\r\n    Body.setAngle(zombie.body, 0)\r\n    zombie.setSpritesPositions(renderPositionFn)\r\n    // kill zombies who fall off the ledge\r\n    if (zombie.body.position.y > 500) {\r\n      let killType = 'fell off'\r\n      zombie.kill(null, null, killType)\r\n    }\r\n    // trigger zombie attack\r\n    if (\r\n      (playerBody.position.x > zombie.body.position.x && ((playerBody.position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n      (playerBody.position.x < zombie.body.position.x && ((zombie.body.position.x - playerBody.position.x) < zombieAttackDistance))) {\r\n      if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n        zombie.attack()\r\n      }\r\n    }\r\n    // trigger attack if next to a wall\r\n    buildObjects.forEach(obj => {\r\n      if (obj && !obj.destroyed && obj.getBody().label !== 'remote mine trap') {\r\n        // zombie attack barrier control \r\n        if (\r\n          (obj.getBody().position.x > zombie.body.position.x && ((obj.getBody().position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n          (obj.getBody().position.x < zombie.body.position.x && ((zombie.body.position.x - obj.getBody().position.x) < zombieAttackDistance))) {\r\n          if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n            if (obj.getBody().label !== 'landmine trap') {\r\n              zombie.attack()\r\n            }\r\n          }\r\n        }\r\n        // turret fire control\r\n        if (\r\n          obj.direction && obj.direction === 'right' && zombie.body.position.x > obj.getBody().position.x - 10 && zombie.body.position.x - obj.getBody().position.x < fireDistance ||\r\n          obj.direction && obj.direction === 'left' && zombie.body.position.x < obj.getBody().position.x - 10 && obj.getBody().position.x - zombie.body.position.x < fireDistance\r\n          ) {\r\n            obj.shoot()\r\n        }\r\n      }\r\n    })\r\n    // count zombies on left and right side of player\r\n    if (!zombie.dead) {\r\n      if (zombie.body.position.x < playerBody.position.x) {\r\n        leftEnemyCount += 1\r\n      }\r\n      if (zombie.body.position.x > playerBody.position.x) {\r\n        rightEnemyCount += 1\r\n      }\r\n    }\r\n  })\r\n  \r\n  // build traps and barriers\r\n  buildObjects.forEach(obj => {\r\n    if (obj && !obj.destroyed && obj.displayBarrierStrength) {\r\n      obj.displayBarrierStrength(renderPositionFn)\r\n    }\r\n    if (obj.updatePosition) {\r\n      obj.updatePosition(renderPositionFn)\r\n    }\r\n  })\r\n\r\n  // double-check in case radar counts are inaccurate\r\n  if (getState().game.waveCountToDefeat === 0 || getState().game.waveCountToDefeat === null) {\r\n    // for zombie count radar\r\n    leftEnemyCount = 0\r\n    rightEnemyCount = 0\r\n  }\r\n\r\n  // update zombie count on sides of player\r\n  leftEnemyCountDisplay.text = `${leftEnemyCount}`\r\n  leftEnemyCountDisplay.style = getZombieRadarTextStyle(leftEnemyCount)\r\n  rightEnemyCountDisplay.text = `${rightEnemyCount}`\r\n  rightEnemyCountDisplay.style = getZombieRadarTextStyle(rightEnemyCount)\r\n\r\n  zombieRags.forEach(rag => {\r\n    rag.animateRagParts(renderPositionFn)\r\n  })\r\n\r\n  // render crosshair\r\n  if (gameSubState !== SubStates.PLAYER_DEATH) {\r\n    crosshair.position = mousePosition\r\n  }\r\n\r\n  if (crosshair.changed) {\r\n    crosshair = crosshair._new\r\n    crosshair.changed = false\r\n  }\r\n\r\n  // if crosshair is an arrow..\r\n  if (crosshair.changeBack) {\r\n    container.removeChild(crosshair)\r\n    crosshair = crosshairs.crosshair\r\n    container.addChild(crosshairs.crosshair)\r\n    crosshair.changeBack = false\r\n  }\r\n\r\n  // ground\r\n  groundTex.position = renderPositionFn(groundBody)\r\n\r\n  // bullet impacts\r\n  bulletImpacts.forEach(impact => { impact.renderPosition(renderPositionFn) })\r\n  groundFx.forEach(fx => { fx.renderPosition(renderPositionFn) })\r\n\r\n  // fx\r\n  explosionSprites.forEach(ex => { ex.renderPosition(renderPositionFn) })\r\n  sparkSprites.forEach(spark => { spark.renderPosition(renderPositionFn) })\r\n\r\n  // keep cursor on top\r\n  container.addChild(crosshairs.crosshair)\r\n\r\n}\r\n","import { Texture } from '@pixi/core'\r\nimport { TilingSprite } from '@pixi/sprite-tiling'\r\nimport store from '../../app/store'\r\n\r\nexport default class WallTile extends TilingSprite {\r\n    constructor() {\r\n        // console.log(gameObjects)\r\n        const texture = Texture.from(\r\n          window.gameObjects.getKeyValue('wall-tile')\r\n        )\r\n        super(texture, 1, texture.height) //width 1 because we will call onResize from App anyway\r\n        this.width = window.gameObjects.getKeyValue('game-width')\r\n        this.height = window.gameObjects.getKeyValue('game-height')\r\n        this.alpha = .2\r\n    }\r\n\r\n    onResize(width, height) {\r\n        // this.width = width\r\n    }\r\n\r\n    onUpdate(delta) {\r\n    \tthis.tilePosition.x -= delta * 4\r\n    }\r\n\r\n    renderPosition(renderFn, body, acceleration) {\r\n      let { x, y } = renderFn(body)\r\n      let { getState } = store\r\n      let { game: { keys, player: { variables: { currentDirection, jumping } } } } = getState()\r\n      if (currentDirection === 'right' && keys.indexOf(68) > -1) {\r\n        this.tilePosition.x -= .35 //(acceleration * .25)\r\n      }\r\n      if (currentDirection === 'left' && keys.indexOf(65) > -1) {\r\n        this.tilePosition.x += .35 //(acceleration * .25)\r\n      }\r\n      if (jumping) {\r\n        this.tilePosition.y += .25\r\n      }\r\n      // let player = window.gameObjects.getKeyValue('player')\r\n      // console.log( player.body )\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { makePixiSprite } from '../utils/Utils'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { decrementTotalAmmo, setWeaponEquipped } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport GameStates from '../constants/GameStates'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow'\r\n \r\nconst { getState, dispatch } = store\r\n\r\nconst { TweenLite: { to, from } } = window\r\n\r\nexport default function WeaponsUI () {\r\n\tlet { gameObjects } = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tlet pistolIcon = makePixiSprite('weapon-ui-icon-pistol')\r\n\tlet smgIcon = makePixiSprite('weapon-ui-icon-smg')\r\n\tlet shotgunIcon = makePixiSprite('weapon-ui-icon-shotgun')\r\n  let icons = []\r\n\r\n  let mags\r\n  \r\n  let weaponShadow = new DropShadowFilter({ distance: 3.0, alpha: 1.0 })\r\n  let bulletShadow = new DropShadowFilter({ distance: 1.0, alpha: 2.0 })\r\n\r\n  let iconBG = new PIXI.Graphics()\r\n  iconBG.beginFill(0x425041)\r\n  iconBG.drawRect(0, 0, 120, 90)\r\n  iconBG.alpha = .65\r\n  iconBG.position.x = gameWidth - iconBG.width - 20\r\n  iconBG.position.y = gameHeight - iconBG.height - 20\r\n  // iconBG.filters = [ bulletShadow ]\r\n  container.addChild(iconBG)\r\n\r\n\tpistolIcon.width = pistolIcon.width/2\r\n\tpistolIcon.height = pistolIcon.height/2\r\n\ticons.push(pistolIcon)\r\n\r\n\tsmgIcon.width = smgIcon.width/2\r\n\tsmgIcon.height = smgIcon.height/2\r\n  icons.push(smgIcon)\r\n  \r\n  shotgunIcon.width = shotgunIcon.width/2\r\n\tshotgunIcon.height = shotgunIcon.height/2\r\n  icons.push(shotgunIcon)\r\n\r\n\ticons.forEach(icon => {\r\n\t\ticon.position.x = gameWidth - (icon.width + 20)\r\n\t\ticon.position.y = gameHeight - (icon.height + 10)\r\n    icon.alpha = 0\r\n    // icon.filters = [ weaponShadow ]\r\n\t\tcontainer.addChild(icon)\r\n  })\r\n\r\n  this.keepOnTop = () => {\r\n    container.addChild(iconBG)\r\n    icons.forEach(icon => { container.addChild(icon) })\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL]\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG]\r\n    )\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    )\r\n    .forEach(b => { container.addChild(b) })\r\n    this.grenades.forEach(g => { container.addChild(g) })\r\n    if (this.shaking && !this.reloading) {\r\n      container.addChild(this.emptyText)\r\n    }\r\n  }\r\n  setInterval(this.keepOnTop, 1000)\r\n\r\n  let magazinesByWeaponType = {\r\n\t\t'pistol weapon': null,\r\n\t\t'smg weapon': null,\r\n\t\t'shotgun weapon': null,\r\n  }\r\n\r\n  let bulletMask = new PIXI.Graphics()\r\n  bulletMask.beginFill(0xffffff)\r\n  bulletMask.drawRect(pistolIcon.position.x, pistolIcon.position.y, pistolIcon.width, pistolIcon.height)\r\n  container.addChild(bulletMask)\r\n\r\n  if (!window.gameObjects.getKeyValue('bullet-shell-bevel-ui')) {\r\n    window.gameObjects.setKeyValue('bullet-shell-bevel-ui', new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 }))\r\n  }\r\n  let bulletBevel = window.gameObjects.getKeyValue('bullet-shell-bevel-ui')\r\n\r\n  let makePistolMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL] = magazinesByWeaponType[WEAPON_TYPE_PISTOL].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xBFA522)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 27 - pistolIcon.width/magazinesByWeaponType[WEAPON_TYPE_PISTOL].length * i\r\n      bulletGfc.position.y = pistolIcon.position.y + pistolIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeSMGMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG] = magazinesByWeaponType[WEAPON_TYPE_SMG].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xCEC182)\r\n      bulletGfc.drawRect(0, 0, 2, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5 })\r\n      // bulletGfc.filters = [ bevel ]\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 24 - smgIcon.width/magazinesByWeaponType[WEAPON_TYPE_SMG].length * i\r\n      bulletGfc.position.y = smgIcon.position.y + smgIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeShotgunMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN] = magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x3E1313)\r\n      bulletGfc.beginFill(0xB00000)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      bulletGfc.beginFill(0xBCA845)\r\n      bulletGfc.drawRect(0, 8, 4, 3)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .25 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 32 - shotgunIcon.width/magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].length * i\r\n      bulletGfc.position.y = shotgunIcon.position.y + shotgunIcon.height - 26\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      // SMG bullets too small for bevel filter\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [ bulletBevel ] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [ bulletBevel ] })\r\n      if (this.grenades && this.gbevel && this.gnoise) {\r\n        this.grenades.forEach(g => { g.filters = [ this.gbevel, this.gnoise ] })\r\n      }\r\n    } else {\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [] })\r\n      if (this.grenades) {\r\n        this.grenades.forEach(g => { g.filters = [] })\r\n      }\r\n    }\r\n  }\r\n  \r\n  let makeMagByType = {\r\n    'pistol weapon': makePistolMag,\r\n    'smg weapon': makeSMGMag,\r\n    'shotgun weapon': makeShotgunMag,\r\n  }\r\n\r\n\tlet weaponIcons = {\r\n\t\t'pistol weapon': pistolIcon,\r\n\t\t'smg weapon': smgIcon,\r\n\t\t'shotgun weapon': shotgunIcon,\r\n  }\r\n\r\n  this.updateMagazine = type => {\r\n    let { game: { player: { weapons: { ammoCapacity } } } } = getState()\r\n    if (magazinesByWeaponType[type]) {\r\n      magazinesByWeaponType[type].forEach(b => { b.destroy() })\r\n      magazinesByWeaponType[type] = null\r\n    }\r\n    magazinesByWeaponType[type] = new Array(ammoCapacity[type]).fill(1)\r\n    makeMagByType[type]()\r\n  }\r\n\r\n  // initialize magazines\r\n  this.updateMagazine(WEAPON_TYPE_PISTOL)\r\n  this.updateMagazine(WEAPON_TYPE_SMG)\r\n  this.updateMagazine(WEAPON_TYPE_SHOTGUN)\r\n  mags = [\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n  ]\r\n\r\n  this.swapSwap = (wep) => {\r\n    let { list, equipped } = getState().game.player.weapons\r\n    magazineIndexes[wep] = 0\r\n    let idx = list.indexOf(wep)\r\n    if (idx > -1) {\r\n      this.select(\r\n        list[idx + 1] ?\r\n        list[idx + 1] :\r\n        list[0]\r\n      )\r\n    }\r\n    window.TweenLite.delayedCall(.05, () => {\r\n      this.select(equipped)\r\n    })\r\n  }\r\n\r\n  this.updateWeaponMagazines = wep => {\r\n    let { list } = getState().game.player.weapons\r\n    mags.forEach(mag => { mag.forEach(b => { container.removeChild(b) }) })\r\n    list.forEach(wep => { this.updateMagazine(wep) })\r\n    mags = [\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    ]\r\n    this.reload(true)\r\n    dispatch( setWeaponEquipped(wep) )\r\n    this.swapSwap(wep) // switch to another weapon, the switch back to correct the ammo display\r\n  }\r\n\r\n\tlet magazineIndexes = {\r\n\t\t'pistol weapon': 0,\r\n\t\t'smg weapon': 0,\r\n\t\t'shotgun weapon': 0,\r\n\t}\r\n\r\n\tlet magEmptyBools = {\r\n\t\t'pistol weapon': false,\r\n\t\t'smg weapon': false,\r\n\t\t'shotgun weapon': false,\r\n  }\r\n\r\n  this.checkEmpty = weapon_str => magEmptyBools[weapon_str]\r\n  \r\n  const doTheWiggle = (icon, defaultPos, callback) => {\r\n    to(icon, .1, {\r\n      x: defaultPos + 10,\r\n      onComplete: () => {\r\n        to(icon, .1, {\r\n          x: defaultPos - 10,\r\n          onComplete: () => {\r\n            to(icon, .1, {\r\n              x: defaultPos + 5,\r\n              onComplete: () => {\r\n                to(icon, .1, {\r\n                  x: defaultPos - 5,\r\n                  onComplete: () => {\r\n                    to(icon, .1, {\r\n                      x: defaultPos + 3,\r\n                      onComplete: () => {\r\n                        to(icon, .1, {\r\n                          x: defaultPos - 2,\r\n                          onComplete: () => {\r\n                            to(icon, .1, {\r\n                              x: defaultPos + 1,\r\n                              onComplete: () => {\r\n                                to(icon, .1, {\r\n                                  x: defaultPos,\r\n                                  onComplete: () => {\r\n                                    this.shaking = false\r\n                                    callback()\r\n                                  }\r\n                                })\r\n                              }\r\n                            })\r\n                          }\r\n                        })\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  this.textForEmptyShake = 'RELOAD'\r\n  this.changeTextForEmptyShake = str => {\r\n    this.textForEmptyShake = str\r\n    this.emptyText.text = str\r\n  }\r\n\r\n  this.emptyText = new PIXI.Text(this.textForEmptyShake, { fill: 0xB00000, fontSize: '15px', fontWeight: 'bold' })\r\n  this.emptyText.pivot.x = this.emptyText.width * .5\r\n  this.emptyText.pivot.y = this.emptyText.height * .5\r\n  this.emptyText.position.x = iconBG.position.x + iconBG.width * .5\r\n  this.emptyText.position.y = iconBG.position.y + iconBG.height * .8\r\n  this.removeEmptyText = () => {\r\n    container.removeChild(this.emptyText)\r\n  }\r\n\r\n  this.shaking = false\r\n  this.emptyMagShake = () => {\r\n    container.addChild(this.emptyText)\r\n    if (!this.shaking) {\r\n      this.shaking = true\r\n      icons.forEach(icon => {\r\n        let defaultPos = icon.position.x\r\n        doTheWiggle(icon, defaultPos, this.removeEmptyText)\r\n      })\r\n      doTheWiggle(iconBG, iconBG.position.x, this.removeEmptyText)\r\n    }\r\n  }\r\n\r\n\tthis.reloading = false\r\n\tthis.reload = (forceReload) => {\r\n\t\tif (!this.reloading || forceReload) {\r\n\t\t\tlet { game: { player: { weapons: { reloadAnimationFrames, equipped, totalAmmo } } } } = getState()\r\n      this.removeEmptyText()\r\n      if (magazineIndexes[equipped] !== 0 && totalAmmo[equipped] !== 0 || forceReload) {\r\n        if (forceReload) { magazineIndexes[equipped] = 0 }\r\n        this.reloading = true\r\n\t\t\t\tlet ammoCheck = totalAmmo[equipped] < magazinesByWeaponType[equipped].length\r\n\t\t\t\tmagazinesByWeaponType[equipped].forEach((b, i) => { b.alpha = 0 })\r\n\t\t\t\tfor (let i = 0, limit = (ammoCheck ? totalAmmo[equipped] : magazinesByWeaponType[equipped].length); i < limit; ++i) {\r\n\t\t\t\t\tlet b = magazinesByWeaponType[equipped][i]\r\n\t\t\t\t\tb.alpha = 1\r\n\t\t\t\t\tfrom(b, reloadAnimationFrames[equipped]/60, {\r\n\t\t\t\t\t\tx: gameWidth - (b.width * i),\r\n\t\t\t\t\t\tonComplete: (_i) => {\r\n\t\t\t\t\t\t\tif (_i === limit-1) {\r\n\t\t\t\t\t\t\t\tmagazineIndexes[equipped] = 0\r\n                magEmptyBools[equipped] = false\r\n                this.lastBulletByWepType[equipped] = false\r\n                if (forceReload) {\r\n                  this.reloading = false\r\n                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (totalAmmo[equipped] === 0) {\r\n\t\t\t\t\t\t\t\tthis.reloading = false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonCompleteParams: [i]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  // forceWepEquipped is a weapon type string\r\n\tthis.select = (forceWepEquipped) => {\r\n    let { game: { player: { weapons: { totalAmmo, equipped } } } } = getState()\r\n    icons.forEach(icon => { icon.alpha = 0 })\r\n\t\tmags.forEach(m => {\r\n      m.forEach(b => {\r\n        if (b && b.hasOwnProperty('alpha')) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    })\r\n\t\tweaponIcons[forceWepEquipped ? forceWepEquipped : equipped].alpha = 1\r\n\t\tlet ammoCheck = totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] < magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length\r\n\t\tif (totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] !== 0) {\r\n\t\t\tlet limit = (ammoCheck\r\n\t\t\t\t? totalAmmo[forceWepEquipped ? forceWepEquipped : equipped]\r\n\t\t\t\t: magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped])\r\n\t\t\tlet lastMagIdx = ammoCheck ? magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] : 0\r\n\t\t\tif (ammoCheck) { magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped] = lastMagIdx }\r\n\t\t\tfor (let i = 0; i < limit; ++i) {\r\n\t\t\t\tmagazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped][magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length-1 - i].alpha = 1\r\n\t\t\t}\r\n    }\r\n    // added this code to hide bullets when last mag is less than ammo cap. \r\n    if (magEmptyBools[equipped]) {\r\n      magazinesByWeaponType[equipped].forEach(b => {\r\n        if (!forceWepEquipped) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    }\r\n\t}\r\n\r\n  this.lastBulletByWepType = {\r\n    'pistol weapon': false,\r\n    'smg weapon': false,\r\n    'shotgun weapon': false,\r\n  }\r\n\r\n\tthis.fireBullet = weapon_str => {\r\n\t\tif (magazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]]) {\r\n\t\t\tmagazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]].alpha = 0\r\n\t\t\tmagazineIndexes[weapon_str]++\r\n\t\t\tdispatch( decrementTotalAmmo(weapon_str) )\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n        this.lastBulletByWepType[weapon_str] = true\r\n      }\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n\t\t\t\tmagEmptyBools[weapon_str] = true\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n  \r\n  const makeGrenadeIcon = () => {\r\n    this.gbevel = new BevelFilter()\r\n    this.gnoise = new NoiseFilter()\r\n    this.gbevel.shadowAlpha = .45\r\n    this.gbevel.lightAlpha = .35\r\n    this.gbevel.thickness = 5\r\n    this.gbevel.shadowColor = 0x0\r\n    this.gbevel.lightColor = 0x208C44\r\n    this.gnoise.noise = .1\r\n    this.gnoise.seed = .5\r\n    let grenadeGfc = new PIXI.Graphics()\r\n    grenadeGfc.lineStyle(1, 0x0)\r\n    grenadeGfc.beginFill(0x1F472C)\r\n    grenadeGfc.drawCircle(0, 0, 6)\r\n    grenadeGfc.filters = getState().game.filterEffects ? [ this.gbevel, this.gnoise ] : []\r\n    container.addChild(grenadeGfc)\r\n    \r\n    return grenadeGfc\r\n  }\r\n\r\n  this.grenades = []\r\n\r\n  this.updateGrenadeIcons = () => {\r\n    if (this.grenades) { this.grenades.forEach(g => { g.destroy() }) }\r\n    this.grenades = []\r\n    let grenadeCount = getState().game.player.weapons.totalAmmo['grenades']\r\n    for (let i = 0; i < grenadeCount; ++i) {\r\n      let gnade = makeGrenadeIcon()\r\n      this.grenades.push( gnade )\r\n    }\r\n    this.grenades.forEach((g, i) => {\r\n      g.position.x = getState().game.width - 25 - ((g.width * 1.5) * i)\r\n      g.position.y = getState().game.height - 110 - g.height\r\n      from(g, (.1 * i), { y: g.position.y - 10, alpha: 0 })\r\n    })\r\n  }\r\n\r\n  this.updateGrenadeIcons()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const updateWeaponsUI = () => {\r\n  let { gameObjects } = window\r\n  let { game: { gameState } } = getState()\r\n\tif (gameObjects) {\r\n\t\tlet weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\t\tif (weaponsUI && (!weaponsUI.reloading || gameState === GameStates.SHOP_MENU)) {\r\n      weaponsUI.select()\r\n      gameObjects = null\r\n\t\t}\r\n\t}\r\n}\r\n","import { Graphics } from 'pixi.js'\r\nimport { Bodies, Body, World } from 'matter-js'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport store from '../../../app/store'\r\n\r\nexport default class HealthDrop {\r\n\r\n  constructor(amt, pos) {\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    let _amt = amt * 3\r\n    this.gfc = new Graphics()\r\n    this.gfc.lineStyle(2, 0x0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.gfc.lineStyle(0, 0x0, 0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.bevel = new BevelFilter({ thickness: 3, lightAlpha: .5, shadowAlpha: .5, shadowColor: 0x247F4D })\r\n    this.glow = new GlowFilter({ outerStrength: .5 })\r\n    this.gfc.filters = store.getState().game.filterEffects ? [\r\n      this.glow, this.bevel,\r\n    ] : []\r\n\r\n    this.body = Bodies.rectangle(pos.x, pos.y, _amt, _amt, {\r\n      restitution: .65,\r\n      collisionFilter: itemCollisionOptions\r\n    })\r\n    this.body.main = this\r\n    this.body.amount = amt\r\n    this.body.label = 'health drop'\r\n    World.add(window.gameObjects.getKeyValue('world'), this.body)\r\n    window.gameObjects.getKeyValue('health-drops').push( this )\r\n    \r\n    return this\r\n  }\r\n\r\n  checkFilters() {\r\n    if (this.gfc && store.getState().game.filterEffects) {\r\n      this.gfc.filters = [ this.bevel, this.glow ]\r\n    } else {\r\n      if (this.gfc) {\r\n        this.gfc.filters = []\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    let idx = healths.indexOf(this)\r\n    if (idx > -1) { healths.splice(idx, 1) }\r\n    this.gfc.destroy()\r\n    this.gfc = null\r\n    World.remove(window.gameObjects.getKeyValue('world'), this.body)\r\n    this.body = null\r\n    healths = null\r\n    idx = null\r\n    this.container = null\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.container && this.container.children.indexOf(this.gfc) === -1) {\r\n      this.container.addChild(this.gfc)\r\n    }\r\n    this.gfc.position = renderFn(this.body)\r\n  }\r\n\r\n}","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Text, Container, filters } from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\n\r\nexport default function AmmoDrop (position, weaponType, amount) {\r\n  let { BlurFilter } = filters  \r\n  let { gameObjects } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n\r\n  let colors = {\r\n    'pistol weapon': 0x0254FF,\r\n    'smg weapon': 0xFF9D02,\r\n    'shotgun weapon': 0xA52121,\r\n  }\r\n\r\n  let text = {\r\n    'pistol weapon': 'PISTOL',\r\n    'smg weapon': 'SMG',\r\n    'shotgun weapon': 'SHOTGUN',\r\n  }\r\n  \r\n  let props = {\r\n    x: position.x, y: position.y,\r\n    w: 50, h: 20\r\n  }\r\n\r\n  let ammoBox = Bodies.rectangle(props.x, props.y, props.w, props.h, {\r\n    collisionFilter: itemCollisionOptions\r\n  })\r\n  ammoBox.label = 'ammo drop'\r\n  ammoBox.ammo_type = weaponType\r\n  ammoBox.amount = amount\r\n  let world = gameObjects.getKeyValue('world')\r\n  World.add(world, ammoBox)\r\n\r\n  ammoBox.main = this\r\n\r\n  let ammoGfc = new Container()\r\n\r\n  let boxGfc = new Graphics()\r\n  boxGfc.beginFill(colors[weaponType])\r\n  boxGfc.drawRect(0, 0, props.w, props.h)\r\n  boxGfc.pivot.x = boxGfc.width * .5\r\n  boxGfc.pivot.y = boxGfc.height * .5\r\n  let bevelFilter = new BevelFilter()\r\n  bevelFilter.thickness = 5\r\n  bevelFilter.lightColor = 0xffffff\r\n  bevelFilter.lightAlpha = 0.25\r\n  bevelFilter.shadowColor = 0x0\r\n  bevelFilter.shadowAlpha = 0.25\r\n  boxGfc.filters = store.getState().game.filterEffects ? [\r\n    bevelFilter\r\n  ] : []\r\n\r\n  let blurGfc, blurFilter\r\n  blurGfc = new Graphics()\r\n  blurGfc.beginFill(0x000000)\r\n  blurGfc.drawRect(0, props.h/2, props.w, props.h/2)\r\n  blurGfc.pivot.x = blurGfc.width * .5\r\n  blurGfc.pivot.y = blurGfc.height * .5\r\n  blurFilter = new BlurFilter(5, 3)\r\n  blurGfc.alpha = .85\r\n  blurGfc.filters = store.getState().game.filterEffects ? [\r\n    blurFilter\r\n  ] : []\r\n  // if (store.getState().game.filterEffects) {\r\n  // }\r\n\r\n  let mask = new Graphics()\r\n  mask.beginFill(colors[weaponType])\r\n  mask.drawRect(0, 0, props.w, props.h)\r\n  mask.pivot.x = mask.width * .5\r\n  mask.pivot.y = mask.height * .5\r\n  blurGfc.mask = mask\r\n\r\n  if (store.getState().game.filterEffects) {\r\n    ammoGfc.addChild(boxGfc, blurGfc, mask)\r\n  } else {\r\n    ammoGfc.addChild(boxGfc, mask)\r\n  }\r\n\r\n  let boxTxt = new Text(text[weaponType], { fontSize: '9px', fill: '#FFF', fontWeight: 'bold' })\r\n  boxTxt.pivot.x = boxTxt.width * .5\r\n  boxTxt.pivot.y = boxTxt.height * .5\r\n  let glow = new GlowFilter()\r\n  glow.color = 0x0\r\n  glow.outerStrength = 1.0\r\n  boxTxt.filters = store.getState().game.filterEffects ? [ glow ] : []\r\n  ammoGfc.addChild(boxTxt)\r\n\r\n  // container.addChild(ammoGfc)\r\n\r\n  this.gfc = ammoGfc\r\n  this.body = ammoBox\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      ammoGfc.addChild(blurGfc, boxTxt)\r\n      boxGfc.filters = [ bevelFilter ]\r\n      blurGfc.filters = [ blurFilter ]\r\n      boxTxt.filters = [ glow ]\r\n    } else {\r\n      if (ammoGfc.children.indexOf(blurGfc) > -1) {\r\n        ammoGfc.removeChild(blurGfc)\r\n      }\r\n      boxGfc.filters = []\r\n      blurGfc.filters = []\r\n      boxTxt.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    const idx = ammoDrops[weaponType].indexOf(this)\r\n    if (idx > -1) {\r\n      ammoDrops[weaponType].splice(idx, 1)\r\n      ammoGfc.destroy()\r\n      World.remove(world, ammoBox)\r\n    }\r\n  }\r\n  \r\n  // auto time-out to destroy self \r\n  setTimeout(() => {\r\n    this.destroy()\r\n  }, 20000)\r\n\r\n  ammoDrops[weaponType].push(this)\r\n\r\n  this.positionAmmoBox = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(ammoBox)\r\n    ammoGfc.position = { x, y }\r\n    ammoGfc.rotation = rot\r\n    if (container && container.children.indexOf(this.gfc) === -1) {\r\n      container.addChild(ammoGfc)\r\n    }\r\n  }\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { getBodyHeight } from '../utils/Utils'\r\nimport { decrementWaveCountToDefeat, increaseScore, incrementZombiesOnStage,\r\n\tupdatePrevScore, setZombieLastKilled, setLastGrenadeKill, resetConsecutiveGrenadeKills, setAchievementOwned, increaseStats, StatsDefs } from '../gameSlice'\r\nimport { GibGenerator } from '../items/Gib'\r\nimport store from '../../../app/store'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { BulletImpact } from '../player/fireWeapons'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport HealthDrop from '../items/HealthDrop'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { degrees } from 'radians'\r\nimport { createTextMessage } from '../createMessages'\r\nimport { AchievementDefs } from '../gameSlice'\r\nimport AchievementsView from '../ReactComponents/AchievementsView'\r\n\r\nexport function ZombieRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { TweenLite: { delayedCall, to } } = window\r\n\tlet world, container, zombieRags\r\n\tlet { gameObjects } = window\r\n\tif (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n\tif (!container) {\r\n\t\tcontainer = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tif (!zombieRags) {\r\n\t\tzombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n\t}\r\n\tlet bloodSmack = gameObjects.getKeyValue('death-rip-sound')\r\n\tbloodSmack.play()\r\n\tlet deathSnd = gameObjects.getKeyValue('zombie-death-sound')\r\n\tdeathSnd.play()\r\n\r\n\tlet b = { w: 40, h: 90 }\r\n  let h = { w: 20, h: 30 }\r\n\tlet a = { w: 15, h: 40 }\r\n\tlet l = { w: 15, h: 40 }\r\n\tlet hnd = { w: 15, h: 35 }\r\n\tlet f = { w: 15, h: 35 }\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: -b.w/4, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n  this.composite = Composite.create()\r\n  this.bodies = [\r\n    head,\r\n    armUpperL, armUpperR,\r\n    armLowerL, armLowerR,\r\n    legUpperL, legUpperR,\r\n    legLowerL, legLowerR,\r\n    footL, footR\r\n\t]\r\n\tthis.bodies.forEach(body => { body.label = 'zombie body part' })\r\n\tbodyUpper.label = 'torso'\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\tthis.constraints = [\r\n\t\tbodyToHead,\r\n\t\thandToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t]\r\n\r\n\tWorld.add(world, this.composite)\r\n  Body.applyForce(bodyUpper, bodyUpper.position, force)\r\n  this.bodies.forEach(_body => {\r\n    Body.applyForce(_body, _body.position, { x: random.float(-0.01, -0.05), y: random.float(-0.01, -0.05) })\r\n  })\r\n\tzombieRags.push(this)\r\n\r\n\t// add sprites\r\n\tlet z_parts_spritesheet = gameObjects.getKeyValue('zombie-parts-gored-sheet')\r\n\r\n  const getSkullTex = () => {\r\n    let skulls = [ 'skull_gored.png', 'skull_gored2.png', 'skull_gored3.png' ]\r\n    return skulls[Math.floor(Math.random() * skulls.length)]\r\n  }\r\n\tlet skull = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[ getSkullTex() ]\r\n  )\r\n\tskull._id = 'skull'\r\n\tlet torso = new PIXI.Sprite( z_parts_spritesheet.textures['torso_whole_gored.png'] )\r\n\ttorso._id = 'torso'\r\n\t\r\n\tlet spriteParts = []\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_leg_lower_gored.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_arm_hand_gored.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_arm_forearm_gored.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n  \r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_leg_upper_gored.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n\tlet foot2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_leg_foot_gored.png']\r\n\t)\r\n\tfoot2._id = 'foot 2'\r\n\tspriteParts.push( foot2 )\r\n  \r\n  spriteParts.push( torso, skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_leg_lower_gored.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\t\r\n\tlet hand1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_arm_hand_gored.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n\tlet arm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_forearm_gored.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tlet foot1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_leg_foot_gored.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n\t\tpart.updateAnchor = true\r\n\t\tpart.pivot.x = part.width * .5\r\n\t\tpart.pivot.y = part.height * .5\r\n\t\tcontainer.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = (\r\n    force ? \r\n      force.x < 0 ?\r\n      { x: -0.002 }\r\n      : { x: 0.002 }\r\n    : { x: random.float(-0.002, 0.002) }\r\n  )\r\n\tgibForce.y = -0.005\r\n\t\r\n\tnew GibGenerator(\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? random.int(5, 10) : 3,  //random.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 2 : 1\r\n  )\r\n\r\n\tthis.destroy = () => {\r\n\t\tspriteParts.forEach((sprite, i) => {\r\n      to(sprite, getState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 1 : .5, {\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          container.removeChild(sprite)\r\n          if (i === spriteParts.length - 1) {\r\n            World.remove(world, this.composite)\r\n\t\t\t\t\t\tzombieRags.splice(zombieRags.indexOf(this), 1)\r\n\t\t\t\t\t\tzombieRags = null\r\n\t\t\t\t\t\tworld = null\r\n\t\t\t\t\t\t// container = null\r\n\t\t\t\t\t\tthis.bodies.forEach(b => { b = null })\r\n\t\t\t\t\t\tthis.constraints.forEach(c => { c = null })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\t}\r\n  \r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n\t\tskull.rotation = skullPos.rotation\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a random constraint\r\n\tconst randomConstraintToRemove = () => this.constraints[ Math.floor( Math.random() * this.constraints.length ) ]\r\n\tlet parts = new Array(random.int(1, 10)).fill(1)\r\n  parts = parts.map((item, i) => {\r\n    let rand\r\n    const getARandomConstraint = () => {\r\n      rand = randomConstraintToRemove()\r\n      if (parts.indexOf(rand) > -1) {\r\n        getARandomConstraint()\r\n      } else {\r\n        return rand\r\n      }\r\n    }\r\n    return getARandomConstraint()\r\n  })\r\n  parts.forEach(part => { Composite.remove(this.composite, part) })\r\n\r\n\t// auto removal\r\n\tdelayedCall(\r\n\t\t!getState().game.lastWaveCountDefeated || getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n\t\tthis.destroy\r\n\t)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function Zombie(x, y) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { Power2, TweenLite: { delayedCall, to, set } } = window\r\n\tlet world, zombies, container\r\n\tlet { gameObjects } = window\r\n  if (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n  if (!zombies) {\r\n    zombies = gameObjects.getKeyValue('zombies')\r\n  }\r\n  if (!container) {\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\r\n  dispatch( incrementZombiesOnStage() )\r\n\t\r\n  let b = { w: 60, h: 125 }\r\n\tlet h = { w: 40, h: 60 }\r\n\t// let zombieWalkSpeed = .65\r\n\tlet zombieWalkSpeed = getState().game.enemies.zombies.walkSpeed\r\n\r\n  let body = Bodies.rectangle(x, y, b.w, b.h, { collisionFilter: enemyCollisionOptions })\r\n  let head = Bodies.rectangle(x, y, h.w, h.h, { collisionFilter: enemyCollisionOptions, inertia: Infinity })\r\n  \r\n\tbody.label = 'enemy zombie body'\r\n\thead.label = 'enemy zombie head'\r\n\r\n  let headToBody = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: body,\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -b.h/2 },\r\n    length: 0,\r\n  })\r\n\r\n  let zombie = Composite.create()\r\n\r\n  this.composite = zombie\r\n  this.body = body\r\n  this.head = head\r\n\r\n  Composite.add(zombie, [\r\n    body, head,\r\n    headToBody\r\n  ])\r\n  World.add(world, zombie)\r\n\r\n  // pixi stuff\r\n  let zWalkSheet = gameObjects.getKeyValue('zombie-walk-sheet') //gameObjects.getKeyValue('z-walk-spritesheet')\r\n\tlet zAttackSheet = gameObjects.getKeyValue('zombie-attack1-sheet')  // gameObjects.getKeyValue('z-attack-spritesheet')\r\n\tlet idleSheet = gameObjects.getKeyValue('zombie-idle-sheet')\r\n\tlet idleAnim = new PIXI.AnimatedSprite( idleSheet.animations['idle'] )\r\n\tlet zWalk = new PIXI.AnimatedSprite(zWalkSheet.animations['walkcycle'])\r\n\tlet zAttack = new PIXI.AnimatedSprite(zAttackSheet.animations['attack1'])\r\n\tlet zAttack2 = new PIXI.AnimatedSprite(gameObjects.getKeyValue('zombie-attack2-sheet').animations['attackTwo'])\r\n\t\r\n\t// slash fx \r\n\tlet slashFX = gameObjects.getKeyValue('zombie-slash-fx-sheet')\r\n  let slashAnim = new PIXI.AnimatedSprite( slashFX.animations['slash'] )\r\n\t\r\n\tslashAnim.loop = false\r\n\tslashAnim.animationSpeed = .5\r\n\tslashAnim.updateAnchor = true\r\n\tslashAnim.pivot.x = slashAnim.width * .5\r\n\tslashAnim.pivot.y = slashAnim.height * .5\r\n\tslashAnim.visible = false\r\n\tslashAnim.onComplete = () => {\r\n\t\tslashAnim.visible = false\r\n\t}\r\n  container.addChild(slashAnim)\r\n  \r\n  // shadow\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 80, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n\tblur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n  if (container && container.children.indexOf(this.shadow) === -1) {\r\n    container.addChild(this.shadow)\r\n  }\r\n\r\n\tidleAnim.loop = true\r\n\tidleAnim.animationSpeed = .5\r\n\tidleAnim.updateAnchor = true\r\n\tidleAnim.pivot.x = idleAnim.width * .5\r\n\tidleAnim.pivot.y = idleAnim.height * .6\r\n\tcontainer.addChild(idleAnim)\r\n\r\n  zWalk.loop = true\r\n  zWalk.animationSpeed = 0.5\r\n  zWalk.updateAnchor = true\r\n  zWalk.pivot.x = zWalk.width * .5\r\n  zWalk.pivot.y = zWalk.height * .6\r\n  container.addChild(zWalk)\r\n\r\n\tzAttack.loop = false\r\n  zAttack.animationSpeed = 0.65\r\n  zAttack.updateAnchor = true\r\n  zAttack.pivot.x = zAttack.width * .5\r\n  zAttack.pivot.y = zAttack.height * .6\r\n  container.addChild(zAttack)\r\n\tzAttack.visible = false\r\n\t\r\n\tzAttack2.loop = false\r\n  zAttack2.animationSpeed = 0.65\r\n  zAttack2.updateAnchor = true\r\n  zAttack2.pivot.x = zAttack2.width * .5\r\n  zAttack2.pivot.y = zAttack2.height * .6\r\n  container.addChild(zAttack2)\r\n\tzAttack2.visible = false\r\n\r\n\tthis.walkAnim = zWalk\r\n\tthis.attackAnim = zAttack\r\n\tthis.attackAnim2 = zAttack2\r\n\tthis.idleAnim = idleAnim\r\n\r\n\tthis.anims = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim\r\n\t]\r\n\tthis.anims.forEach(anim => {\r\n\t\twindow.TweenLite.from(\r\n\t\t\tanim, 1, { alpha: 0 }\r\n\t\t)\r\n\t})\r\n\r\n\tthis.playerBodyPosition = null\r\n\r\n\tthis.playSlashAnim = () => {\r\n\t\tif (this.attackAnim.visible) {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = 1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x\r\n\t\t\tslashAnim.rotation = degrees(0)\r\n\t\t} else {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = -1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x * -1\r\n\t\t\tslashAnim.rotation = degrees(180)\r\n\t\t}\r\n\t\tslashAnim.visible = true\r\n\t\tslashAnim.gotoAndPlay(0)\r\n\t}\r\n\r\n\tthis.setSpritesPositions = fn => {\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.shadow.position.x = x\r\n\t\tthis.shadow.position.y = y + this.walkAnim.height/4 + 10\r\n\t\tthis.walkAnim.position.x = x\r\n\t\tthis.walkAnim.position.y = y\r\n\t\tthis.attackAnim.position.x = x\r\n\t\tthis.attackAnim.position.y = y\r\n\t\tthis.attackAnim2.position.x = x\r\n\t\tthis.attackAnim2.position.y = y\r\n\t\tthis.idleAnim.position.x = x\r\n\t\tthis.idleAnim.position.y = y\t\r\n\t\t// set timescale according to whether player is alive\r\n\t\tif (this.player.dead) {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.2\r\n\t\t\tthis.idleAnim.animationSpeed = 0.2\r\n\t\t\tslashAnim.animationSpeed = 0.2\r\n\t\t} else {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.5\r\n\t\t\tthis.attackAnim.animationSpeed = 0.65\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.65\r\n\t\t\tthis.idleAnim.animationSpeed = 0.5\r\n\t\t\tslashAnim.animationSpeed = 0.5\r\n\t\t}\r\n\t\tif (this.shouldDisplayHealth && this.healthDisplay !== undefined) {\r\n\t\t\tthis.moveLifeDisplay( fn(this.body) )\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setPlayerVars = ({ player, playerDirection, playerBody }) => {\r\n\t\tthis.player = player\r\n\t\tthis.playerBodyPosition = playerBody.position\r\n\t\tthis.playerBody = playerBody\r\n\t\tthis.playerDirection = playerDirection\r\n\t}\r\n\t\r\n\tconst zombieFarFromPlayer = (distance) => {\r\n\t\treturn (this.playerBody.position.x - (distance ? distance : 120) > this.body.position.x || this.playerBody.position.x + (distance ? distance : 120) < this.body.position.x)\r\n\t}\r\n\r\n\tthis.playIdleAnim = () => {\r\n\t\tif (!zAttack.playing && !zAttack2.playing && !this.walkAnimPlaying) {\r\n\t\t\tidleAnim.play()\r\n\t\t\tidleAnim.visible = true\r\n\t\t}\r\n\t}\r\n\r\n\tthis.stopIdleAnim = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\r\n\tthis.walkAnimPlaying = false\r\n\tthis.playWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === false) {\r\n\t\t\tthis.stopIdleAnim()\r\n\t\t\tthis.walkAnim.visible = true\r\n\t\t\tthis.walkAnim.play()\r\n\t\t\tthis.walkAnimPlaying = true\r\n\t\t} else {\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n\tthis.stopWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === true) {\r\n\t\t\tthis.walkAnim.stop()\r\n\t\t\tthis.walkAnim.gotoAndStop(0)\r\n\t\t\tthis.walkAnimPlaying = false\r\n\t\t\tthis.walkAnim.visible = false\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n  this.playWalkAnim()\r\n  \r\n  this.healthOffsetY = 160\r\n  this.damageDisplayOptions = {\r\n    fill: '#FF0000',\r\n    fontSize: 11\r\n  }\r\n  this.healthDisplayOptions = {\r\n    fill: '#FFFF00',\r\n    fontSize: 11\r\n  }\r\n\tthis.healthDisplay = new PIXI.Text(this.health, this.healthDisplayOptions)\r\n\tthis.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n\tif (getState().game.displayZombieHealth) {\r\n\t\tthis.shouldDisplayHealth = true\r\n\t\tcontainer.addChild(this.healthDisplay)\r\n\t}\r\n\r\n  this.moveLifeDisplay = (renderFnResult) => {\r\n\t\tif (this.shouldDisplayHealth) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tthis.healthDisplay.text = this.health\r\n\t\t\t} else {\r\n\t\t\t\tthis.healthDisplay.text = 0\r\n\t\t\t}\r\n\t\t\tthis.healthDisplay.position = {\r\n\t\t\t\tx: renderFnResult.x,\r\n\t\t\t\ty: renderFnResult.y - this.healthOffsetY\r\n\t\t\t}\r\n\t\t} else if (container.children.indexOf(this.healthDisplay) > -1) {\r\n\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t}\r\n  }\r\n\r\n  // runs via the engine loop, so will repeat 30-60 times a second\r\n  this.walk = () => {\r\n\t\tlet comparison = (this.playerBody.position.x < this.body.position.x)\r\n\t\tif (zombieFarFromPlayer() && !zAttack.playing && !zAttack2.playing && !this.player.dead) {\r\n\t\t\tthis.playWalkAnim()\r\n      if (comparison) {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = 1 })\r\n      } else {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = -1 })\r\n      }\r\n      let alteredWalkSpeed\r\n      if (zombieFarFromPlayer(800)) {\r\n        zWalk.animationSpeed = 1.00\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(2.8, 3.2)\r\n      } else if (zombieFarFromPlayer(400)) {\r\n        zWalk.animationSpeed = .75\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(1.8, 2.2)\r\n      } else {\r\n        zWalk.animationSpeed = 0.5\r\n        alteredWalkSpeed = zombieWalkSpeed\r\n      }\r\n      Body.translate(this.body, { x: comparison ? -alteredWalkSpeed : alteredWalkSpeed, y: 0 })\r\n\t\t} else {\r\n\t\t\tthis.stopWalkAnim()\r\n\t\t}\r\n  }\r\n\r\n\tthis.health = getState().game.enemies.zombies.startingHealth\r\n\r\n\tthis.checkFilters = () => {\r\n\t\t// if (getState().game.filterEffects) {\r\n\t\t// \tthis.shadow.filters = [ blur ]\r\n\t\t// \tthis.shadow.alpha = 1.0\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = [ this.criticalGlow ]\r\n\t\t// \t}\r\n\t\t// } else {\r\n\t\t// \tthis.shadow.filters = []\r\n\t\t// \tthis.shadow.alpha = .5\r\n\t\t// \tif (this.criticalText) {\r\n\t\t// \t\tthis.criticalText.filters = []\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\r\n\t// this.shouldDisplayHealth = true\r\n\tthis.displayHealth = bool => {\r\n\t\tthis.shouldDisplayHealth = bool\r\n\t\tif (bool) {\r\n\t\t\tcontainer.addChild(this.healthDisplay)\r\n\t\t} else {\r\n\t\t\tif (container.children.indexOf(this.healthDisplay)) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.sprites = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim,\r\n    slashAnim\r\n\t]\r\n\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.main = this\r\n\t})\r\n\r\n\tthis.dead = false\r\n\r\n  this.dmgTxts = []\r\n\tthis.dmgIterator = 0\r\n\tthis.tintAmounts = {\r\n\t\t1: 0xFF9C00,\r\n\t\t2: 0xFF2E00,\r\n\t\t3: 0xFF0000,\r\n\t\t4: 0xB7000F\r\n\t}\r\n\tthis.takeDamage = (dmg, partDamaged, isCritical, isMelee, attackType) => {\r\n\t\t// randomize relative position of blood spurt \r\n\t\tlet spurtPos\r\n\t\tlet spurtPosLow = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y, this.walkAnim.position.y + 50)\r\n\t\t}\r\n\t\tlet spurtPosHi = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y - 100, this.walkAnim.position.y - 50)\r\n\t\t}\r\n\t\tif (!partDamaged || partDamaged === 'head') {\r\n\t\t\tspurtPos = spurtPosHi\r\n\t\t} else {\r\n\t\t\tspurtPos = spurtPosLow\r\n\t\t}\r\n\t\tnew BloodSpurt( null, spurtPos )\r\n\t\tthis.health -= dmg\r\n\t\tthis.directionX = this.playerBodyPosition ? this.playerBodyPosition.x > this.body.position.x : false\r\n\t\tif (this.health <= 0 && !this.dead) {\r\n\t\t\tif (attackType === 'turret') {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tthis.kill(partDamaged, null, attackType ? attackType : null)\r\n      if (isMelee) {\r\n        dispatch(\r\n          increaseStats( StatsDefs.meleeKills )\r\n        )\r\n        setTimeout(() => {\r\n          if (getState().game.stats.meleeKills === 5 && !getState().game.achievements[ AchievementDefs.PILEDRIVE ].owned) {\r\n            dispatch(\r\n              setAchievementOwned( AchievementDefs.PILEDRIVE )\r\n            )\r\n          }\r\n        }, 0)\r\n      }\r\n\t\t}\r\n\t\tthis.sprites.forEach(sprite => {\r\n\t\t\tif (sprite !== slashAnim) {\r\n\t\t\t\tif (this.health < 25) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[3]\r\n\t\t\t\t}\r\n\t\t\t\tif (this.health < 10) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[4]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n  }\r\n  \r\n  this.removeZombieFromMatterWorld = () => {\r\n    this.dead = true\r\n    // remove attack hit box in case the zombie was killed on that exact frame and\r\n\t\t// attack box didn't get removed \r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (this.healthDisplay) {\r\n      container.removeChild(this.healthDisplay)\r\n    }\r\n\t\t// if health is depleted, remove all enemy sprites and bodies\r\n\t\tthis.sprites.forEach(sprite => { container.removeChild(sprite) })\r\n    if (this.attackHitbox) { World.remove(world, this.attackHitbox) }\r\n\t\tWorld.remove(world, this.composite)\r\n    return 'zombie removed'\r\n  }\r\n\r\n  this.removeZombieFromZombiesArray = () => {\r\n    let idx = zombies.indexOf(this)\r\n    if (idx > -1) {\r\n      zombies.splice(idx, 1)\r\n    }\r\n  }\r\n  \r\n\tthis.kill = (partLastDamaged, skipZombieRag, killType) => {\r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (!this.dead) {\r\n      this.dead = true\r\n\t\t\tthis.health = 0\r\n\t\t\tif (this.healthDisplay) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n      }\r\n      // if (this.criticalText) {\r\n      //   container.removeChild(this.criticalText)\r\n      // }\r\n      if (this.shadow) {\r\n        container.removeChild(this.shadow)\r\n      }\r\n\t\t\tcontainer.removeChild(this.shadow)\r\n      this.removeZombieFromMatterWorld()\r\n      this.removeZombieFromZombiesArray()\r\n      let force = { x: this.directionX ? -0.2 : 0.2, y: -0.25 }\r\n\t\t\tlet dropPos = {\r\n\t\t\t\tx: this.directionX ? this.body.position.x - 20 : this.body.position.x + 20,\r\n\t\t\t\ty: this.body.position.y - 60\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n\t\t\t\tGenerateRandomCreditDrops(dropPos)\r\n\t\t\t\tif (getState().game.player.perks['ammoDropper'].owned) {\r\n\t\t\t\t\tlet { list } = getState().game.player.weapons\r\n\t\t\t\t\tnew AmmoDrop(dropPos, list[Math.floor(Math.random() * list.length)], random.int(4, 16))\r\n\t\t\t\t}\r\n\t\t\t\tif (getState().game.player.perks['healthDropper'].owned) {\r\n\t\t\t\t\tnew HealthDrop(random.int(2, 6), dropPos)\r\n\t\t\t\t}\r\n\t\t\t\tbulletImpacts.push(\r\n\t\t\t\t\tnew BulletImpact('enemy', this.body.position, {\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\talphaDuration: 3,\r\n\t\t\t\t\t\tset: 1,\r\n\t\t\t\t\t\trand: {\r\n\t\t\t\t\t\t\tmin: 1, max: 4\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n        dispatch(decrementWaveCountToDefeat())\r\n\t\t\t\tlet scoreAmt = getState().game.scoreAmounts.zombie\r\n\t\t\t\tif (partLastDamaged === 'head') {\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.headShot\r\n\t\t\t\t}\r\n\t\t\t\tif (Date.now() - JSON.parse(getState().game.zombieLastKilled) < 1000) {\r\n\t\t\t\t\tcreateTextMessage('kill streak bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieStreakBonus\r\n\t\t\t\t}\r\n\t\t\t\tif (killType && killType === 'fell off') {\r\n\t\t\t\t\tif (!getState().game.achievements[AchievementDefs.THIS_IS_SPARTA].owned) {\r\n\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.THIS_IS_SPARTA ))\r\n\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcreateTextMessage('knockoff bonus!', '#FF5500', .35, .75)\r\n\t\t\t\t\tscoreAmt += getState().game.scoreAmounts.zombieKnockedOffStage\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tsetZombieLastKilled( JSON.stringify(Date.now()) )\r\n\t\t\t\t)\r\n\t\t\t\tif (killType === 'grenade explosion') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tsetLastGrenadeKill( JSON.stringify(Date.now()) )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (Date.now() - JSON.parse(getState().game.lastGrenadeKill < 100)) {\r\n\t\t\t\t\t\t\tif (getState().game.consecutiveGrenadeKills > 2) {\r\n\t\t\t\t\t\t\t\tif (!getState().game.achievements[ AchievementDefs.FIRE_IN_THE_HOLE ].owned) {\r\n\t\t\t\t\t\t\t\t\tdispatch(setAchievementOwned( AchievementDefs.FIRE_IN_THE_HOLE ))\r\n\t\t\t\t\t\t\t\t\tupdateScore( getState().game.scoreAmounts.achievement )\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdispatch( resetConsecutiveGrenadeKills() )\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'landmine') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.mineKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.mineKills > 2 && !getState().game.achievements[ AchievementDefs.MINER ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.MINER))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (killType === 'turret') {\r\n\t\t\t\t\tdispatch(\r\n\t\t\t\t\t\tincreaseStats( StatsDefs.turretKills )\r\n\t\t\t\t\t)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tif (getState().game.stats.turretKills > 9 && !getState().game.achievements[ AchievementDefs.GUNNA ].owned) {\r\n\t\t\t\t\t\t\tdispatch(setAchievementOwned(AchievementDefs.GUNNA))\r\n\t\t\t\t\t\t\tupdateScore(getState().game.scoreAmounts.achievement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 0)\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\t\tgetState().game.player.variables.jumping &&\r\n\t\t\t\t\t\t!getState().game.achievements[ AchievementDefs.THE_JUMP_SHOT ].owned &&\r\n\t\t\t\t\t\tkillType !== 'grenade explosion' &&\r\n\t\t\t\t\t\tkillType !== 'landmine' &&\r\n\t\t\t\t\t\tkillType !== 'landmine explosion' &&\r\n\t\t\t\t\t\tkillType !== 'clustermine explosion'\r\n\t\t\t\t\t) {\r\n          \tdispatch(\r\n            \tsetAchievementOwned( AchievementDefs.THE_JUMP_SHOT )\r\n          \t)\r\n        }\r\n\t\t\t\tupdateScore( scoreAmt )\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tincreaseStats( StatsDefs.zombiesKilled )\r\n\t\t\t\t)\r\n\t\t\t\tnew ZombieRagdoll({\r\n\t\t\t\t\tx: this.body.position.x,\r\n\t\t\t\t\ty: this.body.position.y - getBodyHeight(this.body)\r\n\t\t\t\t}, force, partLastDamaged)\r\n\t\t\t}\r\n      if (this.attackHitbox) {\r\n        World.remove(world, this.attackHitbox)\r\n      }\r\n\t\t\tzombies = 1\r\n\t\t\tzombies = null\r\n      // container = 1\r\n\t\t\t// container = null\r\n    }\r\n\t}\r\n\r\n\t// const getRandomInt = () => random.int(2, 5)\r\n\r\n\tconst makeAttackHitbox = (num) => {\r\n\t\tif (this.playerBodyPosition) {\r\n\t\t\tlet comparison = (this.playerBodyPosition.x > this.body.position.x)\r\n\t\t\tlet compareResult = comparison ? 80 : -80\r\n\t\t\treturn Bodies.rectangle(this.body.position.x + compareResult, this.body.position.y - getBodyHeight(this.body)/2, num === 2 ? 120 : 100, 150, {\r\n\t\t\t\tlabel: 'enemy zombie attack',\r\n\t\t\t\tisStatic: true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// zAttack.onFrameChange = () => {\r\n\t// \tif (zAttack.currentFrame === 6) {\r\n\t// \t\tthis.playSlashAnim()\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 8) {\r\n\t// \t\tWorld.add(world, this.attackHitbox)\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 9) {\r\n\t// \t\tWorld.remove(world, this.attackHitbox)\r\n\t// \t\t// this.attackHitbox = null\r\n\t// \t}\r\n\t// }\r\n\tzAttack.onFrameChange = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\tzAttack.onComplete = () => {\r\n\t\tzAttack.gotoAndStop(0)\r\n\t\tzAttack.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\tzAttack2.onComplete = () => {\r\n\t\tzAttack2.gotoAndStop(0)\r\n\t\tzAttack2.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\t//hitbox will be a matter body that appears for a few frames\r\n\tthis.timeSinceLastAttack = Date.now() + 500\r\n\tlet zombieGrowl = gameObjects.getKeyValue('zombie-growl-sound')\r\n\tthis.attack = () => {\r\n\t\tif (!this.paused && zombies.indexOf(this) > -1 && !this.player.dead && !this.dead) {\r\n\t\t\tthis.timeSinceLastAttack = Date.now()\r\n\t\t\tlet oneOfTwo = [ 1, 2 ][ Math.floor( Math.random() * 2 ) ]\r\n\t\t\tthis.attackHitbox = makeAttackHitbox(oneOfTwo)\r\n\t\t\tzombieGrowl.play()\r\n\t\t\t// change frames to an attack animation here\r\n\t\t\tzWalk.visible = false\r\n\t\t\tif (oneOfTwo === 1) {\r\n\t\t\t\tzAttack.visible = true\r\n\t\t\t\tzAttack.play()\r\n\t\t\t} else {\r\n\t\t\t\tzAttack2.visible = true\r\n\t\t\t\tzAttack2.play()\r\n\t\t\t}\r\n\t\t\tidleAnim.visible = false\r\n\t\t\tdelayedCall(.15, () => {\r\n\t\t\t\tthis.playSlashAnim()\r\n\t\t\t})\r\n\t\t\tdelayedCall(.2, () => {\r\n\t\t\t\tWorld.add(world, this.attackHitbox)\r\n\t\t\t\tdelayedCall(.1, () => {\r\n\t\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tif (this.attackHitbox) {\r\n\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t// this.attackHitbox = null\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  this.pause = () => {\r\n    this.paused = true\r\n    // this.stopWalkAnim()\r\n    idleAnim.stop()\r\n    this.walkAnim.stop()\r\n    this.attackAnim.stop()\r\n    this.attackAnim2.stop()\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.paused = false\r\n    this.walkAnim.play()\r\n    if (zAttack.currentFrame !== 0) {\r\n      zAttack.play()\r\n    }\r\n  }\r\n\r\n  zombies.push(this)\r\n\r\n  return this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Container, filters} from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport store from '../../../app/store'\r\n\r\nexport default function CreditDrop (position, amount) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let currencyDrops = gameObjects.getKeyValue('currency-drops')\r\n  let { x: _x, y: _y } = position\r\n\r\n  // init\r\n  // matter body \r\n  let creditBody = Bodies.circle(_x, _y, amount * .25, { restitution: .5, collisionFilter: itemCollisionOptions })\r\n  creditBody.label = 'currency drop'\r\n  creditBody.amount = amount\r\n  // console.log(creditBody.amount)\r\n  World.add(world, creditBody)\r\n  // gfx -- blurred\r\n  let creditContainer = new Container()\r\n  let creditBlur = new Graphics()\r\n  creditBlur.beginFill(0x0eead8)\r\n  creditBlur.drawCircle(0, 0, amount * .25)\r\n  let blurFilter = new filters.BlurFilter()\r\n  blurFilter.blur = 3\r\n  creditBlur.filters = store.getState().game.filterEffects ? [ blurFilter ] : []\r\n  creditBlur.pivot.x = (creditBlur.width * .25) * .5\r\n  creditBlur.pivot.y = (creditBlur.height * .25) * .5\r\n  creditBlur.scale.x = 1.1\r\n  creditBlur.scale.y = 1.1\r\n  creditContainer.addChild(creditBlur)\r\n  // gfx -- clear\r\n  let creditGfc = new Graphics()\r\n  creditGfc.beginFill(0x0eead8)\r\n  creditGfc.drawCircle(0, 0, amount * .25)\r\n  creditGfc.pivot.x = (creditGfc.width * .25) * .5\r\n  creditGfc.pivot.y = (creditGfc.height * .25) * .5\r\n  creditContainer.addChild(creditGfc)\r\n  let bevel = new BevelFilter()\r\n  bevel.lightColor = 0xffffff\r\n  bevel.lightAlpha = .3\r\n  bevel.shadowColor = 0x0\r\n  bevel.shadowAlpha = .3\r\n  creditContainer.filters = store.getState().game.filterEffects ? [ bevel ] : []\r\n  // add to stage\r\n  container.addChild(creditContainer)\r\n  \r\n  currencyDrops.push(this)\r\n\r\n  creditBody.main = this\r\n\r\n  this.creditBody = creditBody\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      creditContainer.filters = [bevel]\r\n      creditBlur.filters = [blurFilter]\r\n    } else {\r\n      creditContainer.filters = []\r\n      creditBlur.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroyed = false\r\n  this.destroy = () => {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      let idx = currencyDrops.indexOf(this)\r\n      if (idx > -1) {\r\n        currencyDrops.splice(idx, 1)\r\n        creditContainer.destroy()\r\n        World.remove(world, creditBody)\r\n        world = null\r\n        container = null\r\n        currencyDrops = null\r\n        gameObjects = null\r\n        creditBody = null\r\n        this.creditBody = null\r\n        creditContainer = null\r\n      }\r\n    }\r\n  }\r\n\r\n  setTimeout(() => { this.destroy() }, 20000)\r\n\r\n  this.positionCreditGfx = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(creditBody)\r\n    creditContainer.position = { x, y }\r\n    creditContainer.rotation = rot\r\n  }\r\n\r\n  return this\r\n\r\n} ","import Zombie from '../enemies/Zombie'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport CreditDrop from '../items/CurrencyCredit'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\n\r\nconst { getState } = store\r\nconst { TweenLite: { delayedCall } } = window\r\nconst yStartPos = getState().game.height/2\r\n\r\nexport const GenerateZombies = (count) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  \r\n  const startZombieCreation = () => {\r\n    let numOnStage = (\r\n      getState().game.waveNum > 20 ? 4\r\n      : getState().game.waveNum > 10 ? 3\r\n      : 2\r\n    )\r\n    for (let i = 0; i < count; ++i) {\r\n      const getAZombie = () => {\r\n        if (\r\n          getState().game.zombiesOnStage < numOnStage &&\r\n          getState().game.gameState !== GameStates.PAUSE &&\r\n          getState().game.gameState !== GameStates.MAIN_MENU &&\r\n          (getState().game.gameSubState === SubStates.WAVE_STARTED || getState().game.gameSubState === SubStates.PLAYER_RESPAWN)\r\n          ) {\r\n          console.log('should create a zombo')\r\n          if (getState().game.gameSubState !== SubStates.WAVE_DEFEATED) {\r\n            new Zombie(random.int(buffer, width - buffer), yStartPos)\r\n          }\r\n        } else {\r\n          setTimeout(() => { getAZombie() }, 2000)\r\n        }\r\n      }\r\n      getAZombie()\r\n    }\r\n  }\r\n  startZombieCreation()\r\n  \r\n}\r\n\r\nexport const GenerateRandomAmmoDrops = (position, amountLimits, overrideCount) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let { game: { player: { weapons: { list, ammoCapacity } } } } = getState()\r\n  let randCount = overrideCount ? overrideCount : random.int(1, 2)\r\n  let type = list[Math.floor(Math.random() * list.length)]\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new AmmoDrop(\r\n      position ? position : { x: random.int(buffer, width - buffer), y: 200 },\r\n      type,\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : random.int(5, ammoCapacity[type]))\r\n  }\r\n}\r\n\r\nexport const GenerateRandomCreditDrops = (position, amountLimits) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let randCount = getState().game.player.perks['creditDropper'].owned ? random.int(5, 8) : random.int(4, 5)\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new CreditDrop(\r\n      position ?\r\n        { x: position.x, y: position.y - random.int(0, 75) }\r\n        : { x: random.int(buffer, width - buffer), y: 200 - random.int(0, 75) },\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : getState().game.player.perks['creditDropper'].owned ? random.int(15, 30) : random.int(5, 20)\r\n    )\r\n  }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { applyGsapHover } from '../utils/Utils'\r\nimport { gameStateTransition, unsetAllKeys } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { createGenericMessage } from '../createMessages'\r\nimport { FELL_OFF } from '../constants/DeathTypes'\r\nimport random from 'random'\r\n\r\nconst { dispatch, getState } = store\r\n\r\nfunction RespawnButton () {\r\n\tlet container = new PIXI.Container()\r\n\tlet btn = new PIXI.Graphics()\r\n\tbtn.beginFill(0x555555)\r\n\tbtn.drawRect(0, 0, 150, 50)\r\n\tcontainer.addChild(btn)\r\n\r\n\tconst text = new PIXI.Text('Respawn?', { font: 'Arial', fill: '#FFFFFF', fontSize: 20, fontWeight: 'bold' })\r\n\ttext.position.x = btn.width/2 - text.width/2\r\n\ttext.position.y = btn.height/2 - text.height/2\r\n\tcontainer.addChild(text)\r\n\r\n\treturn container\r\n}\r\n\r\nexport default function ScreenUI () {\r\n\tlet { gameObjects, TweenLite: { from }, Bounce } = window\r\n  let gameContainer = gameObjects.getKeyValue('game-pixi-container')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n\r\n  // let zombies = gameObjects.getKeyValue('zombies')\r\n\r\n\tthis.respawnButton = new RespawnButton()\r\n\tgameContainer.addChild(this.respawnButton)\r\n\tthis.respawnButton.visible = false\r\n\tthis.respawnButton.interactive = true\r\n\tthis.respawnButton.pivot.x = this.respawnButton.width/2\r\n\tthis.respawnButton.pivot.y = this.respawnButton.height/2\r\n\tthis.respawnButton.position.x = (this.respawnButton.width/2) + 20\r\n\tthis.respawnButton.position.y = (this.respawnButton.height/2) + 20\r\n\r\n  this.respawn = () => {\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.respawn()\r\n    createGenericMessage('Still alive!', 0xFFFFFF, .5, .75)\r\n    if (player.lastDeathType !== FELL_OFF) {\r\n      GenerateRandomAmmoDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      },\r\n      {\r\n        min: 10, max: getState().game.player.weapons.ammoCapacity[getState().game.player.weapons.equipped] * 2\r\n      },\r\n      random.int(1, 2))\r\n      GenerateRandomCreditDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      })\r\n    }\r\n  }\r\n\r\n\tthis.respawnButton.on('click', () => {\r\n\t\tthis.respawn()\r\n\t\tthis.respawnButton.visible = false\r\n\t})\r\n\r\n\tapplyGsapHover(this.respawnButton)\r\n\r\n\tthis.showRespawnButton = () => {\r\n\t\tthis.respawnButton.visible = true\r\n\t\tfrom(this.respawnButton.scale, 1.5, { x: .5, y: .5, ease: Bounce.easeOut })\r\n  }\r\n\r\n  const unpause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    // player \r\n    let player = gameObjects.getKeyValue('player')\r\n    player.pause()\r\n    // zombies \r\n    zombies.forEach(zombie => {\r\n      zombie.unpause()\r\n    })\r\n    // resume physics engine\r\n    engine.timing.timeScale = 1\r\n  }\r\n\r\n  const pause = () => {\r\n    // zombs\r\n    let zombies = gameObjects.getKeyValue('zombies')\r\n    dispatch( unsetAllKeys() )\r\n    // character\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.unpause()\r\n    // zombies\r\n    zombies.forEach(zombie => {\r\n      zombie.pause()\r\n    })\r\n    // pause physics engine\r\n    engine.timing.timeScale = 0.05\r\n  }\r\n\r\n  this.unpause = unpause\r\n  this.pause = pause\r\n  \r\n  this.togglePause = () => {\r\n    let { gameState, gameSubState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU && gameState !== GameStates.SHOP_MENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameState !== GameStates.BUILD_MENU && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.WAVE_DEFEATED) {\r\n      let player = gameObjects.getKeyValue('player')\r\n      if (!player.dead) {\r\n        if (gameState !== GameStates.PAUSE && gameSubState !== SubStates.WAITING) {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.PAUSE) )\r\n          pause()\r\n        } else {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.GAMEPLAY) )\r\n          if (gameSubState === SubStates.WAVE_STARTED) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAVE_STARTED) )\r\n          } else if (gameSubState === SubStates.NEUTRAL) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n          }\r\n          unpause()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // add a pause listener to the screen UI ('P' (80) or ESC (27) key)\r\n  document.body.addEventListener('keydown', e => {\r\n    if (e.key === 'p' || e.key === 'P' || e.key === 'Escape') {\r\n      console.log('pause key was pressed')\r\n      this.togglePause()\r\n    }\r\n  })\r\n\r\n\treturn this\r\n\r\n}\r\n","// Matter and Custom\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { makePixiSprite, setUpMatter, setUpPixi } from './utils/Utils'\r\nimport { World, Bodies, Events } from 'matter-js'\r\nimport Player from './player/Player'\r\nimport createGameObjects from './createGameObjects'\r\nimport { setTexturePath, gameStateTransition } from './gameSlice'\r\nimport { gameTickHandler, checkCollisionStart } from './engineHandlers'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport WeaponsUI from './ui/WeaponsUI'\r\nimport ScreenUI from './ui/ScreenUI'\r\n// images\r\nimport weaponUI_pistolIcon from '../../images/pistol-icon.png'\r\nimport weaponUI_smgIcon from '../../images/smg-icon.png'\r\nimport weaponUI_shotgunIcon from '../../images/shotgun-icon.png'\r\n// environment textures \r\nimport groundTexture from '../../images/GroundTexture_Optimized.png'\r\nimport wallTile from '../../images/wallTile.png'\r\nimport gradientAlpha from '../../images/gradient-layer-mask.png'\r\n// game cover art\r\nimport coverArt from '../../images/GameCover.png'\r\n// explosive barrel \r\nimport explosiveBarrel from '../../images/explosiveBarrier.png'\r\n// player head\r\nimport charHead from '../../images/head-sprite.png'\r\n// Sound FX\r\nimport { Howl, Howler } from 'howler'\r\nimport _9mm1 from '../../sounds/9mm1.wav'\r\nimport _9mm2 from '../../sounds/9mm2.mp3'\r\nimport explosion1 from '../../sounds/explosion1.wav'\r\nimport distant_explosion from '../../sounds/explosion_distant.wav' \r\nimport pistolReloadSnd from '../../sounds/pistolReload.wav'\r\nimport bulletImpact_body from '../../sounds/bodyBulletImpact.wav'\r\nimport grenadeClink from '../../sounds/grenadeClink.wav'\r\nimport throwSound from '../../sounds/throw.wav'\r\nimport coinCollectSound from '../../sounds/coinCollect.wav'\r\nimport ammoCollectSound from '../../sounds/collectAmmo.wav'\r\nimport itemCollectSound from '../../sounds/collectItem.wav'\r\nimport bloodSquash from '../../sounds/bloodSquash.flac'\r\nimport bloodSquish from '../../sounds/bloodSquish.wav'\r\nimport bloodSmack from '../../sounds/bloodSmack.wav'\r\nimport deathRipSound from '../../sounds/deathRipSound.wav'\r\nimport jumpLandingSound from '../../sounds/jumpLanding.wav'\r\nimport dirtImpactSound from '../../sounds/dirtImpact.wav'\r\nimport zombieHurtSound from '../../sounds/zombieHurt.wav'\r\nimport zombieDeathSound from '../../sounds/zombieDeath.wav'\r\nimport pain1Sound from '../../sounds/pain1.wav'\r\nimport pain2Sound from '../../sounds/pain2.wav'\r\nimport playerDeathSound from '../../sounds/playerDeath.wav'\r\nimport buttonAddSound from '../../sounds/buttonAdd.wav'\r\nimport buttonSubtractSound from '../../sounds/buttonSubtract.wav'\r\nimport buttonClickSound from '../../sounds/buttonClick.wav'\r\nimport buttonHoverSound from '../../sounds/buttonHover.wav'\r\nimport placeObjectSound from '../../sounds/placeObject.flac'\r\nimport buttonCancelSound from '../../sounds/cancelSound.wav'\r\nimport purchaseSound from '../../sounds/moneySound.wav'\r\nimport confirmSound from '../../sounds/purchase.wav'\r\nimport shellImpactSound from '../../sounds/shellImpact.wav'\r\nimport healthPickupSound from '../../sounds/health.wav'\r\nimport zombieGrowl from '../../sounds/zombieGrowl.wav'\r\nimport smgFire from '../../sounds/smgFire.wav'\r\nimport magDrop from '../../sounds/magDrop.wav'\r\nimport shotShell from '../../sounds/shotShell.wav'\r\nimport shotgunBlast from '../../sounds/shotgunBlast.wav'\r\nimport achievement1 from '../../sounds/achievement1.wav'\r\nimport achievement2 from '../../sounds/achievement2.mp3'\r\nimport achievement3 from '../../sounds/achievement3.wav'\r\nimport jumpSound from '../../sounds/jumpSound.wav'\r\nimport chargingNade from '../../sounds/grenadeCharge.wav'\r\n\r\n// spritesheets in /public folder to use pixi .loader, not webpack \r\nconst zombieWalkcycleTest = './spritesheet-assets/zombie_walkcycle_test.json'\r\nconst z_walk_spritesheet = './spritesheet-assets/z_walk/z_walk.json'\r\nconst z_attack_spritesheet = './spritesheet-assets/z_attack/z_attack.json'\r\nconst z_parts_spritesheet = './spritesheet-assets/z_parts/limbs.json'\r\nconst muzzle_flashes_spritesheet = './spritesheet-assets/FX/muzzle_flashes/muzzle-flashes.json'\r\n// updated zombie sprites\r\nconst zomb_idle_sheet = './spritesheet-assets/enemy-spritesheets/zombie/idle/idle.json'\r\nconst zomb_walk_sheet = './spritesheet-assets/enemy-spritesheets/zombie/walkcycle/walkcycle.json'\r\nconst zomb_attack1_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack1/attack1.json'\r\nconst zomb_attack2_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack2/attack2.json'\r\nconst zomb_parts_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts.json'\r\nconst zomb_parts_gored_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts_gored.json'\r\nconst zomb_slash_fx_sheet = './spritesheet-assets/enemy-spritesheets/zombie/slash_fx/slash_fx.json'\r\n\r\n// barriers\r\nconst barriers_sheet = './spritesheet-assets/barriers/barriers.json'\r\n\r\n// updated character sprites \r\nconst char_parts = './spritesheet-assets/character-spritesheets/parts/player_parts.json'\r\nconst char_idle_sheet = './spritesheet-assets/character-spritesheets/idle/char_idle_anim.json'\r\nconst char_run_sheet = './spritesheet-assets/character-spritesheets/run/char_run_anim.json'\r\nconst char_jump_sheet = './spritesheet-assets/character-spritesheets/jump/char_jump_anim.json'\r\nconst char_reload_pistol_sheet = './spritesheet-assets/character-spritesheets/reloadPistol/char_reload_pistol_anim.json'\r\nconst char_reload_smg_sheet = './spritesheet-assets/character-spritesheets/reloadSMG/char_reload_smg_anim.json'\r\nconst left_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmPistolFire/char_left_arm_pistol_fire.json'\r\nconst right_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmPistolFire/char_right_arm_pistol_fire.json'\r\nconst left_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmSMGFire/char_left_arm_smg_fire.json'\r\nconst right_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmSMGFire/char_right_arm_smg_fire.json'\r\nconst melee_pistol_sheet = './spritesheet-assets/character-spritesheets/melee/melee_pistol/melee_pistol.json'\r\nconst melee_ump_sheet = './spritesheet-assets/character-spritesheets/melee/melee_ump/melee_ump.json'\r\nconst melee_shotgun_sheet = './spritesheet-assets/character-spritesheets/melee/melee_shotgun/melee_shotgun.json'\r\nconst grenade_pistol_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/pistolEquipped/grenade_throw_pistol.json'\r\nconst grenade_ump_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/umpEquipped/grenade_throw_ump.json'\r\nconst grenade_shotgun_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/shotgunEquipped/grenade_throw_shotgun.json'\r\nconst arms_fire_shotgun = './spritesheet-assets/character-spritesheets/armsFireShotgun/arms_fire_shotgun_anim.json'\r\nconst char_reload_shotgun_sheet = './spritesheet-assets/character-spritesheets/reloadShotgun/reloadShotgun.json'\r\n\r\n// blood effects\r\nconst blood_spurt_1 = './spritesheet-assets/FX/blood_fx/blood_spurt_1/blood_spurt_1.json'\r\nconst blood_spurt_2 = './spritesheet-assets/FX/blood_fx/blood_spurt_2/blood_spurt_2.json'\r\nconst blood_spurt_3 = './spritesheet-assets/FX/blood_fx/blood_spurt_3/blood_spurt_3.json'\r\n\r\n// landmine\r\nconst landmine_sheet = './spritesheet-assets/landmine/landmine.json'\r\nconst clustermine_sheet = './spritesheet-assets/clustermine/clustermine.json'\r\nconst remote_mine_sheet = './spritesheet-assets/remote-mine/remote-mine.json'\r\n\r\n// turret\r\nconst turret_scan_sheet = './spritesheet-assets/turret/sheets/turret_scan.json'\r\nconst turret_shoot_sheet = './spritesheet-assets/turret/sheets/turret_shoot.json'\r\n\r\n// explosion assts\r\nconst explosion_assets_sheet = './spritesheet-assets/FX/explosion_fx/explosion_assets.json'\r\nconst wood_planks_sheet = './spritesheet-assets/FX/wood_planks/wood_planks.json'\r\n\r\n// ground spatters \r\nconst ground_effects_sheet = './spritesheet-assets/FX/ground_fx/ground_fx.json'\r\n\r\n// FX\r\nconst explosion3d1_sheet = './spritesheet-assets/FX/explosion3d/explosion3d1.json'\r\nconst explosion3d2_sheet = './spritesheet-assets/FX/explosion3d/explosion3d2.json'\r\nconst sparks_sheet = './spritesheet-assets/FX/spark-particle/spark_particle.json'\r\nconst muzzle_sparks_sheet = './spritesheet-assets/FX/muzzle-sparks/muzzle_sparks.json'\r\n\r\nlet { dispatch, getState } = store\r\n\r\nlet { TweenLite: { to } } = window\r\n\r\nconst { world, render, engine, width, height, worldWidth } = setUpMatter('app-container', true)\r\n\r\nconst { app, loader } = setUpPixi('app-container')\r\n\r\nconst addGround = () => {\r\n\tlet ground = Bodies.rectangle(worldWidth/2, height, worldWidth, height/2, { \r\n    isStatic: true,\r\n    collisionFilter: {\r\n      mask: 3\r\n    }\r\n  })\r\n\tground.label = 'ground'\r\n\tWorld.add(world, ground)\r\n\t// dispatch(setGroundId(ground.id))\r\n\treturn ground\r\n}\r\n\r\nexport default function buildGame() {\r\n\r\n\tloader\r\n\t.add(gradientAlpha)\r\n\t.add(wallTile)\r\n\t.add(char_reload_shotgun_sheet)\r\n\t.add(arms_fire_shotgun)\r\n\t.add(sparks_sheet)\r\n\t.add(muzzle_sparks_sheet)\r\n\t.add(explosion3d1_sheet)\r\n\t.add(explosion3d2_sheet)\r\n  .add(turret_scan_sheet)\r\n  .add(turret_shoot_sheet)\r\n\t.add(remote_mine_sheet)\r\n\t.add(clustermine_sheet)\r\n\t.add(landmine_sheet)\r\n\t.add(explosiveBarrel)\r\n  .add(barriers_sheet)\r\n\t.add(groundTexture)\r\n\t.add(zombieWalkcycleTest)\r\n\t.add(z_walk_spritesheet)\r\n\t.add(z_attack_spritesheet)\r\n\t.add(z_parts_spritesheet)\r\n\t.add(zomb_idle_sheet)\r\n\t.add(zomb_walk_sheet)\r\n\t.add(zomb_attack1_sheet)\r\n\t.add(zomb_attack2_sheet)\r\n\t.add(zomb_parts_sheet)\r\n\t.add(zomb_parts_gored_sheet)\r\n\t.add(zomb_slash_fx_sheet)\r\n\t.add(muzzle_flashes_spritesheet)\r\n\t.add(blood_spurt_1)\r\n\t.add(blood_spurt_2)\r\n  .add(blood_spurt_3)\r\n\t.add(explosion_assets_sheet)\r\n\t.add(wood_planks_sheet)\r\n\t.add(ground_effects_sheet)\r\n\t.add(char_parts)\r\n  .add(char_idle_sheet)\r\n  .add(char_run_sheet)\r\n  .add(char_jump_sheet)\r\n  .add(char_reload_pistol_sheet)\r\n  .add(char_reload_smg_sheet)\r\n  .add(melee_pistol_sheet)\r\n\t.add(melee_ump_sheet)\r\n\t.add(melee_shotgun_sheet)\r\n  .add(grenade_pistol_sheet)\r\n  .add(grenade_ump_sheet)\r\n  .add(grenade_shotgun_sheet)\r\n  .add(left_arm_pistol_fire_sheet)\r\n  .add(right_arm_pistol_fire_sheet)\r\n  .add(left_arm_smg_fire_sheet)\r\n  .add(right_arm_smg_fire_sheet)\r\n  .add(charHead)\r\n\t.add(weaponUI_pistolIcon)\r\n\t.add(weaponUI_smgIcon)\r\n\t.add(weaponUI_shotgunIcon)\r\n\t.load(setUp)\r\n\r\n\tfunction setUp () {\r\n\r\n\t\twindow.gameObjects = createGameObjects()\r\n\t\tlet { gameObjects } = window\r\n\r\n\t\t// images\r\n\t\tdispatch(setTexturePath('game-cover', coverArt))\r\n\t\tdispatch(setTexturePath('char-head', charHead))\r\n\t\tdispatch(setTexturePath('gradient-alpha', gradientAlpha))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-pistol', weaponUI_pistolIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-smg', weaponUI_smgIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-shotgun', weaponUI_shotgunIcon))\r\n\t\tdispatch(setTexturePath('ground-texture', groundTexture))\r\n\t\tdispatch(setTexturePath('explosive-barrel', explosiveBarrel))\r\n\t\t// env textures\r\n    let groundTex = makePixiSprite('ground-texture')\r\n    groundTex.pivot.x = groundTex.width * .5\r\n\t\tgroundTex.pivot.y = groundTex.height * .425\r\n\t\tlet gradientAlphaImg = makePixiSprite('gradient-alpha')\r\n\t\tgradientAlphaImg.width = width\r\n\t\tgradientAlphaImg.height = height\r\n\t\tgameObjects.setKeyValue('gradient-alpha', gradientAlphaImg)\r\n\t\tlet gameCover = makePixiSprite('game-cover')\r\n\t\tgameObjects.setKeyValue('game-cover-art', gameCover)\r\n\t\t// set sound fx\r\n\t\tgameObjects.setKeyValue('9mm-sound1', _9mm1)\r\n\t\tgameObjects.setKeyValue('9mm-sound2', _9mm2)\r\n\t\tgameObjects.setKeyValue('explosion1', explosion1)\r\n\t\tgameObjects.setKeyValue('distant-explosion', distant_explosion)\r\n\t\tgameObjects.setKeyValue('pistol-reload-sound', pistolReloadSnd)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body', bulletImpact_body)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body-sound', new Howl({src:[bulletImpact_body]}))\r\n\t\tgameObjects.setKeyValue('grenade-clink-sound', new Howl({ src: [grenadeClink] }))\r\n\t\tgameObjects.setKeyValue('throw-sound', new Howl({ src: [throwSound] }))\r\n\t\tgameObjects.setKeyValue('confirm-sound', new Howl({ src: [ confirmSound ] }))\r\n\t\tgameObjects.setKeyValue('coin-collect-sound', new Howl({ src: [ coinCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('ammo-collect-sound', new Howl({ src: [ ammoCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('item-collect-sound', new Howl({ src: [ itemCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('blood-squish-sound', new Howl({ src: [ bloodSquish ] }))\r\n\t\tgameObjects.setKeyValue('blood-squash-sound', new Howl({ src: [ bloodSquash ] }))\r\n\t\tgameObjects.setKeyValue('blood-smack-sound', new Howl({ src: [ bloodSmack ] }))\r\n\t\tgameObjects.setKeyValue('death-rip-sound', new Howl({ src: [ deathRipSound ] }))\r\n\t\tgameObjects.setKeyValue('jump-landing-sound', new Howl({ src: [ jumpLandingSound ] }))\r\n\t\tgameObjects.setKeyValue('dirt-impact-sound', new Howl({ src: [ dirtImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-hurt-sound', new Howl({ src: [ zombieHurtSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('zombie-death-sound', new Howl({ src: [ zombieDeathSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('pain1-sound', new Howl({ src: [ pain1Sound ] }))\r\n\t\tgameObjects.setKeyValue('pain2-sound', new Howl({ src: [ pain2Sound ] }))\r\n\t\tgameObjects.setKeyValue('player-death-sound', new Howl({ src: [ playerDeathSound ] }))\r\n\t\tgameObjects.setKeyValue('button-add-sound', new Howl({ src: [ buttonAddSound ] }))\r\n\t\tgameObjects.setKeyValue('button-subtract-sound', new Howl({ src: [ buttonSubtractSound ] }))\r\n\t\tgameObjects.setKeyValue('button-hover-sound', new Howl({ src: [ buttonHoverSound ] }))\r\n\t\tgameObjects.setKeyValue('button-click-sound', new Howl({ src: [ buttonClickSound ] }))\r\n\t\tgameObjects.setKeyValue('place-object-sound', new Howl({ src: [ placeObjectSound ] }))\r\n\t\tgameObjects.setKeyValue('button-cancel-sound', new Howl({ src: [ buttonCancelSound ] }))\r\n\t\tgameObjects.setKeyValue('purchase-sound', new Howl({ src: [ purchaseSound ] }))\r\n\t\tgameObjects.setKeyValue('shell-impact-sound', new Howl({ src: [ shellImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('health-pickup-sound', new Howl({ src: [ healthPickupSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-growl-sound', new Howl({ src: [ zombieGrowl ] }))\r\n\t\tgameObjects.setKeyValue('smg-fire-sound', new Howl({ src: [ smgFire ] }))\r\n\t\tgameObjects.setKeyValue('mag-drop-sound', new Howl({ src: [ magDrop ] }))\r\n\t\tgameObjects.setKeyValue('shot-shell-sound', new Howl({ src: [ shotShell ] }))\r\n\t\tgameObjects.setKeyValue('shotgun-blast-sound', new Howl({ src: [ shotgunBlast ] }))\r\n\t\tgameObjects.setKeyValue('achievement1-sound', new Howl({ src: [ achievement1 ] }))\r\n\t\tgameObjects.setKeyValue('achievement2-sound', new Howl({ src: [ achievement2 ] }))\r\n\t\tgameObjects.setKeyValue('achievement3-sound', new Howl({ src: [ achievement3 ] }))\r\n\t\tgameObjects.setKeyValue('charging-grenade-sound', new Howl({ src: [ chargingNade ] }))\r\n\t\tgameObjects.setKeyValue('jump-sound', new Howl({ src: [ jumpSound ] }))\r\n\t\t// updated zombie sprites\r\n\t\tgameObjects.setKeyValue('zombie-idle-sheet', loader.resources[zomb_idle_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-walk-sheet', loader.resources[zomb_walk_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack1-sheet', loader.resources[zomb_attack1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack2-sheet', loader.resources[zomb_attack2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-sheet', loader.resources[zomb_parts_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-gored-sheet', loader.resources[zomb_parts_gored_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-slash-fx-sheet', loader.resources[zomb_slash_fx_sheet].spritesheet)\r\n    gameObjects.setKeyValue('muzzle-flashes', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('sparks-sheet', loader.resources[sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('muzzle-sparks-sheet', loader.resources[muzzle_sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d1-sheet', loader.resources[explosion3d1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d2-sheet', loader.resources[explosion3d2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-1', loader.resources[blood_spurt_1].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-2', loader.resources[blood_spurt_2].spritesheet)\r\n    gameObjects.setKeyValue('blood-spurt-3', loader.resources[blood_spurt_3].spritesheet)\r\n    gameObjects.setKeyValue('explosion-assets-sheet', loader.resources[explosion_assets_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('wood-planks-sheet', loader.resources[wood_planks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('remote-mine-sheet', loader.resources[remote_mine_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('landmine-sheet', loader.resources[landmine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('clustermine-sheet', loader.resources[clustermine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-scan-sheet', loader.resources[turret_scan_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-shoot-sheet', loader.resources[turret_shoot_sheet].spritesheet)\r\n    gameObjects.setKeyValue('barriers-sheet', loader.resources[barriers_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('ground-fx-sheet', loader.resources[ground_effects_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('player-parts-sheet', loader.resources[char_parts].spritesheet)\r\n    gameObjects.setKeyValue('char-idle-sheet', loader.resources[char_idle_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-run-sheet', loader.resources[char_run_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-jump-sheet', loader.resources[char_jump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-pistol-sheet', loader.resources[char_reload_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-smg-sheet', loader.resources[char_reload_smg_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-shotgun-sheet', loader.resources[char_reload_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('left-arm-pistol-fire-sheet', loader.resources[left_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-pistol-fire-sheet', loader.resources[right_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('left-arm-smg-fire-sheet', loader.resources[left_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-smg-fire-sheet', loader.resources[right_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-pistol-sheet', loader.resources[melee_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-ump-sheet', loader.resources[melee_ump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-shotgun-sheet', loader.resources[melee_shotgun_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-pistol-sheet', loader.resources[grenade_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-ump-sheet', loader.resources[grenade_ump_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('grenade-shotgun-sheet', loader.resources[grenade_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('arms-fire-shotgun-sheet', loader.resources[arms_fire_shotgun].spritesheet)\r\n\t\t\r\n\t\t\r\n    let container = new PIXI.Container()\r\n\t\tcontainer.interactive = true\r\n\t\tcontainer.width = width\r\n\t\tcontainer.height = height\r\n\t\t\r\n    // make dedicated muzzle flashes for re-use instead of making a new image each time\r\n\t\tgameObjects.setKeyValue('muzzle-flashes-sheet', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n    \r\n\t\tlet ground = addGround()\r\n\t\tapp.stage.interactive = true\r\n\t\tapp.stage.addChild(container)\r\n\t\tcontainer.addChild(groundTex)\r\n    \r\n\t\tgameObjects.setKeyValue('pixi-app', app)\r\n\t\tgameObjects.setKeyValue('game-pixi-container', container)\r\n\t\t\r\n    gameObjects.setKeyValue('ammo-drops-by-type', {\r\n\t\t\t'pistol weapon': [],\r\n      'smg weapon': [],\r\n      'shotgun weapon': [],\r\n    })\r\n    gameObjects.setKeyValue('text-messages', [])\r\n    gameObjects.setKeyValue('reload-text-messages', [])\r\n\t\tgameObjects.setKeyValue('gibs', [])\r\n    gameObjects.setKeyValue('grenades', [])\r\n    gameObjects.setKeyValue('explosions', [])\r\n    gameObjects.setKeyValue('rocks', [])\r\n    gameObjects.setKeyValue('currency-drops', [])\r\n\t\tgameObjects.setKeyValue('pistol-shells', [])\r\n\t\tgameObjects.setKeyValue('pistol-bullets', [])\r\n\t\tgameObjects.setKeyValue('build-objects', [])\r\n\t\tgameObjects.setKeyValue('bullet-impacts', [])\r\n\t\tgameObjects.setKeyValue('wood-planks', [])\r\n\t\tgameObjects.setKeyValue('spark-sprites', [])\r\n\t\tgameObjects.setKeyValue('explosion-sprites', [])\r\n\t\tgameObjects.setKeyValue('remote-mines', {})\r\n\t\tgameObjects.setKeyValue('remote-mines-array', [])\r\n\t\tgameObjects.setKeyValue('static-ground-effects', [])\r\n\t\tgameObjects.setKeyValue('zombie-ragdolls', [])\r\n\t\tgameObjects.setKeyValue('zombies', [])\r\n\t\tgameObjects.setKeyValue('health-drops', [])\r\n\t\t\r\n\t\tgameObjects.setKeyValue('wall-tile', wallTile)\r\n\t\tgameObjects.setKeyValue('ground', ground)\r\n\t\tgameObjects.setKeyValue('ground-texture', groundTex)\r\n\t\tgameObjects.setKeyValue('game-width', width)\r\n\t\tgameObjects.setKeyValue('game-height', height)\r\n\t\tgameObjects.setKeyValue('world-width', worldWidth)\r\n\t\tgameObjects.setKeyValue('world', world)\r\n\t\tgameObjects.setKeyValue('render', render)\r\n\t\tgameObjects.setKeyValue('engine', engine)\r\n\t\tlet screenUI = new ScreenUI()\r\n\t\tgameObjects.setKeyValue('screen-ui', screenUI)\r\n\t\tgameObjects.setKeyValue('weapons-ui', new WeaponsUI())\r\n\t\tlet player = new Player()\r\n\t\tgameObjects.setKeyValue('player', player)\r\n\t\t\r\n\t\tfunction buildMenu () {\r\n\t\t\t// create a PIXI menu\r\n\t\t\tlet menu = new PIXI.Container()\r\n\t\t\t// let menuBG = new PIXI.Graphics()\r\n\t\t\t// menuBG.beginFill(0x222222)\r\n\t\t\t// menuBG.drawRect(0, 0, width, height)\r\n\t\t\t// gameCover.width = gameCover.width * .5\r\n\t\t\t// gameCover.height = gameCover.height * .5\r\n\t\t\tgameCover.pivot.x = gameCover.width *  .5\r\n\t\t\tgameCover.pivot.y = gameCover.height *  .5\r\n\t\t\tgameCover.scale.x = .51\r\n\t\t\tgameCover.scale.y = .51\r\n\t\t\tcontainer.alpha = 0\r\n\t\t\tmenu.addChild(\r\n\t\t\t\tgameCover\r\n\t\t\t)\r\n\t\t\t// gameCover.on('added', () => {\r\n\t\t\t// })\r\n\t\t\tcontainer.alpha = 1\r\n\t\t\tmenu.interactive = true\r\n\t\t\tlet playBtn = new PIXI.Container()\r\n\t\t\tlet playBtnGfc = new PIXI.Graphics()\r\n\t\t\tplayBtnGfc.beginFill(0x555555)\r\n\t\t\tplayBtnGfc.drawRect(0, 0, 250, 80)\r\n\t\t\tlet playBtnTxt = new PIXI.Text('Play', {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 36,\r\n\t\t\t\tfill: 0xFFFFFF\r\n\t\t\t})\r\n\t\t\tplayBtn.addChild(playBtnGfc, playBtnTxt)\r\n\t\t\tfunction positionPlayButton() {\r\n\t\t\t\tplayBtn.position.x = width/2 - playBtn.width/2\r\n\t\t\t\tplayBtn.position.y = height/2 - playBtn.height/2\r\n\t\t\t}\r\n\t\t\tpositionPlayButton()\r\n\t\t\tplayBtnTxt.position.x = playBtn.width/2 - playBtnTxt.width/2\r\n\t\t\tplayBtnTxt.position.y = playBtn.height/2 - playBtnTxt.height/2\r\n\t\t\tplayBtn.interactive = true\r\n\t\t\tplayBtn.on('click', () => {\r\n\t\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\tdispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n\t\t\t\tdispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseover', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.05, y: 1.05, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseout', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.00, y: 1.00, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\t// menu.addChild(playBtn) -- remove pixi main menu button \r\n\t\t\tapp.stage.addChild(menu)\r\n\t\t\tgameObjects.setKeyValue('main-menu', menu)\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmenu\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet { menu: mainMenu } = buildMenu()\r\n\r\n\t\tEvents.on(engine, 'tick', e => {\r\n\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\r\n\t\t\tif (mainMenu.visible === true) {\r\n\t\t\t\tmainMenu.visible = false\r\n\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t// app.view.style.opacity = .75\r\n\t\t\t}\r\n\t\t\tif (gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW) {\r\n        if (mainMenu.visible === false) {\r\n          mainMenu.visible = true\r\n\t\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t\t// app.view.style.opacity = .85\r\n\t\t\t\t}\r\n      }\r\n      if (gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW || gameState === GameStates.PAUSE || gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameState === GameStates.SHOP_MENU || gameState === GameStates.BUILD_MENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n        document.body.style.cursor = 'auto'\r\n        document.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n      } else {\r\n        document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n      }\r\n      if (gameState === GameStates.GAMEPLAY) {\r\n        if (gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n          document.body.style.cursor = 'auto'\r\n        } else {\r\n          document.body.style.cursor = 'none'\r\n        }\r\n\t\t\t}\r\n      \r\n      gameTickHandler(e, gameObjects)\r\n\r\n\t\t})\r\n\r\n\t\tEvents.on(engine, 'collisionStart', e => {\r\n\t\t\tlet { game: { gameState } } = getState()\r\n\t\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\t\tfor (let i = 0; i < e.pairs.length; ++i) {\r\n\t\t\t\t\tcheckCollisionStart(e, i, gameObjects)\r\n\t\t\t\t}\r\n\t\t\t}\r\n    })\r\n    \r\n\t}\r\n\r\n}\r\n","// anything that we can't manage with redux will go here,\r\n// meaning full objects and functions with methods for\r\n// manipulating Matter objects\r\nexport default function createGameObjects() {\r\n\tlet state = new State()\r\n\tfunction State() {\r\n\t\tthis.state = {}\r\n\t\tthis.getKeyValue = key => {\r\n      if (this.state[key]) {\r\n        return this.state[key]\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n\t\tthis.setKeyValue = (key, value) => {\r\n      this.state[key] = value\r\n      return this.state[key]\r\n    }\r\n\t\tthis.getFullState = () => { return this.state }\r\n\t\tthis.setFullState = (obj) => { this.state = obj }\r\n\t}\r\n\treturn state\r\n}\r\n","import { batch } from 'react-redux'\r\nimport store from '../../../app/store'\r\nimport { setZombiesOnStage, incrementWave, setWaveCountToDefeat, decrementZombieAttackTimeLimit, incrementZombieHealth, updateZombieWalkSpeed, updateZombieAttackDmg } from '../gameSlice'\r\nimport { createWaveMessage } from '../createMessages'\r\nimport { GenerateZombies } from '../items/ItemGenerators'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { updateScore } from '../utils/updateScore'\r\nimport { resetWave } from '../ReactComponents/PauseMenu'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const startWave = () => {\r\n\r\n  if (getState().game.waveNum === 0) {\r\n    dispatch(incrementWave())\r\n  }\r\n\r\n  const start = () => {\r\n    let { waveNum } = getState().game\r\n    batch(() => {\r\n      dispatch( updateZombieWalkSpeed( waveNum ) )\r\n      dispatch( updateZombieAttackDmg( waveNum ) )\r\n      dispatch( decrementZombieAttackTimeLimit( waveNum ) )\r\n      dispatch( incrementZombieHealth( waveNum ) )\r\n      dispatch( setWaveCountToDefeat( waveNum ) )\r\n    })\r\n    GenerateZombies( waveNum )\r\n  }\r\n\r\n  if (\r\n    getState().game.gameState === GameStates.GAMEPLAY &&\r\n    getState().game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU &&\r\n    getState().game.gameSubState !== SubStates.WAVE_DEFEATED\r\n    ) {\r\n    start()\r\n    setTimeout(() => {\r\n      if (getState().game.zombiesOnStage === 0) {\r\n        start()\r\n      }\r\n    }, 1000)\r\n  } else {\r\n    setTimeout(start, 3000)\r\n  }\r\n\r\n}\r\n\r\nconst clearGameObjects = () => {\r\n  // destroy current renderable objects \r\n  let { gameObjects } = window\r\n  let credits = gameObjects.getKeyValue('currency-drops')\r\n  let healthdrops = gameObjects.getKeyValue('health-drops')\r\n  let pistolAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_PISTOL]\r\n  let smgAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SMG]\r\n  let shotgunAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SHOTGUN]\r\n  credits.forEach(credit => { credit.destroy() })\r\n  pistolAmmoDrops\r\n    .concat(smgAmmoDrops)\r\n    .concat(shotgunAmmoDrops)\r\n    .forEach(ammo => { ammo.destroy() })\r\n  healthdrops.forEach(health => { health.destroy() })\r\n}\r\n\r\nexport const waveDefeated = () => {\r\n  resetWave()\r\n  dispatch( setZombiesOnStage(0) )\r\n  dispatch( setWaveCountToDefeat(null) )\r\n  createWaveMessage('Wave Defeated!')\r\n  // window.TweenLite.delayedCall(30, clearGameObjects)\r\n  updateScore( getState().game.scoreAmounts.waveCompleted * getState().game.waveNum )\r\n  // do game save after each wave defeat \r\n  if (localStorage) {\r\n    localStorage.setItem('ZombieChamber-gameSave', JSON.stringify(getState()))\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { SubStates } from '../constants/GameStates'\r\nimport { addPurchase, decrementWave, setZombiesOnStage, gameStateTransition, setWaveCountToDefeat, subtractFromTotalCredits } from '../gameSlice'\r\nimport MenuComponents from './MenuComponents'\r\nimport { gotoMainMenu, resetWave } from './PauseMenu'\r\nimport { CustomMenuButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n  \r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const lastGameSubState = useSelector(state => state.game.lastGameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const respawnCost = useSelector(state => state.game.respawnCost)\r\n  const respawnToShopCost = useSelector(state => state.game.respawnToShopCost)\r\n  const waveNum = useSelector(state => state.game.waveNum)\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>\r\n          {\r\n            credits >= respawnToShopCost ? 'Respawn Menu'\r\n            : 'Game Over'\r\n          }\r\n        </MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n          {\r\n            credits >= respawnCost || lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={240}\r\n              onClick={() => {\r\n                screenUI.respawn()\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU && lastGameSubState !== SubStates.PLAYER_RESPAWN && lastGameSubState !== SubStates.WAVE_STARTED) {\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n                }\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n                  dispatch( subtractFromTotalCredits(respawnCost) )\r\n                }\r\n                dispatch( addPurchase('Respawn', respawnCost) )\r\n              }}>\r\n                Respawn? { lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ? '' : `$${respawnCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          {\r\n            credits >= respawnToShopCost && waveNum > 0 && lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={360}\r\n              onClick={() => {\r\n                resetWave()\r\n                batch(() => {\r\n                  dispatch( setZombiesOnStage(0) )\r\n                  dispatch( setWaveCountToDefeat(null) )\r\n                  dispatch( decrementWave() )\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU) )\r\n                  dispatch( subtractFromTotalCredits(respawnToShopCost) )\r\n                  dispatch( addPurchase('Shop Respawn', respawnToShopCost) )\r\n                })\r\n              }}>\r\n                Restart Current Wave from Shop? { `$${respawnToShopCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          <MenuComponents.MenuButtonSpacer>\r\n            <CustomMenuButton\r\n            onClick={gotoMainMenu}>\r\n              Go to Main Menu\r\n            </CustomMenuButton>\r\n          </MenuComponents.MenuButtonSpacer>\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\nimport { gameStateTransition, setSelectedBarrierToBuild, setSelectedTrapToBuild } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { barrierTypes, trapTypes } from '../constants/buildTypes'\r\nimport { CustomMenuButton, BackButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const BuildMenuStates = {\r\n    MAIN: 'main',\r\n    BARRIERS: 'barriers',\r\n    TRAPS: 'traps'\r\n  }\r\n  const [buildMenuState, setBuildMenuState] = React.useState(BuildMenuStates.MAIN)\r\n  const barrierCosts = useSelector(state => state.game.barriers.costToBuild)\r\n  const trapCosts = useSelector(state => state.game.traps.costToBuild)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const showBarriersSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.BARRIERS\r\n    )\r\n  }\r\n\r\n  const showTrapsSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.TRAPS\r\n    )\r\n  }\r\n\r\n  const backToBuildMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.MAIN\r\n    )\r\n  }\r\n\r\n  const gotoPlacementMode = () => {\r\n    let screenUI = gameObjects.getKeyValue('screen-ui')\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.BUILD_PLACEMENT_MODE)\r\n    )\r\n  }\r\n\r\n  const replaceCursorWithObjectToPlace = () => {\r\n    let crosshair = gameObjects.getKeyValue('crosshair')\r\n    crosshair.buildArrow(0xFFFFFF)\r\n  }\r\n  \r\n  const chooseBarrier = filteredType => {\r\n    if (credits >= barrierCosts[filteredType]) {\r\n      dispatch( setSelectedBarrierToBuild(filteredType) )\r\n      dispatch( setSelectedTrapToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n  \r\n  const chooseTrap = filteredType => {\r\n    if (credits >= trapCosts[filteredType]) {\r\n      dispatch( setSelectedTrapToBuild(filteredType) )\r\n      dispatch( setSelectedBarrierToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        {\r\n          buildMenuState === BuildMenuStates.TRAPS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Traps</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.BARRIERS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Barriers</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                <MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.MAIN ?\r\n            <>\r\n              <MenuComponents.MenuTitle>Build Menu</MenuComponents.MenuTitle>\r\n              <MenuComponents.MenuButtonContainer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showBarriersSubMenu }>\r\n                        Barriers\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showTrapsSubMenu }>\r\n                        Traps\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToShopQuery }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n              </MenuComponents.MenuButtonContainer>\r\n            </>\r\n          : null\r\n        }\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nposition: absolute;\r\nbottom: 0;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nbackground-color: #333;\r\nopacity: .8;\r\n`\r\n\r\nexport default () => {\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <MenuButton bgcolor={'#555'} width={500} height={40}>Done Placing Barriers/Traps: Press [ B ]</MenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","// React\r\nimport React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport buildGame from './buildGame'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { startWave, waveDefeated } from './waves/waveManager'\r\nimport { updateWeaponsUI } from './ui/WeaponsUI'\r\nimport { createGenericMessage } from './createMessages'\r\nimport { addToTotalCredits, gameStateTransition, setWeaponEquipped } from './gameSlice'\r\nimport PauseMenu, { gotoMainMenu } from './ReactComponents/PauseMenu'\r\nimport ShopMenu, { CornerBackButton, Inline } from './ReactComponents/ShopMenu'\r\nimport ShopQuery from './ReactComponents/ShopQuery'\r\nimport RespawnMenu from './ReactComponents/RespawnMenu'\r\nimport BuildMenu from './ReactComponents/BuildMenu'\r\nimport DoneBarrierPlacementBanner from './ReactComponents/DoneBarrierPlacementBanner'\r\nimport MenuComponents from './ReactComponents/MenuComponents'\r\nimport { NoTransitionButton } from './ReactComponents/PauseMenu'\r\nimport AchievementsView from './ReactComponents/AchievementsView'\r\nimport { motion } from 'framer-motion'\r\nimport Axios from 'axios'\r\n\r\nconst useScores = (initial) => {\r\n\r\n  const [scores, setScores] = React.useState(initial)\r\n\r\n  return [\r\n    scores,\r\n    setScores\r\n  ]\r\n\r\n}\r\n\r\nexport const ScoresView = (scores) => {\r\n\r\n  return (\r\n    <MenuComponents.Container>\r\n      <MenuComponents.MenuTitle>Top 100 Scores of All-time</MenuComponents.MenuTitle>\r\n      <MenuComponents.MenuButtonContainer\r\n      style={{\r\n        height: 470,\r\n        overflow: 'scroll',\r\n      }}\r\n      >\r\n        {\r\n          scores && scores.scores && scores.scores\r\n          .sort((a, b) => b.score - a.score)\r\n          .map(score => (\r\n            <>\r\n              <NoTransitionButton\r\n              bgcolor={ 'rgba(0, 0, 0, 0.25)' }\r\n              hovercolor={ 'rgba(0, 0, 0, 0.35)' }\r\n              bordercolor={ 'rgba(0, 0, 0, 0)' }\r\n              hoverborder={ 'rgba(0, 0, 0, 0)' }\r\n              >\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    { score.name }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    left: 0,\r\n                    right: 0,\r\n                  }}>\r\n                    { score.score }\r\n                  </div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div\r\n                  style={{\r\n                    right: '20px',\r\n                    position: 'absolute',\r\n                  }}>\r\n                    {\r\n                      (() => {\r\n                        let date = score.time.substr(0, score.time.indexOf('T'))\r\n                        let year = date.substr(0, score.time.indexOf('-'))\r\n                        let dateNoYear = date.substr(score.time.indexOf('-') + 1, date.length)\r\n                        return (\r\n                          `${dateNoYear} - ${year}`\r\n                        )\r\n                      })()\r\n                    }\r\n                  </div>\r\n                </Inline>\r\n              </NoTransitionButton>            \r\n            </>\r\n          ))\r\n        }\r\n      </MenuComponents.MenuButtonContainer>\r\n      <MenuComponents.MenuButtonContainer>\r\n        <CornerBackButton\r\n        marginTop={'-60px'}\r\n        onClick={ gotoMainMenu } />\r\n      </MenuComponents.MenuButtonContainer>\r\n    </MenuComponents.Container>\r\n  )\r\n\r\n}\r\n\r\nexport default function Game () {\r\n\r\n\tconst { gameObjects, TweenLite: { delayedCall } } = window\r\n\tconst dispatch = useDispatch()\r\n\tconst game = useSelector(state => state.game)\r\n  // const weaponEquipped = useSelector(state => state.game.player.weapons.equipped)\r\n  const waitInterval = React.useRef(null)\r\n  const cancelWaveStart = React.useRef(false)\r\n  const [scores, setScores] = useScores([])\r\n  const [animateScore, setAnimateScore] = useState(false)\r\n  // const [upgradeToggleAnimate, setUpgradeToggleAnimate] = useState(false)\r\n  const [runUpgraded, setRunUpgraded] = useState(false)\r\n  const [reloadUpgraded, setReloadUpgraded] = useState(false)\r\n  const [jumpUpgraded, setJumpUpgraded] = useState(false)\r\n  const [meleeUpgraded, setMeleeUpgraded] = useState(false)\r\n  const [defenseUpgraded, setDefenseUpgraded] = useState(false)\r\n  // const equipped = useSelector(state => state.game.player.weapons.equipped)\r\n\r\n\t// one-time methods and non-react code will go here\r\n\tReact.useEffect(() => {\r\n\r\n\t\tbuildGame()\r\n\r\n\t}, []) // do once\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\t// on weapon toggle change..\r\n\t\tupdateWeaponsUI()\r\n\r\n\t}, [ game.player.weapons.equipped ])\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_STARTED) {\r\n\t\t\tconsole.log('wave starting..')\r\n      startWave()\r\n\t\t}\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_DEFEATED) {\r\n\t\t\tconsole.log('wave defeated')\r\n\t\t\twaveDefeated()\r\n    }\r\n    \r\n    if (game.gameSubState === SubStates.WAITING) {\r\n      let countdown = 3, timeInt = 500\r\n      cancelWaveStart.current = false\r\n      waitInterval.current = setInterval(() => {\r\n        createGenericMessage(`${countdown}`, '#FFFFFF', .25, .5)\r\n        countdown -= 1\r\n      }, timeInt)\r\n      delayedCall((timeInt/1000) * 4, () => {\r\n        if (!cancelWaveStart.current) {\r\n          clearInterval(waitInterval.current)\r\n          dispatch(gameStateTransition('sub', game.gameSubState, SubStates.WAVE_STARTED))\r\n        }\r\n      })\r\n    }\r\n\r\n    if (game.gameSubState === SubStates.PLAYER_DEATH) {\r\n      clearInterval(waitInterval.current)\r\n      cancelWaveStart.current = true\r\n\t\t\tcreateGenericMessage('You died.', '#FF0000', .75, 3)\r\n    }\r\n    \r\n  }, [game.gameSubState, delayedCall, dispatch])\r\n  \r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.waveCountToDefeat === 0 && game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n\t\t\twaveDefeated()\r\n\t\t}\r\n\r\n\t}, [game.waveCountToDefeat, game.lastGameSubState, game.gameSubState, dispatch])\r\n\t\r\n\tReact.useEffect(() => {\r\n\r\n    console.log('Game state has changed')\r\n\r\n    if (game.gameState === GameStates.SHOP_MENU || game.gameState === GameStates.BUILD_MENU) {\r\n      let screenUI = gameObjects.getKeyValue('screen-ui')\r\n      screenUI.pause()\r\n    }\r\n    \r\n    if (game.gameState === GameStates.MAIN_MENU || game.gameState === GameStates.GAMEPLAY) {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n    } else {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n    }\r\n\r\n\t\tif (game.gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (game.player.weapons.equipped === null) {\r\n\t\t\t\tdispatch(setWeaponEquipped('pistol weapon'))\r\n\t\t\t}\r\n    }\r\n\r\n  }, [game.gameState, game.player.weapons.equipped, gameObjects, dispatch])\r\n\r\n  React.useEffect(() => {\r\n    if (game.purchases !== null && game.lastPurchase && game.lastPurchase.item !== null && game.lastPurchase.amount > 0) {\r\n      let snd = window.gameObjects.getKeyValue('purchase-sound')\r\n      snd.play()\r\n      let confirm = window.gameObjects.getKeyValue('confirm-sound')\r\n      confirm.play()\r\n      toast.dark(`You bought ${game.lastPurchase.item} for $${game.lastPurchase.amount}`, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    }\r\n    console.log(game.lastPurchase)\r\n  }, [ game.purchases, game.lastPurchase ])\r\n\r\n  React.useEffect(() => {\r\n    if (game.lastAchievementEarned !== null) {\r\n      let snd = window.gameObjects.getKeyValue('achievement2-sound')\r\n      snd.play()\r\n      toast.warning(`Achievement Earned: ${game.lastAchievementEarned}`, {\r\n        position: \"top-left\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n      dispatch(\r\n        addToTotalCredits( 500 )\r\n      )\r\n    }\r\n  }, [ game.achievements, game.lastAchievementEarned ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    let isErr\r\n    if (game.gameState === GameStates.SCORES_VIEW) {\r\n      Axios.get('http://localhost:8080/scores')\r\n      .catch(err => {\r\n        console.log(err)\r\n        isErr = true\r\n      })\r\n      .then(scores => {\r\n        if (isErr) {\r\n          console.log('api is on a different port, use yarn build to view working scores')\r\n        } else {\r\n          setScores( scores.data )\r\n        }\r\n      })\r\n    }\r\n\r\n  }, [ game.gameState ])\r\n\r\n  React.useEffect(() => {\r\n\r\n    setAnimateScore(true)\r\n    delayedCall(.1, () => { setAnimateScore(false) })\r\n\r\n  }, [ game.scoreToggle ])\r\n\r\n  React.useEffect(() => {\r\n    setRunUpgraded(true)\r\n    delayedCall(.25, () => { setRunUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.run.current ])\r\n\r\n  React.useEffect(() => {\r\n    setReloadUpgraded(true)\r\n    delayedCall(.25, () => { setReloadUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.reload.current ])\r\n\r\n  React.useEffect(() => {\r\n    setJumpUpgraded(true)\r\n    delayedCall(.25, () => { setJumpUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.jump.current ])\r\n\r\n  React.useEffect(() => {\r\n    setMeleeUpgraded(true)\r\n    delayedCall(.25, () => { setMeleeUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.melee.current ])\r\n\r\n  React.useEffect(() => {\r\n    setDefenseUpgraded(true)\r\n    delayedCall(.25, () => { setDefenseUpgraded(false) })\r\n  }, [ game.player.upgradeTiers.defense.current ])\r\n\r\n\treturn (\r\n\t\t<>\r\n      <ToastContainer />\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SCORES_VIEW ?\r\n          <ScoresView scores={ scores } />\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.MAIN_MENU && window.gameObjects ?\r\n          <>\r\n            <PauseMenu\r\n            margintop={ true }\r\n            hidetitle={ true }\r\n            hidebg={ false }\r\n            bgcolor={ '#222' }\r\n            playbtn={ true }\r\n            />\r\n          </>\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.BUILD_PLACEMENT_MODE && game.gameState === GameStates.GAMEPLAY\r\n          ?\r\n            <>\r\n              <DoneBarrierPlacementBanner />\r\n            </>\r\n          : null \r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          gameObjects && game.gameState === GameStates.PAUSE\r\n          ? <PauseMenu shop-query-visibility={ game.gameSubState === SubStates.SHOP_QUERY_SUBMENU } />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SHOP_MENU\r\n          ? <ShopMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.BUILD_MENU\r\n          ? <BuildMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.SHOP_QUERY_SUBMENU\r\n          ? <ShopQuery />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.PLAYER_DEATH\r\n          ? <RespawnMenu />\r\n          : null\r\n        }\r\n      </>\r\n      \r\n      <>\r\n        {\r\n          /* Wave count and zombies to defeat */\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div\r\n          style={{\r\n            backgroundColor: '#333',\r\n            position: 'absolute',\r\n            margin: 'auto',\r\n            width: '50%',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n            top: '4px',\r\n            left: 0, right: 0,\r\n            textAlign: 'center',\r\n            borderRadius: '2px'\r\n          }}>\r\n            <div style={{ display: 'inline-block' }} className='debug-ui'>\r\n              wave no: {game.waveNum}\r\n            </div>\r\n            <div style={{ marginLeft: '100px', display: 'inline-block' }} className='debug-ui'>\r\n              enemies to defeat: {game.waveCountToDefeat}\r\n            </div>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <motion.div\r\n            className='game-score'\r\n            animate={{\r\n              scale: animateScore ? [ 1.35, 1.0 ] : 1.0\r\n            }}\r\n            transition={{\r\n              duration: .35\r\n            }}\r\n            >\r\n              {\r\n                <span\r\n                style={{\r\n                  color: (\r\n                    game.score < game.prevScore ? 'red'\r\n                    : game.score > game.prevScore ? '#00FF61'\r\n                    : 'white'\r\n                  )\r\n                }}>\r\n                  {\r\n                    game.score\r\n                  }\r\n                </span>\r\n              }\r\n            </motion.div>\r\n          : null\r\n        }\r\n        <div\r\n        className={ game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ? 'player-attributes' : '' }>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <>\r\n            <div className={ reloadUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Reload Lvl. { game.player.upgradeTiers['reload'].current }\r\n            </div>\r\n            <div className={ runUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Run Lvl. { game.player.upgradeTiers['run'].current }\r\n            </div>\r\n            <div className={ jumpUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Jump Lvl. { game.player.upgradeTiers['jump'].current }\r\n            </div>\r\n            <div className={ defenseUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Defense Lvl. { game.player.upgradeTiers['defense'].current }\r\n            </div>\r\n            <div className={ meleeUpgraded ? 'upgrade-gui-transition' : 'upgrade-gui' }>\r\n              Melee Lvl. { game.player.upgradeTiers['melee'].current }\r\n            </div>\r\n          </>\r\n          : null\r\n        }\r\n        </div>\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n            <div className='total-ammo-count-ui'>\r\n              {\r\n                game.player.weapons.totalAmmo[\r\n                  game.player.weapons.equipped\r\n                ]\r\n              }\r\n            </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div className='total-credits-ui'>\r\n            credits: <span style={{ color: '#71DD4D' }}>${ game.player.credits }</span>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW && game.player.weapons.equipped ?\r\n          <div className='weapon-stats'>\r\n            <div className='weapon-stats-item'>ROF: { game.player.modTiers['rof'][game.player.weapons.equipped].current }</div>\r\n            <div className='weapon-stats-item'>PWR: { game.player.modTiers['powder'][game.player.weapons.equipped].current }</div>\r\n            <div className='weapon-stats-item'>ACC: { game.player.modTiers['sight'][game.player.weapons.equipped].current }</div>\r\n            <div className='weapon-stats-item'>CAP: { game.player.modTiers['mag'][game.player.weapons.equipped].current }</div>\r\n          </div>\r\n          : null\r\n        }\r\n      </>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n","import React from 'react';\r\nimport Game from './features/game/Game'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\t\t\t\t<Game />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}