{"version":3,"sources":["images/pistol-icon.png","images/smg-icon.png","images/shotgun-icon.png","images/GroundTexture_Optimized.png","images/wallTile.png","images/gradient-layer-mask.png","images/explosiveBarrier.png","images/head-sprite.png","sounds/bodyBulletImpact.wav","images/GameCover.png","sounds/9mm1.wav","sounds/9mm2.mp3","sounds/explosion1.wav","sounds/explosion_distant.wav","sounds/pistolReload.wav","sounds/grenadeClink.wav","sounds/throw.wav","sounds/coinCollect.wav","sounds/collectAmmo.wav","sounds/collectItem.wav","sounds/bloodSquash.flac","sounds/bloodSquish.wav","sounds/bloodSmack.wav","sounds/deathRipSound.wav","sounds/jumpLanding.wav","sounds/dirtImpact.wav","sounds/zombieHurt.wav","sounds/zombieDeath.wav","sounds/pain1.wav","sounds/pain2.wav","sounds/playerDeath.wav","sounds/buttonAdd.wav","sounds/buttonSubtract.wav","sounds/buttonClick.wav","sounds/buttonHover.wav","sounds/placeObject.flac","sounds/cancelSound.wav","sounds/moneySound.wav","sounds/purchase.wav","sounds/shellImpact.wav","sounds/health.wav","sounds/zombieGrowl.wav","sounds/smgFire.wav","sounds/magDrop.wav","sounds/shotShell.wav","sounds/shotgunBlast.wav","features/game/constants/GameStates.js","features/game/gameSlice.js","features/game/constants/weapons.js","app/store.js","features/game/utils/Utils.js","features/game/constants/mouseStates.js","features/game/collisionOptions.js","features/game/createMessages.js","features/game/items/Gib.js","features/game/player/PlayerRagdoll.js","features/game/FX/BloodSpurt.js","features/game/constants/DeathTypes.js","features/game/items/Rock.js","features/game/items/WoodPlank.js","features/game/FX/ExplosionSprite.js","features/game/FX/GrenadeExplosion.js","features/game/BuildItems/WallBarrier.js","features/game/BuildItems/Landmine.js","features/game/items/Grenade.js","features/game/BuildItems/Clustermine.js","features/game/constants/buildTypes.js","features/game/BuildItems/RemoteMine.js","features/game/player/fireWeapons.js","features/game/FX/MuzzleFlashFX.js","features/game/BuildItems/MachineGunTurret.js","features/game/FX/Sparks.js","features/game/items/HealthDrop.js","features/game/player/Player.js","features/game/player/crosshairs.js","features/game/FX/GroundEffect.js","features/game/engineHandlers.js","features/game/WallTile.js","features/game/ui/WeaponsUI.js","features/game/items/AmmoDrop.js","features/game/enemies/Zombie.js","features/game/items/CurrencyCredit.js","features/game/items/ItemGenerators.js","features/game/ui/ScreenUI.js","features/game/buildGame.js","features/game/createGameObjects.js","features/game/waves/waveManager.js","features/game/ReactComponents/MenuComponents.js","features/game/ReactComponents/ShopMenu.js","features/game/ReactComponents/PauseMenu.js","features/game/ReactComponents/ShopQuery.js","features/game/ReactComponents/RespawnMenu.js","features/game/ReactComponents/BuildMenu.js","features/game/ReactComponents/DoneBarrierPlacementBanner.js","features/game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SubStates","GameStates","MAIN_MENU","GAMEPLAY","PAUSE","IN_GAME_MENU","GAMEOVER","SHOP_MENU","BUILD_MENU","SCORES_VIEW","gameSlice","createSlice","name","initialState","width","height","keys","filterEffects","displayZombieHealth","rightMouseDown","mouseState","x","y","btn","mousePosition","mouseRelativeToPlayerPosition","textures","gameState","lastGameState","gameSubState","lastGameSubState","waveNum","waveCountToDefeat","zombiesOnStage","showingMessage","respawnCost","respawnToShopCost","purchases","lastPurchase","item","amount","player","perks","magnetism","cost","owned","magDmg","lastBullet","creditDropper","ammoDropper","healthDropper","quickTurret","barrierPlus","cluck","health","credits","position","compositeId","composite","headId","bodyId","armId","weapons","list","equipped","grenadeChargeRate","grenadeUpperForceThreshold","grenadeFuseTime","default","grenadeExplosionSize","laser","meleeDamage","damage","min","max","shotLimiter","ammoCapacity","totalAmmo","ammoCostPerBox","lastShot","reloadSpeed","reloadAnimationFrames","bulletVariance","bulletForce","shellEjectionForce","shellRemovalTimeout","buyWeapons","constants","variables","magnetismSpeed","currentDirection","lastDirection","jumping","jumpForce","defense","acceleration","deceleration","upgradeTiers","run","current","jump","reload","melee","upgradeCosts","upgradeAmounts","modTiers","rof","powder","sight","mag","modCosts","modAmounts","barriers","selectedBarrier","costToBuild","traps","turret","fireDistance","cooldown","selectedTrap","enemies","zombies","attackDmg","attackDmgDefault","attackIncrementer","walkSpeed","walkSpeedDefault","walkSpeedIncrementer","zombieAttackLimiter","zombieAttackDefaultLimiter","zombieAttackLimiterDecrementer","zombieAttackDistance","defaultHealth","startingHealth","healthIncrementer","onRight","onLeft","consumables","healthkit","full","reducers","addPurchase","reducer","state","action","payload","prepare","setZombiesOnLeft","setZombiesOnRight","setRightMouseDown","attachMod","modType","wepType","Math","round","setPlayerCompositeId","console","log","type","setKeyPress","push","removeKeyPress","splice","indexOf","parseInt","setLastDirection","setCurrentDirection","setJumping","setGroundId","groundId","setMousePosition","setMouseStateX","setMouseStateY","setMouseButtonState","setWeaponEquipped","setLastShot","dateTimeObject","weapon","setMouseRelativeToPlayerPosition","setCompositeBodyIds","setStaticGunAngle","staticGunAngle","setStaticGunAngleState","staticGun","setTexturePath","textureName","texturePath","gameStateTransition","from","to","incrementWave","decrementWave","setWaveCountToDefeat","incrementWaveCountToDefeat","decrementWaveCountToDefeat","setWeaponsList","setShowingMessage","unsetAllKeys","resetPlayerVariables","Object","assign","decrementTotalAmmo","addToTotalAmmo","updateAmmoCapacity","newCapacityAmount","setPlayerPosition","addToTotalCredits","subtractFromTotalCredits","upgradeRunSpeed","upgradeReloadSpeed","upgradeJumpForce","upgradeDefense","upgradeMelee","updatePlayerHealth","decrementGrenadeCount","incrementGrenadeCount","updateZombieWalkSpeed","incrementer","updateZombieAttackDmg","decrementZombieAttackTimeLimit","showLaserSight","incrementZombieHealth","setSelectedBarrierToBuild","setSelectedTrapToBuild","setLastWaveCountDefeated","lastWaveCountDefeated","incrementZombiesOnStage","setZombiesOnStage","updateWeaponsList","setPlayerMagnetism","range","speed","setPlayerMagDamage","setPlayerLastBullet","setPlayerCreditDropper","setPlayerAmmoDropper","setPlayerHealthDropper","setPlayerQuickTurret","setPlayerBarrierPlus","setPlayerFusterCluck","toggleFilterEffects","toggleZombieHealthDisplay","actions","store","configureStore","game","getState","window","TweenLite","makePixiSprite","stringIdentifier","PIXI","getBodyWidth","body","bounds","getBodyHeight","getPlayerPartByType","gameObjects","gunId","world","getKeyValue","Composite","get","getPlayerBody","GREATER_THAN_PLAYER_X_POS","playerCollisionOptions","group","category","mask","enemyCollisionOptions","itemCollisionOptions","dispatch","createGenericMessage","txt","fillColor","durationMotion","durationLinger","fill","fontSize","fontWeight","Power1","container","gameWidth","gameHeight","text","font","pivot","addChild","alpha","onStart","onComplete","delay","ease","easeIn","removeChild","createTextMessage","set","texts","playerBody","msg","playerPosition","initialY","length","destroy","idx","delayedCall","Gib","timeToDisappear","position_x","position_y","force_x","force_y","gibs","Bodies","circle","collisionFilter","label","World","add","partsSheet","gfc","Sprite","floor","random","getTexturePNG","this","Body","applyForce","float","animate","renderFn","rot","rotation","remove","GibGenerator","count","force","gibCnt","PlayerRagdollDecap","partLastDamaged","bUpper","h","a","l","hnd","f1","f2","spine","bodyUpper","rectangle","head","maskBody","armUpperL","armUpperR","handL","armLowerL","armLowerR","handR","legUpperL","legUpperR","legLowerL","legLowerR","footL","footR","bodyToHead","Constraint","create","bodyA","bodyB","pointA","pointB","bodyUpperToArmUpperL","bodyUpperToArmUpperR","armUpperLToArmLowerL","armUpperRToArmLowerR","handToLowerL","handToLowerR","bodyLowerToLegUpperL","bodyLowerToLegUpperR","legUpperLToLegLowerL","legUpperRToLegLowerR","footLToLowerLegL","footRToLowerLegR","spineGfx","spineLinks","_si","spineLink","spineConstraints","makeSpine","upper_spineLinks","upper_spineConstraints","spineToUpper","gibForce","int","parts_spritesheet","spriteParts","foot2","_id","leg2","hand2","arm2","upperArm2","foot1","upperLeg2","skull","leg1","upperLeg1","forEach","link","spineGfc","torsoUpper","hand1","arm1","upperArm1","part","updateAnchor","setKeyValue","sprite","animateRagParts","renderFnc","i","linkPos","maskPos","skullPos","torsoUpperPos","arm1Pos","upperArm1Pos","hand1Pos","upperLeg1Pos","leg1Pos","foot1Pos","arm2Pos","upperArm2Pos","hand2Pos","upperLeg2Pos","leg2Pos","foot2Pos","PlayerRagdollHalved","bLower","bodyLower","entrailGfx","lower_spineLinks","lower_spineConstraints","spineToLower","entrailGfc","torsoLower","torsoLowerPos","PlayerRagdollMaim","b","bodyUpperToLegUpperL","bodyUpperToLegUpperR","torso","torsoPos","PlayerRagdoll","BloodSpurt","scale","bodyToDelete","chosenSpurt","bloodSpurt1_sheet","bloodSpurt1","AnimatedSprite","animations","bloodSpurt2_sheet","bloodSpurt2","bloodSpurt3_sheet","bloodSpurt3","spurts","autoChosen","animationSpeed","loop","play","FELL_OFF","Rock","rocks","explosionAssetsSheet","rockPieceAssets","rockSprite","rockScale","rockBody","restitution","WoodPlank","pos","woodPlanksSheet","woodPlanks","plankRange","getPlank","gfcContainer","torque","ExplosionSprite","renderBody","explosionTexture1","explosionTexture2","explosion1","explosion2","explosions","ex","explosion","adjustment","AdjustmentFilter","brightness","saturation","blur","BlurFilter","glow","GlowFilter","outerStrength","filters","onUpdate","children","GrenadeExplosion","showRocksBool","options","explosionSound1","Howl","src","distantExplosion","distantExplosionSound","explosionsArray","smokeAssets","positionalBody","isStatic","calcRenderedPosition","calculatedPosition","randInt","s","smokeSprite","idx1","randScale","xyval","r","showWood","showExplosionSprite","explosionSprites","seek","WallBarrier","dimensions","barriersSprites","buildObjects","w","woodenBarrier","stoneBarrier","metalBarrier","explosiveBarrier","types","WOOD","STONE","METAL","EXPLOSIVE","barrierSprite","objBody","inertia","Infinity","ground","constraint","strength","main","destroyed","getBody","healthDisplay","sprites","takeDamage","dmg","displayBarrierStrength","removeSelf","_x","_y","explosionHitbox","Landmine","landmines","landmineSheet","Container","hitbox","Grenade","fuseTime","grenades","grenadeBody","grenadeGfc","beginFill","drawCircle","bevel","BevelFilter","shadowAlpha","lightAlpha","thickness","shadowColor","lightColor","noise","NoiseFilter","seed","motionBlur","MotionBlurFilter","velocity","radians","exploded","explode","showRocks","explosionSize","Clustermine","num","xforce","yforce","nade","barrierTypes","trapTypes","LANDMINE","CLUSTER_BOMB","REMOTE_MINE","TURRET","RemoteMine","mineNumber","remoteMines","remoteMinesArr","Text","calcPistolDamage","BulletImpact","surfaceType","tint","alphaDuration","rand","duration","renderPosition","PistolShell","changeLabelString","overrideOptions","shells","undefined","setAngularVelocity","shellWd","shellHt","drawRect","endFill","setTimeout","bind","PistolBullet","extraDamageBool","arm","bullets","bulletWd","overrideBody","setAngle","overrideAngle","Vector","angle","overrideForce","position1","position2","cos","sin","calcBulletAngle","addImpactEffect","bulletImpacts","impact","bulletLastPos","bulletTrail","linePoints","fireEquippedWeapon","weaponsUI","playerBodyWd","playerBodyHt","JSON","parse","Date","now","checkEmpty","reloading","stringify","fireBullet","fireWeaponAnimation","extraDmg","lastBulletByWepType","split","shaking","changeTextForEmptyShake","emptyMagShake","MuzzleFlashFX","muzzleFlashesSheet","muzzleFlash001","muzzleFlash002","muzzleFlash003","muzzleFlash004","muzzleFlash005","muzzleFlashes","visible","muzzleScale","blurFilter","getRandomBlur","quality","glowFilter","innerStrength","adjustmentFilter","flashes","flash","tier","randFlash","getRandomFlash","color","_muzzleScale","MachineGunTurret","scanAnim","shootAnim","onFrameChange","gotoAndStop","child","direction","dead","scanning","muzzleFlashFX","setMuzzleRotations","degrees","fireEffect","_ejectY","shooting","Spark","spark1","spark2","sparks","spark","adjFilter","sparkContainer","stop","adjust","HealthDrop","amt","_amt","Graphics","lineStyle","healths","EnhancedMuzzleSpark","muzzleSpark","gotoAndPlay","getFilters","updateFilters","Player","engine","wd","ht","friction","armAttach","headAttach","bodies","id","life","lifebarOutline","lifebar","initialLifebarWidth","charReloadPistolSpritesheet","charReloadPistolSprite","charReloadSMGSpritesheet","charReloadSMGSprite","charReloadShotgunSpritesheet","charReloadShotgunSprite","shotgunShellLoadIterations","gotoToEndOfShotgunReload","reloadAnimsByType","reloadAnims","kernelSize","meleePistolSpritesheet","meleePistolAnim","meleeAttackInProgress","removeMeleeHitbox","currentFrame","meleeUMPSpritesheet","meleeUMPAnim","meleeShotgunSpritesheet","meleeShotgunAnim","meleeSprites","grenadeThrowInProgress","grenadeForce","chargingGrenade","chargeGrenade","meter","renderGrenadeChargeMeter","createGrenade","updateGrenadeIcons","calculatedGrenadeForce","calcGrenadeAngle","throwGrenade","attacks","grenadeThrowPistolAnim","grenadeThrowUMPAnim","grenadeThrowShotgunAnim","grenadeThrowPistolSpritesheet","grenadeThrown","grenadeThrowUMPSpritesheet","grenadeThrowShotgunSpritesheet","grenadeSprites","grenadeSpritesByEquipped","ejectedMags","reloadMagazineActionsByType","magDmgOwned","mx","pistolReloadSound","fade","_d","magBody","pistolMag","magObj","gfx","unshift","pop","smgMag","reloadShell","updateEjectedMagPositions","reloadWeapon","charRightArmFirePistolSpritesheet","charRightArmFirePistolSprite","charRightArmFireSMGSpritesheet","charRightArmFireSMGSprite","charArmsFireShotgunSpritesheet","charRightArmFireShotgunSprite","headSprite","positionHeadSprite","renderObj","_mx","my","fn","armsSpritesByType","charLeftArmFirePistolSprite","charRunSpritesheet","charRunSprite","charIdleSpritesheet","charIdleSprite","charJumpSpritesheet","charJumpSprite","stopJumpAnimation","resumeJumpAnimation","jumpMotionBlur","playJumpAnimation","charLeftArmFirePistolSpritesheet","charLeftArmFireSMGSpritesheet","charLeftArmFireSMGSprite","charLeftArmFireShotgunSprite","armsSprites","_9mm1","_9mm2","pistolSound1","pistolReloadSnd","_1","volume","jumpSound","pain1Snd","pain2Snd","deathRip","playerDeathSnd","hitImpact","smgFire","shotgunFire","mSpark","currentMuzzleSpark","bodySprites","shadow","drawEllipse","checkFilters","setBodySpritesPositions","obj","setArmsSpritePosition","fpos","_my","getFlashes","createMeleeHitbox","meleeHitbox","meleeAttack","collectHealth","collectCredits","collectAmmo","playerHit","resetPlayerHit","blinkAlpha","bloodSpurtPos","kill","acceptHealth","addSpritesInOrder","respawn","timing","timeScale","playerRagdoll","lastDeathType","lastBodyPosition","translate","deathType","parts","batch","playerArm","getPlayerComposite","bh","keydownListenersAdded","addEventListener","e","keyCode","key","unpause","changeBack","toString","detonate","currentTurret","updateDirection","target","document","getElementsByTagName","getBoundingClientRect","armAngle","mouseX","mouseY","rect","clientX","left","clientY","top","mPosRel","buttons","costToBuild_trap","costToBuild_barrier","closestX","barrier","buildNewLocation","placeObjectSound","cancelSound","checkAllowArray","map","buildObjectPlacementComparison","reduce","prev","curr","abs","trap","buildTrap","trapPosition","mine","updateNumber","preventDefault","grenadesCount","deltaY","pause","Crosshairs","crosshair","cross","moveTo","lineTo","changed","_new","buildArrow","animationLoop","GroundEffect","bodyPart","groundFx","fxSheet","bulletTextures","groundBloodSpatters","render","groundTex","groundBody","pistolBullets","pistolBulletWd","pistolBulletHt","pistolShells","pistolShellWd","pistolShellHt","ammoDrops","pistolAmmoDrops","smgAmmoDrops","shotgunAmmoDrops","creditDrops","crosshairs","zombieRags","leftEnemyCount","rightEnemyCount","leftEnemyCountDisplay","rightEnemyCountDisplay","sparkSprites","healthdrops","wallTile","WallTile","texture","Texture","delta","tilePosition","TilingSprite","createCollision","body1_label","body2_label","callback","pairs","body1","body2","calculateDamageAmount","weapon_str","calcSMGDamage","calcShotgunDamage","calcTurretDamage","checkCollisionStart","snd","ammo_type","grenadeClink","gameTickVarsDefined","getZombieRadarTextStyle","gameTickHandler","gradientAlpha","accelMax","mouseButtonState","renderPositionFn","firePistol","fireSMG","fireShotgun","Render","lookAt","playerPosX","playerPosY","concat","box","positionAmmoBox","coin","positionCreditGfx","creditBody","playerRag","grenade","rock","wood","gib","zombie","setPlayerVars","playerDirection","paused","walk","setSpritesPositions","timeSinceLastAttack","attack","shoot","updatePosition","style","rag","fx","WeaponsUI","mags","pistolIcon","smgIcon","shotgunIcon","icons","iconBG","DropShadowFilter","distance","icon","keepOnTop","magazinesByWeaponType","g","emptyText","setInterval","bulletMask","bulletBevel","gbevel","gnoise","makeMagByType","bullet","bulletGfc","weaponIcons","updateMagazine","Array","swapSwap","wep","magazineIndexes","select","updateWeaponMagazines","magEmptyBools","doTheWiggle","defaultPos","textForEmptyShake","str","removeEmptyText","forceReload","ammoCheck","limit","_i","onCompleteParams","forceWepEquipped","m","hasOwnProperty","lastMagIdx","makeGrenadeIcon","grenadeCount","gnade","AmmoDrop","weaponType","colors","props","ammoBox","ammoGfc","boxGfc","blurGfc","bevelFilter","boxTxt","ZombieRagdoll","f","constraints","_body","z_parts_spritesheet","skulls","getSkullTex","c","getARandomConstraint","Zombie","Power2","zombieWalkSpeed","headToBody","zWalkSheet","zAttackSheet","idleSheet","idleAnim","zWalk","zAttack","zAttack2","slashFX","slashAnim","walkAnim","attackAnim","attackAnim2","anims","anim","playerBodyPosition","playSlashAnim","shouldDisplayHealth","moveLifeDisplay","zombieFarFromPlayer","playIdleAnim","playing","walkAnimPlaying","stopIdleAnim","playWalkAnim","stopWalkAnim","healthOffsetY","damageDisplayOptions","healthDisplayOptions","renderFnResult","alteredWalkSpeed","comparison","criticalText","criticalGlow","displayHealth","bool","dmgTxts","dmgIterator","tintAmounts","1","2","3","4","partDamaged","isCritical","spurtPosLow","spurtPosHi","directionX","removeZombieFromMatterWorld","attackHitbox","removeZombieFromZombiesArray","skipZombieRag","dropPos","GenerateRandomCreditDrops","zombieGrowl","oneOfTwo","compareResult","makeAttackHitbox","CreditDrop","currencyDrops","creditContainer","creditBlur","creditGfc","yStartPos","GenerateZombies","z","tryCreateZombies","getAZombie","startZombieCreation","GenerateRandomAmmoDrops","amountLimits","overrideCount","randCount","RespawnButton","ScreenUI","pixiElt","Bounce","gameContainer","respawnButton","interactive","on","showRespawnButton","easeOut","togglePause","muzzle_flashes_spritesheet","zomb_idle_sheet","zomb_walk_sheet","zomb_attack1_sheet","zomb_attack2_sheet","zomb_parts_sheet","zomb_parts_gored_sheet","zomb_slash_fx_sheet","barriers_sheet","char_parts","char_idle_sheet","char_run_sheet","char_jump_sheet","char_reload_pistol_sheet","char_reload_smg_sheet","left_arm_pistol_fire_sheet","right_arm_pistol_fire_sheet","left_arm_smg_fire_sheet","right_arm_smg_fire_sheet","melee_pistol_sheet","melee_ump_sheet","melee_shotgun_sheet","grenade_pistol_sheet","grenade_ump_sheet","grenade_shotgun_sheet","arms_fire_shotgun","char_reload_shotgun_sheet","blood_spurt_1","blood_spurt_2","blood_spurt_3","landmine_sheet","wood_planks_sheet","sparks_sheet","elementId","mouseConstraintBool","Engine","element","getElementById","pixelRatio","runner","Runner","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","stiffness","worldWidth","setUpMatter","app","antialias","resolution","ROUND_PIXELS","appendChild","view","loader","setUpPixi","buildGame","explosiveBarrel","groundTexture","charHead","weaponUI_pistolIcon","weaponUI_smgIcon","weaponUI_shotgunIcon","load","value","getFullState","setFullState","coverArt","gradientAlphaImg","gameCover","distant_explosion","bulletImpact_body","throwSound","confirmSound","coinCollectSound","ammoCollectSound","itemCollectSound","bloodSquish","bloodSquash","bloodSmack","deathRipSound","jumpLandingSound","dirtImpactSound","zombieHurtSound","zombieDeathSound","pain1Sound","pain2Sound","playerDeathSound","buttonAddSound","buttonSubtractSound","buttonHoverSound","buttonClickSound","buttonCancelSound","purchaseSound","shellImpactSound","healthPickupSound","magDrop","shotShell","shotgunBlast","resources","spritesheet","addGround","stage","screenUI","mainMenu","menu","playBtn","playBtnGfc","playBtnTxt","fontFamily","positionPlayButton","buildMenu","Events","cursor","getElementsByClassName","pointerEvents","cases","startWave","toSpawn","calcZombiesToSpawn","clearGameObjects","credit","ammo","waveDefeated","chars","transitionToShopQuery","waveMsgOutro","waveMsgIntro","createWaveMessage","styled","div","Backing","opacity","bgcolor","MenuTitle","MenuButtonContainer","MenuButton","cancelTransition","MenuButtonSpacer","MenuComponents","Inline","IncrementDecrement","AmmoCount","CustomMenuButton","bordercolor","hovercolor","hoverborder","onClick","onMouseOver","BackButton","borderRadius","arrowOnly","CornerBackButton","right","marginTop","Modal","labelClr","clickConfirmHandler","clickCancelHandler","boxShadow","space-top","display","marginRight","AmmoSubMenu","toDefaultSubMenu","toAmmoSubMenu","toStandardMenu","useDispatch","useSelector","ammoCap","React","useReducer","ammoInCart","dispatchAmmoInCart","useState","dollarCost","setDollarCost","PlayerAttributesMenuButton","subMenuType","setSubMenuType","upgradeTypes","getAttrName","ModSubMenu","getWepText","wepTxt","getModDescription","mod","selectedMod","setSelectedMod","selectedType","setSelectedType","marginLeft","modPurchaseName","Fragment","ShopMenu","menuType","setMenuType","toAmmoMenu","backToStandardMenu","openAmmoSubMenu","getHealthkitCostStyle","kitType","useEffect","data-tip","data-for","gotoMainMenu","NoTransitionButton","PauseMenu","pauseMenuStates","showDefault","setPauseMenuState","pauseMenuState","effectFilters","margintop","hidebg","hidetitle","padding","playbtn","ammos","BottomBanner","Back","ShopQuery","className","BuildMenuStates","buildMenuState","setBuildMenuState","barrierCosts","trapCosts","backToBuildMenu","gotoPlacementMode","replaceCursorWithObjectToPlace","chooseBarrier","filteredType","chooseTrap","filter","ScoresView","scores","score","Game","weaponEquipped","waitInterval","useRef","cancelWaveStart","initial","useScores","setScores","updateWeaponsUI","countdown","clearInterval","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","isErr","Axios","catch","err","then","data","DoneBarrierPlacementBanner","shop-query-visibility","BuildMenu","RespawnMenu","backgroundColor","margin","lineHeight","textAlign","App","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qD,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gCCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.077d0d70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pistol-icon.7f31cd11.png\";","module.exports = __webpack_public_path__ + \"static/media/smg-icon.3a3ac587.png\";","module.exports = __webpack_public_path__ + \"static/media/shotgun-icon.0cd5d683.png\";","module.exports = __webpack_public_path__ + \"static/media/GroundTexture_Optimized.b017db2f.png\";","module.exports = __webpack_public_path__ + \"static/media/wallTile.c21abdef.png\";","module.exports = __webpack_public_path__ + \"static/media/gradient-layer-mask.2be09341.png\";","module.exports = __webpack_public_path__ + \"static/media/explosiveBarrier.4f1da0f2.png\";","module.exports = __webpack_public_path__ + \"static/media/head-sprite.0a5881b1.png\";","module.exports = __webpack_public_path__ + \"static/media/bodyBulletImpact.94466266.wav\";","module.exports = __webpack_public_path__ + \"static/media/GameCover.82b711ae.png\";","module.exports = __webpack_public_path__ + \"static/media/9mm1.604f7da7.wav\";","module.exports = __webpack_public_path__ + \"static/media/9mm2.c11c6dad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/explosion1.9434e92f.wav\";","module.exports = __webpack_public_path__ + \"static/media/explosion_distant.d9a90524.wav\";","module.exports = __webpack_public_path__ + \"static/media/pistolReload.915ac0e1.wav\";","module.exports = __webpack_public_path__ + \"static/media/grenadeClink.e7168e2c.wav\";","module.exports = __webpack_public_path__ + \"static/media/throw.e7ed00d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/coinCollect.b65cb627.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectAmmo.b05c1059.wav\";","module.exports = __webpack_public_path__ + \"static/media/collectItem.a7bd5386.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquash.6c1046e0.flac\";","module.exports = __webpack_public_path__ + \"static/media/bloodSquish.508e6483.wav\";","module.exports = __webpack_public_path__ + \"static/media/bloodSmack.eb606367.wav\";","module.exports = __webpack_public_path__ + \"static/media/deathRipSound.733ed512.wav\";","module.exports = __webpack_public_path__ + \"static/media/jumpLanding.f703082d.wav\";","module.exports = __webpack_public_path__ + \"static/media/dirtImpact.de2bbd17.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieHurt.2e807e84.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieDeath.0ac25f1f.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain1.e6646ac7.wav\";","module.exports = __webpack_public_path__ + \"static/media/pain2.defb4bdf.wav\";","module.exports = __webpack_public_path__ + \"static/media/playerDeath.e8c5712d.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonAdd.8db1c8cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonSubtract.b240a4d0.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonClick.10d30b9f.wav\";","module.exports = __webpack_public_path__ + \"static/media/buttonHover.e0064aca.wav\";","module.exports = __webpack_public_path__ + \"static/media/placeObject.fa092176.flac\";","module.exports = __webpack_public_path__ + \"static/media/cancelSound.0d1ffcde.wav\";","module.exports = __webpack_public_path__ + \"static/media/moneySound.1bae50c5.wav\";","module.exports = __webpack_public_path__ + \"static/media/purchase.4979dc37.wav\";","module.exports = __webpack_public_path__ + \"static/media/shellImpact.8075d182.wav\";","module.exports = __webpack_public_path__ + \"static/media/health.29ff687c.wav\";","module.exports = __webpack_public_path__ + \"static/media/zombieGrowl.4792280f.wav\";","module.exports = __webpack_public_path__ + \"static/media/smgFire.b1f03f38.wav\";","module.exports = __webpack_public_path__ + \"static/media/magDrop.1547e6a9.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotShell.f90e6de6.wav\";","module.exports = __webpack_public_path__ + \"static/media/shotgunBlast.4118af72.wav\";","const GameStates = {\r\n  MAIN_MENU: 'main menu',\r\n  GAMEPLAY: 'gameplay',\r\n  PAUSE: 'pause',\r\n  IN_GAME_MENU: 'in-game menu',\r\n  GAMEOVER: 'gameover',\r\n  SHOP_MENU: 'in-game shop menu',\r\n  BUILD_MENU: 'build menu',\r\n  SCORES_VIEW: 'scores view',\r\n}\r\n\r\nexport const SubStates = {\r\n\tNEUTRAL: 'neutral',\r\n\tWAITING: 'waiting',\r\n\tWAVE_STARTED: 'wave started',\r\n\tWAVE_DEFEATED: 'wave defeated',\r\n\tWAVE_CHANGE: 'wave change',\r\n\tPLAYER_DEATH: 'player death',\r\n  PLAYER_RESPAWN: 'player respawn',\r\n  SHOP_QUERY_SUBMENU: 'shop query sub-menu',\r\n  BUILD_PLACEMENT_MODE: 'build trap placement mode'\r\n}\r\n\r\nexport default GameStates\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_GRENADE } from './constants/weapons'\r\n// import { original } from 'immer'\r\n\r\n// for flattened data game state\r\nexport const gameSlice = createSlice({\r\n\tname: 'game',\r\n\tinitialState: {\r\n\t\twidth: 1200,\r\n\t\theight: 550,\r\n    keys: [],\r\n    filterEffects: true,\r\n    displayZombieHealth: true,\r\n    rightMouseDown: false,\r\n\t\tmouseState: { x: '', y: '', btn: '' },\r\n\t\tmousePosition: { x: 0, y: 0},\r\n\t\tmouseRelativeToPlayerPosition: { x: 0, y: 0},\r\n\t\ttextures: {},\r\n\t\tgameState: GameStates.MAIN_MENU,\r\n\t\tlastGameState: null,\r\n\t\tgameSubState: SubStates.NEUTRAL,\r\n\t\tlastGameSubState: null,\r\n\t\twaveNum: 0,\r\n    waveCountToDefeat: null,\r\n    zombiesOnStage: 0,\r\n    showingMessage: false,\r\n    respawnCost: 300,\r\n    respawnToShopCost: 150,\r\n    purchases: 0,\r\n    lastPurchase: {\r\n      item: null,\r\n      amount: null,\r\n    },\r\n\t\tplayer: {\r\n      perks: {\r\n        magnetism: {\r\n          cost: 750,\r\n          owned: false\r\n        },\r\n        magDmg: {\r\n          cost: 750,\r\n          owned: false\r\n        },\r\n        lastBullet: {\r\n          cost: 750,\r\n          owned: false\r\n        },\r\n        creditDropper: {\r\n          cost: 1250,\r\n          owned: false\r\n        },\r\n        ammoDropper: {\r\n          cost: 1250,\r\n          owned: false\r\n        },\r\n        healthDropper: {\r\n          cost: 1250,\r\n          owned: false\r\n        },\r\n        quickTurret: {\r\n          cost: 1000,\r\n          owned: false\r\n        },\r\n        barrierPlus: {\r\n          cost: 1000,\r\n          owned: false\r\n        },\r\n        cluck: {\r\n          cost: 1000,\r\n          owned: false\r\n        }\r\n      },\r\n      health: 100,\r\n      credits: 750,\r\n      position: { x: 0, y: 0 },\r\n\t\t\tcompositeId: '',\r\n\t\t\tcomposite: {\r\n\t\t\t\theadId: '',\r\n\t\t\t\tbodyId: '',\r\n\t\t\t\tarmId: ''\r\n      },\r\n\t\t\tweapons: {\r\n\t\t\t\tlist: [ WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_SHOTGUN ],\r\n        equipped: null,\r\n        grenadeChargeRate: 0.00035,\r\n        grenadeUpperForceThreshold: 0.025,\r\n        grenadeFuseTime: {\r\n          default: 3\r\n        },\r\n        grenadeExplosionSize: 450,\r\n        laser: {\r\n          'pistol weapon': false,\r\n          'smg weapon': false,\r\n          'shotgun weapon': false,\r\n        },\r\n        meleeDamage: {\r\n          'pistol weapon': 10,\r\n          'smg weapon': 15,\r\n          'shotgun weapon': 20,\r\n        },\r\n        damage: {\r\n          'pistol weapon': { 'min': 4, 'max': 10 },\r\n          'smg weapon': { 'min': 3, 'max': 7 },\r\n          'shotgun weapon': { 'min': 4, 'max': 8 },\r\n          'turret weapon': { min: 4, max: 6 }\r\n        },\r\n        shotLimiter: {\r\n          'pistol weapon': 300,\r\n          'smg weapon': 100,\r\n          'shotgun weapon': 500,\r\n        },\r\n        ammoCapacity: {\r\n          'pistol weapon': 9,\r\n          'smg weapon': 19,\r\n          'shotgun weapon': 6,\r\n          'grenades': 1\r\n        },\r\n\t\t\t\ttotalAmmo: {\r\n\t\t\t\t\t'pistol weapon': 9 * 5,\r\n          'smg weapon': 19 * 5,\r\n          'shotgun weapon': 6 * 5,\r\n          'grenades': 3\r\n        },\r\n        ammoCostPerBox: {\r\n          'pistol weapon': 10,\r\n          'smg weapon': 20,\r\n          'shotgun weapon': 20,\r\n          'grenades': 80\r\n        },\r\n\t\t\t\tlastShot: {\r\n\t\t\t\t\t'pistol weapon': null,\r\n\t\t\t\t\t'smg weapon': null,\r\n\t\t\t\t\t'shotgun weapon': null,\r\n        },\r\n        reloadSpeed: {\r\n          'pistol weapon': .4,\r\n          'smg weapon': .4,\r\n          'shotgun weapon': .4,\r\n        },\r\n        reloadAnimationFrames: {\r\n          'pistol weapon': 55,\r\n          'smg weapon': 60,\r\n          'shotgun weapon': 80,\r\n        },\r\n        bulletVariance: {\r\n          'pistol weapon': 0.0004,\r\n          'smg weapon': 0.001,\r\n          'shotgun weapon': 0.002,\r\n        },\r\n        bulletForce: {\r\n          'pistol weapon': .0075,\r\n          'smg weapon': .0075,\r\n          'shotgun weapon': .0075,\r\n          'turret': .01\r\n        },\r\n        shellEjectionForce: {\r\n          'pistol weapon': { 'min': 0.0003, 'max': 0.0007 },\r\n          'smg weapon': { 'min': 0.0003, 'max': 0.0010 },\r\n          'shotgun weapon': { 'min': 0.0008, 'max': 0.0012 },\r\n        },\r\n        shellRemovalTimeout: {\r\n          'pistol weapon': 2000,\r\n          'smg weapon': 2000,\r\n          'shotgun weapon': 2000,\r\n        },\r\n        buyWeapons: {\r\n          'smg weapon': 1500,\r\n          'shotgun weapon': 2750\r\n        },\r\n      },\r\n\t\t\tconstants: {\r\n\t\t\t\twidth: 50,\r\n\t\t\t\theight: 180\r\n\t\t\t},\r\n\t\t\tvariables: {\r\n        magnetism: 400,\r\n        magnetismSpeed: 1,\r\n\t\t\t\tcurrentDirection: '',\r\n\t\t\t\tlastDirection: '',\r\n\t\t\t\tjumping: false,\r\n        jumpForce: -0.4,\r\n        defense: 0,\r\n        acceleration: {\r\n\t\t\t\t\tmin: 2,\r\n\t\t\t\t\tmax: 5\r\n        },\r\n        deceleration: 0.5\r\n      },\r\n      upgradeTiers: {\r\n        run: { min: 1, current: 1, max: 4 },\r\n        jump: { min: 1, current: 1, max: 4 },\r\n        reload: { min: 1, current: 1, max: 4 },\r\n        defense: { min: 1, current: 1, max: 4 },\r\n        melee: { min: 1, current: 1, max: 4 }\r\n      },\r\n      upgradeCosts: {\r\n        run: 200,\r\n        jump: 200,\r\n        reload: 300,\r\n        defense: 400,\r\n        melee: 400\r\n      },\r\n      upgradeAmounts: {\r\n        run: 1,\r\n        jump: -0.1,\r\n        reload: .1,\r\n        defense: 7,\r\n        melee: {\r\n          'pistol weapon': 5,\r\n          'smg weapon': 6,\r\n          'shotgun weapon': 8,\r\n        }\r\n      },\r\n      modTiers: {\r\n        rof: {\r\n          'pistol weapon': { min: 1, current: 1, max: 4 },\r\n          'smg weapon': { min: 1, current: 1, max: 4 },\r\n          'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n        },\r\n        powder: {\r\n          'pistol weapon': { min: 1, current: 1, max: 4 },\r\n          'smg weapon': { min: 1, current: 1, max: 4 },\r\n          'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n        },\r\n        sight: {\r\n          'pistol weapon': { min: 1, current: 1, max: 4 },\r\n          'smg weapon': { min: 1, current: 1, max: 4 },\r\n          'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n        },\r\n        mag: {\r\n          'pistol weapon': { min: 1, current: 1, max: 4 },\r\n          'smg weapon': { min: 1, current: 1, max: 4 },\r\n          'shotgun weapon': { min: 1, current: 1, max: 4 },\r\n        }\r\n      },\r\n      modCosts: {\r\n        rof: {\r\n          'pistol weapon': 300,\r\n          'smg weapon': 400,\r\n          'shotgun weapon': 500,\r\n        },\r\n        powder: {\r\n          'pistol weapon': 400,\r\n          'smg weapon': 550,\r\n          'shotgun weapon': 750,\r\n        },\r\n        sight: {\r\n          'pistol weapon': 200,\r\n          'smg weapon': 300,\r\n          'shotgun weapon': 300,\r\n        },\r\n        mag: {\r\n          'pistol weapon': 350,\r\n          'smg weapon': 600,\r\n          'shotgun weapon': 600,\r\n        }\r\n      },\r\n      modAmounts: {\r\n        rof: {\r\n          'pistol weapon': 20,\r\n          'smg weapon': 15,\r\n          'shotgun weapon': 25,\r\n        },\r\n        powder: {\r\n          'pistol weapon': 3,\r\n          'smg weapon': 2,\r\n          'shotgun weapon': 3,\r\n        },\r\n        sight: {\r\n          'pistol weapon': 0.0001,\r\n          'smg weapon': 0.0002,\r\n          'shotgun weapon': 0.0003,\r\n        },\r\n        mag: {\r\n          'pistol weapon': 3,\r\n          'smg weapon': 5,\r\n          'shotgun weapon': 1,\r\n        }\r\n      }\r\n    },\r\n    barriers: {\r\n      selectedBarrier: null,\r\n      costToBuild: {\r\n        'Wooden': 150,\r\n        'Stone': 250,\r\n        'Metal': 350,\r\n        'Explosive Barrel': 400\r\n      }\r\n    },\r\n    traps: {\r\n      turret: {\r\n        fireDistance: 500,\r\n        cooldown: .5\r\n      },\r\n      selectedTrap: null,\r\n      costToBuild: {\r\n        'Landmine': 250,\r\n        'Remote Mine': 400,\r\n        'Machine Gun Turret': 750,\r\n        'Cluster Bomb': 500\r\n      },\r\n    },\r\n    enemies: {\r\n      zombies: {\r\n        attackDmg: 20,\r\n        attackDmgDefault: 20,\r\n        attackIncrementer: .25,\r\n        walkSpeed: 1.5,\r\n        walkSpeedDefault: 1.5,\r\n        walkSpeedIncrementer: 0.015,\r\n        zombieAttackLimiter: 2000,\r\n        zombieAttackDefaultLimiter: 2000,\r\n        zombieAttackLimiterDecrementer: 15,\r\n        zombieAttackDistance: 150,\r\n        defaultHealth: 100,\r\n        startingHealth: 100,\r\n        healthIncrementer: .5,\r\n        onRight: 0,\r\n        onLeft: 0\r\n      }\r\n    },\r\n    consumables: {\r\n      healthkit: {\r\n        '20': { cost: 40 },\r\n        '50': { cost: 80 },\r\n        full: { cost: 150 },\r\n      }\r\n    }\r\n\t},\r\n\treducers: {\r\n    addPurchase: {\r\n      reducer: (state, action) => {\r\n        state.purchases += 1\r\n        state.lastPurchase = action.payload\r\n      },\r\n      prepare: (item, amount) => ({ payload: { item, amount } })\r\n    },\r\n    setZombiesOnLeft: (state, action) => { state.enemies.zombies.onLeft = action.payload },\r\n    setZombiesOnRight: (state, action) => { state.enemies.zombies.onRight = action.payload },\r\n    setRightMouseDown: (state, action) => {\r\n      state.rightMouseDown = action.payload\r\n    },\r\n    attachMod: {\r\n      reducer: (state, action) => {\r\n        let { modType, wepType } = action.payload\r\n        switch (modType) {\r\n          case 'rof':\r\n          state.player.modTiers.rof[wepType].current += 1\r\n          state.player.weapons.shotLimiter[wepType] -= state.player.modAmounts.rof[wepType]\r\n          break;\r\n          case 'powder':\r\n          state.player.modTiers.powder[wepType].current += 1\r\n          state.player.weapons.damage[wepType].min += Math.round(state.player.modAmounts.powder[wepType] * .5)\r\n          state.player.weapons.damage[wepType].max += Math.round(state.player.modAmounts.powder[wepType])\r\n          break;\r\n          case 'sight':\r\n          state.player.modTiers.sight[wepType].current += 1\r\n          state.player.weapons.bulletVariance[wepType] -= state.player.modAmounts.sight[wepType]\r\n          break;\r\n          case 'mag':\r\n          state.player.modTiers.mag[wepType].current += 1\r\n          state.player.weapons.ammoCapacity[wepType] += state.player.modAmounts.mag[wepType]\r\n          break;\r\n          default:\r\n        }\r\n      },\r\n      prepare: (modType, wepType) => ({ payload: { modType, wepType } })\r\n    },\r\n    setPlayerCompositeId: (state, action) => { console.log(action.type); state.player.compositeId = action.payload },\r\n\t\tsetKeyPress: (state, action) => { state.keys.push(action.payload) },\r\n\t\tremoveKeyPress: (state, action) => { state.keys.splice(state.keys.indexOf(parseInt(action.payload)), 1) },\r\n\t\tsetLastDirection: (state, action) => { state.player.variables.lastDirection = action.payload },\r\n\t\tsetCurrentDirection: (state, action) => { state.player.variables.currentDirection = action.payload },\r\n\t\tsetJumping: (state, action) => { state.player.variables.jumping = action.payload },\r\n\t\tsetGroundId: (state, action) => { state.groundId = action.payload },\r\n\t\tsetMousePosition: (state, action) => { state.mousePosition = action.payload },\r\n\t\tsetMouseStateX: (state, action) => { state.mouseState.x = action.payload },\r\n\t\tsetMouseStateY: (state, action) => { state.mouseState.y = action.payload },\r\n\t\tsetMouseButtonState: (state, action) => { state.mouseState.btn = action.payload },\r\n\t\tsetWeaponEquipped: (state, action) => { state.player.weapons.equipped = action.payload },\r\n\t\tsetLastShot: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tlet { player: { weapons: { lastShot, equipped } } } = state\r\n\t\t\t\tlastShot[equipped] = action.payload.dateTimeObject\r\n\t\t\t},\r\n\t\t\tprepare: (weapon, dateTimeObject) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: { weapon, dateTimeObject }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetMouseRelativeToPlayerPosition: (state, action) => { state.mouseRelativeToPlayerPosition = action.payload },\r\n\t\tsetCompositeBodyIds: (state, action) => {\r\n\t\t\tstate.player.composite = action.payload\r\n\t\t},\r\n\t\tsetStaticGunAngle: (state, action) => { state.staticGunAngle = action.payload },\r\n\t\tsetStaticGunAngleState: (state, action) => { state.staticGun = action.payload },\r\n\t\tsetTexturePath: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tstate.textures[action.payload.textureName] = action.payload.texturePath\r\n\t\t\t},\r\n\t\t\tprepare: (textureName, texturePath) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\ttextureName,\r\n\t\t\t\t\t\ttexturePath\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgameStateTransition: {\r\n\t\t\treducer: (state, action) => {\r\n\t\t\t\tswitch (action.payload.type) {\r\n\t\t\t\t\tcase 'sub':\r\n\t\t\t\t\tstate.lastGameSubState = action.payload.from\r\n\t\t\t\t\tstate.gameSubState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'main':\r\n\t\t\t\t\tstate.lastGameState = action.payload.from\r\n\t\t\t\t\tstate.gameState = action.payload.to\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tprepare: (type, from, to) => ({ payload: { type, from, to } })\r\n\t\t},\r\n\t\tincrementWave: (state) => { state.waveNum += 1 },\r\n\t\tdecrementWave: (state) => { state.waveNum -= 1 },\r\n\t\tsetWaveCountToDefeat: (state, action) => { state.waveCountToDefeat = action.payload },\r\n\t\tincrementWaveCountToDefeat: (state, action) => { state.waveCountToDefeat += 1 },\r\n\t\tdecrementWaveCountToDefeat: (state, action) => {\r\n      state.waveCountToDefeat -= 1\r\n      state.zombiesOnStage -= 1\r\n    },\r\n\t\tsetWeaponsList: (state, action) => { state.player.weapons.list = action.payload },\r\n\t\tsetShowingMessage: (state, action) => { state.showingMessage = action.payload },\r\n\t\tunsetAllKeys: (state, action) => { state.keys = [] },\r\n\t\tresetPlayerVariables: state => {\r\n\t\t\tlet _state = Object.assign({\r\n\t\t\t\tvariables: {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tcurrentDirection: '',\r\n\t\t\t\t\tlastDirection: '',\r\n\t\t\t\t\tjumping: false\r\n\t\t\t\t}\r\n      }, state)\r\n      state = _state\r\n\t\t},\r\n\t\tdecrementTotalAmmo: (state, action) => {\r\n\t\t\tlet { player: { weapons: { totalAmmo } } } = state\r\n\t\t\t// original() from the immer package helps us to see values in redux arrays/objects\r\n\t\t\ttotalAmmo[action.payload] -= 1\r\n    },\r\n    addToTotalAmmo: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { totalAmmo } } } = state\r\n        totalAmmo[action.payload.wepType] += action.payload.amount\r\n      },\r\n      prepare: (wepType, amount) => ({ payload: { wepType, amount } })\r\n    },\r\n    updateAmmoCapacity: {\r\n      reducer: (state, action) => {\r\n        let { player: { weapons: { ammoCapacity } } } = state\r\n        ammoCapacity[action.payload.wepType] = action.payload.newCapacityAmount\r\n      },\r\n      prepare: (wepType, newCapacityAmount) => ({ payload: { wepType, newCapacityAmount } })\r\n    },\r\n    setPlayerPosition: (state, action) => { state.player.position = action.payload },\r\n    addToTotalCredits: (state, action) => { state.player.credits += action.payload },\r\n    subtractFromTotalCredits: (state, action) => { state.player.credits -= action.payload },\r\n    upgradeRunSpeed: (state) => {\r\n      state.player.upgradeTiers.run.current += 1\r\n      state.player.variables.acceleration.max = state.player.variables.acceleration.max + state.player.upgradeAmounts.run\r\n    },\r\n    upgradeReloadSpeed: (state) => {\r\n      state.player.upgradeTiers.reload.current += 1\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] = state.player.weapons.reloadSpeed[WEAPON_TYPE_PISTOL] + state.player.upgradeAmounts.reload\r\n      state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] = state.player.weapons.reloadSpeed[WEAPON_TYPE_SMG] + state.player.upgradeAmounts.reload\r\n    },\r\n    upgradeJumpForce: (state) => {\r\n      state.player.upgradeTiers.jump.current += 1\r\n      state.player.variables.jumpForce = state.player.variables.jumpForce + state.player.upgradeAmounts.jump\r\n    },\r\n    upgradeDefense: (state) => {\r\n      state.player.upgradeTiers.defense.current += 1\r\n      state.player.variables.defense = state.player.variables.defense + state.player.upgradeAmounts.defense\r\n    },\r\n    upgradeMelee: (state) => {\r\n      state.player.upgradeTiers.melee.current += 1\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_PISTOL] += state.player.upgradeAmounts.melee[WEAPON_TYPE_PISTOL]\r\n      state.player.weapons.meleeDamage[WEAPON_TYPE_SMG] += state.player.upgradeAmounts.melee[WEAPON_TYPE_SMG]\r\n    },\r\n    updatePlayerHealth: (state, action) => {\r\n      state.player.health = action.payload\r\n    },\r\n    decrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] -= 1 },\r\n    incrementGrenadeCount: (state) => { state.player.weapons.totalAmmo['grenades'] += 1 },\r\n    updateZombieWalkSpeed: (state, action) => {\r\n      let walkSpeedDefault = state.enemies.zombies.walkSpeedDefault\r\n      let incrementer = state.enemies.zombies.walkSpeedIncrementer\r\n      state.enemies.zombies.walkSpeed = walkSpeedDefault + (action.payload * incrementer)\r\n    },\r\n    updateZombieAttackDmg: (state, action) => {\r\n      state.enemies.zombies.attackDmg = Math.round(\r\n        (action.payload * state.enemies.zombies.attackIncrementer) +\r\n        state.enemies.zombies.attackDmgDefault\r\n      )\r\n    },\r\n    decrementZombieAttackTimeLimit: (state, action) => {\r\n      state.enemies.zombies.zombieAttackLimiter = state.enemies.zombies.zombieAttackDefaultLimiter - (action.payload * state.enemies.zombies.zombieAttackLimiterDecrementer)\r\n      console.log(\r\n        state.enemies.zombies.zombieAttackLimiter\r\n      )\r\n    },\r\n    showLaserSight: (state, action) => {\r\n      state.player.weapons.laser[action.payload] = true\r\n    },\r\n    incrementZombieHealth: (state, action) => {\r\n      state.enemies.zombies.startingHealth = Math.round(state.enemies.zombies.defaultHealth + (state.enemies.zombies.healthIncrementer * action.payload))\r\n    },\r\n    setSelectedBarrierToBuild: (state, action) => {\r\n      state.barriers.selectedBarrier = action.payload\r\n    },\r\n    setSelectedTrapToBuild: (state, action) => {\r\n      state.traps.selectedTrap = action.payload\r\n    },\r\n    setLastWaveCountDefeated: (state) => { state.lastWaveCountDefeated = state.waveCountToDefeat },\r\n    incrementZombiesOnStage: state => { state.zombiesOnStage += 1 },\r\n    setZombiesOnStage: (state, action) => { state.zombiesOnStage = action.payload },\r\n    updateWeaponsList: (state, action) => {\r\n      state.player.weapons.list.push(action.payload)\r\n    },\r\n    // Perks\r\n    setPlayerMagnetism: {\r\n      reducer: (state, action) => {\r\n        state.player.variables.magnetism = action.payload.range\r\n        state.player.variables.magnetismSpeed = action.payload.speed\r\n        state.player.perks.magnetism.owned = true\r\n      },\r\n      prepare: (range, speed) => ({ payload: { range, speed } })\r\n    },\r\n    setPlayerMagDamage: (state) => {\r\n      state.player.perks.magDmg.owned = true\r\n    },\r\n    setPlayerLastBullet: (state) => {\r\n      state.player.perks.lastBullet.owned = true\r\n    },\r\n    setPlayerCreditDropper: state => { state.player.perks.creditDropper.owned = true },\r\n    setPlayerAmmoDropper: state => { state.player.perks.ammoDropper.owned = true },\r\n    setPlayerHealthDropper: state => { state.player.perks.healthDropper.owned = true },\r\n    setPlayerQuickTurret: state => {\r\n      state.player.perks.quickTurret.owned = true\r\n      state.traps.turret.cooldown = .25\r\n      state.traps.turret.fireDistance = 600\r\n    },\r\n    setPlayerBarrierPlus: state => {\r\n      state.player.perks.barrierPlus.owned = true\r\n    },\r\n    setPlayerFusterCluck: state => {\r\n      state.player.perks.cluck.owned = true\r\n    },\r\n    toggleFilterEffects: (state, action) => {\r\n      state.filterEffects = action.payload\r\n    },\r\n    toggleZombieHealthDisplay: (state, action) => {\r\n      state.displayZombieHealth = action.payload\r\n    },\r\n\t},\r\n})\r\n\r\nexport const {\r\n  toggleZombieHealthDisplay,\r\n  toggleFilterEffects,\r\n  setPlayerFusterCluck,\r\n  setPlayerBarrierPlus,\r\n  setPlayerQuickTurret,\r\n  setPlayerHealthDropper,\r\n  setPlayerAmmoDropper,\r\n  setPlayerCreditDropper,\r\n  setPlayerLastBullet,\r\n  setPlayerMagDamage,\r\n  setPlayerMagnetism,\r\n  addPurchase,\r\n  setZombiesOnLeft,\r\n  setZombiesOnRight,\r\n  setRightMouseDown,\r\n\tresetPlayerVariables,\r\n\tunsetAllKeys,\r\n\tsetPlayerCompositeId,\r\n\tsetKeyPress, removeKeyPress,\r\n\tsetLastDirection, setCurrentDirection,\r\n\tsetJumping, setGroundId, setMousePosition,\r\n\tsetMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot,\r\n\tsetWeaponEquipped,\r\n\tsetMouseRelativeToPlayerPosition,\r\n\tsetCompositeBodyIds,\r\n\tsetTexturePath,\r\n\tgameStateTransition,\r\n  incrementWave,\r\n  decrementWave,\r\n  incrementWaveCountToDefeat,\r\n\tsetWaveCountToDefeat,\r\n\tdecrementWaveCountToDefeat,\r\n\tsetWeaponsList,\r\n\tsetShowingMessage,\r\n  decrementTotalAmmo,\r\n  addToTotalAmmo,\r\n  updateAmmoCapacity,\r\n  addToTotalCredits,\r\n  subtractFromTotalCredits,\r\n  setPlayerPosition,\r\n  upgradeRunSpeed,\r\n  upgradeReloadSpeed,\r\n  upgradeJumpForce,\r\n  upgradeDefense,\r\n  upgradeMelee,\r\n  updatePlayerHealth,\r\n  attachMod,\r\n  incrementGrenadeCount,\r\n  decrementGrenadeCount,\r\n  updateZombieWalkSpeed,\r\n  updateZombieAttackDmg,\r\n  decrementZombieAttackTimeLimit,\r\n  showLaserSight,\r\n  incrementZombieHealth,\r\n  setSelectedBarrierToBuild,\r\n  setSelectedTrapToBuild,\r\n  lastWaveCountDefeated,\r\n  incrementZombiesOnStage,\r\n  setZombiesOnStage,\r\n  updateWeaponsList\r\n} = gameSlice.actions\r\n\r\nexport default gameSlice.reducer\r\n","export const WEAPON_TYPE_PISTOL = 'pistol weapon'\r\nexport const WEAPON_TYPE_GRENADE = 'grenades'\r\nexport const WEAPON_TYPE_SMG = 'smg weapon'\r\nexport const WEAPON_TYPE_TURRET = 'turret weapon'\r\nexport const WEAPON_TYPE_SHOTGUN = 'shotgun weapon'\r\n\r\nexport const PISTOL_BULLET_REMOVAL_TIMEOUT = 500\r\nexport const PISTOL_SHELL_REMOVAL_TIMEOUT = 2000\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MIN = 0.0003\r\nexport const PISTOL_SHELL_EJECTION_FORCE_MAX = 0.0007\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN = 0.5\r\nexport const PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX = 1.0\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport game from '../features/game/gameSlice'\r\n// import ragdollsReducer from '../features/game/ragdollSlice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n\t\tgame\r\n  }\r\n})\r\n\r\n// store.subscribe(() => {\r\n// \tconsole.log(store.getState())\r\n// })\r\n\r\nexport default store\r\n","import * as PIXI from 'pixi.js'\r\nimport { Mouse, MouseConstraint, World, Engine, Render, Runner, Composite, Vector } from 'matter-js'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\n\r\nconst width = 1200, height = 550\r\nconst worldWidth = 6000\r\n\r\nconst { getState } = store\r\n\r\nconst { TweenLite: { to } } = window\r\n\r\nexport const applyGsapHover = pixiElt => {\r\n\tpixiElt.on('mouseover', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.05, y: 1.05 })\r\n\t})\r\n\tpixiElt.on('mouseout', () => {\r\n\t\tto(pixiElt.scale, .35, { x: 1.00, y: 1.00 })\r\n\t})\r\n}\r\n\r\nexport const makePixiSprite = (stringIdentifier) => {\r\n\treturn (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\tPIXI.Texture.from(\r\n\t\t\t\tgetState().game.textures[stringIdentifier]\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n}\r\n\r\nexport const calcBulletAngle = (position1, position2) => {\r\n  let { game: { player: { weapons: { bulletVariance, equipped, bulletForce } } } } = getState()\r\n\tlet angle = Vector.angle(position1, position2)\r\n\tlet bulletAngle = {\r\n\t\tx: Math.cos(angle) * bulletForce[equipped],\r\n\t\ty: (Math.sin(angle) * bulletForce[equipped]) + random.float(-bulletVariance[equipped], bulletVariance[equipped])\r\n\t}\r\n\treturn bulletAngle\r\n}\r\n\r\nexport const calcGrenadeAngle = (position1, position2, force) => {\r\n  let angle = Vector.angle(position1, position2)\r\n\tlet grenadeAngle = {\r\n\t\tx: Math.cos(angle) * force.x,\r\n\t\ty: Math.sin(angle) * force.y\r\n\t}\r\n\treturn grenadeAngle\r\n}\r\n\r\nexport const getBodyWidth = body => {\r\n\treturn (body.bounds.max.x - body.bounds.min.x)\r\n}\r\n\r\nexport const getBodyHeight = body => {\r\n\treturn (body.bounds.max.y - body.bounds.min.y)\r\n}\r\n\r\nexport const getPlayerPartByType = (type, gameObjects) => {\r\n\tlet {\r\n\t\tgame: {\r\n\t\t\tplayer: {\r\n\t\t\t\tcomposite: {\r\n\t\t\t\t\theadId,\r\n\t\t\t\t\tbodyId,\r\n\t\t\t\t\tarmId,\r\n\t\t\t\t\tgunId\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} = getState()\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tif (type === 'head') {\r\n\t\treturn Composite.get(world, headId, 'body')\r\n\t}\r\n\tif (type === 'body') {\r\n\t\treturn Composite.get(world, bodyId, 'body')\r\n\t}\r\n\tif (type === 'arm') {\r\n\t\treturn Composite.get(world, armId, 'body')\r\n\t}\r\n\tif (type === 'gun') {\r\n\t\treturn Composite.get(world, gunId, 'body')\r\n\t}\r\n\r\n}\r\n\r\n// export const getGround = (gameObjects) => {\r\n// \tlet world = gameObjects.getKeyValue('world')\r\n// \tlet { game: { groundId } } = getState()\r\n// \treturn Composite.get(world, groundId, 'body')\r\n// }\r\n\r\nexport const getPlayerGun = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { gunId } } } } = getState()\r\n\treturn Composite.get(world, gunId, 'body')\r\n}\r\n\r\nexport const getPlayerBody = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { composite: { bodyId } } } } = getState()\r\n\treturn Composite.get(world, bodyId, 'body')\r\n}\r\n\r\nexport const getPlayerComposite = (gameObjects) => {\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet { game: { player: { compositeId } } } = getState()\r\n\treturn Composite.get(world, compositeId, 'composite')\r\n}\r\n\r\nexport function setUpPixi(elementId) {\r\n\tlet app = new PIXI.Application({\r\n\t\twidth,\r\n\t\theight,\r\n\t\tantialias: false,\r\n    resolution: 1\r\n\t})\r\n\tPIXI.settings.ROUND_PIXELS = true;\r\n\tdocument.getElementById(elementId).appendChild(app.view)\r\n\t// app.view.style.opacity = .85\r\n\r\n\treturn {\r\n\t\tapp,\r\n\t\tloader: new PIXI.Loader()\r\n\t}\r\n\r\n}\r\n\r\nexport function setUpMatter(elementId, mouseConstraintBool) {\r\n\t// create engine\r\n\tlet engine = Engine.create()\r\n\tlet world = engine.world\r\n\tworld.bounds = {\r\n\t\tmin: { x: -worldWidth, y: height * -2 },\r\n\t\tmax: { x: worldWidth, y: height * 1.5 }\r\n\t}\r\n\r\n\t// create renderer\r\n\tlet render = Render.create({\r\n\t\t\telement: document.getElementById(elementId),\r\n\t\t\tengine: engine,\r\n\t\t\toptions: {\r\n\t\t\t\twidth,\r\n\t\t\t\theight,\r\n\t\t\t\tpixelRatio: .5\r\n\t\t\t}\r\n\t})\r\n\tRender.run(render)\r\n\r\n\t// Render.lookAt(render, {\r\n\t// \tmin: { x: 0, y: 0 },\r\n\t// \tmax: { x: width, y: height }\r\n\t// })\r\n\r\n\t// create runner\r\n\tlet runner = Runner.create()\r\n\tRunner.run(runner, engine)\r\n\r\n\tif (mouseConstraintBool) {\r\n\t\tlet mouse = Mouse.create(render.canvas)\r\n\t\tlet\tmouseConstraint = MouseConstraint.create(engine, {\r\n\t\t\tmouse: mouse,\r\n\t\t\tconstraint: {\r\n\t\t\t\tstiffness: 0.2,\r\n\t\t\t\trender: {\r\n\t\t\t\t\tvisible: false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tWorld.add(world, mouseConstraint)\r\n\t\t// keep the mouse in sync with rendering\r\n\t\trender.mouse = mouse\r\n\t}\r\n\r\n\t// World.add(world, Bodies.rectangle(0,0,20,20))\r\n\r\n\treturn {\r\n\t\tengine,\r\n\t\trender,\r\n\t\trunner,\r\n\t\tworld,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tworldWidth\r\n\t\t// mouse,\r\n\t\t// mouseConstraint\r\n\t}\r\n\r\n}\r\n","export const GREATER_THAN_PLAYER_X_POS = 'greater than player x position'\r\nexport const GREATER_THAN_PLAYER_Y_POS = 'greater than player y position'\r\nexport const LESS_THAN_PLAYER_X_POS = 'less than player x position'\r\nexport const LESS_THAN_PLAYER_Y_POS = 'less than player y position'\r\nexport const MOUSE_UP = 'mouse up'\r\nexport const MOUSE_DOWN = 'mouse down'\r\n","export const playerCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const enemyCollisionOptions = {\r\n\tgroup: -1,\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n\r\nexport const itemCollisionOptions = {\r\n\tcategory: 1,\r\n\tmask: 1\r\n}\r\n\r\nexport const gibCollisionOptions = {\r\n\tcategory: 2,\r\n\tmask: 1\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { gameStateTransition, setShowingMessage } from './gameSlice'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { getBodyHeight } from './utils/Utils'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const createWaveMessage = txt => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: '#FFFFFF',\r\n\t\tfontSize: 40,\r\n    fontWeight: 'bold'\r\n  }, {\r\n    chars: [\r\n      ['a', 'z'],\r\n      ['0', '9'],\r\n      ['A', 'Z'],\r\n      ' .!?'\r\n    ]\r\n  })\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n  } = window\r\n  // let screenUI = gameObjects.getKeyValue('screen-ui')\r\n  let player = gameObjects.getKeyValue('player')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/5\r\n\r\n  container.addChild(text)\r\n\r\n  const transitionToShopQuery = () => {\r\n    if (getState().game.gameState === GameStates.MAIN_MENU || getState().game.gameState === GameStates.PAUSE) {\r\n      if (getState().game.gameSubState === SubStates.WAVE_DEFEATED || getState().game.gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.NEUTRAL))\r\n      }\r\n    } else {\r\n      if (!player.dead) {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU))\r\n        container.removeChild(text)\r\n      } else {\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const waveMsgOutro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgOutro, 2000)\r\n    } else {\r\n      to(text, .75, {\r\n        delay: 2,\r\n        x: gameWidth * 1.5,\r\n        ease: Power1.easeIn,\r\n        onComplete: transitionToShopQuery\r\n      })\r\n    }\r\n  }\r\n\r\n  const waveMsgIntro = () => {\r\n    if (getState().game.gameState === GameStates.PAUSE) {\r\n      setTimeout(waveMsgIntro, 2000)\r\n    } else {\r\n      from(text, .75, {\r\n        x: -100,\r\n        alpha: 0,\r\n        onComplete: waveMsgOutro\r\n      })\r\n    }\r\n  }\r\n\r\n  waveMsgIntro()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createGenericMessage = (txt, fillColor, durationMotion, durationLinger) => {\r\n\r\n\tPIXI.BitmapFont.from('Arial', {\r\n\t\tfill: fillColor,\r\n\t\tfontSize: 40,\r\n\t\tfontWeight: 'bold'\r\n\t})\r\n\r\n\tlet {\r\n\t\tgameObjects,\r\n\t\tTweenLite: { from, to },\r\n\t\tPower1\r\n\t} = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tconst text = new PIXI.BitmapText(txt, { font: 'Arial' })\r\n\r\n\ttext.pivot.x = text.width/2\r\n\ttext.pivot.y = text.height/2\r\n\ttext.position.x = gameWidth/2\r\n\ttext.position.y = gameHeight/2\r\n\r\n\tcontainer.addChild(text)\r\n\r\n\tfrom(text, durationMotion, {\r\n\t\tx: -100,\r\n\t\talpha: 0,\r\n\t\tonStart: () => {\r\n\t\t\tdispatch( setShowingMessage(true) )\r\n\t\t},\r\n\t\tonComplete: () => {\r\n\t\t\tto(text, durationMotion, {\r\n\t\t\t\tdelay: durationLinger,\r\n\t\t\t\tx: gameWidth * 1.5,\r\n\t\t\t\tease: Power1.easeIn,\r\n\t\t\t\tonComplete: () => {\r\n\t\t\t\t\tdispatch( setShowingMessage(false) )\r\n\t\t\t\t\tcontainer.removeChild(text)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\treturn this\r\n}\r\n\r\nexport const createTextMessage = (txt, fill, durationMotion, durationLinger, fontSize) => {\r\n\r\n  let {\r\n    gameObjects,\r\n    TweenLite: { to, set }\r\n  } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let texts = gameObjects.getKeyValue('text-messages')\r\n  let playerBody = gameObjects.getKeyValue('player').body\r\n  let msg = new PIXI.Text(txt, { fill, fontSize: fontSize ? fontSize : 13, fontWeight: 'bold' })\r\n  msg.pivot.x = msg.width * .5\r\n  msg.pivot.y = msg.height * .5\r\n  container.addChild(msg)\r\n\r\n  let { game: { player: { position: playerPosition } } } = getState()\r\n  let initialY = playerPosition.y - (getBodyHeight(playerBody) * .65)\r\n\r\n  texts.push(msg)\r\n\r\n  set(msg, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20)\r\n  })\r\n\r\n  to(msg, durationMotion, {\r\n    x: playerPosition.x,\r\n    y: initialY - (texts.length * 20) - 20,\r\n    onComplete: () => {\r\n      to(msg, durationMotion, {\r\n        delay: durationLinger,\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          msg.destroy()\r\n          let idx = texts.indexOf(msg)\r\n          if (idx > -1) {\r\n            texts.splice(idx, 1)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n}\r\n","import { Bodies, Body, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport random from 'random'\r\n\r\nlet { TweenLite: { delayedCall, to } } = window\r\n\r\nexport default function Gib ({ position_x, position_y }, { force_x, force_y }, timeToDisappear) {\r\n  let { gameObjects } = window\r\n  let gibs = gameObjects.getKeyValue('gibs')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let body = Bodies.circle(position_x, position_y, 5, {\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  body.label = 'gib'\r\n  World.add(world, body)\r\n\r\n  let getTexturePNG = () => {\r\n    let gibs = [ 'gib.png', 'gib2.png', 'gib3.png', 'gib4.png' ]\r\n    return gibs[ Math.floor( Math.random() * gibs.length ) ]\r\n  }\r\n  \r\n  let partsSheet = gameObjects.getKeyValue('player-parts-sheet')\r\n  let gfc = new Sprite(\r\n    partsSheet.textures[ getTexturePNG() ]\r\n  )\r\n  container.addChild( gfc )\r\n  \r\n  gibs.push( this )\r\n\r\n  gfc.pivot.x = gfc.width * .5\r\n  gfc.pivot.y = gfc.height * .475\r\n\r\n  Body.applyForce(body, { x: position_x, y: position_y }, { x: random.float(force_x * .25, force_x), y: random.float(force_y * .25, force_y) })\r\n  \r\n  this.animate = renderFn => {\r\n    let { x, y, rotation: rot } = renderFn(body)\r\n    gfc.position = { x, y }\r\n    gfc.rotation = rot\r\n  }\r\n\r\n  this.destroy = () => {\r\n    if (gfc) {\r\n      gfc.destroy()\r\n    }\r\n    if (body) {\r\n      World.remove(world, body)\r\n    }\r\n    let idx = gibs.indexOf(this)\r\n    if ( idx > -1 ) {\r\n      gibs.splice( idx, 1 )\r\n    }\r\n    world = null\r\n    body = null\r\n    container = null\r\n    gibs = null\r\n    gameObjects = null\r\n  }\r\n\r\n  delayedCall(timeToDisappear, () => {\r\n    to(gfc, 2, { alpha: 0, onComplete: () => { this.destroy() }})\r\n  })\r\n\r\n  return this\r\n\r\n}\r\n\r\nexport function GibGenerator (count, position, force, timeToDisappear) {\r\n  let { x: position_x, y: position_y } = position\r\n  force = force || { force_x: 0, force_y: 0 }\r\n  let { x: force_x, y: force_y } = force\r\n  // add some gibs for effect!\r\n\tfor (let gibCnt = 0; gibCnt < count; ++gibCnt) {\r\n\t\tnew Gib({ position_x, position_y }, { force_x, force_y }, timeToDisappear)\r\n\t}\r\n}\r\n","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { GibGenerator } from '../items/Gib'\r\n\r\nexport function PlayerRagdollDecap ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 60 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet maskBody = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  // let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n\t// spineToHead really\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  // let spineToLower = Constraint.create({\r\n  //   bodyA: bodyLower,\r\n  //   bodyB: lower_spineLinks[0],\r\n  //   pointA: { x: 0, y: -bLower.h/2 },\r\n  //   pointB: { x: 0, y: -spine.h/2 },\r\n  //   length: 10\r\n  // })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, maskBody, bodyUpper, //bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['head_gore.png'] )\r\n\tskull._id = 'skull'\r\n\tspriteParts.push( skull )\r\n\t\r\n  let mask = new PIXI.Sprite( parts_spritesheet.textures['mask.png'] )\r\n\tmask._id = 'mask'\r\n  spriteParts.push( mask )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\t// lower_spineLinks.forEach(link => {\r\n  //   let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n  //   entrailGfx.push( entrailGfc )\r\n  //   spriteParts.push( entrailGfc )\r\n  // })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_headless.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  // let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\t// torsoLower._id = 'torso lower'\r\n  // spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.mask = maskBody\r\n  this.bodyUpper = bodyUpper\r\n  // this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => {\r\n\t\t\tsprite.destroy()\r\n\t\t\tsprite = null\r\n\t\t})\r\n\t\tWorld.remove(world, this.composite)\r\n\t\tthis.composite = null\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet maskPos = renderFnc(this.mask)\r\n\t\tmask.position = maskPos\r\n\t\tmask.rotation = maskPos.rotation\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a head constraint\r\n\tComposite.remove(this.composite, bodyToHead)\r\n\tBody.applyForce(this.head, this.head.position, { x: 0, y: -0.1 })\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollHalved ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet bUpper = { w: 40, h: 35 }\r\n\tlet bLower = { w: 45, h: 5 }\r\n  let h = { w: 25, h: 25 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n  let f2 = { w: 10, h: 14 }\r\n  // entrail\r\n  let spine = { w: 10, h: 10 }\r\n  \r\n  let bodyLower = Bodies.rectangle(x, y, bLower.w, bLower.h)\r\n  \r\n\tlet bodyUpper = Bodies.rectangle(x, y, bUpper.w, bUpper.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n  })\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -bUpper.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -bUpper.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyLowerToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyLowerToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyLower,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: bLower.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n  })\r\n\r\n\tlet spineGfx = [], entrailGfx = []\r\n\r\n  const makeSpine = () => {\r\n\t\t// begin spine/entrail creation\r\n\t\tlet spineLinks = [], spineConstraints = []\r\n    for (let _si = 0; _si < 6; ++_si) {\r\n\t\t\tlet spineLink = Bodies.rectangle(bodyUpper.position.x, bodyUpper.position.y, spine.w, spine.h)\r\n      spineLinks.push( spineLink )\r\n    }\r\n\t\t\r\n    let spineConstraint001 = Constraint.create({\r\n      bodyA: spineLinks[0],\r\n      bodyB: spineLinks[1],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint002 = Constraint.create({\r\n      bodyA: spineLinks[1],\r\n      bodyB: spineLinks[2],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint003 = Constraint.create({\r\n      bodyA: spineLinks[2],\r\n      bodyB: spineLinks[3],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint004 = Constraint.create({\r\n      bodyA: spineLinks[3],\r\n      bodyB: spineLinks[4],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    let spineConstraint005 = Constraint.create({\r\n      bodyA: spineLinks[4],\r\n      bodyB: spineLinks[5],\r\n      pointA: { x: 0, y: spine.h/2 },\r\n      pointB: { x: 0, y: -spine.h/2 },\r\n      length: 4\r\n    })\r\n    \r\n    spineConstraints = [\r\n      spineConstraint001,\r\n      spineConstraint002,\r\n      spineConstraint003,\r\n      spineConstraint004,\r\n      spineConstraint005,\r\n    ]\r\n    \r\n    return {\r\n      spineLinks,\r\n      spineConstraints\r\n    }\r\n\r\n  }\r\n\r\n  let { spineLinks: upper_spineLinks, spineConstraints: upper_spineConstraints } = makeSpine()\r\n  let { spineLinks: lower_spineLinks, spineConstraints: lower_spineConstraints } = makeSpine()\r\n\r\n  let spineToUpper = Constraint.create({\r\n    bodyA: bodyUpper,\r\n    bodyB: upper_spineLinks[0],\r\n    pointA: { x: 0, y: bUpper.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n  \r\n  let spineToLower = Constraint.create({\r\n    bodyA: bodyLower,\r\n    bodyB: lower_spineLinks[0],\r\n    pointA: { x: 0, y: -bLower.h/2 },\r\n    pointB: { x: 0, y: -spine.h/2 },\r\n    length: 10\r\n  })\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper, bodyLower,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyLowerToLegUpperL, bodyLowerToLegUpperR,\r\n    legUpperLToLegLowerL, legUpperRToLegLowerR,\r\n  ])\r\n\r\n  Composite.add(this.composite, upper_spineLinks)\r\n  Composite.add(this.composite, upper_spineConstraints)\r\n  Composite.add(this.composite, spineToUpper)\r\n\r\n  Composite.add(this.composite, lower_spineLinks)\r\n  Composite.add(this.composite, lower_spineConstraints)\r\n  Composite.add(this.composite, spineToLower)\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n\t\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n  )\r\n  \r\n  let foot2 = new PIXI.Sprite( parts_spritesheet.textures['rear_leg_foot.png'] )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_lower.png`] )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite( parts_spritesheet.textures['rear_arm_hand.png'] )\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_forearm.png`] )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_arm_upper.png`] )\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite( parts_spritesheet.textures['front_leg_foot.png'] )\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite( parts_spritesheet.textures[`rear_leg_upper.png`] )\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_lower.png`] )\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite( parts_spritesheet.textures[`front_leg_upper.png`] )\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tupper_spineLinks.forEach(link => {\r\n    let spineGfc = new PIXI.Sprite( parts_spritesheet.textures['spine_link.png'] )\r\n    spineGfx.push( spineGfc )\r\n    spriteParts.push( spineGfc )\r\n  })\r\n\t\r\n\tlower_spineLinks.forEach(link => {\r\n    let entrailGfc = new PIXI.Sprite( parts_spritesheet.textures['entrail_chunk.png'] )\r\n    entrailGfx.push( entrailGfc )\r\n    spriteParts.push( entrailGfc )\r\n  })\r\n  \r\n  let torsoUpper = new PIXI.Sprite( parts_spritesheet.textures['torso_upper_gore.png'] )\r\n\ttorsoUpper._id = 'torso upper'\r\n  spriteParts.push( torsoUpper )\r\n  \r\n  let torsoLower = new PIXI.Sprite( parts_spritesheet.textures['torso_lower_gore.png'] )\r\n\ttorsoLower._id = 'torso lower'\r\n  spriteParts.push( torsoLower )\r\n  \r\n  let hand1 = new PIXI.Sprite( parts_spritesheet.textures['front_arm_hand.png'] )\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_forearm.png`] )\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite( parts_spritesheet.textures[`front_arm_upper.png`] )\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n  this.bodyUpper = bodyUpper\r\n  this.bodyLower = bodyLower\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\r\n    upper_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      spineGfx[i].position = linkPos\r\n      spineGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlower_spineLinks.forEach((link, i) => {\r\n      let linkPos = renderFnc(link)\r\n      entrailGfx[i].position = linkPos\r\n      entrailGfx[i].rotation = linkPos.rotation\r\n    })\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoUpperPos = renderFnc(this.bodyUpper)\r\n\t\ttorsoUpper.position = torsoUpperPos\r\n\t\ttorsoUpper.rotation = torsoUpperPos.rotation\r\n\r\n    let torsoLowerPos = renderFnc(this.bodyLower)\r\n\t\ttorsoLower.position = torsoLowerPos\r\n\t\ttorsoLower.rotation = torsoLowerPos.rotation\r\n    \r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\nexport function PlayerRagdollMaim ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')  //gameObjects.getKeyValue('zombie-parts-sheet') //gameObjects.getKeyValue('z-parts-spritesheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(15, 20),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull_gore.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper_gore.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach arm constraints\r\n\tComposite.remove(this.composite, [ bodyUpperToArmUpperL, bodyUpperToArmUpperR ])\r\n\tBody.applyForce(this.armLowerL, this.armLowerL.position, { x: -0.01, y: -0.1 })\r\n\tBody.applyForce(this.armLowerR, this.armUpperR.position, { x: 0.01, y: -0.1 })\r\n\r\n\t// auto removal\r\n\t// delayedCall(3, this.destroy)\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function PlayerRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\t\r\n\tlet b = { w: 40, h: 55 }\r\n  let h = { w: 25, h: 15 }\r\n\tlet a = { w: 15, h: 30 }\r\n\tlet l = { w: 15, h: 50 }\r\n\tlet hnd = { w: 15, h: 20 }\r\n\tlet f1 = { w: 10, h: 7 }\r\n\tlet f2 = { w: 10, h: 14 }\r\n\t// let bodyLower = Bodies.rectangle(x, y, b.w, b.h)\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    // collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    // collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    // collisionFilter: playerColl\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f2.w, f2.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f1.w, f1.h, {\r\n\t\t// collisionFilter: enemyCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\t// let bodyUpperToLower = Constraint.create({\r\n\t// \tbodyA: bodyUpper,\r\n\t// \tbodyB: bodyLower,\r\n\t// \tpointA: { x: 0, y: b.h/2 },\r\n\t// \tpointB: { x: 0, y: -b.h/2 },\r\n\t// \tlength: 2\r\n\t// })\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/4 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f2.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f1.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\r\n\tWorld.add(world, this.composite)\r\n\tBody.applyForce(bodyUpper, bodyUpper.position, force)\r\n\r\n\t// add sprites\r\n\tlet parts_spritesheet = gameObjects.getKeyValue('player-parts-sheet')\r\n\t\r\n  let spriteParts = []\r\n\r\n  console.log(\r\n    partLastDamaged\r\n\t)\r\n\t\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = force.x < 0 ? { x: -0.002 } : { x: 0.002 }\r\n\tgibForce.y = -0.002\r\n\t\r\n\tnew GibGenerator(\r\n\t\trandom.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\t5\r\n\t)\r\n  \r\n  let foot2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures['rear_leg_foot.png']\r\n  )\r\n  foot2._id = 'foot 2'\r\n  spriteParts.push( foot2 )\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_leg_lower.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['rear_arm_hand.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    parts_spritesheet.textures[`rear_arm_forearm.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_arm_upper.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n\r\n  let foot1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_leg_foot.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`rear_leg_upper.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n  let skull = new PIXI.Sprite( parts_spritesheet.textures['skull.png'] )\r\n\tskull._id = 'skull'\r\n  spriteParts.push( skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_lower.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_leg_upper.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n  spriteParts.push( upperLeg1 )\r\n  \r\n  let torso = new PIXI.Sprite( parts_spritesheet.textures['torso_whole_gore.png'] )\r\n\ttorso._id = 'torso'\r\n  spriteParts.push( torso )\r\n\r\n  let hand1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures['front_arm_hand.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n  let arm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_forearm.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tparts_spritesheet.textures[`front_arm_upper.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n    part.updateAnchor = true\r\n    if (part._id === 'skull') {\r\n      part.pivot.x = part.width * .55\r\n      part.pivot.y = part.height * .475\r\n    } else if (part._id === 'foot 1' || part._id === 'foot 2') {\r\n      part.pivot.x = part.width * .525\r\n      part.pivot.y = part.height * .5\r\n    } else {\r\n      part.pivot.x = part.width * .5\r\n      part.pivot.y = part.height * .5\r\n    }\r\n    container.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\tthis.destroy = () => {\r\n    // remove reference to gameObject\r\n    gameObjects.setKeyValue('player-ragdoll', null)\r\n\t\tspriteParts.forEach(sprite => { sprite.destroy() })\r\n\t\tWorld.remove(world, this.composite)\r\n\t}\r\n\r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n    skull.rotation = skullPos.rotation\r\n\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\treturn this\r\n}","import { World } from 'matter-js'\r\nimport { AnimatedSprite } from 'pixi.js'\r\n\r\nexport const BLOOD_SPURT_TYPE_1 = 'blood spurt type 1'\r\nexport const BLOOD_SPURT_TYPE_2 = 'blood spurt type 2'\r\nexport const BLOOD_SPURT_TYPE_3 = 'blood spurt type 3'\r\n\r\nlet { TweenLite: { set } } = window\r\n\r\nexport default function BloodSpurt (type, position, scale, bodyToDelete) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n\r\n  let chosenSpurt = null\r\n  \r\n  let bloodSpurt1_sheet = gameObjects.getKeyValue('blood-spurt-1')\r\n  let bloodSpurt1 = new AnimatedSprite( bloodSpurt1_sheet.animations['blood_spurt_1'] )\r\n  \r\n  let bloodSpurt2_sheet = gameObjects.getKeyValue('blood-spurt-2')\r\n  let bloodSpurt2 = new AnimatedSprite( bloodSpurt2_sheet.animations['blood_spurt_2'] )\r\n  \r\n  let bloodSpurt3_sheet = gameObjects.getKeyValue('blood-spurt-3')\r\n  let bloodSpurt3 = new AnimatedSprite( bloodSpurt3_sheet.animations['blood_spurt_3'] )\r\n  \r\n  // randomize the returned spurt\r\n  let spurts = [ BLOOD_SPURT_TYPE_1, BLOOD_SPURT_TYPE_2, BLOOD_SPURT_TYPE_3 ]\r\n  let autoChosen = spurts[ Math.floor( Math.random() * spurts.length ) ]\r\n  \r\n  if (!type) {\r\n    type = autoChosen\r\n  }\r\n  \r\n  if (type === BLOOD_SPURT_TYPE_1) {\r\n    chosenSpurt = bloodSpurt1\r\n  } else if (type === BLOOD_SPURT_TYPE_2) {\r\n    chosenSpurt = bloodSpurt2\r\n  } else {\r\n    chosenSpurt = bloodSpurt3\r\n  }\r\n\r\n  chosenSpurt.onComplete = () => {\r\n    chosenSpurt.destroy()\r\n    if (bodyToDelete) {\r\n      World.remove(world, bodyToDelete)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    chosenSpurt = null\r\n    bloodSpurt1 = null\r\n    bloodSpurt1_sheet = null \r\n    bloodSpurt2 = null\r\n    bloodSpurt2_sheet = null \r\n    bloodSpurt3 = null\r\n    bloodSpurt3_sheet = null \r\n    spurts = null\r\n    autoChosen = null\r\n  }\r\n\r\n  chosenSpurt.animationSpeed = .5\r\n  chosenSpurt.pivot.x = chosenSpurt.width * .5\r\n  chosenSpurt.pivot.y = chosenSpurt.height * .5\r\n  if (scale) {\r\n    set(chosenSpurt.scale, { x: scale, y: scale })\r\n  } else {\r\n    set(chosenSpurt.scale, { x: .5, y: .5 })\r\n  }\r\n  chosenSpurt.position = position\r\n  chosenSpurt.loop = false\r\n  chosenSpurt.updateAnchor = true\r\n  chosenSpurt.play()\r\n  container.addChild( chosenSpurt )\r\n\r\n  return chosenSpurt\r\n\r\n}","export const FELL_OFF = 'fell off of ledge'\r\nexport const KILLED_BY_ZOMBIE = 'killed by zombie'","import { Body, World, Bodies } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nlet { getState } = store\r\n\r\nexport default function Rock(position) {\r\n  let { gameObjects, TweenLite: { to, delayedCall } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let rockPieceAssets = [ 'rock-piece1.png', 'rock-piece2.png', 'rock-piece3.png' ]\r\n  const getRandomRockSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        rockPieceAssets[ Math.floor( Math.random() * rockPieceAssets.length ) ]\r\n      ]\r\n  ))\r\n  let rockSprite = getRandomRockSprite()\r\n  const rockScale = () => random.float(.45, .65)\r\n  rockSprite.pivot.x = rockSprite.width * .48\r\n  rockSprite.pivot.y = rockSprite.height * .48\r\n  rockSprite.scale.x = rockScale()\r\n  rockSprite.scale.y = rockScale()\r\n  container.addChild(rockSprite)\r\n  let rockBody = Bodies.rectangle(position.x, position.y - 50, 10, 10, {\r\n    restitution: .25,\r\n    collisionFilter: {\r\n      category: 2,\r\n      mask: 1\r\n    }\r\n  })\r\n  Body.applyForce(rockBody, rockBody.position, {\r\n    x: random.float(-0.005, 0.005),\r\n    y: random.float(-0.001, -0.0025),\r\n  })\r\n  World.add(world, rockBody)\r\n  this.animate = renderFn => {\r\n    let { x, y } = renderFn(rockBody)\r\n    rockSprite.position = { x, y }\r\n  }\r\n  this.destroy = () => {\r\n    let idx = rocks.indexOf(this)\r\n    World.remove(world, rockBody)\r\n    container.removeChild(rockSprite)\r\n    if (idx > -1) {\r\n      rocks.splice(idx, 1)\r\n    }\r\n    world = null\r\n    rocks = null\r\n    container = null\r\n    rockBody = null\r\n    rockSprite = null\r\n    gameObjects = null\r\n  }\r\n  delayedCall(\r\n    getState().game.lastWaveCountDefeated &&\r\n    getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n    () => {\r\n      to(rockSprite, .5, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    }\r\n  )\r\n  return this\r\n}\r\n","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class WoodPlank {\r\n\r\n  constructor(pos) {\r\n    this.gameObjects = window.gameObjects\r\n    const { to, delayedCall } = window.TweenLite\r\n    let container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let world = this.gameObjects.getKeyValue('world')\r\n    this.woodPlanksSheet = this.gameObjects.getKeyValue('wood-planks-sheet')\r\n    this.woodPlanks = this.gameObjects.getKeyValue('wood-planks')\r\n    this.plankRange = [ '000.png', '001.png', '002.png' ]\r\n    // this.planks = new Array(random.int(4, 8)).fill(1)\r\n    // this.planks.map(plank => this.getPlank())\r\n    let {x,y} = pos\r\n    this.gfc = this.getPlank()\r\n    this.gfc.width = 50\r\n    this.gfc.height = 15\r\n    this.gfcContainer = new PIXI.Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = this.gfcContainer.width * .5\r\n    this.gfcContainer.pivot.y = this.gfcContainer.height * .5\r\n    this.body = new Bodies.rectangle(x,y,50,15,{collisionFilter:playerCollisionOptions})\r\n    this.body.torque = random.float(-0.5, 0.5)\r\n    Body.applyForce(this.body, this.body.position, {\r\n      x: random.float(-0.02, 0.02),\r\n      y: random.float(-0.01, -0.02)\r\n    })\r\n    World.add(world, this.body)\r\n    container.addChild(this.gfcContainer)\r\n    this.destroy = () => {\r\n      let idx = this.woodPlanks.indexOf(this)\r\n      World.remove(world, this.body)\r\n      container.removeChild(this.gfcContainer)\r\n      if (idx > -1) {\r\n        this.woodPlanks.splice(idx, 1)\r\n      }\r\n      world = null\r\n      container = null\r\n      this.gameObjects = null\r\n      this.woodPlanks = null\r\n      this.gfc = null\r\n    }\r\n    delayedCall(4, () => {\r\n      to(this.gfcContainer, 2, { alpha: 0, onComplete: () => { this.destroy() } })\r\n    })\r\n    return this\r\n  }\r\n\r\n  animate(renderFn) {\r\n    let {x,y,rotation:rot} = renderFn(this.body)\r\n    this.gfcContainer.position = {x,y}\r\n    this.gfcContainer.rotation = rot\r\n  }\r\n\r\n  getPlank() {\r\n    return (\r\n      new PIXI.Sprite(\r\n        this.woodPlanksSheet.textures[\r\n          this.plankRange[Math.floor(Math.random() * this.plankRange.length)]\r\n        ]\r\n      )\r\n    )\r\n  }\r\n\r\n}","import { contains } from 'jquery'\r\nimport { AnimatedSprite } from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport { BlurFilter } from '@pixi/filter-blur'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport store from '../../../app/store'\r\n\r\nexport default class ExplosionSprite {\r\n\r\n  constructor(type, renderBody) {\r\n    this.gameObjects = window.gameObjects\r\n    let { to } = window.TweenLite\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    let explosionTexture1 = this.gameObjects.getKeyValue('explosion3d1-sheet')\r\n    let explosionTexture2 = this.gameObjects.getKeyValue('explosion3d2-sheet')\r\n    this.explosion1 = new AnimatedSprite( explosionTexture1.animations['explosion3d'] )\r\n    this.explosion2 = new AnimatedSprite( explosionTexture2.animations['explosion3d'] )\r\n    this.explosions = [ this.explosion1, this.explosion2 ]\r\n    this.explosions.forEach(ex => {\r\n      ex.pivot.x = ex.width * .5\r\n      ex.pivot.y = ex.height * .5\r\n      ex.loop = false\r\n      ex.onComplete = () => {\r\n        this.container.removeChild(ex)\r\n        this.container = null\r\n        this.gameObjects = null\r\n        explosionTexture1 = null\r\n        explosionTexture2 = null\r\n        this.explosions = null\r\n      }\r\n    })\r\n    if (type === 1) {\r\n      this.explosion = this.explosion1\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    if (type === 2) {\r\n      this.explosion = this.explosion2\r\n      this.explosion.animationSpeed = 1.0\r\n    }\r\n    // this.container.addChild(this.explosion)\r\n    this.renderBody = renderBody\r\n    let adjustment = new AdjustmentFilter()\r\n    adjustment.brightness = 20.0\r\n    adjustment.saturation = 3.0\r\n    let blur = new BlurFilter()\r\n    blur.blur = .5\r\n    let glow = new GlowFilter({\r\n      outerStrength: 3.0\r\n    })\r\n    this.filters = store.getState().game.filterEffects ? [\r\n      adjustment,\r\n      blur,\r\n      glow\r\n    ] : []\r\n    this.explosion.filters = this.filters\r\n    to(this.explosion, .35, { alpha: 0 })\r\n    to(adjustment, .5, { brightness: 1.0, saturation: 1.5, onUpdate: () => {\r\n      if (store.getState().game.filterEffects) {\r\n        this.explosion.filters = this.filters\r\n      }\r\n    }})\r\n    this.explosion.play()\r\n  }\r\n\r\n  // checkFilters() {\r\n  //   if (store.getState().game.filterEffects) {\r\n  //     this.explosion.filters = this.filters\r\n  //   } else {\r\n  //     this.explosion.filters = []\r\n  //   }\r\n  // }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.explosion.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.explosion) === -1) {\r\n        this.container.addChild(this.explosion)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { World, Bodies, Body } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport Rock from '../items/Rock'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport WoodPlank from '../items/WoodPlank'\r\nimport ExplosionSprite from './ExplosionSprite'\r\nimport { Howl, Howler } from 'howler'\r\n\r\nexport default function GrenadeExplosion (position, showRocksBool, options) {\r\n  let { gameObjects, TweenLite: { to } } = window\r\n  let explosion1 = window.gameObjects.getKeyValue('explosion1')\r\n  let explosionSound1 = new Howl({\r\n    src: [ explosion1 ]\r\n  })\r\n  let distantExplosion = window.gameObjects.getKeyValue('distant-explosion')\r\n  let distantExplosionSound = new Howl({\r\n    src: [ distantExplosion ]\r\n  })\r\n  let world = gameObjects.getKeyValue('world')\r\n  let rocks = gameObjects.getKeyValue('rocks')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let explosionsArray = gameObjects.getKeyValue('explosions')\r\n  let explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n  let smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\r\n  const getRandomSmokeSprite = () => (\r\n    new PIXI.Sprite(\r\n      explosionAssetsSheet.textures[\r\n        smokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n      ]\r\n  ))\r\n  let positionalBody = Bodies.rectangle(position.x, position.y, 20, 20, {\r\n    restitution: 0,\r\n    collisionFilter: playerCollisionOptions,\r\n    isStatic: true\r\n  })\r\n  World.add(world, positionalBody)\r\n  this.calcRenderedPosition = renderFn => {\r\n    let { x, y } = renderFn(positionalBody)\r\n    this.calculatedPosition = { x, y }\r\n    // if (container && container.children.indexOf(smokeSprite) === -1) {\r\n    //   container.addChild(smokeSprite)\r\n    // }\r\n  }\r\n  explosionsArray.push( this )\r\n  // put it together\r\n  // smoke animation \r\n  let randInt = random.int(5, 10) // reduced from (10, 20)\r\n  for (let s = 0; s < randInt; ++s) {\r\n    let smokeSprite = getRandomSmokeSprite()\r\n    smokeSprite.pivot.x = smokeSprite.width * .5\r\n    smokeSprite.pivot.y = smokeSprite.height * .5\r\n    let duration = 2 // smoke tween duration \r\n    to(smokeSprite, duration, {\r\n      onStart: () => { container.addChild(smokeSprite) },\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        if (s === randInt - 1) {\r\n          World.remove(world, positionalBody)\r\n          let idx1 = explosionsArray.indexOf(this)\r\n          if (idx1 > -1) { explosionsArray.splice(idx1, 1) }\r\n          world = null\r\n          explosionsArray = null\r\n          explosionAssetsSheet = null\r\n          smokeAssets = null\r\n        }\r\n      }\r\n    })\r\n    let randScale = random.int(1, 2)\r\n    to(smokeSprite.scale, .5, { x: randScale, y: randScale })\r\n    let xyval = { x: 0, y: 0 }\r\n    to(xyval, .5, { x: random.int(-100, 100), y: random.int(-50, 50) })\r\n    to(smokeSprite.position, duration, {\r\n      onUpdate: () => {\r\n        if (this.calculatedPosition) {\r\n          smokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n          smokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        smokeSprite.destroy()\r\n        container = null\r\n        gameObjects = null\r\n      }\r\n    })\r\n  }\r\n  let woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n  // rocks \r\n  if (position.y > 300 || showRocksBool) {\r\n    for (let r = 0; r < random.int(4, 7); ++r) {\r\n      if (options && options.showWood) {\r\n        woodPlanks.push(new WoodPlank(position))\r\n      } else {\r\n        rocks.push(new Rock(position))\r\n      }\r\n    }\r\n    woodPlanks = null\r\n    rocks = null\r\n  }\r\n  if (!options || options.showExplosionSprite) {\r\n    // blender explosion sprite\r\n    let explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    explosionSound1.seek(.5)\r\n    explosionSound1.play()\r\n    distantExplosionSound.play()\r\n    explosionSprites.push(\r\n      new ExplosionSprite(random.int(1, 2), positionalBody)\r\n    )\r\n    explosionSprites = null\r\n  }\r\n}","import { Bodies, Constraint, World } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { getBodyHeight, getBodyWidth, makePixiSprite } from '../utils/Utils'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport store from '../../../app/store'\r\n\r\nexport default function WallBarrier (pos, dimensions, type) {\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite:{ delayedCall } } = window\r\n  let barriersSprites = gameObjects.getKeyValue('barriers-sheet')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let world = gameObjects.getKeyValue('world')\r\n  let buildObjects = gameObjects.getKeyValue('build-objects')\r\n  let {width:w,height:h} = dimensions\r\n  let woodenBarrier = new PIXI.Sprite(barriersSprites.textures['woodenBarrier.png'])\r\n  let stoneBarrier = new PIXI.Sprite(barriersSprites.textures['stoneBarrier.png'])\r\n  let metalBarrier = new PIXI.Sprite(barriersSprites.textures['metalBarrier.png'])\r\n  let explosiveBarrier = makePixiSprite('explosive-barrel')\r\n  this.types = {\r\n    WOOD: 'Wooden',\r\n    STONE: 'Stone',\r\n    METAL: 'Metal',\r\n    EXPLOSIVE: 'Explosive Barrel'\r\n  }\r\n  let {x,y} = pos\r\n  let objBody = Bodies.rectangle(x, y, w, h, {\r\n    inertia: Infinity,\r\n    label: type === this.types.EXPLOSIVE ? 'explosive barrier' : 'barrier'\r\n  })\r\n  // try to attach barrier to the ground\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  let constraint = Constraint.create({\r\n    bodyA: ground,\r\n    bodyB: objBody,\r\n    pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n    pointB: { x: 0, y: getBodyHeight(objBody)/2 },\r\n    length: 0\r\n  })\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n        break;\r\n      case this.types.STONE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 500 : 250\r\n        break;\r\n      case this.types.METAL:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 800 : 400\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 200 : 100\r\n        break;\r\n      default:\r\n        objBody.strength = getState().game.player.perks['barrierPlus'].owned ? 300 : 100\r\n    }\r\n  }\r\n\r\n  objBody.main = this\r\n  this.destroyed = false\r\n\r\n  this.getBody = () => objBody\r\n\r\n  // World.add(world, objBody)\r\n  World.add(world, [constraint, objBody])\r\n\r\n  let barrierSprite\r\n  let txtStyle = { fill: '#ffffff', fontSize: 12 }\r\n  let healthDisplay = new PIXI.Text(objBody.strength, txtStyle)\r\n  healthDisplay.pivot.x = healthDisplay.width * .5\r\n  healthDisplay.pivot.y = healthDisplay.height * .5\r\n  if (type) {\r\n    switch (type) {\r\n      case this.types.WOOD:\r\n        barrierSprite = woodenBarrier\r\n        break;\r\n      case this.types.STONE:\r\n        barrierSprite = stoneBarrier\r\n        break;\r\n      case this.types.METAL:\r\n        barrierSprite = metalBarrier\r\n        break;\r\n      case this.types.EXPLOSIVE:\r\n        barrierSprite = explosiveBarrier\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n  barrierSprite.width = w\r\n  barrierSprite.height = h\r\n  let sprite = new PIXI.Container()\r\n  sprite.addChild(barrierSprite)\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * .5\r\n  container.addChild(sprite)\r\n  container.addChild(healthDisplay)\r\n\r\n  let player = gameObjects.getKeyValue('player')\r\n  player.sprites.forEach(sprite => { container.addChild(sprite) })\r\n\r\n  this.takeDamage = (dmg) => {\r\n    objBody.strength -= dmg\r\n    healthDisplay.text = objBody.strength\r\n  }\r\n\r\n  this.displayBarrierStrength = (renderFn) => {\r\n    healthDisplay.position = renderFn(objBody)\r\n    barrierSprite.position = renderFn(objBody)\r\n  }\r\n\r\n  objBody.removeSelf = () => {\r\n    this.destroyed = true\r\n    new GrenadeExplosion(objBody.position, true, {\r\n      showWood: type === this.types.WOOD ? true : false,\r\n      showExplosionSprite: type === this.types.EXPLOSIVE ? true : false\r\n    })\r\n    if (type === this.types.EXPLOSIVE) {\r\n      let {x:_x,y:_y} = objBody.position\r\n      let explosionHitbox = Bodies.rectangle(_x, _y, 400, 300)\r\n      explosionHitbox.label = 'barrel explosion'\r\n      World.add(world, explosionHitbox)\r\n      delayedCall(2, () => {\r\n        if (explosionHitbox) {\r\n          World.remove(world, explosionHitbox)\r\n        }\r\n      })\r\n      explosionHitbox.removeSelf = () => {\r\n        World.remove(world, explosionHitbox)\r\n      }\r\n    }\r\n    World.remove(world, [constraint, objBody])\r\n    container.removeChild(healthDisplay)\r\n    container.removeChild(sprite)\r\n    let idx = buildObjects.indexOf(this)\r\n    if (idx > -1) { buildObjects.splice(idx, 1) }\r\n  }\r\n\r\n  return this\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class Landmine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('landmine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'landmine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['landmine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    new GrenadeExplosion(this.body.position, true)\r\n    let { TweenLite: { delayedCall } } = window\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { Bodies, World, Body, Vector } from 'matter-js'\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { radians } from 'radians'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\n\r\nexport default function Grenade (x, y, r, force, fuseTime) {\r\n  let { getState } = store\r\n  let { gameObjects, TweenLite: { delayedCall, from } } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let grenades = gameObjects.getKeyValue('grenades')\r\n  let grenadeBody = Bodies.circle(x, y, r, {\r\n    restitution: .8,\r\n    collisionFilter: { category: 3 }\r\n  })\r\n  grenadeBody.label = 'grenade'\r\n  grenadeBody.main = this\r\n  World.add(world, grenadeBody)\r\n  Body.applyForce(grenadeBody, grenadeBody.position, force)\r\n  grenadeBody.torque = .01\r\n  let grenadeGfc = new PIXI.Graphics()\r\n  grenadeGfc.beginFill(0x1F472C)\r\n  grenadeGfc.drawCircle(0, 0, r)\r\n  let bevel = new BevelFilter()\r\n  bevel.shadowAlpha = .45\r\n  bevel.lightAlpha = .35\r\n  bevel.thickness = 5\r\n  bevel.shadowColor = 0x0\r\n  bevel.lightColor = 0x208C44\r\n  let noise = new NoiseFilter()\r\n  noise.noise = .1\r\n  noise.seed = .5\r\n  grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise ] : []\r\n  let motionBlur = new MotionBlurFilter({ velocity: { x: 0, y: 0 } })\r\n  from(motionBlur.velocity, .75, { x: 100, y: 10 })\r\n  container.addChild(grenadeGfc)\r\n  this.animate = renderFn => {\r\n    if (grenadeBody && grenadeGfc) {\r\n      let { x, y, rotation: rot } = renderFn(grenadeBody)\r\n      grenadeGfc.position.x = x\r\n      grenadeGfc.position.y = y\r\n      grenadeGfc.rotation = rot\r\n      bevel.rotation = radians(rot)\r\n      grenadeGfc.filters = store.getState().game.filterEffects ? [ bevel, noise, motionBlur ] : []\r\n    }\r\n  }\r\n\r\n  delayedCall(fuseTime ? fuseTime : getState().game.player.weapons.grenadeFuseTime.default, () => {\r\n    if (!this.exploded) {\r\n      this.explode()\r\n    }\r\n  })\r\n  this.exploded = false\r\n  this.explode = (showRocks) => {\r\n    this.exploded = true\r\n    new GrenadeExplosion(grenadeBody.position, showRocks ? showRocks : null)\r\n    let explosionSize = getState().game.player.weapons.grenadeExplosionSize\r\n    this.explosionHitbox = Bodies.rectangle(grenadeBody.position.x, grenadeBody.position.y, explosionSize, explosionSize, {\r\n      // isStatic: true\r\n    })\r\n    this.explosionHitbox.label = 'grenade explosion'\r\n    World.remove(world, grenadeBody)\r\n    World.add(world, this.explosionHitbox)\r\n    container.removeChild(grenadeGfc)\r\n    delayedCall(.01, () => {\r\n      this.destroy()\r\n    })\r\n  }\r\n  this.destroy = () => {\r\n    World.remove(world, this.explosionHitbox)\r\n    let idx = grenades.indexOf(this)\r\n    if (idx > -1) {\r\n      grenades.splice(idx, 1)\r\n    }\r\n    // world = null\r\n    // container = null\r\n    // gameObjects = null\r\n    // this.explosionHitbox = null\r\n    // grenadeBody = null\r\n    // grenadeGfc = null\r\n  }\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container } from 'pixi.js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\nimport Grenade from '../items/Grenade'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Clustermine {\r\n\r\n  constructor(pos) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.landmines = gameObjects.getKeyValue('build-objects')\r\n    let landmineSheet = gameObjects.getKeyValue('clustermine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5)\r\n    this.body.label = 'clustermine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['clustermine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    let r = 10, fuseTime = 4\r\n    let { gameObjects } = window\r\n    let grenades = gameObjects.getKeyValue('grenades') // can replace with different red or blue \"cluster bomb\" graphics\r\n    delayedCall(.25, () => {\r\n      let { getState } = store\r\n      let num = getState().game.player.perks['cluck'].owned ? 8 : 4\r\n      let xforce = getState().game.player.perks['cluck'].owned ? random.float(-0.02, 0.02) : random.float(-0.01, 0.01)\r\n      let yforce = getState().game.player.perks['cluck'] ? random.float(-0.025, -0.075) : random.float(-0.01, -0.05)\r\n      for (let i = 0; i < num; ++i) {\r\n        delayedCall(.1 * i, () => {\r\n          let nade = new Grenade(\r\n            this.body.position.x,\r\n            this.body.position.y - 50,\r\n            r,\r\n            {\r\n              x: xforce,\r\n              y: yforce\r\n            },\r\n            fuseTime\r\n          )\r\n          grenades.push( nade )\r\n        })\r\n      }\r\n    })\r\n    // above code expels additional cluster grenades \r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'clustermine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      let idx = this.landmines.indexOf(this)\r\n      if (idx > -1) {\r\n        this.landmines.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","export const barrierTypes = {\r\n  WOOD: 'Wooden',\r\n  STONE: 'Stone',\r\n  METAL: 'Metal',\r\n  EXPLOSIVE: 'Explosive Barrel'\r\n}\r\n\r\nexport const trapTypes = {\r\n  LANDMINE: 'Landmine',\r\n  CLUSTER_BOMB: 'Cluster Bomb',\r\n  REMOTE_MINE: 'Remote Mine',\r\n  TURRET: 'Machine Gun Turret'\r\n}","import { Bodies, World, Constraint } from 'matter-js'\r\nimport { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { getBodyWidth, getBodyHeight } from '../utils/Utils'\r\n\r\nexport default class RemoteMine {\r\n\r\n  constructor(pos, mineNumber) {\r\n    let { x, y } = pos\r\n    let { gameObjects } = window\r\n    this.world = gameObjects.getKeyValue('world')\r\n    this.container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.buildObjects = gameObjects.getKeyValue('build-objects')\r\n    this.remoteMines = gameObjects.getKeyValue('remote-mines')\r\n    this.remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n    let landmineSheet = gameObjects.getKeyValue('remote-mine-sheet')\r\n    let w = 100\r\n    let h = 100\r\n    this.body = Bodies.rectangle(x, y, w, 5, { collisionFilter: playerCollisionOptions })\r\n    this.body.label = 'remote mine trap'\r\n    this.body.destroy = () => { this.destroy() }\r\n    // attach trap to the ground\r\n    let ground = gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + pos.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n\r\n    this.gfc = new AnimatedSprite(\r\n      landmineSheet.animations['remote-mine']\r\n    )\r\n    this.gfc.updateAnchor = true\r\n    this.gfc.loop = true\r\n    this.gfc.animationSpeed = .75\r\n    this.gfc.play()\r\n    this.gfc.width = w\r\n    this.gfc.height = h\r\n    this.gfcContainer = new Container()\r\n    this.gfcContainer.addChild(this.gfc)\r\n    this.gfcContainer.pivot.x = 0\r\n    this.gfcContainer.pivot.y = 0\r\n    this.container.addChild(this.gfcContainer)\r\n    console.log( this.gfcContainer.position )\r\n\r\n    // attach a number to the mine to know which key to press to detonate it\r\n    let txtStyle = { fill: '#00FFFF', fontSize: 12 }\r\n    this.num = new Text(`[ ${mineNumber} ]: detonate`, txtStyle)\r\n    this.num.pivot.x = this.num.width * .5\r\n    this.num.pivot.y = this.num.height * .5\r\n    this.container.addChild(this.num)\r\n    \r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  updatePosition(renderFn) {\r\n    let { x, y } = renderFn(this.body)\r\n    this.gfcContainer.position = { x, y }\r\n    this.num.position = { x, y: y - 50 }\r\n  }\r\n\r\n  detonate() {\r\n    this.destroy()\r\n  }\r\n\r\n  updateNumber(num) {\r\n    this.num.text = `[ ${num} ]: detonate`\r\n  }\r\n\r\n  destroy() {\r\n    let { TweenLite: { delayedCall } } = window\r\n    new GrenadeExplosion(this.body.position, true)\r\n    // place hitbox for explosion\r\n    let { x:_x, y:_y } = this.body.position\r\n    this.hitbox = Bodies.rectangle(_x, _y, 500, 300)\r\n    this.hitbox.label = 'landmine explosion'\r\n    this.hitbox.removeSelf = () => { World.remove(this.world, this.hitbox) }\r\n    World.add(this.world, this.hitbox)\r\n    delayedCall(.1, () => { this.hitbox.removeSelf() })\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      this.container.removeChild(this.gfcContainer)\r\n      this.container.removeChild(this.num)\r\n      let idx = this.buildObjects.indexOf(this)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n      let ridx = this.remoteMinesArr.indexOf(this)\r\n      if (ridx > -1) {\r\n        this.remoteMinesArr.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { World, Body, Bodies, Vector } from 'matter-js'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS, LESS_THAN_PLAYER_Y_POS } from '../constants/mouseStates'\r\nimport { PISTOL_BULLET_REMOVAL_TIMEOUT, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX,\r\n  WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET, WEAPON_TYPE_SHOTGUN\r\n } from '../constants/weapons'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport { calcBulletAngle, getBodyWidth, getBodyHeight, getPlayerBody, getPlayerPartByType } from '../utils/Utils'\r\nimport { createGenericMessage, createTextMessage } from '../createMessages'\r\nimport { setLastShot } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport random from 'random'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { radians } from 'radians'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nexport const calcPistolDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_PISTOL]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcTurretDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_TURRET]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcSMGDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SMG]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\nexport const calcShotgunDamage = body => {\r\n  let { min, max } = getState().game.player.weapons.damage[WEAPON_TYPE_SHOTGUN]\r\n\tif (body.label.indexOf('body') > -1) {\r\n\t\treturn { part: 'torso', dmg: min }\r\n\t} else if (body.label.indexOf('head') > -1) {\r\n\t\treturn { part: 'head', dmg: max }\r\n\t}\r\n}\r\n\r\n// bullet impact\r\nexport function BulletImpact (surfaceType, position, scale) {\r\n\tlet {x,y} = position\r\n\tlet { gameObjects, TweenLite: { to, set, from } } = window\r\n\tlet world = gameObjects.getKeyValue('world')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n\tWorld.add(world, positionalBody)\r\n\r\n\tlet explosionAssetsSheet = gameObjects.getKeyValue('explosion-assets-sheet')\r\n\tlet smokeAssets = [ 'smoke1.png', 'smoke2.png', 'smoke3.png', 'smoke4.png' ]\r\n\tconst getRandomSmokeSprite = () => (\r\n\t\tnew PIXI.Sprite(\r\n\t\t\texplosionAssetsSheet.textures[\r\n\t\t\t\tsmokeAssets[ Math.floor( Math.random() * smokeAssets.length ) ]\r\n\t\t\t]\r\n\t))\r\n\tlet randInt = 2 //random.int(2, 4)\r\n\tfor (let i = 0; i < randInt; ++i) {\r\n\t\tlet smokeSprite = getRandomSmokeSprite()\r\n\t\tif (surfaceType === 'enemy') {\r\n\t\t\tsmokeSprite.tint = 0xFF0000\r\n\t\t}\r\n\t\tsmokeSprite.pivot.x = smokeSprite.width * .5\r\n\t\tsmokeSprite.pivot.y = smokeSprite.height * .5\r\n\t\tto(smokeSprite, scale && scale.alphaDuration ? scale.alphaDuration : .5, {\r\n\t\t\talpha: 0,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tif (i === randInt - 1) {\r\n\t\t\t\t\tWorld.remove(world, positionalBody)\r\n\t\t\t\t\tworld = null \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tlet randScale\r\n\t\tif (scale && scale.rand && scale.rand.min && scale.rand.max) {\r\n\t\t\trandScale = random.float(scale.rand.min, scale.rand.max)\r\n\t\t} else {\r\n\t\t\trandScale = random.float(.25, .5)\r\n\t\t}\r\n\t\tset(smokeSprite.scale, {\r\n\t\t\tx: scale && scale.set ? scale.set : .1,\r\n\t\t\ty: scale && scale.set ? scale.set : .1\r\n\t\t})\r\n\t\tto(smokeSprite.scale, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: randScale,\r\n\t\t\ty: randScale\r\n\t\t})\r\n\t\tlet xyval = { x: 0, y: 0 }\r\n\t\tto(xyval, scale && scale.duration ? scale.duration : .25, {\r\n\t\t\tx: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-10, 10),\r\n\t\t\ty: surfaceType === 'enemy' ? random.int(-20, 20) : random.int(-50, 0)\r\n\t\t})\r\n\t\tto(smokeSprite.position, 3, {\r\n\t\t\tonUpdate: () => {\r\n\t\t\t\tif (this.calculatedPosition) {\r\n\t\t\t\t\tsmokeSprite.position.x = this.calculatedPosition.x + xyval.x\r\n\t\t\t\t\tsmokeSprite.position.y = this.calculatedPosition.y + xyval.y\r\n\t\t\t\t\tif (container && container.children.indexOf(smokeSprite) < 0) {\r\n\t\t\t\t\t\tcontainer.addChild(smokeSprite)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tsmokeSprite.destroy()\r\n\t\t\t\tcontainer = null\r\n\t\t\t\tgameObjects = null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tthis.renderPosition = (renderFn) => {\r\n\t\tthis.calculatedPosition = renderFn(positionalBody)\r\n\t}\r\n\r\n\treturn this\r\n}\r\n\r\n// bullet shell\r\nexport function PistolShell(x, y, gameObjects, changeLabelString, overrideOptions) {\r\n\tlet world, container, shells\r\n\tlet { game: { mouseState, player: { weapons: { equipped, shellEjectionForce, shellRemovalTimeout } } } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!shells) { shells = gameObjects.getKeyValue('pistol-shells') }\r\n\t// matter\r\n\tthis.body = overrideOptions && overrideOptions.body\r\n\t? overrideOptions.body\r\n\t: Bodies.rectangle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 30\r\n      : x - 30\r\n    ,\r\n    mouseState.y === LESS_THAN_PLAYER_Y_POS ? y - 40 : y - 20\r\n    , 7, 4, {\r\n\t\trestitution: 0.75,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.body.label = changeLabelString !== undefined ? `player ${changeLabelString} shell` : 'player pistol shell'\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.body.label = 'shotgun shell'\r\n\t}\r\n\tWorld.add(world, this.body)\r\n\tBody.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.force ? overrideOptions.force : {\r\n\t\tx: mouseState.x === GREATER_THAN_PLAYER_X_POS ? random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max) : random.float(shellEjectionForce[equipped].min, shellEjectionForce[equipped].max),\r\n\t\ty: random.float(-shellEjectionForce[equipped].min, -shellEjectionForce[equipped].max)\r\n\t})\r\n\tBody.setAngularVelocity(this.body, random.float(-PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MIN, -PISTOL_SHELL_EJECTION_ANGULAR_VELOCITY_MAX))\r\n\t// pixi\r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(equipped === WEAPON_TYPE_SHOTGUN ? 0xB00000 : 0xAB931E)\r\n\t// if (!shellWd) {\r\n\t// }\r\n\tlet shellWd = getBodyWidth(this.body)\r\n\tlet shellHt = getBodyHeight(this.body)\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 1)\r\n\t} else {\r\n\t\tif (equipped === WEAPON_TYPE_SMG) {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellHt, shellWd + 2)\r\n\t\t} else {\r\n\t\t\tthis.gfc.drawRect(0, 0, shellWd, shellHt)\r\n\t\t}\r\n\t}\r\n\tthis.gfc.endFill()\r\n\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\tthis.gfc.beginFill(0xCCB64D)\r\n\t\tthis.gfc.drawRect(0, shellWd + 1, shellHt, 3)\r\n\t\t// this.gfc.rotation = radians(45)\r\n\t}\r\n\tif (!window.gameObjects.getKeyValue('bullet-shell-bevel')) {\r\n\t\twindow.gameObjects.setKeyValue('bullet-shell-bevel', new BevelFilter({ lightAlpha: 0.5, shadowAlpha: 0.5 }))\r\n\t}\r\n\tlet filters = [ window.gameObjects.getKeyValue('bullet-shell-bevel') ]\r\n\tthis.gfc.filters = getState().game.filterEffects ? filters : []\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tshells.push(this)\r\n\t// methods\r\n\tthis.destroy = function () {\r\n\t\tcontainer.removeChild(this.gfc)\r\n\t\tWorld.remove(world, this.body)\r\n\t\tthis.body = null\r\n\t\tthis.gfc = null\r\n\t\tshells.splice(shells.indexOf(this), 1)\r\n\t\tworld = null\r\n\t\tcontainer = null\r\n\t\tgameObjects = null\r\n\t\tshells = null\r\n\t}\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), shellRemovalTimeout[equipped])\r\n\treturn this\r\n}\r\n\r\nexport function PistolBullet(x, y, gameObjects, changeLabelString, overrideOptions, extraDamageBool) {\r\n\tlet world, container\r\n\tlet arm, bullets, bulletWd\r\n\tarm = getPlayerPartByType('arm', gameObjects) \r\n  let { game: { mouseRelativeToPlayerPosition, mouseState } } = getState()\r\n\tif (!container) { container = gameObjects.getKeyValue('game-pixi-container') }\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n\tif (!bullets) { bullets = gameObjects.getKeyValue('pistol-bullets') }\r\n  this.body = overrideOptions && overrideOptions.overrideBody ? overrideOptions.overrideBody : Bodies.circle(\r\n    mouseState.y === GREATER_THAN_PLAYER_Y_POS || mouseState.y === LESS_THAN_PLAYER_Y_POS\r\n    ? x\r\n    :\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS\r\n      ? x + 50\r\n      : x - 50\r\n    ,\r\n    y, 4, {\r\n\t\trestitution: 0.3\r\n  })\r\n\r\n\tthis.body.label = (\r\n\t\textraDamageBool ? 'extra damage bullet'\r\n\t\t:\r\n\t\t\tchangeLabelString !== undefined && changeLabelString !== null ?\r\n\t\t\t`player ${changeLabelString} bullet`\r\n\t\t\t:  'player pistol bullet'\r\n\t)\r\n\tthis.body.main = this\r\n  World.add(world, this.body)\r\n\tBody.setAngle(this.body, overrideOptions && overrideOptions.overrideAngle ? overrideOptions.overrideAngle : Vector.angle(this.body.position, mouseRelativeToPlayerPosition))\r\n  Body.applyForce(this.body, this.body.position, overrideOptions && overrideOptions.overrideForce ? overrideOptions.overrideForce : calcBulletAngle(arm.position, mouseRelativeToPlayerPosition))\r\n\r\n\t// pixi \r\n\tthis.gfc = new PIXI.Graphics()\r\n\tthis.gfc.beginFill(0xFFFFFF)\r\n\tif (!bulletWd) { bulletWd = getBodyWidth(this.body) }\r\n\tthis.gfc.drawRect(0, 0, bulletWd, (bulletWd/3))\r\n\tthis.gfc.endFill()\r\n\tthis.gfc.pivot.x = this.gfc.width/2\r\n\tthis.gfc.pivot.y = this.gfc.height/2\r\n\tcontainer.addChild(this.gfc)\r\n\tbullets.push(this)\r\n\t// // add bullet trail\r\n  // let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n\t// this.bulletTrail = new PIXI.Graphics()\r\n\t// this.bulletTrail.lineStyle(\r\n\t// \t2,\r\n\t// \t(\r\n\t// \t\toverrideOptions ? 0xFFFFFF\r\n\t// \t\t:\r\n\t// \t\t\ttier === 1 ? 0xFFFFFF\r\n\t// \t\t\t:\r\n\t// \t\t\t\ttier === 2 ? 0xFFD100\r\n\t// \t\t\t\t:\r\n\t// \t\t\t\t\ttier === 3 ? 0xFF6D00\r\n\t// \t\t\t\t\t:\r\n\t// \t\t\t\t\t\ttier === 4 ? 0xFF0000\r\n\t// \t\t\t\t\t\t: 0xFFFFFF\r\n\t// \t),\r\n\t// \t0.8\r\n\t// )\r\n\t// this.linePoints = []\r\n\t// this.lineDrawn = false\r\n\t// this.drawLine = () => {\r\n\t// \tif (this.lineDrawn === false && getState().game.player.weapons.equipped !== WEAPON_TYPE_SHOTGUN) {\r\n\t// \t\tsetTimeout(() => {\r\n\t// \t\t\tif (this.linePoints) {\r\n\t// \t\t\t\tthis.linePoints.forEach((p, i) => {\r\n\t// \t\t\t\t\tif (this.linePoints[i+1]) {\r\n\t// \t\t\t\t\t\tthis.bulletTrail.moveTo(p.x, p.y)\r\n\t// \t\t\t\t\t\tthis.bulletTrail.lineTo(this.linePoints[i+1].x, this.linePoints[i+1].y)\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t}\r\n\t// \t\t}, 200)\r\n\t// \t\tthis.lineDrawn = true\r\n\t// \t}\r\n\t// }\r\n\t// container.addChild(this.bulletTrail)\r\n\r\n\t// methods\r\n\tthis.addImpactEffect = (surfaceType, pos) => {\r\n\t\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\t\tlet impact = new BulletImpact(surfaceType, pos)\r\n\t\tbulletImpacts.push(impact)\r\n\t}\r\n\r\n\tthis.destroyed = false\r\n\tthis.destroy = function (surfaceType) {\r\n\t\tif (!this.destroyed) {\r\n\t\t\tlet bulletLastPos = this.body.position\r\n\t\t\tthis.destroyed = true\r\n\t\t\tcontainer.removeChild(this.gfc)\r\n\t\t\tcontainer.removeChild(this.bulletTrail)\r\n\t\t\tWorld.remove(world, this.body)\r\n\t\t\tthis.linePoints = null\r\n\t\t\tthis.body = null\r\n\t\t\tthis.gfc = null\r\n\t\t\tif (bullets.indexOf(this) > -1) {\r\n\t\t\t\tbullets.splice(bullets.indexOf(this), 1)\r\n\t\t\t}\r\n\t\t\tif (surfaceType) {\r\n\t\t\t\t// add bullet collision impact effect depending on the surface hit\r\n\t\t\t\tthis.addImpactEffect(surfaceType, bulletLastPos)\r\n\t\t\t}\r\n\t\t\tworld = null\r\n\t\t\tcontainer = null\r\n\t\t\tgameObjects = null \r\n\t\t}\r\n\t}\r\n\r\n\t// auto removal\r\n\tsetTimeout(this.destroy.bind(this), PISTOL_BULLET_REMOVAL_TIMEOUT)\r\n\treturn this\r\n}\r\n\r\nconst fireEquippedWeapon = (gameObjects) => {\r\n\tlet world, weaponsUI, player, playerBody, playerBodyWd, playerBodyHt, arm\r\n\tif (!world) { world = gameObjects.getKeyValue('world') }\r\n  if (!weaponsUI) { weaponsUI = gameObjects.getKeyValue('weapons-ui') }\r\n  if (!player) { player = gameObjects.getKeyValue('player') }\r\n\tlet { game: { player: { weapons: { lastShot, totalAmmo, equipped, shotLimiter } } } } = getState()\r\n\tif (JSON.parse(lastShot[equipped]) + shotLimiter[equipped] < Date.now() && !weaponsUI.checkEmpty(equipped) && !weaponsUI.reloading && totalAmmo[equipped] > 0) {\r\n\t\tdispatch( setLastShot(equipped, JSON.stringify(Date.now())) )\r\n    weaponsUI.fireBullet(equipped)\r\n    player.fireWeaponAnimation()\r\n\t\tif (!playerBody) { playerBody = getPlayerBody(gameObjects) }\r\n\t\tif (!playerBodyWd) { playerBodyWd = getBodyWidth(playerBody) }\r\n\t\tif (!playerBodyHt) { playerBodyHt = getBodyHeight(playerBody) }\r\n\t\tif (!arm) { arm = getPlayerPartByType('arm', gameObjects) }\r\n\t\tlet extraDmg = (\r\n\t\t\tweaponsUI.lastBulletByWepType[equipped] && getState().game.player.perks['lastBullet'].owned ? true : false\r\n\t\t)\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tnew PistolShell(0, 0, gameObjects, null, {\r\n\t\t\t\tbody: Bodies.rectangle(playerBody.position.x, arm.position.y, 10, 4, { collisionFilter: playerCollisionOptions })\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tnew PistolShell(playerBody.position.x, arm.position.y, gameObjects, (\r\n\t\t\t\tequipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined\r\n\t\t\t))\r\n\t\t}\r\n\t\tif (equipped === WEAPON_TYPE_SHOTGUN) {\r\n\t\t\tfor (let i = 0; i < 10; ++i) {\r\n\t\t\t\tnew PistolBullet(arm.position.x, arm.position.y, gameObjects, 'shotgun', extraDmg)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnew PistolBullet(\r\n\t\t\t\tarm.position.x,\r\n\t\t\t\tarm.position.y,\r\n\t\t\t\tgameObjects,\r\n\t\t\t\t(equipped !== WEAPON_TYPE_PISTOL ? equipped.split(' ')[0] : undefined),\r\n\t\t\t\tnull,\r\n\t\t\t\textraDmg\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tworld = null \r\n\t\tweaponsUI = null\r\n\t\tplayer = null\r\n\t\tplayerBody = null\r\n\t\tplayerBodyWd = null\r\n\t\tplayerBodyHt = null\r\n\t\tarm = null \r\n\r\n\t} else if (totalAmmo[equipped] === 0 && getState().game.showingMessage === false) {\r\n\t\t// createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n\t\t// make click noise or some other indicator\r\n\t\tif (!weaponsUI.shaking) {\r\n\t\t\tweaponsUI.changeTextForEmptyShake('EMPTY')\r\n\t\t\tweaponsUI.emptyMagShake()\r\n\t\t}\r\n\t} else if (weaponsUI.checkEmpty(equipped) && getState().game.showingMessage === false) {\r\n\t\tif (!weaponsUI.reloading) {\r\n\t\t\t// createGenericMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// createTextMessage('Reload your weapon!', '#FF0000', .25, .75)\r\n\t\t\t// make empty mag sound or shake weapon UI\r\n\t\t\tif (!weaponsUI.shaking) {\r\n\t\t\t\tweaponsUI.changeTextForEmptyShake('RELOAD')\r\n\t\t\t\tweaponsUI.emptyMagShake()\r\n\t\t\t}\r\n    }\r\n\t}\r\n}\r\n\r\nexport const firePistol = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireSMG = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n\r\nexport const fireShotgun = (gameObjects) => {\r\n\tfireEquippedWeapon(gameObjects)\r\n}\r\n","import random from 'random'\r\nimport * as PIXI from 'pixi.js'\r\nimport { GlowFilter } from '@pixi/filter-glow';\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment';\r\nimport store from '../../../app/store'\r\n\r\nexport default class MuzzleFlashFX {\r\n\r\n  constructor() {\r\n    let { gameObjects } = window\r\n    this.to = window.TweenLite.to\r\n    this.set = window.TweenLite.set\r\n    let container = gameObjects.getKeyValue('game-pixi-container')\r\n    this.container = container\r\n    let muzzleFlashesSheet = gameObjects.getKeyValue('muzzle-flashes-sheet')\r\n    let muzzleFlash001 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash1.png']\r\n    )\r\n    let muzzleFlash002 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash2.png']\r\n    )\r\n    let muzzleFlash003 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash3.png']\r\n    )\r\n    let muzzleFlash004 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash4.png']\r\n    )\r\n    let muzzleFlash005 = new PIXI.Sprite(\r\n      muzzleFlashesSheet.textures['muzzle-flash5.png']\r\n\t\t)\r\n\t\tlet muzzleFlashes = [\r\n\t\t\tmuzzleFlash001,\r\n\t\t\tmuzzleFlash002,\r\n\t\t\tmuzzleFlash003,\r\n\t\t\tmuzzleFlash004,\r\n\t\t\tmuzzleFlash005\r\n\t\t]\r\n    container.addChild(muzzleFlash001)\r\n    container.addChild(muzzleFlash002)\r\n    container.addChild(muzzleFlash003)\r\n    container.addChild(muzzleFlash004)\r\n    container.addChild(muzzleFlash005)\r\n    muzzleFlash001.visible = false\r\n    muzzleFlash002.visible = false\r\n    muzzleFlash003.visible = false\r\n    muzzleFlash004.visible = false\r\n    muzzleFlash005.visible = false\r\n    // muzzle fire FX \r\n    this.muzzleScale = .65\r\n    this.blurFilter = new PIXI.filters.BlurFilter()\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n    this.blurFilter.quality = 5\r\n    this.glowFilter = new GlowFilter()\r\n    this.glowFilter.innerStrength = 0.1\r\n    this.glowFilter.outerStrength = random.float(1.0, 1.5)\r\n    // this.glowFilter.color = 0xFFFFFF\r\n    this.adjustmentFilter = new AdjustmentFilter()\r\n    this.adjustmentFilter.brightness = 2.0\r\n    this.adjustmentFilter.saturation = 2.0\r\n    this.flashes = []\r\n    muzzleFlashes.forEach(flash => {\r\n      flash.updateAnchor = true\r\n      flash.scale = { x: this.muzzleScale, y: this.muzzleScale }\r\n      flash.filters = store.getState().game.filterEffects ? [\r\n        this.blurFilter,\r\n        this.adjustmentFilter,\r\n        this.glowFilter\r\n      ] : []\r\n      this.flashes.push( flash )\r\n    })\r\n  }\r\n\r\n  get muzzleScale () {\r\n    return this._muzzleScale\r\n  }\r\n\r\n  set muzzleScale (scale) {\r\n    this._muzzleScale = scale\r\n  }\r\n\r\n  fireEffect(pos) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let randFlash = this.getRandomFlash()\r\n    randFlash.visible = true\r\n    if (pos) {\r\n      randFlash.position = pos\r\n    }\r\n    if (store.getState().game.filterEffects) {\r\n      this.adjustmentFilter.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      this.glowFilter.color = (\r\n        tier === 1 ? 0xFFF500\r\n          :\r\n            tier === 2 ? 0xFFD100\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF3800\r\n                : 0xFFFFFF\r\n      )\r\n    }\r\n    randFlash.filters = store.getState().game.filterEffects ? [\r\n      this.glowFilter,\r\n      this.adjustmentFilter,\r\n      this.blurFilter\r\n    ] : []\r\n    this.container.addChild( randFlash )\r\n    this.set(randFlash, { alpha: 1 })\r\n    this.set(randFlash.scale, { x: this.muzzleScale })\r\n    this.to(randFlash, .1, { alpha: 0 })\r\n    this.to(randFlash.scale, .1, { x: this.muzzleScale * 2, onComplete: () => {\r\n      randFlash.visible = false\r\n    }})\r\n  }\r\n\r\n  setMuzzleRotations(rotation) {\r\n    this.flashes.forEach(flash => {\r\n      flash.rotation = rotation\r\n    })\r\n    this.rotation = rotation\r\n  }\r\n\r\n  getRandomBlur() {\r\n    return random.float(0.5, 4.0)\r\n  }\r\n\r\n  changeBlurAmount() {\r\n    this.blurFilter.blur = this.getRandomBlur()\r\n  }\r\n\r\n  getFlashes() {\r\n    return this.flashes\r\n  }\r\n\r\n  getRandomFlash() {\r\n    return this.flashes[ Math.floor( Math.random() * this.flashes.length) ]\r\n  }\r\n\r\n}","import { AnimatedSprite, Container, Text } from 'pixi.js'\r\nimport { Bodies, World, Constraint } from 'matter-js'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport { PistolShell, PistolBullet } from '../player/fireWeapons'\r\nimport { radians, degrees } from 'radians'\r\nimport { getBodyHeight, getBodyWidth } from '../utils/Utils'\r\nimport store from '../../../app/store'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport random from 'random'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\n\r\nexport default class MachineGunTurret {\r\n\r\n  constructor(position) {\r\n    let {x,y} = position\r\n    this.delayedCall = window.TweenLite.delayedCall\r\n    this.gameObjects = window.gameObjects\r\n    this.world = this.gameObjects.getKeyValue('world')\r\n    this.buildObjects = this.gameObjects.getKeyValue('build-objects')\r\n    this.container = this.gameObjects.getKeyValue('game-pixi-container')\r\n    this.scanAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-scan-sheet').animations['turretScan']\r\n    )\r\n    this.scanAnim.visible = true\r\n    this.scanAnim.loop = true\r\n    this.scanAnim.play()\r\n    this.shootAnim = new AnimatedSprite(\r\n      this.gameObjects.getKeyValue('turret-shoot-sheet').animations['turretShoot']\r\n    )\r\n    this.shootAnim.loop = false\r\n    this.shootAnim.onFrameChange = () => {\r\n      // if (this.shootAnim.currentFrame === 2) {\r\n      //   this.fireBullet()\r\n      // }\r\n    }\r\n    this.shootAnim.onComplete = () => {\r\n      this.shootAnim.gotoAndStop(0)\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n    this.shootAnim.visible = false\r\n    this.scanAnim.width = 150\r\n    this.scanAnim.height = 150\r\n    this.scanAnim.pivot.x = this.scanAnim.width * .5\r\n    this.scanAnim.pivot.y = this.scanAnim.height\r\n    this.shootAnim.width = 150\r\n    this.shootAnim.height = 150\r\n    this.shootAnim.pivot.x = this.shootAnim.width * .5\r\n    this.shootAnim.pivot.y = this.shootAnim.height\r\n    this.turret = new Container()\r\n    this.turret.addChild(this.scanAnim, this.shootAnim)\r\n    this.container.addChild(this.turret)\r\n\r\n    this.turret.children.forEach(child => {\r\n    })\r\n\r\n    this.body = Bodies.rectangle(x, y, 50, 50, {\r\n      label: 'turret barrier',\r\n      main: this\r\n    })\r\n    this.body.removeSelf = () => {\r\n      this.destroy()\r\n    }\r\n    let ground = this.gameObjects.getKeyValue('ground')\r\n    this.constraint = Constraint.create({\r\n      bodyA: ground,\r\n      bodyB: this.body,\r\n      pointA: { x: -getBodyWidth(ground)/2 + position.x, y: -getBodyHeight(ground)/2 },\r\n      pointB: { x: 0, y: getBodyHeight(this.body)/2 },\r\n      length: 0\r\n    })\r\n    World.add(this.world, [this.body, this.constraint])\r\n    \r\n    this.body.strength = 250\r\n    this.healthDisplay = new Text(`health: ${this.body.strength}`, { fontSize: 12, fill: 0xFFFFFF })\r\n    this.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n    this.container.addChild(this.healthDisplay)\r\n\r\n    this.direction = 'right'\r\n\r\n    // re-add player sprites on-top\r\n    let player = this.gameObjects.getKeyValue('player')\r\n    if (!player.dead) {\r\n      player.sprites.forEach(s => { this.container.addChild(s) })\r\n    }\r\n\r\n    this.destroyed = false\r\n\r\n    return this\r\n  }\r\n\r\n  takeDamage(dmg) {\r\n    this.body.strength -= dmg\r\n    this.healthDisplay.text = `health: ${this.body.strength}`\r\n  }\r\n\r\n  displayBarrierStrength(renderFn) {\r\n    let {x,y} = renderFn(this.body)\r\n    this.healthDisplay.position = { x, y: y - 100 }\r\n    this.turret.position = { x, y }\r\n  }\r\n\r\n  updateDirection(direction) {\r\n    this.turret.scale.x = direction === 'left' ? -1 : 1\r\n    this.direction = direction\r\n  }\r\n\r\n  getBody() {\r\n    return this.body\r\n  }\r\n\r\n  resumeScan() {\r\n    if (!this.scanning) {\r\n      this.scanning = true\r\n      this.scanAnim.play()\r\n      this.scanAnim.visible = true\r\n      this.shootAnim.visible = false\r\n    }\r\n  }\r\n\r\n  fireBullet() {\r\n    if (!this.destroyed) {\r\n      if (!this.muzzleFlashFX) {\r\n        this.muzzleFlashFX = new MuzzleFlashFX()\r\n        this.muzzleFlashFX.setMuzzleRotations(this.direction === 'left' ? degrees(-92) : degrees(92))\r\n      }\r\n      // fire bullet\r\n      let { game: { player: { weapons: { bulletForce } } } } = store.getState()\r\n      let { x, y } = this.body.position\r\n      this.muzzleFlashFX.fireEffect(\r\n        this.direction == 'left'\r\n        ? { x: this.turret.position.x - 100, y: this.turret.position.y - 25 }\r\n        : { x: this.turret.position.x + 100, y: this.turret.position.y - 25  }\r\n      )\r\n      let overrideBody = Bodies.circle(x, y - 25, 5)\r\n      let _ejectY = random.float(-0.0005, -0.00075)\r\n      new PistolShell(0, 0, this.gameObjects, null, {\r\n        body: Bodies.rectangle(x, y - 50, 7, 4, { collisionFilter: playerCollisionOptions }),\r\n        force: this.direction === 'right' ?\r\n        {\r\n          \"x\": random.float(-0.00035, -0.00075),\r\n          \"y\": _ejectY\r\n        } : {\r\n          \"x\": random.float(0.00035, 0.00075),\r\n          \"y\": _ejectY\r\n        },\r\n      })\r\n      new PistolBullet(0, 0, this.gameObjects, 'turret', {\r\n        overrideBody,\r\n        overrideForce: this.direction === 'left' ?\r\n        {\r\n          \"x\": -0.01,\r\n          \"y\": -0.00075\r\n        } : {\r\n          \"x\": 0.01,\r\n          \"y\": -0.00075\r\n        },\r\n        overrideAngle: this.direction === 'left' ? -3.0 : 0.1\r\n      })\r\n    }\r\n  }\r\n\r\n  shoot() {\r\n    if (!this.shooting && !this.destroyed) {\r\n      let { game: { traps: { turret: { cooldown } } } } = store.getState()\r\n      this.fireBullet()\r\n      this.shooting = true\r\n      this.scanAnim.visible = false\r\n      this.shootAnim.visible = true\r\n      this.shootAnim.play()\r\n      this.delayedCall(cooldown, () => {\r\n        this.shooting = false\r\n      })\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      new GrenadeExplosion(this.body.position, true)\r\n      this.container.removeChild(this.turret, this.healthDisplay)\r\n      World.remove(this.world, [this.body, this.constraint])\r\n      let idx = this.buildObjects.indexOf(this, 1)\r\n      if (idx > -1) {\r\n        this.buildObjects.splice(idx, 1)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { AnimatedSprite } from 'pixi.js'\r\nimport * as PIXI from 'pixi.js'\r\nimport { AdjustmentFilter } from '@pixi/filter-adjustment'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\n\r\nexport default class Spark {\r\n\r\n  constructor (type, renderBody, options) {\r\n    let spark1 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('sparks-sheet').animations['spark-particle']\r\n    )\r\n    let spark2 = new AnimatedSprite(\r\n      window.gameObjects.getKeyValue('muzzle-sparks-sheet').animations['muzzleSparks']\r\n    )\r\n    let sparks = [ spark1, spark2 ]\r\n    sparks.forEach(spark => {\r\n      let scale = options && options.scale ? options.scale : 1.0\r\n      if (scale !== 1.0) {\r\n        spark.scale.x = scale\r\n        spark.scale.y = scale\r\n      }\r\n      spark.pivot.x = spark.width  * .5\r\n      spark.pivot.y = spark.height * .5\r\n      spark.loop = false\r\n      spark.animationSpeed = options && options.animationSpeed ? options.animationSpeed : 1.0\r\n      spark.onComplete = () => {\r\n        this.container.removeChild(spark)\r\n        this.container = null\r\n        spark = null\r\n        spark1 = null\r\n        spark2 = null\r\n        sparks = null\r\n      }\r\n    })\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    switch (type) {\r\n      case 1:\r\n        this.spark = spark1\r\n        if (options && options.tint) {\r\n          this.spark.tint = options.tint\r\n        }\r\n        break;\r\n      case 2:\r\n        this.spark = spark2\r\n        this.blurFilter = new PIXI.filters.BlurFilter(random.float(0.5, 0.75), 5)\r\n        this.adjFilter = new AdjustmentFilter()\r\n        this.glowFilter = new GlowFilter()\r\n        this.adjFilter.saturation = 2.0\r\n        this.adjFilter.brightness = 1.5\r\n        // glowFilter.outerStrength = 1.0\r\n        this.glowFilter.color = 0xFFFFFF //0xFFD100 //0xFF9C00 //0xFFFFFF\r\n        this.filters = store.getState().game.filterEffects ? [\r\n          this.blurFilter,\r\n          this.adjFilter,\r\n          this.glowFilter\r\n        ] : []\r\n        this.spark.filters = this.filters\r\n        break;\r\n        default:\r\n    }\r\n    if (options && options.scale) {\r\n      let sparkContainer = new PIXI.Container()\r\n      this.spark.scale.x = options.scale\r\n      this.spark.scale.y = options.scale\r\n      sparkContainer.addChild(this.spark)\r\n      sparkContainer.pivot.x = sparkContainer.width * (options.scale * .5)\r\n      sparkContainer.pivot.y = sparkContainer.height * (options.scale * .5)\r\n      this.spark = sparkContainer\r\n    }\r\n\r\n    this.renderBody = renderBody\r\n    if (!options || (options && !options.stop)) {\r\n      if (this.spark.play) {\r\n        this.spark.play()\r\n      }\r\n      if (this.spark.children && this.spark.children[0]) {\r\n        this.spark.children[0].play()\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  getFilters() {\r\n    return {\r\n      glow: this.glowFilter,\r\n      adjust: this.adjFilter,\r\n      blur: this.blurFilter\r\n    }\r\n  }\r\n\r\n  updateFilters(filters) {\r\n    this.filters = filters\r\n    this.spark.filters = this.filters\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.renderBody) {\r\n      this.spark.position = renderFn(this.renderBody)\r\n      if (this.container && this.container.children.indexOf(this.spark) === -1) {\r\n        this.container.addChild(this.spark)\r\n      }\r\n    }\r\n  }\r\n\r\n}","import { Graphics } from 'pixi.js'\r\nimport { Bodies, Body, World } from 'matter-js'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport store from '../../../app/store'\r\n\r\nexport default class HealthDrop {\r\n\r\n  constructor(amt, pos) {\r\n    this.container = window.gameObjects.getKeyValue('game-pixi-container')\r\n    let _amt = amt * 3\r\n    this.gfc = new Graphics()\r\n    this.gfc.lineStyle(2, 0x0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.gfc.lineStyle(0, 0x0, 0)\r\n    this.gfc.beginFill(0x1CB461)\r\n    this.gfc.drawRect(0, 0, _amt/2, _amt)\r\n    this.gfc.drawRect(-_amt/4, _amt/4, _amt, _amt/2)\r\n    this.bevel = new BevelFilter({ thickness: 3, lightAlpha: .5, shadowAlpha: .5, shadowColor: 0x247F4D })\r\n    this.glow = new GlowFilter({ outerStrength: .5 })\r\n    this.gfc.filters = store.getState().game.filterEffects ? [\r\n      this.glow, this.bevel,\r\n    ] : []\r\n\r\n    this.body = Bodies.rectangle(pos.x, pos.y, _amt, _amt, {\r\n      restitution: .65,\r\n      collisionFilter: itemCollisionOptions\r\n    })\r\n    this.body.main = this\r\n    this.body.amount = amt\r\n    this.body.label = 'health drop'\r\n    World.add(window.gameObjects.getKeyValue('world'), this.body)\r\n    window.gameObjects.getKeyValue('health-drops').push( this )\r\n    \r\n    return this\r\n  }\r\n\r\n  checkFilters() {\r\n    if (this.gfc && store.getState().game.filterEffects) {\r\n      this.gfc.filters = [ this.bevel, this.glow ]\r\n    } else {\r\n      if (this.gfc) {\r\n        this.gfc.filters = []\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    let idx = healths.indexOf(this)\r\n    if (idx > -1) { healths.splice(idx, 1) }\r\n    this.gfc.destroy()\r\n    this.gfc = null\r\n    World.remove(window.gameObjects.getKeyValue('world'), this.body)\r\n    this.body = null\r\n    healths = null\r\n    idx = null\r\n    this.container = null\r\n  }\r\n\r\n  renderPosition(renderFn) {\r\n    if (this.container && this.container.children.indexOf(this.gfc) === -1) {\r\n      this.container.addChild(this.gfc)\r\n    }\r\n    this.gfc.position = renderFn(this.body)\r\n  }\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { radians, degrees } from 'radians'\r\nimport { World, Body, Bodies, Constraint, Composite, Vector } from 'matter-js'\r\nimport { setMousePosition, setPlayerCompositeId, setKeyPress,\r\n\tremoveKeyPress, setJumping, setMouseStateX, setMouseStateY, setMouseButtonState,\r\n\tsetLastShot, setWeaponEquipped, setCompositeBodyIds, decrementGrenadeCount,\r\n   gameStateTransition, unsetAllKeys, resetPlayerVariables, addToTotalAmmo, addToTotalCredits,\r\n   updatePlayerHealth, incrementWave, subtractFromTotalCredits, setRightMouseDown } from '../gameSlice'\r\nimport { getPlayerBody, getPlayerComposite, getBodyWidth, getBodyHeight, makePixiSprite } from '../utils/Utils'\r\nimport { GREATER_THAN_PLAYER_X_POS, GREATER_THAN_PLAYER_Y_POS,\r\n\tLESS_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_Y_POS,\r\n\tMOUSE_DOWN, MOUSE_UP } from '../constants/mouseStates'\r\nimport { WEAPON_TYPE_GRENADE, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\nimport { itemCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { batch } from 'react-redux'\r\nimport { createTextMessage } from '../createMessages'\r\nimport PlayerRagdoll, { PlayerRagdollHalved, PlayerRagdollDecap, PlayerRagdollMaim } from './PlayerRagdoll'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { KILLED_BY_ZOMBIE, FELL_OFF } from '../constants/DeathTypes'\r\nimport { calcGrenadeAngle } from '../utils/Utils'\r\nimport WallBarrier from '../BuildItems/WallBarrier'\r\nimport GrenadeExplosion from '../FX/GrenadeExplosion'\r\nimport random from 'random'\r\nimport Landmine from '../BuildItems/Landmine'\r\nimport Grenade from '../items/Grenade'\r\nimport Clustermine from '../BuildItems/Clustermine'\r\nimport { trapTypes, barrierTypes } from '../constants/buildTypes'\r\nimport RemoteMine from '../BuildItems/RemoteMine'\r\nimport MachineGunTurret from '../BuildItems/MachineGunTurret'\r\nimport MuzzleFlashFX from '../FX/MuzzleFlashFX'\r\nimport Spark from '../FX/Sparks'\r\nimport { MotionBlurFilter } from '@pixi/filter-motion-blur'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { get } from 'jquery'\r\nimport HealthDrop from '../items/HealthDrop'\r\nimport { Howl, Howler } from 'howler'\r\n\r\nexport class EnhancedMuzzleSpark {\r\n  constructor(renderBody) {\r\n    let equipped = store.getState().game.player.weapons.equipped\r\n    let tier = store.getState().game.player.modTiers['powder'][equipped].current\r\n    let to = window.TweenLite.to\r\n    let gameObjects = window.gameObjects\r\n    let muzzleSpark = new Spark(2, renderBody)\r\n    let sparks = gameObjects.getKeyValue('spark-sprites')\r\n    muzzleSpark.spark.scale.x = .5 //random.float(.5, 1.0)\r\n    muzzleSpark.spark.scale.y = .5\r\n    sparks.push( muzzleSpark )\r\n    muzzleSpark.spark.gotoAndPlay( random.int(10, 15) )\r\n    if (store.getState().game.filterEffects) {\r\n      let { adjust, glow, blur } = muzzleSpark.getFilters()\r\n      adjust.brightness = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          : \r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 3.5\r\n              : 1.0\r\n      )\r\n      adjust.saturation = (\r\n        tier === 1 ? 1.0\r\n        :\r\n          tier === 2 ? 2.0\r\n          :\r\n            tier === 3 ? 3.0\r\n            :\r\n              tier === 4 ? 5.0\r\n              : 1.0\r\n      )\r\n      glow.color = (\r\n        tier === 1 ? 0xFFFFFF\r\n          :\r\n            tier === 2 ? 0xFFF500\r\n            :\r\n              tier === 3 ? 0xFF6D00\r\n              :\r\n                tier === 4 ? 0xFF6D00\r\n                : 0xFFFFFF\r\n      )\r\n      muzzleSpark.updateFilters([ glow, blur, adjust ])\r\n    }\r\n\r\n    to(muzzleSpark.spark.scale, .1, { x: 0.55, y: 0.55 })\r\n    return muzzleSpark\r\n  }\r\n}\r\n\r\nexport default function Player() {\r\n\r\n\tlet { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet { getState, dispatch } = store\r\n\tlet { game: { width: gameWidth, height: gameHeight, player: { constants: { width: wd, height: ht } } } } = getState()\r\n\tlet { TweenLite } = window\r\n\tlet { delayedCall, to, from, set } = TweenLite\r\n\r\n\tthis.body = Bodies.rectangle(400, 200, wd, ht, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.arm = Bodies.rectangle(400, 200, 30, 15, {\r\n\t\tfriction: 0,\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n  })\r\n  // this.armPointBody = Bodies.rectangle(400, 200, 10, 10, {\r\n  //   friction: 0,\r\n  //   inertia: Infinity,\r\n  //   collisionFilter: playerCollisionOptions\r\n  // })\r\n  // this.armPoint = Constraint.create({\r\n  //   bodyA: this.arm,\r\n  //   bodyB: this.armPointBody,\r\n  //   pointA: { x: -60, y: 0 },\r\n  //   pointB: { x: 0, y: 0 },\r\n  //   length: 0,\r\n  //   // stiffness: 1\r\n  // })\r\n\tthis.armAttach = Constraint.create({\r\n\t\tbodyA: this.arm,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 12, y: 0 },\r\n\t\tpointB: { x: 0, y: -80 },\r\n\t\tlength: 0\r\n\t})\r\n\t// head\r\n\tthis.head = Bodies.rectangle(400, 200, 20, 24, {\r\n\t\tinertia: Infinity,\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tthis.headAttach = Constraint.create({\r\n\t\tbodyA: this.head,\r\n\t\tbodyB: this.body,\r\n\t\tpointA: { x: 0, y: 10 },\r\n\t\tpointB: { x: 0, y: -((ht/2) + 5) },\r\n\t\tlength: 0\r\n\t})\r\n\r\n\tthis.composite = Composite.create()\r\n\tComposite.add(this.composite, [\r\n\t\t// bodies\r\n\t\tthis.body,\r\n\t\tthis.arm,\r\n\t\tthis.head,\r\n\t\t// constraints\r\n\t\t// this.armPoint,\r\n\t\tthis.armAttach,\r\n\t\tthis.headAttach\r\n\t])\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.label = 'player character'\r\n\t\tbody.main = this\r\n\t})\r\n\tdispatch(setPlayerCompositeId(this.composite.id))\r\n\tdispatch(setCompositeBodyIds({\r\n\t\tbodyId: this.body.id,\r\n\t\theadId: this.head.id,\r\n\t\tarmId: this.arm.id\r\n\t}))\r\n\r\n\tthis.composite.body = this.body\r\n\tthis.composite.arm = this.arm\r\n\r\n\tWorld.add(world, this.composite)\r\n\r\n\tdispatch( setLastShot(WEAPON_TYPE_PISTOL, JSON.stringify(Date.now())) )\r\n\tdispatch( setLastShot(WEAPON_TYPE_SMG, JSON.stringify(Date.now())) )\r\n\r\n\t// create player lifebar UI\r\n\tthis.life = 100\r\n  \r\n\tlet lifebarOutline = new PIXI.Graphics()\r\n\tlifebarOutline.lineStyle(1.0, 0x202D0A)\r\n\tlifebarOutline.drawRect(0, 0, gameWidth * .75, 12)\r\n  container.addChild(lifebarOutline)\r\n\r\n  let lifebarGreen = 0x00FA9A\r\n  let damageRed = 0xDD0E0E\r\n\tlet lifebar = new PIXI.Graphics()\r\n  lifebar.beginFill(0xFFFFFF)\r\n  lifebar.tint = lifebarGreen\r\n  lifebar.drawRect(0, 0, (gameWidth * .75) - 2, 10)\r\n  let bevel = new BevelFilter({ thickness: 5, lightAlpha: .5, lightColor: 0xffffff, shadowAlpha: .4, shadowColor: 0x0 })\r\n  lifebar.filters = getState().game.filterEffects ? [ bevel ] : []\r\n\tcontainer.addChild(lifebar)\r\n\tthis.initialLifebarWidth = lifebar.width\r\n\r\n\tlifebarOutline.position.x = 80\r\n\tlifebarOutline.position.y = gameHeight - 40\r\n\tlifebar.position.x = lifebarOutline.position.x + 1\r\n  lifebar.position.y = lifebarOutline.position.y + 1\r\n  let lifebarDefaultPosition = lifebar.position\r\n\r\n  //-- Reloading weapons\r\n  // this.reloading = false\r\n  // reload pistol anim\r\n  let charReloadPistolSpritesheet = gameObjects.getKeyValue('char-reload-pistol-sheet')\r\n  let charReloadPistolSprite = new PIXI.AnimatedSprite(charReloadPistolSpritesheet.animations['char_reload_pistol'])\r\n  charReloadPistolSprite.loop = false\r\n  charReloadPistolSprite.animationSpeed = .5\r\n  charReloadPistolSprite.updateAnchor = true\r\n  charReloadPistolSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadPistolSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadPistolSprite.visible = false\r\n  charReloadPistolSprite.onComplete = () => {\r\n    charReloadPistolSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadPistolSprite)\r\n\r\n  // reload smg anim\r\n  let charReloadSMGSpritesheet = gameObjects.getKeyValue('char-reload-smg-sheet')\r\n  let charReloadSMGSprite = new PIXI.AnimatedSprite(charReloadSMGSpritesheet.animations['char_reload_smg'])\r\n  charReloadSMGSprite.loop = false\r\n  charReloadSMGSprite.animationSpeed = .5\r\n  charReloadSMGSprite.updateAnchor = true\r\n  charReloadSMGSprite.pivot.x = charReloadPistolSprite.width * .52\r\n  charReloadSMGSprite.pivot.y = charReloadPistolSprite.height * .5\r\n  charReloadSMGSprite.visible = false\r\n  charReloadSMGSprite.onComplete = () => {\r\n    charReloadSMGSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n  }\r\n  container.addChild(charReloadSMGSprite)\r\n  \r\n  // reload shotgun anim\r\n  let charReloadShotgunSpritesheet = gameObjects.getKeyValue('char-reload-shotgun-sheet')\r\n  let charReloadShotgunSprite = new PIXI.AnimatedSprite(charReloadShotgunSpritesheet.animations['shotgunReload'])\r\n  charReloadShotgunSprite.loop = false\r\n  charReloadShotgunSprite.animationSpeed = .5\r\n  charReloadShotgunSprite.updateAnchor = true\r\n  charReloadShotgunSprite.pivot.x = charReloadShotgunSprite.width * .725\r\n  charReloadShotgunSprite.pivot.y = charReloadShotgunSprite.height * .5\r\n  charReloadShotgunSprite.visible = false\r\n  this.shotgunShellLoadIterations = 0\r\n  this.gotoToEndOfShotgunReload = true\r\n  charReloadShotgunSprite.onComplete = () => {\r\n    charReloadShotgunSprite.gotoAndStop(0)\r\n    weaponsUI.reloading = false\r\n    this.shotgunShellLoadIterations = 0\r\n    this.gotoToEndOfShotgunReload = true\r\n  }\r\n  container.addChild(charReloadShotgunSprite)\r\n\r\n  this.reloadAnimsByType = {\r\n    'pistol weapon': charReloadPistolSprite,\r\n    'smg weapon': charReloadSMGSprite,\r\n    'shotgun weapon': charReloadShotgunSprite\r\n  }\r\n\r\n  this.reloadAnims = [\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite\r\n  ]\r\n\r\n  //-- Melee anims\r\n  let motionBlur = new MotionBlurFilter()\r\n  motionBlur.kernelSize = 5\r\n  motionBlur.velocity.x = 30\r\n  motionBlur.velocity.y = 40\r\n  // pistol melee\r\n  let meleePistolSpritesheet = gameObjects.getKeyValue('melee-pistol-sheet')\r\n  let meleePistolAnim = new PIXI.AnimatedSprite(meleePistolSpritesheet.animations['melee_pistol'])\r\n  meleePistolAnim.loop = false\r\n  meleePistolAnim.animationSpeed = .75\r\n  meleePistolAnim.updateAnchor = true\r\n  meleePistolAnim.pivot.x = meleePistolAnim.width * .5\r\n  meleePistolAnim.pivot.y = meleePistolAnim.height * .5\r\n  meleePistolAnim.visible = false\r\n  meleePistolAnim.onComplete = () => {\r\n    meleePistolAnim.gotoAndStop(0)\r\n    meleePistolAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleePistolAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleePistolAnim.currentFrame > 12 && meleePistolAnim.currentFrame < 15) {\r\n      meleePistolAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleePistolAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleePistolAnim)\r\n  \r\n  // ump melee\r\n  let meleeUMPSpritesheet = gameObjects.getKeyValue('melee-ump-sheet')\r\n  let meleeUMPAnim = new PIXI.AnimatedSprite(meleeUMPSpritesheet.animations['melee_ump'])\r\n  meleeUMPAnim.loop = false\r\n  meleeUMPAnim.animationSpeed = .75\r\n  meleeUMPAnim.updateAnchor = true\r\n  meleeUMPAnim.pivot.x = meleeUMPAnim.width * .5\r\n  meleeUMPAnim.pivot.y = meleeUMPAnim.height * .5\r\n  meleeUMPAnim.visible = false\r\n  meleeUMPAnim.onComplete = () => {\r\n    meleeUMPAnim.gotoAndStop(0)\r\n    meleeUMPAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeUMPAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeUMPAnim.currentFrame > 11 && meleeUMPAnim.currentFrame < 14) {\r\n      meleeUMPAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeUMPAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeUMPAnim)\r\n\r\n  // shotgun melee\r\n  let meleeShotgunSpritesheet = gameObjects.getKeyValue('melee-shotgun-sheet')\r\n  let meleeShotgunAnim = new PIXI.AnimatedSprite(meleeShotgunSpritesheet.animations['meleeShotgun'])\r\n  meleeShotgunAnim.loop = false\r\n  meleeShotgunAnim.animationSpeed = .5\r\n  meleeShotgunAnim.updateAnchor = true\r\n  meleeShotgunAnim.pivot.x = meleeShotgunAnim.width * .75\r\n  meleeShotgunAnim.pivot.y = meleeShotgunAnim.height * .5\r\n  meleeShotgunAnim.visible = false\r\n  meleeShotgunAnim.onComplete = () => {\r\n    meleeShotgunAnim.gotoAndStop(0)\r\n    meleeShotgunAnim.visible = false\r\n    this.meleeAttackInProgress = false\r\n    this.removeMeleeHitbox()\r\n  }\r\n  meleeShotgunAnim.onFrameChange = () => {\r\n    this.meleeAttackInProgress = true\r\n    if (getState().game.filterEffects && meleeShotgunAnim.currentFrame > 6 && meleeShotgunAnim.currentFrame < 9) {\r\n      meleeShotgunAnim.filters = [\r\n        motionBlur\r\n      ]\r\n    } else {\r\n      meleeShotgunAnim.filters = []\r\n    }\r\n  }\r\n  container.addChild(meleeShotgunAnim)\r\n\r\n  this.meleeSprites = [\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim\r\n  ]\r\n\r\n  //-- Grenade throws \r\n  this.grenadeThrowInProgress = false\r\n  this.grenadeForce = { x: 0.001, y: 0.001 }\r\n  this.chargingGrenade = false\r\n  this.chargeGrenade = () => {\r\n    container.addChild(this.meter)\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.chargingGrenade = true\r\n    if (this.grenadeForce.x <= this.grenadeUpperForceThreshold) {\r\n      this.grenadeForce.x += this.grenadeChargeRate\r\n      this.grenadeForce.y += this.grenadeChargeRate\r\n    }\r\n  }\r\n\r\n  const createGrenadeChargeMeter = () => {\r\n    this.meter = new PIXI.Graphics()\r\n    this.meter.beginFill(0xffa23f)\r\n    this.meter.drawRect(0, 0, 100, 10)\r\n    container.addChild(this.meter)\r\n  }\r\n  createGrenadeChargeMeter()\r\n\r\n  this.renderGrenadeChargeMeter = renderFn => {\r\n    let { x, y } = renderFn(this.body)\r\n    this.grenadeUpperForceThreshold = getState().game.player.weapons.grenadeUpperForceThreshold\r\n    if (this.meter && this.chargingGrenade) {\r\n      this.meter.position.x = x - this.meter.width/2\r\n      this.meter.position.y = y - getBodyHeight(this.body) * .75\r\n      this.meter.width = this.grenadeForce.x/this.grenadeUpperForceThreshold * 100\r\n    } else {\r\n      this.meter.width = 0\r\n    }\r\n  }\r\n  \r\n  this.createGrenade = () => {\r\n    let r = 8\r\n    let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.updateGrenadeIcons()\r\n    let grenades = gameObjects.getKeyValue('grenades')\r\n    this.grenadeChargeRate = getState().game.player.weapons.grenadeChargeRate\r\n    this.calculatedGrenadeForce = calcGrenadeAngle(this.arm.position, getState().game.mouseRelativeToPlayerPosition, this.grenadeForce)\r\n    grenades.push(\r\n      new Grenade(\r\n        getState().game.mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) : this.body.position.x - getBodyWidth(this.body),\r\n        this.body.position.y - (getBodyHeight(this.body)/2),\r\n        r,\r\n        this.calculatedGrenadeForce\r\n      )\r\n    )\r\n    this.grenadeForce = { x: 0.001, y: 0.001 }\r\n    this.chargingGrenade = false\r\n  }\r\n\r\n  this.throwGrenade = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (grenadeThrowPistolAnim.currentFrame < 1) {\r\n          grenadeThrowPistolAnim.visible = true\r\n          grenadeThrowPistolAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (grenadeThrowUMPAnim.currentFrame < 1) {\r\n          grenadeThrowUMPAnim.visible = true\r\n          grenadeThrowUMPAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (grenadeThrowShotgunAnim.currentFrame < 1) {\r\n          grenadeThrowShotgunAnim.visible = true\r\n          grenadeThrowShotgunAnim.gotoAndPlay(8)\r\n        }\r\n      },\r\n    }\r\n    if (!this.grenadeThrowInProgress) {\r\n      delayedCall(.2, () => {\r\n        let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n        _throw.play()\r\n        this.createGrenade()\r\n      })\r\n      this.chargingGrenade = false\r\n      this.grenadeThrowInProgress = true\r\n      if (attacks[equipped]) {\r\n        attacks[equipped]()\r\n        dispatch( decrementGrenadeCount() )\r\n      }\r\n    }\r\n  }\r\n\r\n  // pistol equpped - 'nade throw\r\n  let grenadeThrowPistolSpritesheet = gameObjects.getKeyValue('grenade-pistol-sheet')\r\n  let grenadeThrowPistolAnim = new PIXI.AnimatedSprite(grenadeThrowPistolSpritesheet.animations['grenade_throw_pistol'])\r\n  grenadeThrowPistolAnim.loop = false\r\n  grenadeThrowPistolAnim.animationSpeed = 1.00\r\n  grenadeThrowPistolAnim.updateAnchor = true\r\n  grenadeThrowPistolAnim.pivot.x = grenadeThrowPistolAnim.width * .5\r\n  grenadeThrowPistolAnim.pivot.y = grenadeThrowPistolAnim.height * .5\r\n  grenadeThrowPistolAnim.visible = false\r\n  grenadeThrowPistolAnim.onComplete = () => {\r\n    grenadeThrowPistolAnim.gotoAndStop(0)\r\n    grenadeThrowPistolAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowPistolAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowPistolAnim.currentFrame > 22) {\r\n      if (!this.grenadeThrown) {\r\n        // this.createGrenade()\r\n        this.grenadeThrown = true\r\n        delayedCall(.5, () => { this.grenadeThrown = false })\r\n      }\r\n    }\r\n    if (grenadeThrowPistolAnim.currentFrame > 27) {\r\n      grenadeThrowPistolAnim.gotoAndStop(0)\r\n      grenadeThrowPistolAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowPistolAnim)\r\n  // ump equipped - 'nade throw\r\n  let grenadeThrowUMPSpritesheet = gameObjects.getKeyValue('grenade-ump-sheet')\r\n  let grenadeThrowUMPAnim = new PIXI.AnimatedSprite(grenadeThrowUMPSpritesheet.animations['grenade_throw_ump'])\r\n  grenadeThrowUMPAnim.loop = false\r\n  grenadeThrowUMPAnim.animationSpeed = 1.00\r\n  grenadeThrowUMPAnim.updateAnchor = true\r\n  grenadeThrowUMPAnim.pivot.x = grenadeThrowUMPAnim.width * .5\r\n  grenadeThrowUMPAnim.pivot.y = grenadeThrowUMPAnim.height * .5\r\n  grenadeThrowUMPAnim.visible = false\r\n  grenadeThrowUMPAnim.onComplete = () => {\r\n    grenadeThrowUMPAnim.gotoAndStop(0)\r\n    grenadeThrowUMPAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowUMPAnim.onFrameChange = () => {\r\n    this.grenadeThrowInProgress = true\r\n    if (grenadeThrowUMPAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowUMPAnim.currentFrame > 27) {\r\n      grenadeThrowUMPAnim.gotoAndStop(0)\r\n      grenadeThrowUMPAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowUMPAnim)\r\n  // shotgun equipped - 'nade throw\r\n  let grenadeThrowShotgunSpritesheet = gameObjects.getKeyValue('grenade-shotgun-sheet')\r\n  let grenadeThrowShotgunAnim = new PIXI.AnimatedSprite(grenadeThrowShotgunSpritesheet.animations['shotgunGrenadeThrow'])\r\n  grenadeThrowShotgunAnim.loop = false\r\n  grenadeThrowShotgunAnim.animationSpeed = 1.00\r\n  grenadeThrowShotgunAnim.updateAnchor = true\r\n  grenadeThrowShotgunAnim.pivot.x = grenadeThrowShotgunAnim.width * .5\r\n  grenadeThrowShotgunAnim.pivot.y = grenadeThrowShotgunAnim.height * .5\r\n  grenadeThrowShotgunAnim.visible = false\r\n  grenadeThrowShotgunAnim.onComplete = () => {\r\n    grenadeThrowShotgunAnim.gotoAndStop(0)\r\n    grenadeThrowShotgunAnim.visible = false\r\n    this.grenadeThrowInProgress = false\r\n  }\r\n  grenadeThrowShotgunAnim.onFrameChange = () => {\r\n    if (grenadeThrowShotgunAnim.currentFrame === 22) {\r\n      // this.createGrenade()\r\n      this.grenadeThrown = true\r\n      delayedCall(.5, () => { this.grenadeThrown = false })\r\n    }\r\n    if (grenadeThrowShotgunAnim.currentFrame > 27) {\r\n      grenadeThrowShotgunAnim.gotoAndStop(0)\r\n      grenadeThrowShotgunAnim.visible = false\r\n      this.grenadeThrowInProgress = false\r\n    }\r\n  }\r\n  container.addChild(grenadeThrowShotgunAnim)\r\n\r\n  this.grenadeSprites = [\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n\r\n  this.grenadeSpritesByEquipped = {\r\n    'pistol weapon': grenadeThrowPistolAnim,\r\n    'smg weapon': grenadeThrowUMPAnim,\r\n    'shotgun weapon': grenadeThrowShotgunAnim\r\n  }\r\n  \r\n  this.ejectedMags = []\r\n\r\n  this.reloadMagazineActionsByType = {\r\n    'pistol weapon': () => {\r\n      let { game: { player: { weapons: { equipped, reloadSpeed }, perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y, 7, 20, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n        })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.0025, 0.005) : random.float(-0.0025, -0.005)),\r\n          y: random.float(-0.0025, -0.005)\r\n        })\r\n      // make some simple magazing gfx\r\n      let pistolMag = new PIXI.Graphics()\r\n      pistolMag.beginFill(0x333333)\r\n      pistolMag.drawRect(0, 0, 7, 20)\r\n      pistolMag.pivot.x = pistolMag.width/2\r\n      pistolMag.pivot.y = pistolMag.height/2\r\n      let magObj = {\r\n        gfx: pistolMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(pistolMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        pistolMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'smg weapon': () => {\r\n      let { game: { player: { perks: { magDmg: { owned: magDmgOwned } } }, mouseState: { x: mx } } } = getState()\r\n      pistolReloadSound.play()\r\n      pistolReloadSound.fade(1, 0, 300)\r\n      // make a box body\r\n      let _d = mx === GREATER_THAN_PLAYER_X_POS ? 'left' : 'right'\r\n      let magBody = Bodies.rectangle(\r\n        this.body.position.x + (_d === 'left' ? 20 : -20),\r\n        this.body.position.y - (getBodyHeight(this.body)/2), 7, 42, {\r\n          collisionFilter: magDmgOwned ? {} : itemCollisionOptions\r\n      })\r\n      magBody.label = 'magazine'\r\n      World.add(world, magBody)\r\n      Body.applyForce(\r\n        magBody,\r\n        this.body.position,\r\n        {\r\n          x:  + (_d === 'left' ? random.float(0.004, 0.01) : random.float(-0.004, -0.01)),\r\n          y: random.float(-0.0015, -0.01)\r\n        })\r\n      // make some simple magazing gfx\r\n      let smgMag = new PIXI.Graphics()\r\n      smgMag.beginFill(0x333333)\r\n      smgMag.drawRect(0, 0, 7, 42)\r\n      smgMag.pivot.x = smgMag.width/2\r\n      smgMag.pivot.y = smgMag.height/2\r\n      let magObj = {\r\n        gfx: smgMag,\r\n        body: magBody\r\n      }\r\n      this.ejectedMags.unshift(magObj)\r\n      container.addChild(smgMag)\r\n      // cleanup\r\n      delayedCall(2, () => {\r\n        World.remove(world, magBody)\r\n        smgMag.destroy()\r\n        this.ejectedMags.pop()\r\n      })\r\n    },\r\n    'shotgun weapon': () => {\r\n      const reloadShell = () => {\r\n        delayedCall(.3, () => {\r\n          if (this.shotgunShellLoadIterations > 5) {\r\n            charReloadShotgunSprite.gotoAndPlay(21)\r\n          } else {\r\n            charReloadShotgunSprite.gotoAndPlay(10)\r\n            this.shotgunShellLoadIterations++\r\n            reloadShell()\r\n          }\r\n        })\r\n      }\r\n      reloadShell()\r\n    }\r\n  }\r\n\r\n  this.updateEjectedMagPositions = (renderFn) => {\r\n    this.ejectedMags.forEach(mag => {\r\n      let { x, y, rotation: rot } = renderFn(mag.body)\r\n      mag.gfx.position = { x, y }\r\n      mag.gfx.rotation = rot\r\n    })\r\n  }\r\n\r\n  this.reloadWeapon = () => {\r\n    // this.reloading = true\r\n    let { game: { player: { weapons: { reloadSpeed, reloadAnimationFrames, equipped } } } } = getState()\r\n    this.reloadAnimsByType[equipped].animationSpeed = reloadSpeed[equipped]\r\n    this.reloadAnimsByType[equipped].gotoAndPlay(1)\r\n    delayedCall(\r\n      equipped === WEAPON_TYPE_PISTOL ? reloadSpeed[equipped]/4 //1\r\n      : equipped === WEAPON_TYPE_SMG ? (reloadSpeed[equipped] * 2) + (reloadSpeed[equipped]/2) //1.00\r\n      : equipped === WEAPON_TYPE_SHOTGUN ? reloadSpeed[equipped] + (reloadSpeed[equipped]/4) //.5\r\n      : 0\r\n    , () => {\r\n      if (this.reloadAnimsByType[equipped].visible === true) {\r\n        this.reloadMagazineActionsByType[equipped]()\r\n      }\r\n    })\r\n  }\r\n  \r\n  // fire pistol right arm\r\n  let charRightArmFirePistolSpritesheet = gameObjects.getKeyValue('right-arm-pistol-fire-sheet')\r\n  let charRightArmFirePistolSprite = new PIXI.AnimatedSprite(charRightArmFirePistolSpritesheet.animations['right_char_arm_pistol_fire'])\r\n  charRightArmFirePistolSprite.play()\r\n  charRightArmFirePistolSprite.loop = false\r\n  charRightArmFirePistolSprite.animationSpeed = .35\r\n  charRightArmFirePistolSprite.updateAnchor = true\r\n  charRightArmFirePistolSprite.pivot.x = charRightArmFirePistolSprite.width * .6\r\n  charRightArmFirePistolSprite.pivot.y = charRightArmFirePistolSprite.height * .4\r\n  charRightArmFirePistolSprite.onComplete = () => {\r\n    charRightArmFirePistolSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFirePistolSprite)\r\n\r\n  // fire smg right arm\r\n  let charRightArmFireSMGSpritesheet = gameObjects.getKeyValue('right-arm-smg-fire-sheet')\r\n  let charRightArmFireSMGSprite = new PIXI.AnimatedSprite(charRightArmFireSMGSpritesheet.animations['char_right_arm_smg_fire'])\r\n  charRightArmFireSMGSprite.play()\r\n  charRightArmFireSMGSprite.loop = false\r\n  charRightArmFireSMGSprite.animationSpeed = .35\r\n  charRightArmFireSMGSprite.updateAnchor = true\r\n  charRightArmFireSMGSprite.pivot.x = charRightArmFireSMGSprite.width * .6\r\n  charRightArmFireSMGSprite.pivot.y = charRightArmFireSMGSprite.height * .4\r\n  charRightArmFireSMGSprite.onComplete = () => {\r\n    charRightArmFireSMGSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireSMGSprite)\r\n\r\n  // fire shotgun right arm\r\n  let charArmsFireShotgunSpritesheet = gameObjects.getKeyValue('arms-fire-shotgun-sheet')\r\n  let charRightArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['rightArmFireShotgun'])\r\n  charRightArmFireShotgunSprite.play()\r\n  charRightArmFireShotgunSprite.loop = false\r\n  charRightArmFireShotgunSprite.animationSpeed = .5\r\n  charRightArmFireShotgunSprite.updateAnchor = true\r\n  charRightArmFireShotgunSprite.pivot.x = charRightArmFireShotgunSprite.width * .6\r\n  charRightArmFireShotgunSprite.pivot.y = charRightArmFireShotgunSprite.height * .4\r\n  charRightArmFireShotgunSprite.onComplete = () => {\r\n    charRightArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charRightArmFireShotgunSprite)\r\n\r\n  // head sprite\r\n  let headSprite = makePixiSprite('char-head')\r\n  container.addChild(headSprite)\r\n  this.positionHeadSprite = renderObj => {\r\n    let { game: { keys, mouseState: { x: _mx }, mousePosition, player: { variables: { jumping, currentDirection }, weapons: { equipped } } } } = getState()\r\n    let { mx, my, fn: renderFn } = renderObj\r\n    let { x, y } = renderFn(this.head)\r\n    if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n      if (currentDirection === 'right') {\r\n        if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x + 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      } else if (currentDirection === 'left') {\r\n        if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n          headSprite.position.x = x - 5\r\n        } else {\r\n          headSprite.position.x = x\r\n        }\r\n      }\r\n    } else {\r\n      headSprite.position.x = x\r\n    }\r\n    \r\n    headSprite.position.y = y + 12\r\n\r\n    if (!jumping) {\r\n      if (my === LESS_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => { sprite.pivot.y = sprite.height * .45 })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = 2.5\r\n        }\r\n        else {\r\n          headSprite.rotation = 0.9570\r\n        }\r\n      } else if (my === GREATER_THAN_PLAYER_Y_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .65\r\n          sprite.pivot.y = sprite.height * .45\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x > 550 && mousePosition.x < 650) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        if (mx === GREATER_THAN_PLAYER_X_POS) {\r\n          headSprite.rotation = -2.7230\r\n        } else {\r\n          headSprite.rotation = -0.5532\r\n        }\r\n      } else if (mousePosition.x < 750 && mousePosition.y > 250 && mx === GREATER_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -2.7230\r\n      } else if (mousePosition.x > 450 && mousePosition.y > 250 && mx === LESS_THAN_PLAYER_X_POS) {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .62\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = -0.5532\r\n      } else {\r\n        this.armsSpritesByType[equipped].forEach(sprite => {\r\n          sprite.pivot.x = sprite.width * .6\r\n          sprite.pivot.y = sprite.height * .42\r\n        })\r\n        headSprite.rotation = charLeftArmFirePistolSprite.rotation\r\n      }\r\n    } else {\r\n      this.armsSpritesByType[equipped].forEach(sprite => {\r\n        sprite.pivot.x = sprite.width * .6\r\n        sprite.pivot.y = sprite.height * .47\r\n      })\r\n    }\r\n  }\r\n  headSprite.pivot.x = headSprite.width * .52\r\n  headSprite.pivot.y = headSprite.height * .17\r\n  this.headSprite = headSprite\r\n \r\n  // run anim\r\n  let charRunSpritesheet = gameObjects.getKeyValue('char-run-sheet')\r\n  let charRunSprite = new PIXI.AnimatedSprite(charRunSpritesheet.animations['char_run'])\r\n  charRunSprite.loop = true\r\n  charRunSprite.animationSpeed = 1.0\r\n  charRunSprite.updateAnchor = true\r\n  charRunSprite.pivot.x = charRunSprite.width * .52\r\n  charRunSprite.pivot.y = charRunSprite.height * .5\r\n  container.addChild(charRunSprite)\r\n \r\n  // idle anim\r\n  let charIdleSpritesheet = gameObjects.getKeyValue('char-idle-sheet')\r\n  let charIdleSprite = new PIXI.AnimatedSprite(charIdleSpritesheet.animations['char_idle'])\r\n  charIdleSprite.play()\r\n  charIdleSprite.loop = true\r\n  charIdleSprite.animationSpeed = .1\r\n  charIdleSprite.updateAnchor = true\r\n  charIdleSprite.pivot.x = charIdleSprite.width * .52\r\n  charIdleSprite.pivot.y = charIdleSprite.height * .5\r\n  container.addChild(charIdleSprite)\r\n  \r\n  // jump anim\r\n  let charJumpSpritesheet = gameObjects.getKeyValue('char-jump-sheet')\r\n  let charJumpSprite = new PIXI.AnimatedSprite(charJumpSpritesheet.animations['char_jump'])\r\n  charJumpSprite.loop = false\r\n  charJumpSprite.animationSpeed = .35\r\n  charJumpSprite.updateAnchor = true\r\n  charJumpSprite.pivot.x = charJumpSprite.width * .52\r\n  charJumpSprite.pivot.y = charJumpSprite.height * .5\r\n  //  set(charJumpSprite.scale, { x: .5, y: 1.0 })\r\n  charJumpSprite.visible = false\r\n  container.addChild(charJumpSprite)\r\n \r\n  this.stopJumpAnimation = () => {\r\n    charJumpSprite.gotoAndStop(0)\r\n    charJumpSprite.visible = false\r\n  }\r\n\r\n  charJumpSprite.onComplete = () => {\r\n    let { jumping } = getState().game.player.variables\r\n    if (!jumping) {\r\n      this.stopJumpAnimation()\r\n    } else {\r\n      this.resumeJumpAnimation()\r\n    }\r\n  }\r\n\r\n  let jumpMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.resumeJumpAnimation = () => {\r\n  charJumpSprite.gotoAndPlay(3)\r\n  charJumpSprite.visible = true\r\n  charRunSprite.visible = false\r\n  charIdleSprite.visible = false\r\n  // charJumpSprite.animationSpeed = .1\r\n  }\r\n\r\n  this.playJumpAnimation = () => {\r\n    if (getState().game.filterEffects) {\r\n      charJumpSprite.filters = [ jumpMotionBlur ]\r\n      from(jumpMotionBlur.velocity, .35, {\r\n        y: 50,\r\n        onUpdate: () => {\r\n          charJumpSprite.filters = [ jumpMotionBlur ]\r\n        }\r\n      })\r\n    }\r\n    charJumpSprite.gotoAndPlay(0)\r\n    charJumpSprite.visible = true\r\n    charRunSprite.visible = false\r\n    charIdleSprite.visible = false\r\n  }\r\n\r\n  // motion blur\r\n  let charLeftArmFirePistolSpritesheet = gameObjects.getKeyValue('left-arm-pistol-fire-sheet')\r\n  let charLeftArmFirePistolSprite = new PIXI.AnimatedSprite(charLeftArmFirePistolSpritesheet.animations['left_char_arm_pistol_fire'])\r\n  charLeftArmFirePistolSprite.play()\r\n  charLeftArmFirePistolSprite.loop = false\r\n  charLeftArmFirePistolSprite.animationSpeed = .35\r\n  charLeftArmFirePistolSprite.updateAnchor = true\r\n  charLeftArmFirePistolSprite.pivot.x = charLeftArmFirePistolSprite.width * .6\r\n  charLeftArmFirePistolSprite.pivot.y = charLeftArmFirePistolSprite.height * .4\r\n  charLeftArmFirePistolSprite.onComplete = () => {\r\n    charLeftArmFirePistolSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFirePistolSprite)\r\n   \r\n  // fire smg left arm (front)\r\n  let charLeftArmFireSMGSpritesheet = gameObjects.getKeyValue('left-arm-smg-fire-sheet')\r\n  let charLeftArmFireSMGSprite = new PIXI.AnimatedSprite(charLeftArmFireSMGSpritesheet.animations['char_left_arm_smg_fire'])\r\n  charLeftArmFireSMGSprite.play()\r\n  charLeftArmFireSMGSprite.loop = false\r\n  charLeftArmFireSMGSprite.animationSpeed = .35\r\n  charLeftArmFireSMGSprite.updateAnchor = true\r\n  charLeftArmFireSMGSprite.pivot.x = charLeftArmFireSMGSprite.width * .6\r\n  charLeftArmFireSMGSprite.pivot.y = charLeftArmFireSMGSprite.height * .4\r\n  charLeftArmFireSMGSprite.onComplete = () => {\r\n    charLeftArmFireSMGSprite.gotoAndStop(0)\r\n  }\r\n  container.addChild(charLeftArmFireSMGSprite)\r\n\r\n  // fire shotgun left arm (front)\r\n  let charLeftArmFireShotgunSprite = new PIXI.AnimatedSprite(charArmsFireShotgunSpritesheet.animations['leftArmFireShotgun'])\r\n  charLeftArmFireShotgunSprite.play()\r\n  charLeftArmFireShotgunSprite.loop = false\r\n  charLeftArmFireShotgunSprite.animationSpeed = .5\r\n  charLeftArmFireShotgunSprite.updateAnchor = true\r\n  charLeftArmFireShotgunSprite.pivot.x = charLeftArmFireShotgunSprite.width * .6\r\n  charLeftArmFireShotgunSprite.pivot.y = charLeftArmFireShotgunSprite.height * .4\r\n  charLeftArmFireShotgunSprite.onComplete = () => {\r\n    charLeftArmFireShotgunSprite.stop()\r\n  }\r\n  container.addChild(charLeftArmFireShotgunSprite)\r\n\r\n  let weaponSwapMotionBlur = new MotionBlurFilter({ velocity: { y: 0 } })\r\n\r\n  this.armsSprites = [\r\n    charLeftArmFirePistolSprite,\r\n    charRightArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charRightArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite,\r\n    charRightArmFireShotgunSprite\r\n  ]\r\n\r\n  this.armsSpritesByType = {\r\n    'pistol weapon': [ charLeftArmFirePistolSprite, charRightArmFirePistolSprite ],\r\n    'smg weapon': [ charLeftArmFireSMGSprite, charRightArmFireSMGSprite ],\r\n    'shotgun weapon': [ charLeftArmFireShotgunSprite, charRightArmFireShotgunSprite ]\r\n  }\r\n\r\n  let muzzleFlashFX = new MuzzleFlashFX()\r\n\r\n  let _9mm1 = window.gameObjects.getKeyValue('9mm-sound1')\r\n  let _9mm2 = window.gameObjects.getKeyValue('9mm-sound2')\r\n  let pistolSound1 = new Howl({\r\n    src: [ _9mm1 ],\r\n  })\r\n  let pistolSound2 = new Howl({\r\n    src: [ _9mm2 ],\r\n    sprite: {\r\n      _1: [ 500, 1000 ]\r\n    }\r\n  })\r\n  let pistolReloadSnd = window.gameObjects.getKeyValue('pistol-reload-sound')\r\n  let pistolReloadSound = new Howl({ src: [ pistolReloadSnd ], volume: .25 })\r\n  let jumpSound = gameObjects.getKeyValue('throw-sound')\r\n  let pain1Snd = gameObjects.getKeyValue('pain1-sound')\r\n  let pain2Snd = gameObjects.getKeyValue('pain2-sound')\r\n  let deathRip = gameObjects.getKeyValue('death-rip-sound')\r\n  let playerDeathSnd = gameObjects.getKeyValue('player-death-sound')\r\n  let hitImpact = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n  let smgFire = gameObjects.getKeyValue('smg-fire-sound')\r\n  let shotgunFire = gameObjects.getKeyValue('shotgun-blast-sound')\r\n\r\n  this.fireWeaponAnimation = () => {\r\n    let { game: { mouseState, player: { weapons: { equipped } } } } = getState()\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.visible = true })\r\n    this.armsSpritesByType[equipped].forEach(sprite => { sprite.gotoAndPlay(0) })\r\n    muzzleFlashFX.fireEffect()\r\n    // position muzzle spark particles sprite \r\n    let mSpark = new EnhancedMuzzleSpark(this.arm)\r\n    this.currentMuzzleSpark = mSpark\r\n    // sound\r\n    if (equipped === WEAPON_TYPE_PISTOL) {\r\n      pistolSound1.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SMG) {\r\n      smgFire.play()\r\n    }\r\n    if (equipped === WEAPON_TYPE_SHOTGUN) {\r\n      shotgunFire.play()\r\n    }\r\n  }\r\n\r\n  this.charRunSprite = charRunSprite\r\n  this.charIdleSprite = charIdleSprite\r\n  this.charJumpSprite = charJumpSprite\r\n  // weapons specific\r\n  this.charReloadPistolSprite = charReloadPistolSprite\r\n  this.charReloadSMGSprite = charReloadSMGSprite\r\n  this.charReloadShotgunSprite = charReloadShotgunSprite\r\n\r\n  this.bodySprites = [\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    meleeShotgunAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n  ]\r\n  \r\n  this.sprites = [\r\n    charRightArmFirePistolSprite,\r\n    charRightArmFireSMGSprite,\r\n    charRightArmFireShotgunSprite,\r\n    charRunSprite,\r\n    charIdleSprite,\r\n    charJumpSprite,\r\n    charReloadPistolSprite,\r\n    charReloadSMGSprite,\r\n    charReloadShotgunSprite,\r\n    meleePistolAnim,\r\n    meleeUMPAnim,\r\n    grenadeThrowPistolAnim,\r\n    grenadeThrowUMPAnim,\r\n    grenadeThrowShotgunAnim,\r\n    charLeftArmFirePistolSprite,\r\n    charLeftArmFireSMGSprite,\r\n    charLeftArmFireShotgunSprite\r\n  ]\r\n\r\n  this.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 60, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n  blur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      this.shadow.alpha = .85\r\n      this.shadow.filters = [blur]\r\n      lifebar.filters = [bevel]\r\n    } else {\r\n      this.shadow.alpha = .45\r\n      this.shadow.filters = []\r\n      lifebar.filters = []\r\n    }\r\n  }\r\n\r\n  this.setBodySpritesPositions = obj => {\r\n    let { fn } = obj\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tthis.bodySprites.forEach(sprite => {\r\n      sprite.position.x = x\r\n      sprite.position.y = y - 15\r\n    })\r\n    if (container && container.children.indexOf(this.shadow) === -1) {\r\n      container.addChild(this.shadow)\r\n    }\r\n    this.shadow.position.x = x\r\n    this.shadow.position.y = this.bodySprites[0].position.y + this.bodySprites[0].height/2 - 5\r\n  }\r\n\r\n  this.setArmsSpritePosition = obj => {\r\n    // .125 is a rotation adjustment so that the arms sprite lines up more accurately with where the bullet is coming from\r\n    let { game: { keys, mouseState: { x: _mx, y: _my }, player: { variables: { jumping, currentDirection } } } } = getState()\r\n    let { fn } = obj\r\n    let { x, y, rotation: rot } = fn(this.arm)\r\n    this.armsSprites.forEach(sprite => {\r\n      // sprite.x = x\r\n      if ((keys.indexOf(68) > -1 || keys.indexOf(65) > -1) && !jumping) {\r\n        if (currentDirection === 'right') {\r\n          if (_mx === GREATER_THAN_PLAYER_X_POS) {\r\n            sprite.x = x + 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        } else if (currentDirection === 'left') {\r\n          if (_mx === LESS_THAN_PLAYER_X_POS) {\r\n            sprite.x = x - 5\r\n          } else {\r\n            sprite.x = x\r\n          }\r\n        }\r\n      } else {\r\n        sprite.x = x\r\n      }\r\n\r\n      if (jumping) {\r\n        if (_my === LESS_THAN_PLAYER_Y_POS) {\r\n          sprite.y = y - 10\r\n        } else {\r\n          sprite.y = y\r\n        }\r\n      } else {\r\n        sprite.y = y\r\n      }\r\n\r\n      sprite.rotation = rot\r\n    })\r\n    // keep muzzle flashes aligned with gun arm\r\n    let fpos, frot\r\n    muzzleFlashFX.getFlashes().forEach(flash => {\r\n      flash.position = charRightArmFirePistolSprite.position\r\n      flash.rotation = rot - degrees(90)\r\n      flash.pivot.x = -flash.width * .05\r\n      flash.pivot.y = getState().game.player.weapons.equipped === WEAPON_TYPE_SHOTGUN ? flash.height * 3.25 : flash.height * 2.25\r\n      fpos = flash.position\r\n      frot = flash.rotation\r\n    })\r\n    if (this.currentMuzzleSpark) {\r\n      this.currentMuzzleSpark.spark.pivot.x = -this.currentMuzzleSpark.spark.width\r\n      this.currentMuzzleSpark.spark.position = fpos\r\n      this.currentMuzzleSpark.spark.rotation = rot - degrees(180)\r\n    }\r\n  }\r\n\r\n  this.meleeAttackInProgress = false\r\n\r\n  this.createMeleeHitbox = () => {\r\n    let { mouseState, player: { weapons: {equipped} } } = getState().game\r\n    let _throw = window.gameObjects.getKeyValue('throw-sound')\r\n    _throw.play()\r\n    this.meleeHitbox = Bodies.rectangle(\r\n      mouseState.x === GREATER_THAN_PLAYER_X_POS ? this.body.position.x + getBodyWidth(this.body) * 1.5 : this.body.position.x - getBodyWidth(this.body) * 1.5,\r\n      this.body.position.y - getBodyHeight(this.body)/2,\r\n      getBodyWidth(this.body) * 2,\r\n      getBodyHeight(this.body), {\r\n        isStatic: true\r\n      })\r\n    this.meleeHitbox.main = this\r\n    this.meleeHitbox.label = `melee hitbox ${equipped}`\r\n    World.add(world, this.meleeHitbox)\r\n  }\r\n  this.removeMeleeHitbox = () => {\r\n    if (this.meleeHitbox) {\r\n      World.remove(world, this.meleeHitbox)\r\n    }\r\n  }\r\n\r\n  this.meleeAttack = () => {\r\n    let { equipped } = getState().game.player.weapons\r\n    let attacks = {\r\n      'pistol weapon': () => {\r\n        if (meleePistolAnim.currentFrame < 1) {\r\n          meleePistolAnim.visible = true\r\n          meleePistolAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'smg weapon': () => {\r\n        if (meleeUMPAnim.currentFrame < 1) {\r\n          meleeUMPAnim.visible = true\r\n          meleeUMPAnim.gotoAndPlay(1)\r\n        }\r\n      },\r\n      'shotgun weapon': () => {\r\n        if (meleeShotgunAnim.currentFrame < 1) {\r\n          meleeShotgunAnim.visible = true\r\n          meleeShotgunAnim.gotoAndPlay(1)\r\n        }\r\n      }\r\n    }\r\n    if (!this.meleeAttackInProgress) {\r\n      this.meleeAttackInProgress = true\r\n      delayedCall(.35, () => {\r\n        if (!this.dead) {\r\n          this.createMeleeHitbox()\r\n        }\r\n        delayedCall(.1, () => {\r\n          this.removeMeleeHitbox()\r\n        })\r\n      })\r\n      attacks[equipped]()\r\n    }\r\n  }\r\n\r\n  this.collectHealth = (amount) => {\r\n    this.life += amount\r\n    if (this.life > 100) {\r\n      this.life = 100\r\n    }\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.collectCredits = (amount) => {\r\n    // this.bodySprites.concat(this.armsSprites).forEach(sprite => {\r\n    //   from(sprite, .1, { tint: 0xffffff })\r\n    // })\r\n    // createTextMessage(`+${amount} currency credits`, '#47ffda', .35, 1)\r\n    dispatch(\r\n      addToTotalCredits(amount)\r\n    )\r\n  }\r\n\r\n  this.collectAmmo = (wepType, amount) => {\r\n    createTextMessage(`+${amount} ${wepType} ammo`, '#32BD6A', .35, 1)\r\n    dispatch(\r\n      addToTotalAmmo(wepType, amount)\r\n    )\r\n  }\r\n\r\n\tthis.playerHit = false\r\n\tthis.resetPlayerHit = () => {\r\n\t\tthis.playerHit = true\r\n\t\tdelayedCall(1, () => {\r\n\t\t\tthis.playerHit = false\r\n\t\t})\r\n  }\r\n  \r\n  this.blinkAlpha = () => {\r\n    this.headSprite.alpha = .25\r\n    this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n    this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    delayedCall(.1, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.2, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.3, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.35, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.4, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n    delayedCall(.45, () => {\r\n      this.headSprite.alpha = .25\r\n      this.armsSprites.forEach(arm => { arm.alpha = .25 })\r\n      this.bodySprites.forEach(b => { b.alpha = .25 })\r\n    })\r\n    delayedCall(.5, () => {\r\n      this.headSprite.alpha = 1\r\n      this.armsSprites.forEach(arm => { arm.alpha = 1 })\r\n      this.bodySprites.forEach(b => { b.alpha = 1 })\r\n    })\r\n  }\r\n\r\n\tthis.takeDamage = dmg => {\r\n    let { game: { player: { variables: { defense } } } } = getState()\r\n    this.life -= (dmg - defense)\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    let randomNum = [ 1, 2 ][Math.floor( Math.random() * 2 )]\r\n    if (randomNum === 1) {\r\n      pain1Snd.play()\r\n    } else {\r\n      pain2Snd.play()\r\n    }\r\n    hitImpact.play()\r\n    lifebar.tint = damageRed\r\n    to(lifebar, .2, { width: (this.life/100 * this.initialLifebarWidth) })\r\n    to(lifebar, .1, {\r\n      y: lifebar.position.y + 2,\r\n      onComplete: () => {\r\n        to(lifebar, .1, {\r\n          y: lifebar.position.y - 3,\r\n          onComplete: () => {\r\n            to(lifebar, .1, {\r\n              y: lifebar.position.y + 1,\r\n              onComplete: () => {\r\n                lifebar.tint = lifebarGreen\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n    let bloodSpurtPos = {\r\n      x: random.float(this.bodySprites[0].position.x - 5, this.bodySprites[0].position.x + 20),\r\n      y: random.float(this.bodySprites[0].position.y, this.bodySprites[0].position.y - 60)\r\n    }\r\n    createTextMessage(`-${dmg}`, '#FF0000', .35, 1, 12)\r\n    new BloodSpurt(null, bloodSpurtPos, .75)\r\n    this.blinkAlpha()\r\n\t\tthis.resetPlayerHit()\r\n\t\tif (this.life <= 0) {\r\n\t\t\tthis.kill()\r\n\t\t}\r\n  }\r\n  \r\n  this.acceptHealth = amt => {\r\n    this.life = amt\r\n    dispatch( updatePlayerHealth(this.life) )\r\n    to(lifebar, .5, { width: (this.life/100 * this.initialLifebarWidth) })\r\n  }\r\n\r\n  this.addSpritesInOrder = () => {\r\n    container.addChild(this.headSprite)\r\n    this.armsSprites.forEach(sprite => container.addChild(sprite))\r\n    this.bodySprites.forEach(sprite => container.addChild(sprite))\r\n    // move front arms back on top\r\n    container.addChild(charLeftArmFirePistolSprite)\r\n    container.addChild(charLeftArmFireSMGSprite)\r\n    container.addChild(charLeftArmFireShotgunSprite)\r\n    container.addChild(lifebar)\r\n  }\r\n\r\n\tthis.respawn = () => {\r\n    engine.timing.timeScale = 1.0\r\n    if (this.playerRagdoll) {\r\n      this.playerRagdoll.destroy()\r\n      this.playerRagdoll = null\r\n    }\r\n    this.addSpritesInOrder()\r\n\t\tthis.life = 100\r\n\t\tlifebar.width = this.initialLifebarWidth\r\n\t\tthis.dead = false\r\n    lifebar.visible = lifebarOutline.visible = true\r\n    if (this.lastDeathType === FELL_OFF) {\r\n      // place our character back on-stage if he's fallen off\r\n      if (this.lastBodyPosition.x < 0) {\r\n        while (this.body.position.x < 200 && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: 100, y: -100 })\r\n        }\r\n      } else {\r\n        while (this.body.position.x > getState().game.width && this.body.position.y > 0) {\r\n          Composite.translate(this.composite, { x: -100, y: -100 })\r\n        }\r\n      }\r\n    }\r\n    World.add(world, this.composite)\r\n    if (getState().game.lastGameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n      )\r\n    } else {\r\n      dispatch(\r\n        gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_RESPAWN)\r\n      )\r\n    }\r\n  }\r\n\r\n\tthis.dead = false\r\n\tthis.kill = (deathType) => {\r\n    if (this.dead === false) {\r\n      if (deathType) {\r\n        this.lastDeathType = deathType\r\n      } else {\r\n        deathRip.play()\r\n        this.lastDeathType = KILLED_BY_ZOMBIE\r\n      }\r\n      playerDeathSnd.play()\r\n      engine.timing.timeScale = .5\r\n      lifebar.visible = lifebarOutline.visible = false\r\n      this.life = 0\r\n      this.dead = true\r\n      this.removeMeleeHitbox()\r\n      this.lastBodyPosition = this.body.position\r\n      World.remove(world, this.composite)\r\n      if (this.bodySprites && this.armsSprites) {\r\n        container.removeChild(this.headSprite)\r\n        this.bodySprites.forEach(sprite => container.removeChild(sprite))\r\n        this.armsSprites.forEach(sprite => container.removeChild(sprite))\r\n      }\r\n      let force = {\r\n        x: engine.timing.timeScale === 1\r\n        ? charIdleSprite.scale.x === 1 ? 0.1 : -0.1\r\n        : charIdleSprite.scale.x === 1 ? 0.25 : -0.25\r\n        ,\r\n        y: engine.timing.timeScale === 1\r\n        ? -0.25\r\n        : -0.75\r\n      }\r\n      let parts = [ 'head', 'body', 'limb', 'none' ]\r\n      let partLastDamaged = parts[ Math.floor( Math.random() * parts.length ) ]\r\n      \r\n      if (partLastDamaged === 'head') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollDecap({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'body') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollHalved({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else if (partLastDamaged === 'limb') {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdollMaim({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      } else {\r\n        this.playerRagdoll = gameObjects.setKeyValue('player-ragdoll', new PlayerRagdoll({ x: this.body.position.x, y: this.body.position.y }, force, partLastDamaged))\r\n      }\r\n  \r\n      batch(() => {\r\n        dispatch(unsetAllKeys())\r\n        dispatch(resetPlayerVariables())\r\n        dispatch(setMouseButtonState(MOUSE_UP))\r\n        dispatch(gameStateTransition('sub', getState().game.gameSubState, SubStates.PLAYER_DEATH))\r\n      })\r\n    }\r\n\t}\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState, player: { variables: { jumpForce, jumping } } } } = getState()\r\n\r\n    // jump\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        \r\n        if (e.keyCode === 87 && !jumping && !this.chargingGrenade) {\r\n            dispatch(setJumping(true))\r\n            jumpSound.play()\r\n            this.playJumpAnimation()\r\n            Body.applyForce(this.body, this.body.position, { x: 0, y: jumpForce })\r\n        } else {\r\n            if (keys.indexOf(e.keyCode) < 0) {\r\n              dispatch(setKeyPress(e.keyCode))\r\n            }\r\n        }\r\n      }\r\n    }\r\n\r\n    // melee \r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (!this.dead && !weaponsUI.reloading && !this.meleeAttackInProgress && !jumping && !this.grenadeThrowInProgress) {\r\n        if (e.key === 'f' || e.key === 'F') {\r\n          this.meleeAttack()\r\n        }\r\n      }\r\n    }\r\n\r\n    // Shop / Continue / Build \r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (e.key === 'Enter') {\r\n        let screenUI = gameObjects.getKeyValue('screen-ui')\r\n        screenUI.unpause()\r\n        dispatch(incrementWave())\r\n        dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n        dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n      }\r\n      // if (e.key === 'e' || e.key === 'E') {\r\n      //   dispatch( gameStateTransition( 'main', gameState, GameStates.SHOP_MENU ) )\r\n      //   dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n      // }\r\n      // if (e.key === 'b' || e.key === 'B') {\r\n      //   dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n      //   dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n      // }\r\n    }\r\n    // done with build placement\r\n    if (gameState !== GameStates.SHOP_MENU && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (e.key === 'b' || e.key === 'B') {\r\n        let arrow = gameObjects.getKeyValue('object-placement-arrow')\r\n        arrow.changeBack = true\r\n        dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n        dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n      }\r\n    }\r\n\r\n    // cycle weapon [spacebar]\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if (e.keyCode === 32) {\r\n        if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n          let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // remote mine detonation [numbers 1 thru 9]\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n      let numKeys = [ '1', '2', '3', '4', '5', '6', '7', '8', '9' ]\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let idx = numKeys.indexOf(e.key.toString())\r\n      console.log(e.key)\r\n      if (idx > -1) {\r\n        if (remoteMines[e.key.toString()]) {\r\n          remoteMines[e.key.toString()].detonate()\r\n          delete remoteMines[e.key.toString()]\r\n        }\r\n      }\r\n    }\r\n    \r\n    // turret placement direction\r\n    if (gameState === GameStates.GAMEPLAY && gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      if (getState().game.traps.selectedTrap === trapTypes.TURRET) {\r\n        let currentTurret = gameObjects.getKeyValue('current-turret')\r\n        if (currentTurret) {\r\n          if (e.key === 'ArrowLeft') {\r\n            currentTurret.updateDirection('left')\r\n          }\r\n          if (e.key === 'ArrowRight') {\r\n            currentTurret.updateDirection('right')\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n\r\n    // reload weapon [R]\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (e.keyCode === 82 && !this.meleeAttackInProgress) {\r\n        let { game: { showingMessage, player: { weapons: { equipped, totalAmmo } } } } = getState()\r\n        if (totalAmmo[equipped] === 0 && showingMessage === false) {\r\n          createTextMessage('Out of ammo!', '#FF0000', .25, .75)\r\n        } else if (!weaponsUI.reloading && !jumping && !this.dead) {  //&& !this.reloading) {\r\n          this.reloadWeapon()\r\n          weaponsUI.reload()\r\n        }\r\n      }\r\n    }\r\n\r\n\t}\r\n\r\n\tconst handleKeyUp = e => {\r\n\t\tlet { game: { keys, gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tlet idx = keys.indexOf(e.keyCode)\r\n\t\t\t\tif (idx > -1) {\r\n\t\t\t\t\tdispatch(removeKeyPress(e.keyCode))\r\n        }\r\n        // grenade [G]\r\n        if ((e.key === 'g' || e.key === 'G') && getState().game.player.weapons.totalAmmo[WEAPON_TYPE_GRENADE] > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading) {\r\n          if (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n            this.throwGrenade()\r\n          }\r\n        }\r\n      }\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMouseDown = e => {\r\n    console.log(e)\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n      if (!this.dead && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        if (e.buttons === 1) {\r\n          dispatch(setMouseButtonState(MOUSE_DOWN))\r\n        } else if (e.buttons === 2) {\r\n          dispatch(setRightMouseDown(true))\r\n          console.log('should charge')\r\n        }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n  \r\n\tconst handleMouseUp = e => {\r\n    let { game: { gameState } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      console.log(e)\r\n      dispatch(setMouseButtonState(MOUSE_UP))\r\n      if (getState().game.rightMouseDown) {\r\n        dispatch(setRightMouseDown(false))\r\n      }\r\n    }\r\n  }\r\n  \r\n  const handleMouseWheel = e => {\r\n    console.log(e)\r\n    let { gameState } = getState().game\r\n    e.preventDefault()\r\n    if (gameState === GameStates.GAMEPLAY || gameState === GameStates.SHOP_MENU) {\r\n      if ((!weaponsUI.reloading || gameState === GameStates.SHOP_MENU) && !this.meleeAttackInProgress && !this.grenadeThrowInProgress) {\r\n        let { game: { player: { weapons: { equipped, list } } } } = getState()\r\n        if (e.deltaY < 0) {\r\n          if (list[list.indexOf(equipped) - 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx - 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[list.length - 1]))\r\n          }\r\n        } else if (e.deltaY > 0) {\r\n          if (list[list.indexOf(equipped) + 1]) {\r\n            let idx = list.indexOf(equipped)\r\n            dispatch(setWeaponEquipped(list[idx + 1]))\r\n          } else {\r\n            dispatch(setWeaponEquipped(list[0]))\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tlet playerBody = getPlayerBody(gameObjects)\r\n\tlet playerArm = getPlayerComposite(gameObjects).bodies[1]\r\n\tlet bh = getBodyHeight(this.body)\r\n\r\n\tconst handleMouseMove = e => {\r\n\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (e.target && e.target === document.getElementsByTagName('canvas')[1] && e.target.getBoundingClientRect) {\r\n\t\t\t\tlet armAngle\r\n\t\t\t\tlet mouseX, mouseY\r\n        let rect = e.target.getBoundingClientRect()\r\n        // console.log(e.target)\r\n\t\t\t\tlet x = e.clientX - rect.left\r\n\t\t\t\tlet y = e.clientY - rect.top\r\n\t\t\t\tlet { game: { mouseRelativeToPlayerPosition: mPosRel } } = getState()\r\n\t\t\t\tdispatch(setMousePosition({ x, y }))\r\n\r\n\t\t\t\tif (mPosRel.x > playerBody.position.x) {\r\n\t\t\t\t\tmouseX = GREATER_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.x < playerBody.position.x) {\r\n\t\t\t\t\tmouseX = LESS_THAN_PLAYER_X_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y > playerBody.position.y + bh/2) {\r\n\t\t\t\t\tmouseY = GREATER_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\t\t\t\tif (mPosRel.y < playerBody.position.y - bh) {\r\n\t\t\t\t\tmouseY = LESS_THAN_PLAYER_Y_POS\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarmAngle = Vector.angle(mPosRel, playerArm.position)\r\n\t\t\t\tBody.setAngle(playerArm, armAngle)\r\n\r\n\t\t\t\tdispatch(setMouseStateX(mouseX))\r\n\t\t\t\tdispatch(setMouseStateY(mouseY))\r\n\t\t\t}\r\n    }\r\n\r\n  }\r\n  \r\n  const handleMouseClick = e => {\r\n    let {game:{player:{credits},mouseRelativeToPlayerPosition,gameSubState,traps:{selectedTrap, costToBuild:costToBuild_trap},barriers:{selectedBarrier,costToBuild:costToBuild_barrier}}} = getState()\r\n    if (gameSubState === SubStates.BUILD_PLACEMENT_MODE) {\r\n      let _y = 360\r\n      let position = {\r\n        x: mouseRelativeToPlayerPosition.x,\r\n        y: _y\r\n      }\r\n      let width = 50\r\n      let height = 100\r\n      let buildNewLocation = true\r\n      let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n      let buildObjects = gameObjects.getKeyValue('build-objects')\r\n      let placeObjectSound = gameObjects.getKeyValue('place-object-sound')\r\n      let cancelSound = gameObjects.getKeyValue('button-cancel-sound')\r\n      const buildObjectPlacementComparison = (obj) => (position.x + (width/2) < obj.getBody().position.x - getBodyWidth(obj.getBody())/2) ||\r\n      (obj.getBody().position.x + getBodyWidth(obj.getBody())/2 < position.x - (width/2))\r\n      let checkAllowArray = buildObjects.map(obj => {\r\n        if (buildObjectPlacementComparison(obj)) {\r\n          return 'allow placement'\r\n        } else {\r\n          return 'place next to'\r\n        }\r\n      })\r\n\r\n      // find closest build object\r\n      let closestX\r\n      if (buildObjects.length > 0) {\r\n        let buildObjectXPositions = buildObjects.map(obj => obj.getBody().position.x)\r\n        closestX = buildObjectXPositions.reduce((prev, curr) => (\r\n          (Math.abs(curr - position.x) < Math.abs(prev - position.x) ? curr : prev)\r\n        ))\r\n        console.log( closestX )\r\n      }\r\n      \r\n      let idx = checkAllowArray.indexOf('place next to')  //.indexOf('deny')\r\n      if (idx > -1) {\r\n        buildNewLocation = false\r\n      }\r\n      \r\n      if (selectedBarrier) {\r\n        let barrier\r\n        if (credits >= costToBuild_barrier[selectedBarrier]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            barrier = new WallBarrier(position, { width, height }, selectedBarrier)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              barrier = new WallBarrier({ x: closestX - width, y: position.y}, { width, height }, selectedBarrier)\r\n            } else {\r\n              barrier = new WallBarrier({ x: closestX + width, y: position.y}, { width, height }, selectedBarrier)\r\n            }\r\n          }\r\n          if (barrier) {\r\n            dispatch( subtractFromTotalCredits(costToBuild_barrier[selectedBarrier]) )\r\n            createTextMessage(`- $${costToBuild_barrier[selectedBarrier]}`, 0xFF0000, .5, .75)\r\n            buildObjects.push(barrier)\r\n            placeObjectSound.play()\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n\r\n      const buildTrap = (trapPosition) => {\r\n        switch (selectedTrap) {\r\n          case trapTypes.LANDMINE:\r\n            return new Landmine(trapPosition)\r\n          case trapTypes.CLUSTER_BOMB:\r\n            return new Clustermine(trapPosition)\r\n          case trapTypes.REMOTE_MINE:\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            return new RemoteMine(trapPosition, remoteMinesArr.length + 1)\r\n          case trapTypes.TURRET:\r\n            return new MachineGunTurret(trapPosition)\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      if (selectedTrap) {\r\n        let trap\r\n        if (credits >= costToBuild_trap[selectedTrap]) {\r\n          if (buildNewLocation || buildObjects.length === 0) {\r\n            trap = buildTrap(position)\r\n          } else {\r\n            // build next to instead\r\n            if (position.x < closestX) {\r\n              trap = buildTrap({ x: closestX - width, y: position.y })\r\n            } else {\r\n              trap = buildTrap({ x: closestX + width, y: position.y })\r\n            }\r\n          }\r\n          if (trap) {\r\n            dispatch( subtractFromTotalCredits(costToBuild_trap[selectedTrap]) )\r\n            createTextMessage(`- $${costToBuild_trap[selectedTrap]}`, 0xFF0000, .5, .75)\r\n            placeObjectSound.play()\r\n            buildObjects.push(trap)\r\n            let remoteMinesArr = gameObjects.getKeyValue('remote-mines-array')\r\n            if (selectedTrap === trapTypes.REMOTE_MINE) {\r\n              if (remoteMinesArr.length < 10) {\r\n                let remoteMines = gameObjects.getKeyValue('remote-mines')\r\n                remoteMinesArr.push( trap )\r\n                remoteMinesArr.forEach((mine, i) => {\r\n                  remoteMines[i + 1] = mine\r\n                  mine.updateNumber(i + 1)\r\n                })\r\n              } else {\r\n                cancelSound.play()\r\n                createTextMessage('can hold up to 9 remote mines at a time', 0xFF0000, .5, .75)\r\n              }\r\n            }\r\n            if (selectedTrap === trapTypes.TURRET) {\r\n              createTextMessage('Press Left or Right arrow to change turret direction', 0xFFFFFF, .75, 2)\r\n              gameObjects.setKeyValue('current-turret', trap)\r\n            }\r\n            // console.log('build objects:', buildObjects)\r\n          }\r\n        } else {\r\n          cancelSound.play()\r\n          createTextMessage('insufficient credits', 0xFF0000, .5, .75)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleRightClick = e => {\r\n    // console.log(e)\r\n    e.preventDefault()\r\n    let { game: { gameState, gameSubState, player: { variables: {jumping}, weapons:{ totalAmmo:{ grenades:grenadesCount } }} } } = getState()\r\n    if (gameState === GameStates.GAMEPLAY) {\r\n      if (grenadesCount > 0 && !this.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n          this.throwGrenade()\r\n          console.log('throw!')\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\tif (!window.keydownListenersAdded) {\r\n\t\twindow.addEventListener('keydown', handleKeyDown)\r\n\t\twindow.addEventListener('keyup', handleKeyUp)\r\n\t\twindow.addEventListener('mousemove', handleMouseMove)\r\n\t\twindow.addEventListener('mousedown', handleMouseDown)\r\n    window.addEventListener('mouseup', handleMouseUp)\r\n    window.addEventListener('click', handleMouseClick)\r\n    window.addEventListener('contextmenu', handleRightClick)\r\n    window.addEventListener('wheel', handleMouseWheel)\r\n\t\twindow.keydownListenersAdded = true\r\n  }\r\n  \r\n  this.pause = () => {\r\n    if (this.charRunSprite.currentFrame !== 0) {\r\n      this.charRunSprite.play()\r\n    }\r\n    if (this.charReloadPistolSprite.currentFrame !== 0) {\r\n      this.charReloadPistolSprite.play()\r\n    }\r\n    if (this.charReloadSMGSprite.currentFrame !== 0) {\r\n      this.charReloadSMGSprite.play()\r\n    }\r\n    if (charJumpSprite.currentFrame !== 0) {\r\n      charJumpSprite.play()\r\n    }\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.charRunSprite.stop()\r\n    this.charReloadPistolSprite.stop()\r\n    this.charReloadSMGSprite.stop()\r\n    charJumpSprite.stop()\r\n    dispatch( setJumping(false) )\r\n    // charJumpSprite.animationSpeed = .35\r\n  }\r\n\r\n\treturn this\r\n\r\n}\r\n","import * as PIXI from 'pixi.js'\r\n\r\nconst { TweenLite: { to, from, kill } } = window\r\n\r\nexport default function Crosshairs(gameObjects) {\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tthis.crosshair = new PIXI.Container()\r\n\tthis.cross = new PIXI.Graphics()\r\n\tthis.cross.lineStyle(2, 0xB00000, 0.75)\r\n\tthis.cross.moveTo(0, -15)\r\n\tthis.cross.lineTo(0, 15)\r\n\tthis.cross.moveTo(-15, 0)\r\n\tthis.cross.lineTo(15, 0)\r\n\tthis.crosshair.addChild(this.cross)\r\n\tthis.circle = new PIXI.Graphics()\r\n\tthis.circle.lineStyle(1, 0xB00000, 0.75)\r\n\tthis.circle.drawCircle(0, 0, 10)\r\n\tthis.crosshair.addChild(this.circle)\r\n  this.changed = false\r\n  this.changeBack = false\r\n\tthis._new = null\r\n  container.addChild(this.crosshair)\r\n\r\n\tthis.crosshair.buildArrow = (color) => {\r\n\t\tlet crosshair = gameObjects.getKeyValue('crosshair')\r\n    container.removeChild(crosshair)\r\n    let _new = new PIXI.Graphics()\r\n    _new.lineStyle(2, color, 1.0)\r\n    _new.beginFill(0x777777, 0.0)\r\n    _new.moveTo(0,0)\r\n    _new.lineTo(20, 0)\r\n    _new.lineTo(20, 30)\r\n    _new.lineTo(30, 30)\r\n    _new.lineTo(10, 45)\r\n    _new.lineTo(-10, 30)\r\n    _new.lineTo(0, 30)\r\n    _new.lineTo(0, 0)\r\n    _new.endFill()\r\n    _new.pivot.x = _new.width * .5\r\n    _new.pivot.y = _new.height * .5\r\n    container.addChild(_new)\r\n    this._new = _new\r\n    crosshair._new = _new\r\n    crosshair.changed = true\r\n    gameObjects.setKeyValue('object-placement-arrow', _new)\r\n    // animated arrow loop\r\n    this.animationLoop = () => {\r\n      to(_new.scale, .5, {\r\n        x: 1.2,\r\n        y: .75,\r\n        onComplete: () => {\r\n          to(_new.scale, .5, {\r\n            x: .9,\r\n            y: 1.2,\r\n            onComplete: this.animationLoop\r\n          })\r\n        }\r\n      })\r\n    }\r\n    this.animationLoop()\r\n\r\n\t\treturn _new\r\n\t}\r\n\r\n\treturn this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Sprite } from 'pixi.js'\r\nimport { playerCollisionOptions } from '../collisionOptions'\r\nimport random from 'random'\r\n\r\nexport default function GroundEffect (pos, type, bodyPart) {\r\n  let {x,y} = pos\r\n  let {gameObjects,TweenLite:{to,delayedCall}} = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n  let fxSheet = gameObjects.getKeyValue('ground-fx-sheet')\r\n  let bulletTextures = [\r\n    'bullet-impact1.png',\r\n    'bullet-impact2.png'\r\n  ]\r\n  let groundBloodSpatters = [\r\n    'ground-blood-spatter1.png',\r\n    'ground-blood-spatter2.png',\r\n    'ground-blood-spatter3.png',\r\n  ]\r\n  const getRandomRoundBulletImpact = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        bulletTextures[ Math.floor( Math.random() * bulletTextures.length ) ]\r\n      ]\r\n  ))\r\n  const getRandomBloodSpatter = () => (\r\n    new Sprite(\r\n      fxSheet.textures[\r\n        groundBloodSpatters[ Math.floor( Math.random() * groundBloodSpatters.length ) ]\r\n      ]\r\n  ))\r\n  \r\n  let sprite\r\n  if (type === 'bullet impact') {\r\n    sprite = getRandomRoundBulletImpact()\r\n  }\r\n  if (type === 'blood spatter') {\r\n    sprite = getRandomBloodSpatter()\r\n  }\r\n  sprite.pivot.x = sprite.width * .5\r\n  sprite.pivot.y = sprite.height * (bodyPart ? .2 : .5)\r\n  let ground = gameObjects.getKeyValue('ground')\r\n  if (\r\n    sprite.position.x - sprite.width > ground.bounds.min.x ||\r\n    sprite.position.x + (sprite.width/2) < ground.bounds.max.x\r\n    ) {\r\n  }\r\n  // re-add player sprites on-top\r\n  let player = gameObjects.getKeyValue('player')\r\n  if (!player.dead) {\r\n    player.sprites.forEach(s => { container.addChild(s) })\r\n  }\r\n\r\n  let positionalBody = Bodies.rectangle(x,y,10,10,{isStatic:true,collisionFilter:playerCollisionOptions})\r\n  World.add(world, positionalBody)\r\n\r\n  this.renderPosition = renderFn => {\r\n    sprite.position = renderFn(positionalBody)\r\n    if (container && container.children.indexOf(sprite) === -1) {\r\n      container.addChild(sprite)\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    World.remove(world, positionalBody)\r\n    container.removeChild(sprite)\r\n    let idx = groundFx.indexOf(this)\r\n    if (idx > -1) {\r\n      groundFx.splice(idx, 1)\r\n    }\r\n    world = null\r\n    container = null\r\n    gameObjects = null\r\n    groundFx = null\r\n    fxSheet = null\r\n    bulletTextures = null\r\n    groundBloodSpatters = null\r\n    positionalBody = null\r\n  }\r\n\r\n  const tweenOut = () => {\r\n    to(sprite, .5, {\r\n      alpha: 0,\r\n      onComplete: () => {\r\n        this.destroy()\r\n      }\r\n    })\r\n  }\r\n  delayedCall(1, tweenOut)\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport { Body, Render, World } from 'matter-js'\r\nimport { getBodyWidth, getBodyHeight, getPlayerPartByType, makePixiSprite } from './utils/Utils'\r\nimport { setLastDirection, setCurrentDirection, setJumping, setMouseRelativeToPlayerPosition, setPlayerPosition, setZombiesOnLeft, setZombiesOnRight } from './gameSlice'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG, WEAPON_TYPE_TURRET } from './constants/weapons'\r\nimport { MOUSE_DOWN, GREATER_THAN_PLAYER_X_POS, LESS_THAN_PLAYER_X_POS } from './constants/mouseStates'\r\nimport { firePistol, fireSMG, fireShotgun, calcPistolDamage, calcShotgunDamage, calcSMGDamage, calcTurretDamage } from './player/fireWeapons'\r\nimport Crosshairs from './player/crosshairs'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { FELL_OFF } from './constants/DeathTypes'\r\nimport store from '../../app/store'\r\nimport GroundEffect from './FX/GroundEffect'\r\nimport Spark from './FX/Sparks'\r\nimport { degrees, radians } from 'radians'\r\nimport { createTextMessage } from './createMessages'\r\nimport WallTile from './WallTile'\r\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\n\r\nconst { getState, dispatch } = store\r\nlet { width, height } = getState().game\r\nconst { TweenLite: { delayedCall } } = window\r\n\r\nconst createCollision = (e, i, { body1_label, body2_label, callback }) => {\r\n  let bodies = {}\r\n  if (e.pairs[i].bodyA.label.indexOf(body1_label) > -1 && e.pairs[i].bodyB.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyA\r\n    bodies.body2 = e.pairs[i].bodyB\r\n    callback(bodies)\r\n  } else if (e.pairs[i].bodyB.label.indexOf(body1_label) > -1 && e.pairs[i].bodyA.label.indexOf(body2_label) > -1) {\r\n    bodies.body1 = e.pairs[i].bodyB\r\n    bodies.body2 = e.pairs[i].bodyA\r\n    callback(bodies)\r\n  }\r\n}\r\n\r\nconst calculateDamageAmount = (weapon_str, body) => {\r\n  if (weapon_str === WEAPON_TYPE_PISTOL) { return calcPistolDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SMG) { return calcSMGDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_SHOTGUN) { return calcShotgunDamage(body) }\r\n  if (weapon_str === WEAPON_TYPE_TURRET) { return calcTurretDamage(body) }\r\n  return calcPistolDamage(body)\r\n}\r\n\r\nexport const checkCollisionStart = (e, i, gameObjects) => {\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ground',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'barrier',\r\n    callback: () => {\r\n      dispatch(setJumping(false))\r\n      let snd = gameObjects.getKeyValue('jump-landing-sound')\r\n      snd.seek(.1)\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'gib',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter'))\r\n      // let snd = gameObjects.getKeyValue('blood-squash-sound')\r\n      // snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'zombie body part',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let zombieBodyPartBool = true\r\n      let groundEffects = gameObjects.getKeyValue('static-ground-effects')\r\n      groundEffects.push(new GroundEffect(bodies.body1.position, 'blood spatter', zombieBodyPartBool))      \r\n      // let snd = gameObjects.getKeyValue('blood-squish-sound')\r\n      // snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      // let snd = gameObjects.getKeyValue('dirt-impact-sound')\r\n      // snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg shell',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('ground')\r\n      }\r\n      let snd = gameObjects.getKeyValue('shell-impact-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'bullet',\r\n    body2_label: 'player character',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let world = gameObjects.getKeyValue('world')\r\n      World.remove(world, bodies.body1)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'turret bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_TURRET, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_PISTOL, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SMG, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { part, dmg } = calculateDamageAmount(WEAPON_TYPE_SHOTGUN, bodies.body2)\r\n        bodies.body2.main.takeDamage(dmg, part)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'extra damage bullet',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.destroy) {\r\n        bodies.body1.main.destroy('enemy')\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { max } = getState().game.player.weapons.damage[\r\n          getState().game.player.weapons.equipped\r\n        ]\r\n        bodies.body2.main.takeDamage(max * 3, 'head', 'critical')\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'ground',\r\n    callback: bodies => {\r\n      let snd = gameObjects.getKeyValue('mag-drop-sound')\r\n      snd.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'magazine',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.takeDamage(20, 'head')\r\n      }\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF7500 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox',\r\n    body2_label: 'enemy zombie body',\r\n    callback: bodies => {\r\n      let sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n      sparkSprites.push(\r\n        new Spark(1, bodies.body2, { tint: 0xFF0000 })\r\n      )\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox pistol',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_PISTOL]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox smg',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SMG]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'melee hitbox shotgun',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        let { player: { weapons: { meleeDamage } } } = getState().game\r\n        let dmg = meleeDamage[WEAPON_TYPE_SHOTGUN]\r\n        bodies.body1.main.removeMeleeHitbox()\r\n        bodies.body2.main.takeDamage(dmg)\r\n      }\r\n      let bulletSound = gameObjects.getKeyValue('bullet-impact-body-sound')\r\n      bulletSound.play()\r\n      let hurtSound = gameObjects.getKeyValue('zombie-hurt-sound')\r\n      hurtSound.play()\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'clustermine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine trap',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body1.destroy) {\r\n        bodies.body1.destroy()\r\n      }\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'landmine explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrel explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      bodies.body1.removeSelf()\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'grenade explosion',\r\n    body2_label: 'enemy',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.takeDamage) {\r\n        bodies.body2.main.kill()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'pistol bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'smg bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'shotgun bullet',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        bodies.body2.main.explode()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'enemy',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      if (bodies.body2.main && bodies.body2.main.explode) {\r\n        delayedCall(.1, () => {\r\n          bodies.body2.main.explode()\r\n        })\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      if (bodies.body1.main && bodies.body1.main.takeDamage) {\r\n        let dmg = getState().game.enemies.zombies.attackDmg, player = bodies.body1.main\r\n        if (!player.playerHit) {\r\n          player.takeDamage(dmg)\r\n        }\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'explosive barrier',\r\n    body2_label: 'bullet',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n      gameObjects.getKeyValue('spark-sprites').push(\r\n        new Spark(1, bodies.body2, { scale: .5, animationSpeed: 2.0 })\r\n      )\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'barrier',\r\n    body2_label: 'attack',\r\n    callback: bodies => {\r\n      let dmg = getState().game.enemies.zombies.attackDmg\r\n      if (bodies.body1.main) {\r\n        bodies.body1.main.takeDamage(dmg)\r\n      }\r\n      if (bodies.body1.strength < 0) {\r\n        bodies.body1.removeSelf()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'health drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectHealth) {\r\n        player.collectHealth(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'ammo drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectAmmo) {\r\n        player.collectAmmo(bodies.body2.ammo_type, bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('ammo-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'player character',\r\n    body2_label: 'currency drop',\r\n    callback: bodies => {\r\n      if (bodies.body2.main.destroy) { bodies.body2.main.destroy() }\r\n      if (bodies.body1.main && bodies.body1.main.collectCredits) {\r\n        player.collectCredits(bodies.body2.amount)\r\n        gameObjects.getKeyValue('spark-sprites').push(\r\n          new Spark(1, bodies.body2, { scale: .5, animationSpeed: .75 })\r\n        )\r\n        let snd = gameObjects.getKeyValue('coin-collect-sound')\r\n        snd.play()\r\n      }\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'shotgun shell',\r\n    callback: bodies => {\r\n      let snd = gameObjects.getKeyValue('shot-shell-sound')\r\n      snd.play()\r\n      snd.fade(1, 0, 200)\r\n    }\r\n  })\r\n  createCollision(e, i, {\r\n    body1_label: 'ground',\r\n    body2_label: 'grenade',\r\n    callback: bodies => {\r\n      let grenadeClink = gameObjects.getKeyValue('grenade-clink-sound')\r\n      grenadeClink.play()\r\n      grenadeClink.fade(1, 0, 500)\r\n    }\r\n  })\r\n}\r\n\r\nlet gameTickVarsDefined = false\r\nlet weaponsUI\r\nlet render\r\nlet groundTex, groundBody, groundFx\r\nlet player\r\nlet playerBody\r\nlet acceleration\r\nlet pistolBullets, pistolBulletWd, pistolBulletHt, bulletImpacts\r\nlet pistolShells, pistolShellWd, pistolShellHt\r\nlet ammoDrops, pistolAmmoDrops, smgAmmoDrops, shotgunAmmoDrops, creditDrops\r\nlet crosshair, crosshairs\r\nlet laser, laserBlur\r\nlet blurFilter = new PIXI.filters.BlurFilter()\r\nblurFilter.blur = 3\r\nlet zombies, zombieRags\r\nlet buildObjects\r\nlet gibs\r\nlet grenades, explosions, rocks, woodPlanks\r\nlet landmines\r\nlet container\r\nlet gameWidth\r\n// simple enemy radar display\r\nlet leftEnemyCount, rightEnemyCount\r\nlet leftEnemyCountDisplay, rightEnemyCountDisplay\r\n// fx\r\nlet explosionSprites, sparkSprites, muzzleSparkSprites\r\nlet healthdrops\r\nlet wallTile // = new WallTile(window.gameObjects)\r\nconst getZombieRadarTextStyle = (count) => ({\r\n  fill: count === 0  ? '#00e595' : '#FF0000',\r\n  fontSize: 12\r\n})\r\n\r\nexport const gameTickHandler = (e, gameObjects) => {\r\n\r\n  if (!gameTickVarsDefined) {\r\n    container = gameObjects.getKeyValue('container')\r\n    gameWidth = gameObjects.getKeyValue('game-width')\r\n    weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n    render = gameObjects.getKeyValue('render')\r\n    groundTex = gameObjects.getKeyValue('ground-texture')\r\n    groundBody = gameObjects.getKeyValue('ground')\r\n    groundFx = gameObjects.getKeyValue('static-ground-effects')\r\n    playerBody = getPlayerPartByType('body', gameObjects)\r\n    acceleration = getState().game.player.variables.acceleration.min\r\n    // pixi layer objects\r\n    pistolShells = gameObjects.getKeyValue('pistol-shells')\r\n    pistolBullets = gameObjects.getKeyValue('pistol-bullets')\r\n    bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n    ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n    creditDrops = gameObjects.getKeyValue('currency-drops')\r\n    healthdrops = gameObjects.getKeyValue('health-drops')\r\n    pistolAmmoDrops = ammoDrops[WEAPON_TYPE_PISTOL]\r\n    smgAmmoDrops = ammoDrops[WEAPON_TYPE_SMG]\r\n    shotgunAmmoDrops = ammoDrops[WEAPON_TYPE_SHOTGUN]\r\n    // make crosshair\r\n    crosshairs = new Crosshairs(gameObjects)\r\n    crosshair = crosshairs.crosshair\r\n    gameObjects.setKeyValue('crosshair-shape', crosshairs.crosshair)\r\n    gameObjects.setKeyValue('crosshair', crosshair)\r\n    // laser graphics\r\n    // laserBlur = new PIXI.Graphics()\r\n    // if (getState().game.filterEffects) {\r\n    //   laserBlur.filters = [ blurFilter ]\r\n    // }\r\n    // laser = new PIXI.Graphics()\r\n    // zombies left / right counters\r\n    leftEnemyCountDisplay = new PIXI.Text('')\r\n    leftEnemyCountDisplay.position = { x: 10, y: 5 }\r\n    rightEnemyCountDisplay = new PIXI.Text('zombies on right: 0')\r\n    rightEnemyCountDisplay.pivot.x = rightEnemyCountDisplay.width * .075\r\n    rightEnemyCountDisplay.position = { x: gameWidth, y: 5 }\r\n    // player \r\n    player = gameObjects.getKeyValue('player')\r\n    // enemies\r\n    zombies = gameObjects.getKeyValue('zombies')\r\n    zombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n    // gibs\r\n    gibs = gameObjects.getKeyValue('gibs')\r\n    // grenades\r\n    grenades = gameObjects.getKeyValue('grenades')\r\n    explosions = gameObjects.getKeyValue('explosions')\r\n    rocks = gameObjects.getKeyValue('rocks')\r\n    woodPlanks = gameObjects.getKeyValue('wood-planks')\r\n    // traps\r\n    landmines = gameObjects.getKeyValue('landmines')\r\n    // build objects\r\n    buildObjects = gameObjects.getKeyValue('build-objects')\r\n    // fx\r\n    explosionSprites = gameObjects.getKeyValue('explosion-sprites')\r\n    sparkSprites = gameObjects.getKeyValue('spark-sprites')\r\n    // container\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n    // container.addChild(laserBlur)\r\n    // container.addChild(laser)\r\n    wallTile = new WallTile()\r\n    // let d = new DropShadowFilter()\r\n    // d.\r\n    // groundTex.filters = [\r\n    //   // new DropShadowFilter({ rotation: 0, distance: 20, blur: 1, alpha: 10 })\r\n    //   new GlowFilter({ outerStrength: 100, color: 0x0 })\r\n    // ]\r\n    let gradientAlpha = gameObjects.getKeyValue('gradient-alpha')\r\n    gradientAlpha.alpha = .75\r\n    container.addChild( wallTile, gradientAlpha, groundTex )\r\n    player.addSpritesInOrder()\r\n    container.addChild( leftEnemyCountDisplay )\r\n    container.addChild( rightEnemyCountDisplay )\r\n    // vars declared?\r\n    gameTickVarsDefined = true\r\n  }\r\n\r\n  let {\r\n    game: {\r\n      keys,\r\n      // width: gameWidth,\r\n      // height: gameHeight,\r\n      gameState,\r\n      gameSubState,\r\n      mouseState,\r\n      mousePosition,\r\n      player: {\r\n        variables: { magnetism, magnetismSpeed, currentDirection, jumping, acceleration: { max: accelMax }, deceleration },\r\n        weapons: { laser: laserSight, equipped, totalAmmo: { grenades: grenadesCount } }\r\n      },\r\n      enemies: {\r\n        zombies: {\r\n          zombieAttackLimiter,\r\n          zombieAttackDistance\r\n        }\r\n      },\r\n      traps: {\r\n        turret: { fireDistance }\r\n      },\r\n      mouseState: { x: mx, y: my, btn: mouseButtonState }\r\n    }\r\n  } = getState()\r\n  let mPosRel = {\r\n    x: mousePosition.x + playerBody.position.x - (width / 2),\r\n    y: mousePosition.y + playerBody.position.y - (height / 2)\r\n  }\r\n  dispatch(setMouseRelativeToPlayerPosition({ x: mPosRel.x, y: mPosRel.y }))\r\n\r\n  // Render pixi graphics in-line with matter objects\r\n  const renderPositionFn = part => {\r\n    return {\r\n      x: part.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration),\r\n      y: part.position.y - playerBody.position.y + (height / 2),\r\n      rotation: part.angle\r\n    }\r\n  }\r\n\r\n  if (gameState === GameStates.GAMEPLAY) {\r\n\r\n    // render tile bg\r\n    wallTile.renderPosition(renderPositionFn, playerBody, acceleration)\r\n    // wallTile.onUpdate()\r\n\r\n    // Player weapons\r\n    // check if firing\r\n    if (mouseButtonState === MOUSE_DOWN && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // check weapon type\r\n      if (equipped === WEAPON_TYPE_PISTOL) { firePistol(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SMG) { fireSMG(gameObjects) }\r\n      if (equipped === WEAPON_TYPE_SHOTGUN) { fireShotgun(gameObjects) }\r\n    }\r\n\r\n    // console.log(width, height)\r\n\r\n    // Set render view to follow player\r\n    Render.lookAt(render, {\r\n      min: { x: playerBody.position.x + (width / 2), y: playerBody.position.y - (height / 2) },\r\n      max: { x: playerBody.position.x - (width / 2), y: playerBody.position.y + (height / 2) }\r\n    })\r\n\r\n    // Player movement / controls\r\n    Body.setAngle(playerBody, 0)\r\n\r\n    if (!weaponsUI.reloading && !player.meleeAttackInProgress && !player.grenadeThrowInProgress) {\r\n      // movement\r\n      if (keys.indexOf(68) > -1 || keys.indexOf(65) > -1) {\r\n        if (acceleration < accelMax) {\r\n          acceleration += .25\r\n        }\r\n      } else {\r\n        dispatch(setLastDirection(currentDirection))\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1 && keys.indexOf(65) > -1) {\r\n        if (acceleration > 0) {\r\n          acceleration -= deceleration\r\n        }\r\n      }\r\n\r\n      if (keys.indexOf(68) > -1) {\r\n        dispatch(setCurrentDirection('right'))\r\n        Body.translate(playerBody, { x: acceleration, y: 0 })\r\n      }\r\n      if (keys.indexOf(65) > -1) {\r\n        dispatch(setCurrentDirection('left'))\r\n        Body.translate(playerBody, { x: -acceleration, y: 0 })\r\n      }\r\n\r\n      // grenades\r\n      if (keys.indexOf(71) > -1 && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n        }\r\n      }\r\n      if (getState().game.rightMouseDown && grenadesCount > 0 && player && !player.meleeAttackInProgress && !weaponsUI.reloading && !jumping) {\r\n        if (gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE) {\r\n          player.chargeGrenade()\r\n          console.log('should charge grenade from engineHandlers')\r\n        }\r\n      }\r\n    }\r\n\r\n    let { x: playerPosX, y: playerPosY } = renderPositionFn(playerBody)\r\n    dispatch(setPlayerPosition({ x: playerPosX, y: playerPosY }))\r\n\r\n    // render health drops\r\n    healthdrops.forEach(health => {\r\n      health.renderPosition(renderPositionFn)\r\n    })\r\n\r\n    // render ammo boxes\r\n    pistolAmmoDrops.concat(\r\n      smgAmmoDrops\r\n    ).concat(\r\n      shotgunAmmoDrops\r\n    ).forEach(box => {\r\n      box.positionAmmoBox(renderPositionFn)\r\n      if (box.body && box.body.position.y > 500) {\r\n        box.destroy()\r\n      }\r\n      if (box.body) {\r\n        if (playerBody.position.x > box.body.position.x && ((playerBody.position.x - box.body.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: magnetismSpeed, y: 0 })\r\n        }\r\n        if (playerBody.position.x < box.body.position.x && ((box.body.position.x - playerBody.position.x) < magnetism)) {\r\n          Body.translate(box.body, { x: -magnetismSpeed, y: 0 })\r\n        }\r\n      }\r\n    })\r\n\r\n    // render currency drops\r\n    creditDrops.forEach(coin => {\r\n      coin.positionCreditGfx(renderPositionFn)\r\n      if (coin.creditBody && coin.creditBody.position.y > 500) {\r\n        coin.destroy()\r\n      }\r\n      if (coin.creditBody) {\r\n        if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x > coin.creditBody.position.x && ((playerBody.position.x - coin.creditBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: (magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n        if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < magnetism)) {\r\n          if (playerBody.position.x < coin.creditBody.position.x && ((coin.creditBody.position.x - playerBody.position.x) < (magnetism/2))) {\r\n            Body.translate(coin.creditBody, { x: -(magnetismSpeed * 2), y: 0 })\r\n          } else {\r\n            Body.translate(coin.creditBody, { x: -magnetismSpeed, y: 0 })\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    // render player graphics\r\n    player.setBodySpritesPositions({ mx, fn: renderPositionFn })\r\n    player.setArmsSpritePosition({ mx, my, fn: renderPositionFn })\r\n    player.positionHeadSprite({ mx, my, fn: renderPositionFn })\r\n    player.renderGrenadeChargeMeter(renderPositionFn)\r\n\r\n    if (player.charRunSprite && player.charIdleSprite && player.charJumpSprite) {\r\n\r\n      if (keys.indexOf(65) > -1 || keys.indexOf(68) > -1) {\r\n        if (!jumping) {\r\n          player.charRunSprite.play()\r\n          player.charRunSprite.visible = true\r\n          player.charIdleSprite.visible = false\r\n          player.stopJumpAnimation()\r\n        }\r\n      } else {\r\n        player.charRunSprite.stop()\r\n        player.charRunSprite.visible = false\r\n        player.charIdleSprite.visible = true\r\n        // added below lines to stop sprites overlapping\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnims.forEach(sprite => { sprite.visible = false })\r\n      }\r\n\r\n      if (\r\n        (keys.indexOf(65) > -1 && mouseState.x === GREATER_THAN_PLAYER_X_POS) ||\r\n        (keys.indexOf(68) > -1 && mouseState.x === LESS_THAN_PLAYER_X_POS)\r\n      ) {\r\n        player.charRunSprite.animationSpeed = -1\r\n      } else {\r\n        player.charRunSprite.animationSpeed = 1\r\n      }\r\n\r\n      if (mouseState.x === GREATER_THAN_PLAYER_X_POS) {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = -1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = -1 })\r\n        player.headSprite.scale.y = -1\r\n      } else {\r\n        player.bodySprites.forEach(sprite => { sprite.scale.x = 1 })\r\n        player.armsSprites.forEach(sprite => { sprite.scale.y = 1 })\r\n        player.headSprite.scale.y = 1\r\n      }\r\n\r\n      if (weaponsUI.reloading) {\r\n        player.bodySprites.forEach(sprite => { sprite.visible = false })\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.reloadAnimsByType[equipped].visible = true\r\n        player.charIdleSprite.visible = false\r\n      } else {\r\n        if (player.armsSpritesByType[equipped]) {\r\n          player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.visible = true\r\n          })\r\n          player.reloadAnimsByType[equipped].visible = false\r\n        }\r\n      }\r\n\r\n      if (jumping || weaponsUI.reloading || player.meleeAttackInProgress || player.grenadeThrowInProgress) {\r\n        player.headSprite.visible = false\r\n      } else {\r\n        player.headSprite.visible = true\r\n      }\r\n\r\n      if (!jumping) {\r\n        player.stopJumpAnimation()\r\n      } else {\r\n        player.charIdleSprite.visible = false\r\n        if (player.charJumpSprite.currentFrame < 2) {\r\n          player.armsSpritesByType[equipped].forEach(sprite => {\r\n            sprite.y += 80\r\n          })\r\n        }\r\n      }\r\n\r\n      if (player.meleeAttackInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.meleeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n      if (player.grenadeThrowInProgress) {\r\n        player.armsSprites.forEach(sprite => { sprite.visible = false })\r\n        player.bodySprites.forEach(sprite => {\r\n          if (player.grenadeSprites.indexOf(sprite) < 0) {\r\n            sprite.visible = false\r\n          }\r\n        })\r\n      }\r\n\r\n      // --- begin laser\r\n      // if (!player.dead && laserSight[equipped] && !player.grenadeThrowInProgress && !player.meleeAttackInProgress && !weaponsUI.reloading) {\r\n      //   if (laser) {\r\n      //     laser.clear()\r\n      //     laserBlur.clear()\r\n      //   }\r\n      //   let { x, y } = renderPositionFn(player.armPointBody)\r\n      //   let color = getState().game.player.modTiers['sight'][equipped].current > 2 ? 0x11DD67 : 0xFF0000\r\n      //   laserBlur.lineStyle(2, color, .35)\r\n      //   laserBlur.moveTo(x, y)\r\n      //   laserBlur.lineTo(mousePosition.x, mousePosition.y)\r\n      //   laser.lineStyle(1, color, .75)\r\n      //   laser.moveTo(x, y)\r\n      //   laser.lineTo(mousePosition.x, mousePosition.y)\r\n      // } else {\r\n      //   if (laser) {\r\n      //     laser.clear()\r\n      //     laserBlur.clear()\r\n      //   }\r\n      // }\r\n      // --- end laser\r\n\r\n    }\r\n\r\n    // render player ragdoll\r\n    if (gameObjects.getKeyValue('player-ragdoll') !== null) {\r\n      let playerRag = gameObjects.getKeyValue('player-ragdoll')\r\n      if (playerRag && playerRag.animateRagParts) {\r\n        playerRag.animateRagParts(renderPositionFn)\r\n      }\r\n    }\r\n\r\n  } // -- end if gameState === GameState.GAMEPLAY\r\n\r\n  if (player.body.position.y > 500) {\r\n    player.kill(FELL_OFF)\r\n  }\r\n\r\n  // render pistol shells\r\n  for (let i = 0; i < pistolShells.length; ++i) {\r\n    if (!pistolShellWd) { pistolShellWd = getBodyWidth(pistolShells[i].body) }\r\n    if (!pistolShellHt) { pistolShellHt = getBodyHeight(pistolShells[i].body) }\r\n    pistolShells[i].gfc.position.x = pistolShells[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolShells[i].gfc.position.y = pistolShells[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolShells[i].gfc.rotation = equipped === WEAPON_TYPE_SHOTGUN ? pistolShells[i].body.angle + degrees(90) : pistolShells[i].body.angle\r\n  }\r\n  // render pistol bullets\r\n  for (let i = 0; i < pistolBullets.length; ++i) {\r\n    if (!pistolBulletWd) { pistolBulletWd = getBodyWidth(pistolBullets[i].body) }\r\n    if (!pistolBulletHt) { pistolBulletHt = getBodyHeight(pistolBullets[i].body) }\r\n    pistolBullets[i].gfc.position.x = pistolBullets[i].body.position.x - playerBody.position.x + (width / 2) + (currentDirection === 'right' ? acceleration : -acceleration)\r\n    pistolBullets[i].gfc.position.y = pistolBullets[i].body.position.y - playerBody.position.y + (height / 2)\r\n    pistolBullets[i].gfc.rotation = pistolBullets[i].body.angle\r\n    // draw bullet trail effect\r\n    // pistolBullets[i].linePoints.push({\r\n    //   x: pistolBullets[i].gfc.position.x,\r\n    //   y: pistolBullets[i].gfc.position.y\r\n    // })\r\n    // pistolBullets[i].drawLine()\r\n    // pistolBullets[i].bulletTrail.alpha -= .05\r\n  }\r\n\r\n  // render grenades\r\n  grenades.forEach(grenade => {\r\n    grenade.animate(renderPositionFn)\r\n  })\r\n\r\n  // explosions tracking\r\n  explosions.forEach(explosion => {\r\n    explosion.calcRenderedPosition(renderPositionFn)\r\n  })\r\n  rocks.forEach(rock => { rock.animate(renderPositionFn) })\r\n  woodPlanks.forEach(wood => { wood.animate(renderPositionFn) })\r\n\r\n  // update ejected mags\r\n  player.updateEjectedMagPositions(renderPositionFn)\r\n\r\n  // render gibs / guts \r\n  gibs.forEach(gib => {\r\n    gib.animate(renderPositionFn)\r\n  })\r\n\r\n  // for zombie count radar\r\n  leftEnemyCount = 0\r\n  rightEnemyCount = 0\r\n  // dispatch( setZombiesOnLeft(leftEnemyCount) )\r\n  // dispatch( setZombiesOnLeft(rightEnemyCount) )\r\n\r\n  // keep zombie arm angle inline with player position\r\n  zombies.forEach(zombie => {\r\n    zombie.setPlayerVars({ player, playerDirection: currentDirection, playerBody })\r\n    if (!zombie.paused) {\r\n      zombie.walk()\r\n    }\r\n    Body.setAngle(zombie.body, 0)\r\n    zombie.setSpritesPositions(renderPositionFn)\r\n    // kill zombies who fall off the ledge\r\n    if (zombie.body.position.y > 500) {\r\n      zombie.kill()\r\n    }\r\n    // trigger zombie attack\r\n    if (\r\n      (playerBody.position.x > zombie.body.position.x && ((playerBody.position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n      (playerBody.position.x < zombie.body.position.x && ((zombie.body.position.x - playerBody.position.x) < zombieAttackDistance))) {\r\n      if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n        zombie.attack()\r\n      }\r\n    }\r\n    // trigger attack if next to a wall\r\n    buildObjects.forEach(obj => {\r\n      if (obj && !obj.destroyed && obj.getBody().label !== 'remote mine trap') {\r\n        // zombie attack barrier control \r\n        if (\r\n          (obj.getBody().position.x > zombie.body.position.x && ((obj.getBody().position.x - zombie.body.position.x) < zombieAttackDistance)) ||\r\n          (obj.getBody().position.x < zombie.body.position.x && ((zombie.body.position.x - obj.getBody().position.x) < zombieAttackDistance))) {\r\n          if (zombie.timeSinceLastAttack + zombieAttackLimiter < Date.now()) {\r\n            if (obj.getBody().label !== 'landmine trap') {\r\n              zombie.attack()\r\n            }\r\n          }\r\n        }\r\n        // turret fire control\r\n        if (\r\n          obj.direction && obj.direction === 'right' && zombie.body.position.x > obj.getBody().position.x - 10 && zombie.body.position.x - obj.getBody().position.x < fireDistance ||\r\n          obj.direction && obj.direction === 'left' && zombie.body.position.x < obj.getBody().position.x - 10 && obj.getBody().position.x - zombie.body.position.x < fireDistance\r\n          ) {\r\n            obj.shoot()\r\n        }\r\n      }\r\n    })\r\n    // count zombies on left and right side of player\r\n    if (!zombie.dead) {\r\n      if (zombie.body.position.x < playerBody.position.x) {\r\n        leftEnemyCount += 1\r\n        // dispatch( setZombiesOnLeft(leftEnemyCount) )\r\n      }\r\n      if (zombie.body.position.x > playerBody.position.x) {\r\n        rightEnemyCount += 1\r\n        // dispatch( setZombiesOnRight(rightEnemyCount) )\r\n      }\r\n    }\r\n  })\r\n  \r\n  // build traps and barriers\r\n  buildObjects.forEach(obj => {\r\n    if (obj && !obj.destroyed && obj.displayBarrierStrength) {\r\n      obj.displayBarrierStrength(renderPositionFn)\r\n    }\r\n    if (obj.updatePosition) {\r\n      obj.updatePosition(renderPositionFn)\r\n    }\r\n  })\r\n\r\n  // double-check in case radar counts are inaccurate\r\n  if (getState().game.waveCountToDefeat === 0 || getState().game.waveCountToDefeat === null) {\r\n    // for zombie count radar\r\n    leftEnemyCount = 0\r\n    rightEnemyCount = 0\r\n    // dispatch( setZombiesOnLeft(leftEnemyCount) )\r\n    // dispatch( setZombiesOnRight(rightEnemyCount) )\r\n  }\r\n\r\n  // update zombie count on sides of player\r\n  leftEnemyCountDisplay.text = `${leftEnemyCount}`\r\n  leftEnemyCountDisplay.style = getZombieRadarTextStyle(leftEnemyCount)\r\n  rightEnemyCountDisplay.text = `${rightEnemyCount}`\r\n  rightEnemyCountDisplay.style = getZombieRadarTextStyle(rightEnemyCount)\r\n\r\n  zombieRags.forEach(rag => {\r\n    rag.animateRagParts(renderPositionFn)\r\n  })\r\n\r\n  // render crosshair\r\n  if (gameSubState !== SubStates.PLAYER_DEATH) {\r\n    crosshair.position = mousePosition\r\n  }\r\n\r\n  if (crosshair.changed) {\r\n    crosshair = crosshair._new\r\n    crosshair.changed = false\r\n  }\r\n\r\n  // if crosshair is an arrow..\r\n  if (crosshair.changeBack) {\r\n    container.removeChild(crosshair)\r\n    crosshair = crosshairs.crosshair\r\n    container.addChild(crosshairs.crosshair)\r\n    crosshair.changeBack = false\r\n  }\r\n\r\n  // ground\r\n  groundTex.position = renderPositionFn(groundBody)\r\n\r\n  // bullet impacts\r\n  bulletImpacts.forEach(impact => { impact.renderPosition(renderPositionFn) })\r\n  groundFx.forEach(fx => { fx.renderPosition(renderPositionFn) })\r\n\r\n  // fx\r\n  explosionSprites.forEach(ex => { ex.renderPosition(renderPositionFn) })\r\n  sparkSprites.forEach(spark => { spark.renderPosition(renderPositionFn) })\r\n\r\n  // keep cursor on top\r\n  container.addChild(crosshairs.crosshair)\r\n\r\n}\r\n","import { Texture } from '@pixi/core'\r\nimport { TilingSprite } from '@pixi/sprite-tiling'\r\nimport store from '../../app/store'\r\n\r\nexport default class WallTile extends TilingSprite {\r\n    constructor() {\r\n        // console.log(gameObjects)\r\n        const texture = Texture.from(\r\n          window.gameObjects.getKeyValue('wall-tile')\r\n        )\r\n        super(texture, 1, texture.height) //width 1 because we will call onResize from App anyway\r\n        this.width = window.gameObjects.getKeyValue('game-width')\r\n        this.height = window.gameObjects.getKeyValue('game-height')\r\n        this.alpha = .2\r\n    }\r\n\r\n    onResize(width, height) {\r\n        // this.width = width\r\n    }\r\n\r\n    onUpdate(delta) {\r\n    \tthis.tilePosition.x -= delta * 4\r\n    }\r\n\r\n    renderPosition(renderFn, body, acceleration) {\r\n      let { x, y } = renderFn(body)\r\n      let { getState } = store\r\n      let { game: { keys, player: { variables: { currentDirection, jumping } } } } = getState()\r\n      if (currentDirection === 'right' && keys.indexOf(68) > -1) {\r\n        this.tilePosition.x -= .35 //(acceleration * .25)\r\n      }\r\n      if (currentDirection === 'left' && keys.indexOf(65) > -1) {\r\n        this.tilePosition.x += .35 //(acceleration * .25)\r\n      }\r\n      if (jumping) {\r\n        this.tilePosition.y += .25\r\n      }\r\n      // let player = window.gameObjects.getKeyValue('player')\r\n      // console.log( player.body )\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { makePixiSprite } from '../utils/Utils'\r\nimport { WEAPON_TYPE_SMG, WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\nimport { decrementTotalAmmo, setWeaponEquipped } from '../gameSlice'\r\nimport store from '../../../app/store'\r\nimport GameStates from '../constants/GameStates'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { NoiseFilter } from '@pixi/filter-noise'\r\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow'\r\n \r\nconst { getState, dispatch } = store\r\n\r\nconst { TweenLite: { to, from } } = window\r\n\r\nexport default function WeaponsUI () {\r\n\tlet { gameObjects } = window\r\n\tlet container = gameObjects.getKeyValue('game-pixi-container')\r\n\tlet gameWidth = gameObjects.getKeyValue('game-width')\r\n\tlet gameHeight = gameObjects.getKeyValue('game-height')\r\n\tlet pistolIcon = makePixiSprite('weapon-ui-icon-pistol')\r\n\tlet smgIcon = makePixiSprite('weapon-ui-icon-smg')\r\n\tlet shotgunIcon = makePixiSprite('weapon-ui-icon-shotgun')\r\n  let icons = []\r\n\r\n  let mags\r\n  \r\n  let weaponShadow = new DropShadowFilter({ distance: 3.0, alpha: 1.0 })\r\n  let bulletShadow = new DropShadowFilter({ distance: 1.0, alpha: 2.0 })\r\n\r\n  let iconBG = new PIXI.Graphics()\r\n  iconBG.beginFill(0x425041)\r\n  iconBG.drawRect(0, 0, 120, 90)\r\n  iconBG.alpha = .65\r\n  iconBG.position.x = gameWidth - iconBG.width - 20\r\n  iconBG.position.y = gameHeight - iconBG.height - 20\r\n  // iconBG.filters = [ bulletShadow ]\r\n  container.addChild(iconBG)\r\n\r\n\tpistolIcon.width = pistolIcon.width/2\r\n\tpistolIcon.height = pistolIcon.height/2\r\n\ticons.push(pistolIcon)\r\n\r\n\tsmgIcon.width = smgIcon.width/2\r\n\tsmgIcon.height = smgIcon.height/2\r\n  icons.push(smgIcon)\r\n  \r\n  shotgunIcon.width = shotgunIcon.width/2\r\n\tshotgunIcon.height = shotgunIcon.height/2\r\n  icons.push(shotgunIcon)\r\n\r\n\ticons.forEach(icon => {\r\n\t\ticon.position.x = gameWidth - (icon.width + 20)\r\n\t\ticon.position.y = gameHeight - (icon.height + 10)\r\n    icon.alpha = 0\r\n    // icon.filters = [ weaponShadow ]\r\n\t\tcontainer.addChild(icon)\r\n  })\r\n\r\n  this.keepOnTop = () => {\r\n    container.addChild(iconBG)\r\n    icons.forEach(icon => { container.addChild(icon) })\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL]\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG]\r\n    )\r\n    .concat(\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    )\r\n    .forEach(b => { container.addChild(b) })\r\n    this.grenades.forEach(g => { container.addChild(g) })\r\n    if (this.shaking && !this.reloading) {\r\n      container.addChild(this.emptyText)\r\n    }\r\n  }\r\n  setInterval(this.keepOnTop, 1000)\r\n\r\n  let magazinesByWeaponType = {\r\n\t\t'pistol weapon': null,\r\n\t\t'smg weapon': null,\r\n\t\t'shotgun weapon': null,\r\n  }\r\n\r\n  let bulletMask = new PIXI.Graphics()\r\n  bulletMask.beginFill(0xffffff)\r\n  bulletMask.drawRect(pistolIcon.position.x, pistolIcon.position.y, pistolIcon.width, pistolIcon.height)\r\n  container.addChild(bulletMask)\r\n\r\n  if (!window.gameObjects.getKeyValue('bullet-shell-bevel-ui')) {\r\n    window.gameObjects.setKeyValue('bullet-shell-bevel-ui', new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 }))\r\n  }\r\n  let bulletBevel = window.gameObjects.getKeyValue('bullet-shell-bevel-ui')\r\n\r\n  let makePistolMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL] = magazinesByWeaponType[WEAPON_TYPE_PISTOL].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xBFA522)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .5 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 27 - pistolIcon.width/magazinesByWeaponType[WEAPON_TYPE_PISTOL].length * i\r\n      bulletGfc.position.y = pistolIcon.position.y + pistolIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeSMGMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG] = magazinesByWeaponType[WEAPON_TYPE_SMG].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x564F2D)\r\n      bulletGfc.beginFill(0xCEC182)\r\n      bulletGfc.drawRect(0, 0, 2, 8)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5 })\r\n      // bulletGfc.filters = [ bevel ]\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 24 - smgIcon.width/magazinesByWeaponType[WEAPON_TYPE_SMG].length * i\r\n      bulletGfc.position.y = smgIcon.position.y + smgIcon.height - 22\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n  \r\n  let makeShotgunMag = () => {\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN] = magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].map((bullet, i) => {\r\n      let bulletGfc = new PIXI.Graphics()\r\n      bulletGfc.lineStyle(1, 0x3E1313)\r\n      bulletGfc.beginFill(0xB00000)\r\n      bulletGfc.drawRect(0, 0, 4, 8)\r\n      bulletGfc.beginFill(0xBCA845)\r\n      bulletGfc.drawRect(0, 8, 4, 3)\r\n      // let bevel = new BevelFilter({ lightAlpha: .5, shadowAlpha: .5, thickness: .25 })\r\n      bulletGfc.filters = getState().game.filterEffects ? [ bulletBevel ] : []\r\n      bulletGfc.alpha = 0\r\n      bulletGfc.position.x = gameWidth - 32 - shotgunIcon.width/magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].length * i\r\n      bulletGfc.position.y = shotgunIcon.position.y + shotgunIcon.height - 26\r\n      container.addChild(bulletGfc)\r\n      bulletGfc.mask = bulletMask\r\n      return bulletGfc\r\n    })\r\n  }\r\n\r\n  this.checkFilters = () => {\r\n    if (getState().game.filterEffects) {\r\n      // SMG bullets too small for bevel filter\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [ bulletBevel ] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [ bulletBevel ] })\r\n      if (this.grenades && this.gbevel && this.gnoise) {\r\n        this.grenades.forEach(g => { g.filters = [ this.gbevel, this.gnoise ] })\r\n      }\r\n    } else {\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL].forEach(b => { b.filters = [] })\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN].forEach(b => { b.filters = [] })\r\n      if (this.grenades) {\r\n        this.grenades.forEach(g => { g.filters = [] })\r\n      }\r\n    }\r\n  }\r\n  \r\n  let makeMagByType = {\r\n    'pistol weapon': makePistolMag,\r\n    'smg weapon': makeSMGMag,\r\n    'shotgun weapon': makeShotgunMag,\r\n  }\r\n\r\n\tlet weaponIcons = {\r\n\t\t'pistol weapon': pistolIcon,\r\n\t\t'smg weapon': smgIcon,\r\n\t\t'shotgun weapon': shotgunIcon,\r\n  }\r\n\r\n  this.updateMagazine = type => {\r\n    let { game: { player: { weapons: { ammoCapacity } } } } = getState()\r\n    if (magazinesByWeaponType[type]) {\r\n      magazinesByWeaponType[type].forEach(b => { b.destroy() })\r\n      magazinesByWeaponType[type] = null\r\n    }\r\n    magazinesByWeaponType[type] = new Array(ammoCapacity[type]).fill(1)\r\n    makeMagByType[type]()\r\n  }\r\n\r\n  // initialize magazines\r\n  this.updateMagazine(WEAPON_TYPE_PISTOL)\r\n  this.updateMagazine(WEAPON_TYPE_SMG)\r\n  this.updateMagazine(WEAPON_TYPE_SHOTGUN)\r\n  mags = [\r\n    magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n    magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n    magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n  ]\r\n\r\n  this.swapSwap = (wep) => {\r\n    let { list, equipped } = getState().game.player.weapons\r\n    magazineIndexes[wep] = 0\r\n    let idx = list.indexOf(wep)\r\n    if (idx > -1) {\r\n      this.select(\r\n        list[idx + 1] ?\r\n        list[idx + 1] :\r\n        list[0]\r\n      )\r\n    }\r\n    window.TweenLite.delayedCall(.05, () => {\r\n      this.select(equipped)\r\n    })\r\n  }\r\n\r\n  this.updateWeaponMagazines = wep => {\r\n    let { list } = getState().game.player.weapons\r\n    mags.forEach(mag => { mag.forEach(b => { container.removeChild(b) }) })\r\n    list.forEach(wep => { this.updateMagazine(wep) })\r\n    mags = [\r\n      magazinesByWeaponType[WEAPON_TYPE_PISTOL],\r\n      magazinesByWeaponType[WEAPON_TYPE_SMG],\r\n      magazinesByWeaponType[WEAPON_TYPE_SHOTGUN]\r\n    ]\r\n    this.reload(true)\r\n    dispatch( setWeaponEquipped(wep) )\r\n    this.swapSwap(wep) // switch to another weapon, the switch back to correct the ammo display\r\n  }\r\n\r\n\tlet magazineIndexes = {\r\n\t\t'pistol weapon': 0,\r\n\t\t'smg weapon': 0,\r\n\t\t'shotgun weapon': 0,\r\n\t}\r\n\r\n\tlet magEmptyBools = {\r\n\t\t'pistol weapon': false,\r\n\t\t'smg weapon': false,\r\n\t\t'shotgun weapon': false,\r\n  }\r\n\r\n  this.checkEmpty = weapon_str => magEmptyBools[weapon_str]\r\n  \r\n  const doTheWiggle = (icon, defaultPos, callback) => {\r\n    to(icon, .1, {\r\n      x: defaultPos + 10,\r\n      onComplete: () => {\r\n        to(icon, .1, {\r\n          x: defaultPos - 10,\r\n          onComplete: () => {\r\n            to(icon, .1, {\r\n              x: defaultPos + 5,\r\n              onComplete: () => {\r\n                to(icon, .1, {\r\n                  x: defaultPos - 5,\r\n                  onComplete: () => {\r\n                    to(icon, .1, {\r\n                      x: defaultPos + 3,\r\n                      onComplete: () => {\r\n                        to(icon, .1, {\r\n                          x: defaultPos - 2,\r\n                          onComplete: () => {\r\n                            to(icon, .1, {\r\n                              x: defaultPos + 1,\r\n                              onComplete: () => {\r\n                                to(icon, .1, {\r\n                                  x: defaultPos,\r\n                                  onComplete: () => {\r\n                                    this.shaking = false\r\n                                    callback()\r\n                                  }\r\n                                })\r\n                              }\r\n                            })\r\n                          }\r\n                        })\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  this.textForEmptyShake = 'RELOAD'\r\n  this.changeTextForEmptyShake = str => {\r\n    this.textForEmptyShake = str\r\n    this.emptyText.text = str\r\n  }\r\n\r\n  this.emptyText = new PIXI.Text(this.textForEmptyShake, { fill: 0xB00000, fontSize: '15px', fontWeight: 'bold' })\r\n  this.emptyText.pivot.x = this.emptyText.width * .5\r\n  this.emptyText.pivot.y = this.emptyText.height * .5\r\n  this.emptyText.position.x = iconBG.position.x + iconBG.width * .5\r\n  this.emptyText.position.y = iconBG.position.y + iconBG.height * .8\r\n  this.removeEmptyText = () => {\r\n    container.removeChild(this.emptyText)\r\n  }\r\n\r\n  this.shaking = false\r\n  this.emptyMagShake = () => {\r\n    container.addChild(this.emptyText)\r\n    if (!this.shaking) {\r\n      this.shaking = true\r\n      icons.forEach(icon => {\r\n        let defaultPos = icon.position.x\r\n        doTheWiggle(icon, defaultPos, this.removeEmptyText)\r\n      })\r\n      doTheWiggle(iconBG, iconBG.position.x, this.removeEmptyText)\r\n    }\r\n  }\r\n\r\n\tthis.reloading = false\r\n\tthis.reload = (forceReload) => {\r\n\t\tif (!this.reloading || forceReload) {\r\n\t\t\tlet { game: { player: { weapons: { reloadAnimationFrames, equipped, totalAmmo } } } } = getState()\r\n      this.removeEmptyText()\r\n      if (magazineIndexes[equipped] !== 0 && totalAmmo[equipped] !== 0 || forceReload) {\r\n        if (forceReload) { magazineIndexes[equipped] = 0 }\r\n        this.reloading = true\r\n\t\t\t\tlet ammoCheck = totalAmmo[equipped] < magazinesByWeaponType[equipped].length\r\n\t\t\t\tmagazinesByWeaponType[equipped].forEach((b, i) => { b.alpha = 0 })\r\n\t\t\t\tfor (let i = 0, limit = (ammoCheck ? totalAmmo[equipped] : magazinesByWeaponType[equipped].length); i < limit; ++i) {\r\n\t\t\t\t\tlet b = magazinesByWeaponType[equipped][i]\r\n\t\t\t\t\tb.alpha = 1\r\n\t\t\t\t\tfrom(b, reloadAnimationFrames[equipped]/60, {\r\n\t\t\t\t\t\tx: gameWidth - (b.width * i),\r\n\t\t\t\t\t\tonComplete: (_i) => {\r\n\t\t\t\t\t\t\tif (_i === limit-1) {\r\n\t\t\t\t\t\t\t\tmagazineIndexes[equipped] = 0\r\n                magEmptyBools[equipped] = false\r\n                this.lastBulletByWepType[equipped] = false\r\n                if (forceReload) {\r\n                  this.reloading = false\r\n                }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (totalAmmo[equipped] === 0) {\r\n\t\t\t\t\t\t\t\tthis.reloading = false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tonCompleteParams: [i]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  // forceWepEquipped is a weapon type string\r\n\tthis.select = (forceWepEquipped) => {\r\n    let { game: { player: { weapons: { totalAmmo, equipped } } } } = getState()\r\n    icons.forEach(icon => { icon.alpha = 0 })\r\n\t\tmags.forEach(m => {\r\n      m.forEach(b => {\r\n        if (b && b.hasOwnProperty('alpha')) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    })\r\n\t\tweaponIcons[forceWepEquipped ? forceWepEquipped : equipped].alpha = 1\r\n\t\tlet ammoCheck = totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] < magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length\r\n\t\tif (totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] !== 0) {\r\n\t\t\tlet limit = (ammoCheck\r\n\t\t\t\t? totalAmmo[forceWepEquipped ? forceWepEquipped : equipped]\r\n\t\t\t\t: magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped])\r\n\t\t\tlet lastMagIdx = ammoCheck ? magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length - totalAmmo[forceWepEquipped ? forceWepEquipped : equipped] : 0\r\n\t\t\tif (ammoCheck) { magazineIndexes[forceWepEquipped ? forceWepEquipped : equipped] = lastMagIdx }\r\n\t\t\tfor (let i = 0; i < limit; ++i) {\r\n\t\t\t\tmagazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped][magazinesByWeaponType[forceWepEquipped ? forceWepEquipped : equipped].length-1 - i].alpha = 1\r\n\t\t\t}\r\n    }\r\n    // added this code to hide bullets when last mag is less than ammo cap. \r\n    if (magEmptyBools[equipped]) {\r\n      magazinesByWeaponType[equipped].forEach(b => {\r\n        if (!forceWepEquipped) {\r\n          b.alpha = 0\r\n        }\r\n      })\r\n    }\r\n\t}\r\n\r\n  this.lastBulletByWepType = {\r\n    'pistol weapon': false,\r\n    'smg weapon': false,\r\n    'shotgun weapon': false,\r\n  }\r\n\r\n\tthis.fireBullet = weapon_str => {\r\n\t\tif (magazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]]) {\r\n\t\t\tmagazinesByWeaponType[weapon_str][magazineIndexes[weapon_str]].alpha = 0\r\n\t\t\tmagazineIndexes[weapon_str]++\r\n\t\t\tdispatch( decrementTotalAmmo(weapon_str) )\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n        this.lastBulletByWepType[weapon_str] = true\r\n      }\r\n      if (magazinesByWeaponType[weapon_str].length === magazineIndexes[weapon_str]) {\r\n\t\t\t\tmagEmptyBools[weapon_str] = true\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n  \r\n  const makeGrenadeIcon = () => {\r\n    this.gbevel = new BevelFilter()\r\n    this.gnoise = new NoiseFilter()\r\n    this.gbevel.shadowAlpha = .45\r\n    this.gbevel.lightAlpha = .35\r\n    this.gbevel.thickness = 5\r\n    this.gbevel.shadowColor = 0x0\r\n    this.gbevel.lightColor = 0x208C44\r\n    this.gnoise.noise = .1\r\n    this.gnoise.seed = .5\r\n    let grenadeGfc = new PIXI.Graphics()\r\n    grenadeGfc.lineStyle(1, 0x0)\r\n    grenadeGfc.beginFill(0x1F472C)\r\n    grenadeGfc.drawCircle(0, 0, 6)\r\n    grenadeGfc.filters = getState().game.filterEffects ? [ this.gbevel, this.gnoise ] : []\r\n    container.addChild(grenadeGfc)\r\n    \r\n    return grenadeGfc\r\n  }\r\n\r\n  this.grenades = []\r\n\r\n  this.updateGrenadeIcons = () => {\r\n    if (this.grenades) { this.grenades.forEach(g => { g.destroy() }) }\r\n    this.grenades = []\r\n    let grenadeCount = getState().game.player.weapons.totalAmmo['grenades']\r\n    for (let i = 0; i < grenadeCount; ++i) {\r\n      let gnade = makeGrenadeIcon()\r\n      this.grenades.push( gnade )\r\n    }\r\n    this.grenades.forEach((g, i) => {\r\n      g.position.x = getState().game.width - 25 - ((g.width * 1.5) * i)\r\n      g.position.y = getState().game.height - 110 - g.height\r\n      from(g, (.1 * i), { y: g.position.y - 10, alpha: 0 })\r\n    })\r\n  }\r\n\r\n  this.updateGrenadeIcons()\r\n\r\n\treturn this\r\n}\r\n\r\nexport const updateWeaponsUI = () => {\r\n  let { gameObjects } = window\r\n  let { game: { gameState } } = getState()\r\n\tif (gameObjects) {\r\n\t\tlet weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n\t\tif (weaponsUI && (!weaponsUI.reloading || gameState === GameStates.SHOP_MENU)) {\r\n      weaponsUI.select()\r\n      gameObjects = null\r\n\t\t}\r\n\t}\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Text, Container, filters } from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport store from '../../../app/store'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\n\r\nexport default function AmmoDrop (position, weaponType, amount) {\r\n  let { BlurFilter } = filters  \r\n  let { gameObjects } = window\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let ammoDrops = gameObjects.getKeyValue('ammo-drops-by-type')\r\n\r\n  let colors = {\r\n    'pistol weapon': 0x0254FF,\r\n    'smg weapon': 0xFF9D02,\r\n    'shotgun weapon': 0xA52121,\r\n  }\r\n\r\n  let text = {\r\n    'pistol weapon': 'PISTOL',\r\n    'smg weapon': 'SMG',\r\n    'shotgun weapon': 'SHOTGUN',\r\n  }\r\n  \r\n  let props = {\r\n    x: position.x, y: position.y,\r\n    w: 50, h: 20\r\n  }\r\n\r\n  let ammoBox = Bodies.rectangle(props.x, props.y, props.w, props.h, {\r\n    collisionFilter: itemCollisionOptions\r\n  })\r\n  ammoBox.label = 'ammo drop'\r\n  ammoBox.ammo_type = weaponType\r\n  ammoBox.amount = amount\r\n  let world = gameObjects.getKeyValue('world')\r\n  World.add(world, ammoBox)\r\n\r\n  ammoBox.main = this\r\n\r\n  let ammoGfc = new Container()\r\n\r\n  let boxGfc = new Graphics()\r\n  boxGfc.beginFill(colors[weaponType])\r\n  boxGfc.drawRect(0, 0, props.w, props.h)\r\n  boxGfc.pivot.x = boxGfc.width * .5\r\n  boxGfc.pivot.y = boxGfc.height * .5\r\n  let bevelFilter = new BevelFilter()\r\n  bevelFilter.thickness = 5\r\n  bevelFilter.lightColor = 0xffffff\r\n  bevelFilter.lightAlpha = 0.25\r\n  bevelFilter.shadowColor = 0x0\r\n  bevelFilter.shadowAlpha = 0.25\r\n  boxGfc.filters = store.getState().game.filterEffects ? [\r\n    bevelFilter\r\n  ] : []\r\n\r\n  let blurGfc, blurFilter\r\n  blurGfc = new Graphics()\r\n  blurGfc.beginFill(0x000000)\r\n  blurGfc.drawRect(0, props.h/2, props.w, props.h/2)\r\n  blurGfc.pivot.x = blurGfc.width * .5\r\n  blurGfc.pivot.y = blurGfc.height * .5\r\n  blurFilter = new BlurFilter(5, 3)\r\n  blurGfc.alpha = .85\r\n  blurGfc.filters = store.getState().game.filterEffects ? [\r\n    blurFilter\r\n  ] : []\r\n  // if (store.getState().game.filterEffects) {\r\n  // }\r\n\r\n  let mask = new Graphics()\r\n  mask.beginFill(colors[weaponType])\r\n  mask.drawRect(0, 0, props.w, props.h)\r\n  mask.pivot.x = mask.width * .5\r\n  mask.pivot.y = mask.height * .5\r\n  blurGfc.mask = mask\r\n\r\n  if (store.getState().game.filterEffects) {\r\n    ammoGfc.addChild(boxGfc, blurGfc, mask)\r\n  } else {\r\n    ammoGfc.addChild(boxGfc, mask)\r\n  }\r\n\r\n  let boxTxt = new Text(text[weaponType], { fontSize: '9px', fill: '#FFF', fontWeight: 'bold' })\r\n  boxTxt.pivot.x = boxTxt.width * .5\r\n  boxTxt.pivot.y = boxTxt.height * .5\r\n  let glow = new GlowFilter()\r\n  glow.color = 0x0\r\n  glow.outerStrength = 1.0\r\n  boxTxt.filters = store.getState().game.filterEffects ? [ glow ] : []\r\n  ammoGfc.addChild(boxTxt)\r\n\r\n  // container.addChild(ammoGfc)\r\n\r\n  this.gfc = ammoGfc\r\n  this.body = ammoBox\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      ammoGfc.addChild(blurGfc, boxTxt)\r\n      boxGfc.filters = [ bevelFilter ]\r\n      blurGfc.filters = [ blurFilter ]\r\n      boxTxt.filters = [ glow ]\r\n    } else {\r\n      if (ammoGfc.children.indexOf(blurGfc) > -1) {\r\n        ammoGfc.removeChild(blurGfc)\r\n      }\r\n      boxGfc.filters = []\r\n      blurGfc.filters = []\r\n      boxTxt.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroy = () => {\r\n    const idx = ammoDrops[weaponType].indexOf(this)\r\n    if (idx > -1) {\r\n      ammoDrops[weaponType].splice(idx, 1)\r\n      // ammoDrops = null\r\n    }\r\n    ammoGfc.destroy()\r\n    World.remove(world, ammoBox)\r\n    // world = null\r\n    // container = null\r\n  }\r\n\r\n  ammoDrops[weaponType].push(this)\r\n\r\n  this.positionAmmoBox = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(ammoBox)\r\n    ammoGfc.position = { x, y }\r\n    ammoGfc.rotation = rot\r\n    if (container && container.children.indexOf(this.gfc) === -1) {\r\n      container.addChild(ammoGfc)\r\n    }\r\n  }\r\n\r\n  return this\r\n\r\n}","import * as PIXI from 'pixi.js'\r\nimport random from 'random'\r\nimport { enemyCollisionOptions, playerCollisionOptions } from '../collisionOptions'\r\nimport { Body, Bodies, World, Composite, Constraint } from 'matter-js'\r\nimport { getBodyHeight } from '../utils/Utils'\r\nimport { decrementWaveCountToDefeat, incrementZombiesOnStage } from '../gameSlice'\r\nimport { GibGenerator } from '../items/Gib'\r\nimport store from '../../../app/store'\r\nimport BloodSpurt from '../FX/BloodSpurt'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { BulletImpact } from '../player/fireWeapons'\r\nimport { GlowFilter } from '@pixi/filter-glow'\r\nimport HealthDrop from '../items/HealthDrop'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport { degrees } from 'radians'\r\n\r\n\r\nexport function ZombieRagdoll ({ x, y }, force, partLastDamaged) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { TweenLite: { delayedCall, to } } = window\r\n\tlet world, container, zombieRags\r\n\tlet { gameObjects } = window\r\n\tif (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n\tif (!container) {\r\n\t\tcontainer = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tif (!zombieRags) {\r\n\t\tzombieRags = gameObjects.getKeyValue('zombie-ragdolls')\r\n\t}\r\n\tlet bloodSmack = gameObjects.getKeyValue('death-rip-sound')\r\n\tbloodSmack.play()\r\n\tlet deathSnd = gameObjects.getKeyValue('zombie-death-sound')\r\n\tdeathSnd.play()\r\n\r\n\tlet b = { w: 40, h: 90 }\r\n  let h = { w: 20, h: 30 }\r\n\tlet a = { w: 15, h: 40 }\r\n\tlet l = { w: 15, h: 40 }\r\n\tlet hnd = { w: 15, h: 35 }\r\n\tlet f = { w: 15, h: 35 }\r\n\tlet bodyUpper = Bodies.rectangle(x, y, b.w, b.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet head = Bodies.rectangle(x, y, h.w, h.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armUpperL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armUpperR = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handL = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet armLowerL = Bodies.rectangle(x, y, a.w, a.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet armLowerR = Bodies.rectangle(x, y, a.w, a.h, { \r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet handR = Bodies.rectangle(x, y, hnd.w, hnd.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet legUpperL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legUpperR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerL = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n  })\r\n\tlet legLowerR = Bodies.rectangle(x, y, l.w, l.h, {\r\n    collisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footL = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\tlet footR = Bodies.rectangle(x, y, f.w, f.h, {\r\n\t\tcollisionFilter: playerCollisionOptions\r\n\t})\r\n\r\n\tlet bodyToHead = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: head,\r\n\t\tpointA: { x: 0, y: -b.h/2 },\r\n\t\tpointB: { x: 0, y: h.h/2 },\r\n\t\tlength: 1,\r\n\t})\r\n\tlet bodyUpperToArmUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperL,\r\n\t\tpointA: { x: -b.w/4, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToArmUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: armUpperR,\r\n\t\tpointA: { x: 0, y: -b.h/2 + 10 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperLToArmLowerL = Constraint.create({\r\n\t\tbodyA: armUpperL,\r\n\t\tbodyB: armLowerL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet armUpperRToArmLowerR = Constraint.create({\r\n\t\tbodyA: armUpperR,\r\n\t\tbodyB: armLowerR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -a.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet handToLowerL = Constraint.create({\r\n\t\tbodyA: armLowerL,\r\n\t\tbodyB: handL,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet handToLowerR = Constraint.create({\r\n\t\tbodyA: armLowerR,\r\n\t\tbodyB: handR,\r\n\t\tpointA: { x: 0, y: a.h/2 },\r\n\t\tpointB: { x: 0, y: -hnd.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet bodyUpperToLegUpperL = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperL,\r\n\t\tpointA: { x: -b.w/4, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet bodyUpperToLegUpperR = Constraint.create({\r\n\t\tbodyA: bodyUpper,\r\n\t\tbodyB: legUpperR,\r\n\t\tpointA: { x: 0, y: b.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperLToLegLowerL = Constraint.create({\r\n\t\tbodyA: legUpperL,\r\n\t\tbodyB: legLowerL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet legUpperRToLegLowerR = Constraint.create({\r\n\t\tbodyA: legUpperR,\r\n\t\tbodyB: legLowerR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -l.h/2 },\r\n\t\tlength: 2\r\n\t})\r\n\tlet footLToLowerLegL = Constraint.create({\r\n\t\tbodyA: legLowerL,\r\n\t\tbodyB: footL,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\tlet footRToLowerLegR = Constraint.create({\r\n\t\tbodyA: legLowerR,\r\n\t\tbodyB: footR,\r\n\t\tpointA: { x: 0, y: l.h/2 },\r\n\t\tpointB: { x: 0, y: -f.h/2 },\r\n\t\tlength: 1\r\n\t})\r\n\r\n  this.composite = Composite.create()\r\n  this.bodies = [\r\n    head,\r\n    armUpperL, armUpperR,\r\n    armLowerL, armLowerR,\r\n    legUpperL, legUpperR,\r\n    legLowerL, legLowerR,\r\n    footL, footR\r\n\t]\r\n\tthis.bodies.forEach(body => { body.label = 'zombie body part' })\r\n\tbodyUpper.label = 'torso'\r\n\tComposite.add(this.composite, [\r\n    head, bodyUpper,\r\n    armUpperL, armUpperR, armLowerL, armLowerR,\r\n\t\tlegUpperL, legUpperR, legLowerL, legLowerR,\r\n\t\thandL, handR, footL, footR,\r\n\t\tbodyToHead, handToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t])\r\n\tthis.constraints = [\r\n\t\tbodyToHead,\r\n\t\thandToLowerL, handToLowerR,\r\n\t\tfootLToLowerLegL, footRToLowerLegR,\r\n\t\tbodyUpperToArmUpperL, bodyUpperToArmUpperR,\r\n\t\tarmUpperLToArmLowerL, armUpperRToArmLowerR,\r\n\t\tbodyUpperToLegUpperL, bodyUpperToLegUpperR,\r\n\t\tlegUpperLToLegLowerL, legUpperRToLegLowerR,\r\n\t]\r\n\r\n\tWorld.add(world, this.composite)\r\n  Body.applyForce(bodyUpper, bodyUpper.position, force)\r\n  this.bodies.forEach(_body => {\r\n    Body.applyForce(_body, _body.position, { x: random.float(-0.01, -0.05), y: random.float(-0.01, -0.05) })\r\n  })\r\n\tzombieRags.push(this)\r\n\r\n\t// add sprites\r\n\tlet z_parts_spritesheet = gameObjects.getKeyValue('zombie-parts-gored-sheet')\r\n\r\n  const getSkullTex = () => {\r\n    let skulls = [ 'skull_gored.png', 'skull_gored2.png', 'skull_gored3.png' ]\r\n    return skulls[Math.floor(Math.random() * skulls.length)]\r\n  }\r\n\tlet skull = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[ getSkullTex() ]\r\n  )\r\n\tskull._id = 'skull'\r\n\tlet torso = new PIXI.Sprite( z_parts_spritesheet.textures['torso_whole_gored.png'] )\r\n\ttorso._id = 'torso'\r\n\t\r\n\tlet spriteParts = []\r\n  \r\n  let leg2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_leg_lower_gored.png`]\r\n  )\r\n  leg2._id = 'leg 2'\r\n\tspriteParts.push( leg2 )\r\n\t\r\n\tlet hand2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_arm_hand_gored.png']\r\n\t)\r\n\thand2._id = 'hand 2'\r\n\tspriteParts.push( hand2 )\r\n\r\n  let arm2 = new PIXI.Sprite(\r\n    z_parts_spritesheet.textures[`rear_arm_forearm_gored.png`]\r\n  )\r\n  arm2._id = 'arm 2'\r\n  spriteParts.push( arm2 )\r\n\r\n  let upperArm2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm2._id = 'limb'\r\n  spriteParts.push( upperArm2 )\r\n  \r\n\tlet upperLeg2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`rear_leg_upper_gored.png`]\r\n\t)\r\n\tupperLeg2._id = 'limb'\r\n\tspriteParts.push( upperLeg2 )\r\n\r\n\tlet foot2 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['rear_leg_foot_gored.png']\r\n\t)\r\n\tfoot2._id = 'foot 2'\r\n\tspriteParts.push( foot2 )\r\n  \r\n  spriteParts.push( torso, skull )\r\n\r\n\tlet leg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_leg_lower_gored.png`]\r\n\t)\r\n\tleg1._id = 'leg 1'\r\n  spriteParts.push( leg1 )\r\n\t\r\n\tlet hand1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_arm_hand_gored.png']\r\n\t)\r\n\thand1._id = 'hand 1'\r\n\tspriteParts.push( hand1 )\r\n\r\n\tlet arm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_forearm_gored.png`]\r\n\t)\r\n\tarm1._id = 'arm 1'\r\n  spriteParts.push( arm1 )\r\n\r\n  let upperArm1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperArm1._id = 'limb'\r\n  spriteParts.push( upperArm1 )\r\n\r\n\tlet upperLeg1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures[`front_arm_upper_gored.png`]\r\n\t)\r\n\tupperLeg1._id = 'limb'\r\n\tspriteParts.push( upperLeg1 )\r\n\t\r\n\tlet foot1 = new PIXI.Sprite(\r\n\t\tz_parts_spritesheet.textures['front_leg_foot_gored.png']\r\n\t)\r\n\tfoot1._id = 'foot 1'\r\n\tspriteParts.push( foot1 )\r\n\t\r\n\tspriteParts.forEach(part => {\r\n\t\tpart.updateAnchor = true\r\n\t\tpart.pivot.x = part.width * .5\r\n\t\tpart.pivot.y = part.height * .5\r\n\t\tcontainer.addChild(part)\r\n\t})\r\n\r\n\tthis.head = head\r\n\tthis.bodyUpper = bodyUpper\r\n\tthis.armUpperL = armUpperL\r\n\tthis.armUpperR = armUpperR\r\n\tthis.armLowerL = armLowerL\r\n\tthis.armLowerR = armLowerR\r\n\tthis.legUpperL = legUpperL\r\n\tthis.legUpperR = legUpperR\r\n\tthis.legLowerL = legLowerL\r\n\tthis.legLowerR = legLowerR\r\n\tthis.handL = handL\r\n\tthis.handR = handR\r\n\tthis.footL = footL\r\n\tthis.footR = footR\r\n\r\n\t// check direction inderectly by checking the force applied to the ragdoll\r\n\tlet gibForce = (\r\n    force ? \r\n      force.x < 0 ?\r\n      { x: -0.002 }\r\n      : { x: 0.002 }\r\n    : { x: random.float(-0.002, 0.002) }\r\n  )\r\n\tgibForce.y = -0.005\r\n\t\r\n\tnew GibGenerator(\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? random.int(5, 10) : 3,  //random.int(10, 15),\r\n\t\tbodyUpper.position,\r\n\t\tgibForce,\r\n\t\tgetState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 2 : 1\r\n  )\r\n\r\n\tthis.destroy = () => {\r\n\t\tspriteParts.forEach((sprite, i) => {\r\n      to(sprite, getState().game.lastWaveCountDefeated && getState().game.lastWaveCountDefeated < 10 ? 1 : .5, {\r\n        alpha: 0,\r\n        onComplete: () => {\r\n          container.removeChild(sprite)\r\n          if (i === spriteParts.length - 1) {\r\n            World.remove(world, this.composite)\r\n\t\t\t\t\t\tzombieRags.splice(zombieRags.indexOf(this), 1)\r\n\t\t\t\t\t\tzombieRags = null\r\n\t\t\t\t\t\tworld = null\r\n\t\t\t\t\t\tcontainer = null\r\n\t\t\t\t\t\tthis.bodies.forEach(b => { b = null })\r\n\t\t\t\t\t\tthis.constraints.forEach(c => { c = null })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\t}\r\n  \r\n\tthis.animateRagParts = renderFnc => {\r\n\t\t\r\n\t\tlet skullPos = renderFnc(this.head)\r\n\t\tskull.position = skullPos\r\n\t\tskull.rotation = skullPos.rotation\r\n\t\tlet torsoPos = renderFnc(this.bodyUpper)\r\n\t\ttorso.position = torsoPos\r\n\t\ttorso.rotation = torsoPos.rotation\r\n\r\n\t\tlet arm1Pos = renderFnc(this.armLowerL)\r\n\t\tarm1.position = arm1Pos\r\n\t\tarm1.rotation = arm1Pos.rotation\r\n\t\tlet upperArm1Pos = renderFnc(this.armUpperL)\r\n\t\tupperArm1.position = upperArm1Pos\r\n\t\tupperArm1.rotation = upperArm1Pos.rotation\r\n\t\tlet hand1Pos = renderFnc(this.handL)\r\n\t\thand1.position = hand1Pos\r\n\t\thand1.rotation = hand1Pos.rotation\r\n\t\tlet upperLeg1Pos = renderFnc(this.legUpperL)\r\n\t\tupperLeg1.position = upperLeg1Pos\r\n\t\tupperLeg1.rotation = upperLeg1Pos.rotation\r\n\t\tlet leg1Pos = renderFnc(this.legLowerL)\r\n\t\tleg1.position = leg1Pos\r\n\t\tleg1.rotation = leg1Pos.rotation\r\n\t\tlet foot1Pos = renderFnc(this.footL)\r\n\t\tfoot1.position = foot1Pos\r\n\t\tfoot1.rotation = foot1Pos.rotation\r\n\r\n\t\tlet arm2Pos = renderFnc(this.armLowerR)\r\n\t\tarm2.position = arm2Pos\r\n\t\tarm2.rotation = arm2Pos.rotation\r\n\t\tlet upperArm2Pos = renderFnc(this.armUpperR)\r\n\t\tupperArm2.position = upperArm2Pos\r\n\t\tupperArm2.rotation = upperArm2Pos.rotation\r\n\t\tlet hand2Pos = renderFnc(this.handR)\r\n\t\thand2.position = hand2Pos\r\n\t\thand2.rotation = hand2Pos.rotation\r\n\t\tlet upperLeg2Pos = renderFnc(this.legUpperR)\r\n\t\tupperLeg2.position = upperLeg2Pos\r\n\t\tupperLeg2.rotation = upperLeg2Pos.rotation\r\n\t\tlet leg2Pos = renderFnc(this.legLowerR)\r\n\t\tleg2.position = leg2Pos\r\n\t\tleg2.rotation = leg2Pos.rotation\r\n\t\tlet foot2Pos = renderFnc(this.footR)\r\n\t\tfoot2.position = foot2Pos\r\n\t\tfoot2.rotation = foot2Pos.rotation\r\n\r\n\t}\r\n\r\n\t// detach a random constraint\r\n\tconst randomConstraintToRemove = () => this.constraints[ Math.floor( Math.random() * this.constraints.length ) ]\r\n\tlet parts = new Array(random.int(1, 10)).fill(1)\r\n  parts = parts.map((item, i) => {\r\n    let rand\r\n    const getARandomConstraint = () => {\r\n      rand = randomConstraintToRemove()\r\n      if (parts.indexOf(rand) > -1) {\r\n        getARandomConstraint()\r\n      } else {\r\n        return rand\r\n      }\r\n    }\r\n    return getARandomConstraint()\r\n  })\r\n  parts.forEach(part => { Composite.remove(this.composite, part) })\r\n\r\n\t// auto removal\r\n\tdelayedCall(\r\n\t\t!getState().game.lastWaveCountDefeated || getState().game.lastWaveCountDefeated < 10 ? 4 : 1,\r\n\t\tthis.destroy\r\n\t)\r\n\r\n\tdispatch(decrementWaveCountToDefeat())\r\n\r\n\treturn this\r\n}\r\n\r\nexport default function Zombie(x, y) {\r\n\tlet { dispatch, getState } = store\r\n\tlet { Power2, TweenLite: { delayedCall, to, set } } = window\r\n\tlet world, zombies, container\r\n\tlet { gameObjects } = window\r\n  if (!world) {\r\n    world = gameObjects.getKeyValue('world')\r\n  }\r\n  if (!zombies) {\r\n    zombies = gameObjects.getKeyValue('zombies')\r\n  }\r\n  if (!container) {\r\n    container = gameObjects.getKeyValue('game-pixi-container')\r\n\t}\r\n\tlet bulletImpacts = gameObjects.getKeyValue('bullet-impacts')\r\n\r\n  dispatch( incrementZombiesOnStage() )\r\n\t\r\n  let b = { w: 60, h: 125 }\r\n\tlet h = { w: 40, h: 60 }\r\n\t// let zombieWalkSpeed = .65\r\n\tlet zombieWalkSpeed = getState().game.enemies.zombies.walkSpeed\r\n\r\n  let body = Bodies.rectangle(x, y, b.w, b.h, { collisionFilter: enemyCollisionOptions })\r\n  let head = Bodies.rectangle(x, y, h.w, h.h, { collisionFilter: enemyCollisionOptions, inertia: Infinity })\r\n  \r\n\tbody.label = 'enemy zombie body'\r\n\thead.label = 'enemy zombie head'\r\n\r\n  let headToBody = Constraint.create({\r\n    bodyA: head,\r\n    bodyB: body,\r\n    pointA: { x: 0, y: h.h/2 },\r\n    pointB: { x: 0, y: -b.h/2 },\r\n    length: 0,\r\n  })\r\n\r\n  let zombie = Composite.create()\r\n\r\n  this.composite = zombie\r\n  this.body = body\r\n  this.head = head\r\n\r\n  Composite.add(zombie, [\r\n    body, head,\r\n    headToBody\r\n  ])\r\n  World.add(world, zombie)\r\n\r\n  // pixi stuff\r\n  let zWalkSheet = gameObjects.getKeyValue('zombie-walk-sheet') //gameObjects.getKeyValue('z-walk-spritesheet')\r\n\tlet zAttackSheet = gameObjects.getKeyValue('zombie-attack1-sheet')  // gameObjects.getKeyValue('z-attack-spritesheet')\r\n\tlet idleSheet = gameObjects.getKeyValue('zombie-idle-sheet')\r\n\tlet idleAnim = new PIXI.AnimatedSprite( idleSheet.animations['idle'] )\r\n\tlet zWalk = new PIXI.AnimatedSprite(zWalkSheet.animations['walkcycle'])\r\n\tlet zAttack = new PIXI.AnimatedSprite(zAttackSheet.animations['attack1'])\r\n\tlet zAttack2 = new PIXI.AnimatedSprite(gameObjects.getKeyValue('zombie-attack2-sheet').animations['attackTwo'])\r\n\t\r\n\t// slash fx \r\n\tlet slashFX = gameObjects.getKeyValue('zombie-slash-fx-sheet')\r\n\tlet slashAnim = new PIXI.AnimatedSprite( slashFX.animations['slash'] )\r\n\t\r\n\tslashAnim.loop = false\r\n\tslashAnim.animationSpeed = .5\r\n\tslashAnim.updateAnchor = true\r\n\tslashAnim.pivot.x = slashAnim.width * .5\r\n\tslashAnim.pivot.y = slashAnim.height * .5\r\n\tslashAnim.visible = false\r\n\tslashAnim.onComplete = () => {\r\n\t\tslashAnim.visible = false\r\n\t}\r\n\tcontainer.addChild(slashAnim)\r\n\r\n\tidleAnim.loop = true\r\n\tidleAnim.animationSpeed = .5\r\n\tidleAnim.updateAnchor = true\r\n\tidleAnim.pivot.x = idleAnim.width * .5\r\n\tidleAnim.pivot.y = idleAnim.height * .6\r\n\tcontainer.addChild(idleAnim)\r\n\r\n  zWalk.loop = true\r\n  zWalk.animationSpeed = 0.5\r\n  zWalk.updateAnchor = true\r\n  zWalk.pivot.x = zWalk.width * .5\r\n  zWalk.pivot.y = zWalk.height * .6\r\n  container.addChild(zWalk)\r\n\r\n\tzAttack.loop = false\r\n  zAttack.animationSpeed = 0.65\r\n  zAttack.updateAnchor = true\r\n  zAttack.pivot.x = zAttack.width * .5\r\n  zAttack.pivot.y = zAttack.height * .6\r\n  container.addChild(zAttack)\r\n\tzAttack.visible = false\r\n\t\r\n\tzAttack2.loop = false\r\n  zAttack2.animationSpeed = 0.65\r\n  zAttack2.updateAnchor = true\r\n  zAttack2.pivot.x = zAttack2.width * .5\r\n  zAttack2.pivot.y = zAttack2.height * .6\r\n  container.addChild(zAttack2)\r\n\tzAttack2.visible = false\r\n\r\n\tthis.walkAnim = zWalk\r\n\tthis.attackAnim = zAttack\r\n\tthis.attackAnim2 = zAttack2\r\n\tthis.idleAnim = idleAnim\r\n\r\n\tthis.anims = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim\r\n\t]\r\n\tthis.anims.forEach(anim => {\r\n\t\twindow.TweenLite.from(\r\n\t\t\tanim, 1, { alpha: 0 }\r\n\t\t)\r\n\t})\r\n\r\n\tthis.playerBodyPosition = null\r\n\r\n\tthis.playSlashAnim = () => {\r\n\t\tif (this.attackAnim.visible) {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = 1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x\r\n\t\t\tslashAnim.rotation = degrees(0)\r\n\t\t} else {\r\n\t\t\tslashAnim.position = {\r\n\t\t\t\tx: this.attackAnim.position.x,\r\n\t\t\t\ty: this.attackAnim.position.y - 50\r\n\t\t\t}\r\n\t\t\t// slashAnim.scale.x = -1\r\n\t\t\tslashAnim.scale.x = this.attackAnim.scale.x * -1\r\n\t\t\tslashAnim.rotation = degrees(180)\r\n\t\t}\r\n\t\tslashAnim.visible = true\r\n\t\tslashAnim.gotoAndPlay(0)\r\n\t}\r\n\r\n\tthis.setSpritesPositions = fn => {\r\n\t\tlet { x, y } = fn(this.body)\r\n\t\tif (container && container.children.indexOf(this.shadow) === -1) {\r\n\t\t\tcontainer.addChild(this.shadow)\r\n\t\t}\r\n\t\tthis.shadow.position.x = x\r\n\t\tthis.shadow.position.y = y + this.walkAnim.height/4 + 10\r\n\t\tthis.walkAnim.position.x = x\r\n\t\tthis.walkAnim.position.y = y\r\n\t\tthis.attackAnim.position.x = x\r\n\t\tthis.attackAnim.position.y = y\r\n\t\tthis.attackAnim2.position.x = x\r\n\t\tthis.attackAnim2.position.y = y\r\n\t\tthis.idleAnim.position.x = x\r\n\t\tthis.idleAnim.position.y = y\t\r\n\t\t// set timescale according to whether player is alive\r\n\t\tif (this.player.dead) {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.walkAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim.animationSpeed = 0.2\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.2\r\n\t\t\tthis.idleAnim.animationSpeed = 0.2\r\n\t\t\tslashAnim.animationSpeed = 0.2\r\n\t\t} else {\r\n\t\t\tthis.walkAnim.animationSpeed = 0.5\r\n\t\t\tthis.attackAnim.animationSpeed = 0.65\r\n\t\t\tthis.attackAnim2.animationSpeed = 0.65\r\n\t\t\tthis.idleAnim.animationSpeed = 0.5\r\n\t\t\tslashAnim.animationSpeed = 0.5\r\n\t\t}\r\n\t\tif (this.shouldDisplayHealth && this.healthDisplay !== undefined) {\r\n\t\t\tthis.moveLifeDisplay( fn(this.body) )\r\n\t\t}\r\n\t}\r\n\r\n\tthis.setPlayerVars = ({ player, playerDirection, playerBody }) => {\r\n\t\tthis.player = player\r\n\t\tthis.playerBodyPosition = playerBody.position\r\n\t\tthis.playerBody = playerBody\r\n\t\tthis.playerDirection = playerDirection\r\n\t}\r\n\t\r\n\tconst zombieFarFromPlayer = (distance) => {\r\n\t\treturn (this.playerBody.position.x - (distance ? distance : 120) > this.body.position.x || this.playerBody.position.x + (distance ? distance : 120) < this.body.position.x)\r\n\t}\r\n\r\n\tthis.playIdleAnim = () => {\r\n\t\tif (!zAttack.playing && !zAttack2.playing && !this.walkAnimPlaying) {\r\n\t\t\tidleAnim.play()\r\n\t\t\tidleAnim.visible = true\r\n\t\t}\r\n\t}\r\n\r\n\tthis.stopIdleAnim = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\r\n\tthis.walkAnimPlaying = false\r\n\tthis.playWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === false) {\r\n\t\t\tthis.stopIdleAnim()\r\n\t\t\tthis.walkAnim.visible = true\r\n\t\t\tthis.walkAnim.play()\r\n\t\t\tthis.walkAnimPlaying = true\r\n\t\t} else {\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n\tthis.stopWalkAnim = () => {\r\n\t\tif (this.walkAnimPlaying === true) {\r\n\t\t\tthis.walkAnim.stop()\r\n\t\t\tthis.walkAnim.gotoAndStop(0)\r\n\t\t\tthis.walkAnimPlaying = false\r\n\t\t\tthis.walkAnim.visible = false\r\n\t\t\tthis.playIdleAnim()\r\n\t\t}\r\n\t}\r\n  this.playWalkAnim()\r\n  \r\n  this.healthOffsetY = 160\r\n  this.damageDisplayOptions = {\r\n    fill: '#FF0000',\r\n    fontSize: 11\r\n  }\r\n  this.healthDisplayOptions = {\r\n    fill: '#FFFF00',\r\n    fontSize: 11\r\n  }\r\n\tthis.healthDisplay = new PIXI.Text(this.health, this.healthDisplayOptions)\r\n\tthis.healthDisplay.pivot.x = this.healthDisplay.width * .5\r\n\tif (getState().game.displayZombieHealth) {\r\n\t\tthis.shouldDisplayHealth = true\r\n\t\tcontainer.addChild(this.healthDisplay)\r\n\t}\r\n\r\n  this.moveLifeDisplay = (renderFnResult) => {\r\n\t\tif (this.shouldDisplayHealth) {\r\n\t\t\tif (!this.dead) {\r\n\t\t\t\tthis.healthDisplay.text = this.health\r\n\t\t\t} else {\r\n\t\t\t\tthis.healthDisplay.text = 0\r\n\t\t\t}\r\n\t\t\tthis.healthDisplay.position = {\r\n\t\t\t\tx: renderFnResult.x,\r\n\t\t\t\ty: renderFnResult.y - this.healthOffsetY\r\n\t\t\t}\r\n\t\t} else if (container.children.indexOf(this.healthDisplay) > -1) {\r\n\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t}\r\n  }\r\n\r\n  // runs via the engine loop, so will repeat 30-60 times a second\r\n  this.walk = () => {\r\n\t\tlet comparison = (this.playerBody.position.x < this.body.position.x)\r\n\t\tif (zombieFarFromPlayer() && !zAttack.playing && !zAttack2.playing && !this.player.dead) {\r\n\t\t\tthis.playWalkAnim()\r\n      if (comparison) {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = 1 })\r\n      } else {\r\n        this.sprites.forEach(sprite => { sprite.scale.x = -1 })\r\n      }\r\n      let alteredWalkSpeed\r\n      if (zombieFarFromPlayer(800)) {\r\n        zWalk.animationSpeed = 1.00\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(2.8, 3.2)\r\n      } else if (zombieFarFromPlayer(400)) {\r\n        zWalk.animationSpeed = .75\r\n        alteredWalkSpeed = zombieWalkSpeed * random.float(1.8, 2.2)\r\n      } else {\r\n        zWalk.animationSpeed = 0.5\r\n        alteredWalkSpeed = zombieWalkSpeed\r\n      }\r\n      Body.translate(this.body, { x: comparison ? -alteredWalkSpeed : alteredWalkSpeed, y: 0 })\r\n\t\t} else {\r\n\t\t\tthis.stopWalkAnim()\r\n\t\t}\r\n  }\r\n\r\n\tthis.health = getState().game.enemies.zombies.startingHealth\r\n\r\n\tthis.shadow = new PIXI.Graphics()\r\n  this.shadow.beginFill(0x0, 0.35)\r\n  this.shadow.drawEllipse(0, 0, 80, 10)\r\n  let blur = new PIXI.filters.BlurFilter()\r\n\tblur.blur = 8\r\n  this.shadow.filters = getState().game.filterEffects ? [ blur ] : []\r\n\r\n\tthis.checkFilters = () => {\r\n\t\tif (getState().game.filterEffects) {\r\n\t\t\tthis.shadow.filters = [ blur ]\r\n\t\t\tthis.shadow.alpha = 1.0\r\n\t\t\tif (this.criticalText) {\r\n\t\t\t\tthis.criticalText.filters = [ this.criticalGlow ]\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.shadow.filters = []\r\n\t\t\tthis.shadow.alpha = .5\r\n\t\t\tif (this.criticalText) {\r\n\t\t\t\tthis.criticalText.filters = []\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// this.shouldDisplayHealth = true\r\n\tthis.displayHealth = bool => {\r\n\t\tthis.shouldDisplayHealth = bool\r\n\t\tif (bool) {\r\n\t\t\tcontainer.addChild(this.healthDisplay)\r\n\t\t} else {\r\n\t\t\tif (container.children.indexOf(this.healthDisplay)) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tthis.sprites = [\r\n\t\tthis.walkAnim,\r\n\t\tthis.attackAnim,\r\n\t\tthis.attackAnim2,\r\n\t\tthis.idleAnim,\r\n    slashAnim\r\n\t]\r\n\r\n\tthis.composite.bodies.forEach(body => {\r\n\t\tbody.main = this\r\n\t})\r\n\r\n\tthis.dead = false\r\n\r\n  this.dmgTxts = []\r\n\tthis.dmgIterator = 0\r\n\tthis.tintAmounts = {\r\n\t\t1: 0xFF9C00,\r\n\t\t2: 0xFF2E00,\r\n\t\t3: 0xFF0000,\r\n\t\t4: 0xB7000F\r\n\t}\r\n\tthis.takeDamage = (dmg, partDamaged, isCritical) => {\r\n\t\t// let dmgText\r\n\t\tif (isCritical) {\r\n\t\t\tthis.criticalText = new PIXI.Text('critical hit!', { fontSize: '13px', fontWeight: 'bold', fill: 0xFFFFFF })\r\n\t\t\t// if (!window.gameObjects.getKeyValue('critical-hit-text')) {\r\n\t\t\t// \twindow.gameObjects.setKeyValue('critical-hit-text', new PIXI.Text('critical!', { fontSize: '15px', fontWeight: 'bold', fill: 0xFFFFFF }))\r\n\t\t\t// }\r\n\t\t\t// criticalText = window.gameObjects.getKeyValue('critical-hit-text')\r\n\t\t\tthis.criticalGlow = new GlowFilter()\r\n\t\t\tthis.criticalGlow.outerStrength = 3\r\n\t\t\tthis.criticalGlow.color = 0xFF0000\r\n\t\t\tthis.criticalText.filters = getState().game.filterEffects ? [ this.criticalGlow ] : []\r\n\t\t\tcontainer.addChild( this.criticalText )\r\n\t\t\tthis.criticalText.position = {\r\n\t\t\t\tx: this.walkAnim.position.x,\r\n\t\t\t\ty: this.walkAnim.position.y - this.healthOffsetY\r\n\t\t\t}\r\n\t\t\tto(this.criticalText, .35, {\r\n\t\t\t\ty: this.walkAnim.position.y - (this.healthOffsetY + 10),\r\n\t\t\t\tonComplete: () => {\r\n\t\t\t\t\tdelayedCall(1, () => {\r\n\t\t\t\t\t\tto(this.criticalText, .25, {\r\n\t\t\t\t\t\t\talpha: 0,\r\n\t\t\t\t\t\t\tonComplete: () => {\r\n\t\t\t\t\t\t\t\tif (container) {\r\n\t\t\t\t\t\t\t\t\tcontainer.removeChild( this.criticalText )\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcontainer = window.gameObjects.getKeyValue('game-pixi-container')\r\n\t\t\t\t\t\t\t\t\tcontainer.removeChild( this.criticalText )\r\n\t\t\t\t\t\t\t\t\tcontainer = null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n    // if (this.dmgTxts.length < 10) {\r\n\t\t// \tdmgText = new PIXI.Text(dmg, this.damageDisplayOptions)\r\n\t\t// \tif (container) {\r\n\t\t// \t\tcontainer.addChild(dmgText)\r\n\t\t// \t}\r\n    //   this.dmgTxts.push(dmgText)\r\n    // } else {\r\n    //   if (this.dmgIterator === 10) {\r\n    //     this.dmgIterator = 0\r\n    //   }\r\n    //   this.dmgIterator++\r\n    //   dmgText = this.dmgTxts[this.dmgIterator]\r\n\t\t// }\r\n\t\t// if (dmgText) {\r\n\t\t// \tdmgText.text = dmg\r\n\t\t// \tdmgText.position = {\r\n\t\t// \t\tx: this.walkAnim.position.x,\r\n\t\t// \t\ty: this.walkAnim.position.y - this.healthOffsetY\r\n\t\t// \t}\r\n\t\t// \tlet randx = random.int(-15, 15)\r\n\t\t// \tset(dmgText, { alpha: 1 })\r\n\t\t// \tto(dmgText, .35, {\r\n\t\t// \t\tx: this.walkAnim.position.x + randx,\r\n\t\t// \t\ty: this.walkAnim.position.y - this.healthOffsetY - 10,\r\n\t\t// \t\tonComplete: () => {\r\n\t\t// \t\tto(dmgText, .5, {\r\n\t\t// \t\t\talpha: 0,\r\n\t\t// \t\t\tease: Power2.easeIn,\r\n\t\t// \t\t\tx: this.walkAnim.position.x + randx,\r\n\t\t// \t\t\ty: this.walkAnim.position.y + this.healthOffsetY + 20,\r\n\t\t// \t\t})\r\n\t\t// \t\t}\r\n\t\t// \t})\r\n\t\t// }\r\n\t\t// randomize relative position of blood spurt \r\n\t\tlet spurtPos\r\n\t\tlet spurtPosLow = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y, this.walkAnim.position.y + 50)\r\n\t\t}\r\n\t\tlet spurtPosHi = {\r\n\t\t\tx: random.float(this.walkAnim.position.x - 20, this.walkAnim.position.x + 20),\r\n\t\t\ty: random.float(this.walkAnim.position.y - 100, this.walkAnim.position.y - 50)\r\n\t\t}\r\n\t\tif (!partDamaged || partDamaged === 'head') {\r\n\t\t\tspurtPos = spurtPosHi\r\n\t\t} else {\r\n\t\t\tspurtPos = spurtPosLow\r\n\t\t}\r\n\t\tnew BloodSpurt( null, spurtPos )\r\n\t\tthis.health -= dmg\r\n\t\tthis.directionX = this.playerBodyPosition ? this.playerBodyPosition.x > this.body.position.x : false\r\n\t\tif (this.health <= 0 && !this.dead) {\r\n\t\t\tthis.kill(partDamaged)\r\n\t\t}\r\n\t\tthis.sprites.forEach(sprite => {\r\n\t\t\tif (sprite !== slashAnim) {\r\n\t\t\t\tif (this.health < 25) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[3]\r\n\t\t\t\t}\r\n\t\t\t\tif (this.health < 10) {\r\n\t\t\t\t\tsprite.tint = this.tintAmounts[4]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n  }\r\n  \r\n  this.removeZombieFromMatterWorld = () => {\r\n    this.dead = true\r\n    // remove attack hit box in case the zombie was killed on that exact frame and\r\n\t\t// attack box didn't get removed \r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n    }\r\n    if (this.healthDisplay) {\r\n      container.removeChild(this.healthDisplay)\r\n    }\r\n\t\t// if health is depleted, remove all enemy sprites and bodies\r\n\t\tthis.sprites.forEach(sprite => { container.removeChild(sprite) })\r\n    if (this.attackHitbox) { World.remove(world, this.attackHitbox) }\r\n\t\tWorld.remove(world, this.composite)\r\n    return 'zombie removed'\r\n  }\r\n\r\n  this.removeZombieFromZombiesArray = () => {\r\n    let idx = zombies.indexOf(this)\r\n    if (idx > -1) {\r\n      zombies.splice(idx, 1)\r\n    }\r\n  }\r\n  \r\n\tthis.kill = (partLastDamaged, skipZombieRag) => {\r\n\t\tif (this.attackHitbox) {\r\n\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t}\r\n    if (!this.dead) {\r\n      this.dead = true\r\n\t\t\tthis.health = 0\r\n\t\t\tif (this.healthDisplay) {\r\n\t\t\t\tcontainer.removeChild(this.healthDisplay)\r\n\t\t\t}\r\n\t\t\tcontainer.removeChild(this.shadow)\r\n      this.removeZombieFromMatterWorld()\r\n      this.removeZombieFromZombiesArray()\r\n      let force = { x: this.directionX ? -0.2 : 0.2, y: -0.25 }\r\n\t\t\tlet dropPos = {\r\n\t\t\t\tx: this.directionX ? this.body.position.x - 20 : this.body.position.x + 20,\r\n\t\t\t\ty: this.body.position.y - 60\r\n\t\t\t}\r\n\t\t\tif (!skipZombieRag) {\r\n\t\t\t\tGenerateRandomCreditDrops(dropPos)\r\n\t\t\t\tif (getState().game.player.perks['ammoDropper'].owned) {\r\n\t\t\t\t\tlet { list } = getState().game.player.weapons\r\n\t\t\t\t\tnew AmmoDrop(dropPos, list[Math.floor(Math.random() * list.length)], random.int(4, 16))\r\n\t\t\t\t}\r\n\t\t\t\tif (getState().game.player.perks['healthDropper'].owned) {\r\n\t\t\t\t\tnew HealthDrop(random.int(2, 6), dropPos)\r\n\t\t\t\t}\r\n\t\t\t\tbulletImpacts.push(\r\n\t\t\t\t\tnew BulletImpact('enemy', this.body.position, {\r\n\t\t\t\t\t\tduration: 3,\r\n\t\t\t\t\t\talphaDuration: 3,\r\n\t\t\t\t\t\tset: 1,\r\n\t\t\t\t\t\trand: {\r\n\t\t\t\t\t\t\tmin: 1, max: 4\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tcontainer = 1\r\n\t\t\tzombies = 1\r\n\t\t\tcontainer = null\r\n\t\t\tzombies = null\r\n\t\t\tif (!skipZombieRag) {\r\n\t\t\t\tnew ZombieRagdoll({\r\n\t\t\t\t\tx: this.body.position.x,\r\n\t\t\t\t\ty: this.body.position.y - getBodyHeight(this.body)\r\n\t\t\t\t}, force, partLastDamaged)\r\n\t\t\t}\r\n      if (this.attackHitbox) {\r\n        World.remove(world, this.attackHitbox)\r\n      }\r\n    }\r\n\t}\r\n\r\n\t// const getRandomInt = () => random.int(2, 5)\r\n\r\n\tconst makeAttackHitbox = (num) => {\r\n\t\tif (this.playerBodyPosition) {\r\n\t\t\tlet comparison = (this.playerBodyPosition.x > this.body.position.x)\r\n\t\t\tlet compareResult = comparison ? 80 : -80\r\n\t\t\treturn Bodies.rectangle(this.body.position.x + compareResult, this.body.position.y - getBodyHeight(this.body)/2, num === 2 ? 120 : 100, 150, {\r\n\t\t\t\tlabel: 'enemy zombie attack',\r\n\t\t\t\tisStatic: true\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// zAttack.onFrameChange = () => {\r\n\t// \tif (zAttack.currentFrame === 6) {\r\n\t// \t\tthis.playSlashAnim()\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 8) {\r\n\t// \t\tWorld.add(world, this.attackHitbox)\r\n\t// \t}\r\n\t// \tif (zAttack.currentFrame === 9) {\r\n\t// \t\tWorld.remove(world, this.attackHitbox)\r\n\t// \t\t// this.attackHitbox = null\r\n\t// \t}\r\n\t// }\r\n\tzAttack.onFrameChange = () => {\r\n\t\tidleAnim.visible = false\r\n\t}\r\n\tzAttack.onComplete = () => {\r\n\t\tzAttack.gotoAndStop(0)\r\n\t\tzAttack.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\tzAttack2.onComplete = () => {\r\n\t\tzAttack2.gotoAndStop(0)\r\n\t\tzAttack2.visible = false\r\n\t\tthis.playWalkAnim()\r\n\t\tWorld.remove(world, this.attackHitbox)\r\n\t}\r\n\t//hitbox will be a matter body that appears for a few frames\r\n\tthis.timeSinceLastAttack = Date.now() + 500\r\n\tlet zombieGrowl = gameObjects.getKeyValue('zombie-growl-sound')\r\n\tthis.attack = () => {\r\n\t\tif (!this.paused && zombies.indexOf(this) > -1 && !this.player.dead && !this.dead) {\r\n\t\t\tthis.timeSinceLastAttack = Date.now()\r\n\t\t\tlet oneOfTwo = [ 1, 2 ][ Math.floor( Math.random() * 2 ) ]\r\n\t\t\tthis.attackHitbox = makeAttackHitbox(oneOfTwo)\r\n\t\t\tzombieGrowl.play()\r\n\t\t\t// change frames to an attack animation here\r\n\t\t\tzWalk.visible = false\r\n\t\t\tif (oneOfTwo === 1) {\r\n\t\t\t\tzAttack.visible = true\r\n\t\t\t\tzAttack.play()\r\n\t\t\t} else {\r\n\t\t\t\tzAttack2.visible = true\r\n\t\t\t\tzAttack2.play()\r\n\t\t\t}\r\n\t\t\tidleAnim.visible = false\r\n\t\t\tdelayedCall(.15, () => {\r\n\t\t\t\tthis.playSlashAnim()\r\n\t\t\t})\r\n\t\t\tdelayedCall(.2, () => {\r\n\t\t\t\tWorld.add(world, this.attackHitbox)\r\n\t\t\t\tdelayedCall(.1, () => {\r\n\t\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tif (this.attackHitbox) {\r\n\t\t\t\tWorld.remove(world, this.attackHitbox)\r\n\t\t\t\t// this.attackHitbox = null\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n\r\n  this.pause = () => {\r\n    this.paused = true\r\n    // this.stopWalkAnim()\r\n    idleAnim.stop()\r\n    this.walkAnim.stop()\r\n    this.attackAnim.stop()\r\n    this.attackAnim2.stop()\r\n  }\r\n\r\n  this.unpause = () => {\r\n    this.paused = false\r\n    this.walkAnim.play()\r\n    if (zAttack.currentFrame !== 0) {\r\n      zAttack.play()\r\n    }\r\n  }\r\n\r\n  zombies.push(this)\r\n\r\n  return this\r\n}\r\n","import { Bodies, World } from 'matter-js'\r\nimport { Graphics, Container, filters} from 'pixi.js'\r\nimport { itemCollisionOptions } from '../collisionOptions'\r\nimport { BevelFilter } from '@pixi/filter-bevel'\r\nimport store from '../../../app/store'\r\n\r\nexport default function CreditDrop (position, amount) {\r\n\r\n  let { gameObjects } = window\r\n  let world = gameObjects.getKeyValue('world')\r\n  let container = gameObjects.getKeyValue('game-pixi-container')\r\n  let currencyDrops = gameObjects.getKeyValue('currency-drops')\r\n  let { x: _x, y: _y } = position\r\n\r\n  // init\r\n  // matter body \r\n  let creditBody = Bodies.circle(_x, _y, amount * .25, { restitution: .5, collisionFilter: itemCollisionOptions })\r\n  creditBody.label = 'currency drop'\r\n  creditBody.amount = amount\r\n  // console.log(creditBody.amount)\r\n  World.add(world, creditBody)\r\n  // gfx -- blurred\r\n  let creditContainer = new Container()\r\n  let creditBlur = new Graphics()\r\n  creditBlur.beginFill(0x0eead8)\r\n  creditBlur.drawCircle(0, 0, amount * .25)\r\n  let blurFilter = new filters.BlurFilter()\r\n  blurFilter.blur = 3\r\n  creditBlur.filters = store.getState().game.filterEffects ? [ blurFilter ] : []\r\n  creditBlur.pivot.x = (creditBlur.width * .25) * .5\r\n  creditBlur.pivot.y = (creditBlur.height * .25) * .5\r\n  creditBlur.scale.x = 1.1\r\n  creditBlur.scale.y = 1.1\r\n  creditContainer.addChild(creditBlur)\r\n  // gfx -- clear\r\n  let creditGfc = new Graphics()\r\n  creditGfc.beginFill(0x0eead8)\r\n  creditGfc.drawCircle(0, 0, amount * .25)\r\n  creditGfc.pivot.x = (creditGfc.width * .25) * .5\r\n  creditGfc.pivot.y = (creditGfc.height * .25) * .5\r\n  creditContainer.addChild(creditGfc)\r\n  let bevel = new BevelFilter()\r\n  bevel.lightColor = 0xffffff\r\n  bevel.lightAlpha = .3\r\n  bevel.shadowColor = 0x0\r\n  bevel.shadowAlpha = .3\r\n  creditContainer.filters = store.getState().game.filterEffects ? [ bevel ] : []\r\n  // add to stage\r\n  container.addChild(creditContainer)\r\n  \r\n  currencyDrops.push(this)\r\n\r\n  creditBody.main = this\r\n\r\n  this.creditBody = creditBody\r\n\r\n  this.checkFilters = () => {\r\n    if (store.getState().game.filterEffects) {\r\n      creditContainer.filters = [bevel]\r\n      creditBlur.filters = [blurFilter]\r\n    } else {\r\n      creditContainer.filters = []\r\n      creditBlur.filters = []\r\n    }\r\n  }\r\n\r\n  this.destroyed = false\r\n  this.destroy = () => {\r\n    if (!this.destroyed) {\r\n      this.destroyed = true\r\n      let idx = currencyDrops.indexOf(this)\r\n      if (idx > -1) {\r\n        currencyDrops.splice(idx, 1)\r\n      }\r\n      creditContainer.destroy()\r\n      World.remove(world, creditBody)\r\n      world = null\r\n      container = null\r\n      currencyDrops = null\r\n      gameObjects = null\r\n      creditBody = null\r\n      this.creditBody = null\r\n      creditContainer = null\r\n    }\r\n  }\r\n\r\n  this.positionCreditGfx = (renderFn) => {\r\n    let { x, y, rotation: rot } = renderFn(creditBody)\r\n    creditContainer.position = { x, y }\r\n    creditContainer.rotation = rot\r\n  }\r\n\r\n  return this\r\n\r\n} ","import Zombie from '../enemies/Zombie'\r\nimport AmmoDrop from '../items/AmmoDrop'\r\nimport CreditDrop from '../items/CurrencyCredit'\r\nimport random from 'random'\r\nimport store from '../../../app/store'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\n\r\nconst { getState } = store\r\nconst { TweenLite: { delayedCall } } = window\r\nconst yStartPos = getState().game.height/2\r\n\r\nexport const GenerateZombies = (count) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let zombies = gameObjects.getKeyValue('zombies')\r\n  while(zombies.length > 0) {\r\n    zombies.forEach(z => { z.kill(null, true) })\r\n  }\r\n  const startZombieCreation = () => {\r\n    for (let i = 0; i < count; ++i) {\r\n      delayedCall((random.float(.5, 1.5) * i), () => {\r\n        // after a small delay try to add a zombie..\r\n        // if zombies on stage count not less than n, wait 2 sec. and try again\r\n        const getAZombie = () => {\r\n          if (getState().game.zombiesOnStage < 4 && getState().game.gameState !== GameStates.PAUSE && getState().game.gameState !== GameStates.MAIN_MENU) {\r\n            console.log('should create a zombo')\r\n            new Zombie(random.int(buffer, width - buffer), yStartPos)\r\n          } else {\r\n            setTimeout(() => { getAZombie() }, 2000)\r\n          }\r\n        }\r\n        getAZombie()\r\n      })\r\n    }\r\n  }\r\n  const tryCreateZombies = () => {\r\n    if (getState().game.gameState === GameStates.GAMEPLAY && getState().game.gameSubState === SubStates.WAVE_STARTED) {\r\n      startZombieCreation()\r\n    } else {\r\n      setTimeout(() => { tryCreateZombies() }, 2000)\r\n    }\r\n  }\r\n  tryCreateZombies()\r\n  \r\n}\r\n\r\nexport const GenerateRandomAmmoDrops = (position, amountLimits, overrideCount) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let { game: { player: { weapons: { list, ammoCapacity } } } } = getState()\r\n  let randCount = overrideCount ? overrideCount : random.int(1, 2)\r\n  let type = list[Math.floor(Math.random() * list.length)]\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new AmmoDrop(\r\n      position ? position : { x: random.int(buffer, width - buffer), y: 200 },\r\n      type,\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : random.int(5, ammoCapacity[type]))\r\n  }\r\n}\r\n\r\nexport const GenerateRandomCreditDrops = (position, amountLimits) => {\r\n  const { gameObjects } = window\r\n  let width = gameObjects.getKeyValue('world-width')\r\n  let buffer = 150\r\n  let randCount = getState().game.player.perks['creditDropper'].owned ? random.int(5, 7) : random.int(4, 5)\r\n  for (let i = 0; i < randCount; ++i) {\r\n    new CreditDrop(\r\n      position ?\r\n        { x: position.x, y: position.y - random.int(0, 75) }\r\n        : { x: random.int(buffer, width - buffer), y: 200 - random.int(0, 75) },\r\n      amountLimits ? random.int(amountLimits.min, amountLimits.max) : getState().game.player.perks['creditDropper'].owned ? random.int(15, 30) : random.int(10, 25)\r\n    )\r\n  }\r\n}","import * as PIXI from 'pixi.js'\r\nimport { applyGsapHover } from '../utils/Utils'\r\nimport { gameStateTransition, unsetAllKeys } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport store from '../../../app/store'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops } from '../items/ItemGenerators'\r\nimport { createGenericMessage } from '../createMessages'\r\nimport { FELL_OFF } from '../constants/DeathTypes'\r\nimport random from 'random'\r\n\r\nconst { dispatch, getState } = store\r\n\r\nfunction RespawnButton () {\r\n\tlet container = new PIXI.Container()\r\n\tlet btn = new PIXI.Graphics()\r\n\tbtn.beginFill(0x555555)\r\n\tbtn.drawRect(0, 0, 150, 50)\r\n\tcontainer.addChild(btn)\r\n\r\n\tconst text = new PIXI.Text('Respawn?', { font: 'Arial', fill: '#FFFFFF', fontSize: 20, fontWeight: 'bold' })\r\n\ttext.position.x = btn.width/2 - text.width/2\r\n\ttext.position.y = btn.height/2 - text.height/2\r\n\tcontainer.addChild(text)\r\n\r\n\treturn container\r\n}\r\n\r\nexport default function ScreenUI () {\r\n\tlet { gameObjects, TweenLite: { from }, Bounce } = window\r\n  let gameContainer = gameObjects.getKeyValue('game-pixi-container')\r\n  let engine = gameObjects.getKeyValue('engine')\r\n\r\n  let zombies = gameObjects.getKeyValue('zombies')\r\n\r\n\tthis.respawnButton = new RespawnButton()\r\n\tgameContainer.addChild(this.respawnButton)\r\n\tthis.respawnButton.visible = false\r\n\tthis.respawnButton.interactive = true\r\n\tthis.respawnButton.pivot.x = this.respawnButton.width/2\r\n\tthis.respawnButton.pivot.y = this.respawnButton.height/2\r\n\tthis.respawnButton.position.x = (this.respawnButton.width/2) + 20\r\n\tthis.respawnButton.position.y = (this.respawnButton.height/2) + 20\r\n\r\n  this.respawn = () => {\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.respawn()\r\n    createGenericMessage('Still alive!', 0xFFFFFF, .5, .75)\r\n    if (player.lastDeathType !== FELL_OFF) {\r\n      GenerateRandomAmmoDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      },\r\n      {\r\n        min: 10, max: getState().game.player.weapons.ammoCapacity[getState().game.player.weapons.equipped] * 2\r\n      },\r\n      random.int(1, 2))\r\n      GenerateRandomCreditDrops({\r\n        x: random.float(player.body.position.x - 100, player.body.position.x + 100),\r\n        y: player.body.position.y - 200,\r\n      })\r\n    }\r\n  }\r\n\r\n\tthis.respawnButton.on('click', () => {\r\n\t\tthis.respawn()\r\n\t\tthis.respawnButton.visible = false\r\n\t})\r\n\r\n\tapplyGsapHover(this.respawnButton)\r\n\r\n\tthis.showRespawnButton = () => {\r\n\t\tthis.respawnButton.visible = true\r\n\t\tfrom(this.respawnButton.scale, 1.5, { x: .5, y: .5, ease: Bounce.easeOut })\r\n  }\r\n\r\n  const unpause = () => {\r\n    // player \r\n    let player = gameObjects.getKeyValue('player')\r\n    player.pause()\r\n    // zombies \r\n    zombies.forEach(zombie => {\r\n      zombie.unpause()\r\n    })\r\n    // resume physics engine\r\n    engine.timing.timeScale = 1\r\n  }\r\n\r\n  const pause = () => {\r\n    dispatch( unsetAllKeys() )\r\n    // character\r\n    let player = gameObjects.getKeyValue('player')\r\n    player.unpause()\r\n    // zombies\r\n    zombies.forEach(zombie => {\r\n      zombie.pause()\r\n    })\r\n    // pause physics engine\r\n    engine.timing.timeScale = 0.05\r\n  }\r\n\r\n  this.unpause = unpause\r\n  this.pause = pause\r\n  \r\n  this.togglePause = () => {\r\n    let { gameState, gameSubState } = getState().game\r\n    if (gameState !== GameStates.MAIN_MENU && gameState !== GameStates.SHOP_MENU && gameSubState !== SubStates.BUILD_PLACEMENT_MODE && gameState !== GameStates.BUILD_MENU && gameSubState !== SubStates.SHOP_QUERY_SUBMENU && gameSubState !== SubStates.WAVE_DEFEATED) {\r\n      let player = gameObjects.getKeyValue('player')\r\n      if (!player.dead) {\r\n        if (gameState !== GameStates.PAUSE && gameSubState !== SubStates.WAITING) {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.PAUSE) )\r\n          pause()\r\n        } else {\r\n          dispatch( gameStateTransition('main', gameState, GameStates.GAMEPLAY) )\r\n          if (gameSubState === SubStates.WAVE_STARTED) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAVE_STARTED) )\r\n          } else if (gameSubState === SubStates.NEUTRAL) {\r\n            dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n          }\r\n          unpause()\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  // add a pause listener to the screen UI ('P' (80) or ESC (27) key)\r\n  document.body.addEventListener('keydown', e => {\r\n    if (e.key === 'p' || e.key === 'P' || e.key === 'Escape') {\r\n      console.log('pause key was pressed')\r\n      this.togglePause()\r\n    }\r\n  })\r\n\r\n\treturn this\r\n\r\n}\r\n","// Matter and Custom\r\nimport * as PIXI from 'pixi.js'\r\nimport store from '../../app/store'\r\nimport { makePixiSprite, setUpMatter, setUpPixi } from './utils/Utils'\r\nimport { World, Bodies, Events } from 'matter-js'\r\nimport Player from './player/Player'\r\nimport createGameObjects from './createGameObjects'\r\nimport { setTexturePath, gameStateTransition } from './gameSlice'\r\nimport { gameTickHandler, checkCollisionStart } from './engineHandlers'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport WeaponsUI from './ui/WeaponsUI'\r\nimport ScreenUI from './ui/ScreenUI'\r\n// images\r\nimport weaponUI_pistolIcon from '../../images/pistol-icon.png'\r\nimport weaponUI_smgIcon from '../../images/smg-icon.png'\r\nimport weaponUI_shotgunIcon from '../../images/shotgun-icon.png'\r\n// environment textures \r\nimport groundTexture from '../../images/GroundTexture_Optimized.png'\r\nimport wallTile from '../../images/wallTile.png'\r\nimport gradientAlpha from '../../images/gradient-layer-mask.png'\r\n// game cover art\r\nimport coverArt from '../../images/GameCover.png'\r\n// explosive barrel \r\nimport explosiveBarrel from '../../images/explosiveBarrier.png'\r\n// player head\r\nimport charHead from '../../images/head-sprite.png'\r\n// Sound FX\r\nimport { Howl, Howler } from 'howler'\r\nimport _9mm1 from '../../sounds/9mm1.wav'\r\nimport _9mm2 from '../../sounds/9mm2.mp3'\r\nimport explosion1 from '../../sounds/explosion1.wav'\r\nimport distant_explosion from '../../sounds/explosion_distant.wav' \r\nimport pistolReloadSnd from '../../sounds/pistolReload.wav'\r\nimport bulletImpact_body from '../../sounds/bodyBulletImpact.wav'\r\nimport grenadeClink from '../../sounds/grenadeClink.wav'\r\nimport throwSound from '../../sounds/throw.wav'\r\nimport coinCollectSound from '../../sounds/coinCollect.wav'\r\nimport ammoCollectSound from '../../sounds/collectAmmo.wav'\r\nimport itemCollectSound from '../../sounds/collectItem.wav'\r\nimport bloodSquash from '../../sounds/bloodSquash.flac'\r\nimport bloodSquish from '../../sounds/bloodSquish.wav'\r\nimport bloodSmack from '../../sounds/bloodSmack.wav'\r\nimport deathRipSound from '../../sounds/deathRipSound.wav'\r\nimport jumpLandingSound from '../../sounds/jumpLanding.wav'\r\nimport dirtImpactSound from '../../sounds/dirtImpact.wav'\r\nimport zombieHurtSound from '../../sounds/zombieHurt.wav'\r\nimport zombieDeathSound from '../../sounds/zombieDeath.wav'\r\nimport pain1Sound from '../../sounds/pain1.wav'\r\nimport pain2Sound from '../../sounds/pain2.wav'\r\nimport playerDeathSound from '../../sounds/playerDeath.wav'\r\nimport buttonAddSound from '../../sounds/buttonAdd.wav'\r\nimport buttonSubtractSound from '../../sounds/buttonSubtract.wav'\r\nimport buttonClickSound from '../../sounds/buttonClick.wav'\r\nimport buttonHoverSound from '../../sounds/buttonHover.wav'\r\nimport placeObjectSound from '../../sounds/placeObject.flac'\r\nimport buttonCancelSound from '../../sounds/cancelSound.wav'\r\nimport purchaseSound from '../../sounds/moneySound.wav'\r\nimport confirmSound from '../../sounds/purchase.wav'\r\nimport shellImpactSound from '../../sounds/shellImpact.wav'\r\nimport healthPickupSound from '../../sounds/health.wav'\r\nimport zombieGrowl from '../../sounds/zombieGrowl.wav'\r\nimport smgFire from '../../sounds/smgFire.wav'\r\nimport magDrop from '../../sounds/magDrop.wav'\r\nimport shotShell from '../../sounds/shotShell.wav'\r\nimport shotgunBlast from '../../sounds/shotgunBlast.wav'\r\n\r\n// spritesheets in /public folder to use pixi .loader, not webpack \r\nconst zombieWalkcycleTest = './spritesheet-assets/zombie_walkcycle_test.json'\r\nconst z_walk_spritesheet = './spritesheet-assets/z_walk/z_walk.json'\r\nconst z_attack_spritesheet = './spritesheet-assets/z_attack/z_attack.json'\r\nconst z_parts_spritesheet = './spritesheet-assets/z_parts/limbs.json'\r\nconst muzzle_flashes_spritesheet = './spritesheet-assets/FX/muzzle_flashes/muzzle-flashes.json'\r\n// updated zombie sprites\r\nconst zomb_idle_sheet = './spritesheet-assets/enemy-spritesheets/zombie/idle/idle.json'\r\nconst zomb_walk_sheet = './spritesheet-assets/enemy-spritesheets/zombie/walkcycle/walkcycle.json'\r\nconst zomb_attack1_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack1/attack1.json'\r\nconst zomb_attack2_sheet = './spritesheet-assets/enemy-spritesheets/zombie/attack2/attack2.json'\r\nconst zomb_parts_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts.json'\r\nconst zomb_parts_gored_sheet = './spritesheet-assets/enemy-spritesheets/zombie/parts/zombie_parts_gored.json'\r\nconst zomb_slash_fx_sheet = './spritesheet-assets/enemy-spritesheets/zombie/slash_fx/slash_fx.json'\r\n\r\n// barriers\r\nconst barriers_sheet = './spritesheet-assets/barriers/barriers.json'\r\n\r\n// updated character sprites \r\nconst char_parts = './spritesheet-assets/character-spritesheets/parts/player_parts.json'\r\nconst char_idle_sheet = './spritesheet-assets/character-spritesheets/idle/char_idle_anim.json'\r\nconst char_run_sheet = './spritesheet-assets/character-spritesheets/run/char_run_anim.json'\r\nconst char_jump_sheet = './spritesheet-assets/character-spritesheets/jump/char_jump_anim.json'\r\nconst char_reload_pistol_sheet = './spritesheet-assets/character-spritesheets/reloadPistol/char_reload_pistol_anim.json'\r\nconst char_reload_smg_sheet = './spritesheet-assets/character-spritesheets/reloadSMG/char_reload_smg_anim.json'\r\nconst left_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmPistolFire/char_left_arm_pistol_fire.json'\r\nconst right_arm_pistol_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmPistolFire/char_right_arm_pistol_fire.json'\r\nconst left_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/leftArmSMGFire/char_left_arm_smg_fire.json'\r\nconst right_arm_smg_fire_sheet = './spritesheet-assets/character-spritesheets/rightArmSMGFire/char_right_arm_smg_fire.json'\r\nconst melee_pistol_sheet = './spritesheet-assets/character-spritesheets/melee/melee_pistol/melee_pistol.json'\r\nconst melee_ump_sheet = './spritesheet-assets/character-spritesheets/melee/melee_ump/melee_ump.json'\r\nconst melee_shotgun_sheet = './spritesheet-assets/character-spritesheets/melee/melee_shotgun/melee_shotgun.json'\r\nconst grenade_pistol_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/pistolEquipped/grenade_throw_pistol.json'\r\nconst grenade_ump_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/umpEquipped/grenade_throw_ump.json'\r\nconst grenade_shotgun_sheet = './spritesheet-assets/character-spritesheets/grenadeThrow/shotgunEquipped/grenade_throw_shotgun.json'\r\nconst arms_fire_shotgun = './spritesheet-assets/character-spritesheets/armsFireShotgun/arms_fire_shotgun_anim.json'\r\nconst char_reload_shotgun_sheet = './spritesheet-assets/character-spritesheets/reloadShotgun/reloadShotgun.json'\r\n\r\n// blood effects\r\nconst blood_spurt_1 = './spritesheet-assets/FX/blood_fx/blood_spurt_1/blood_spurt_1.json'\r\nconst blood_spurt_2 = './spritesheet-assets/FX/blood_fx/blood_spurt_2/blood_spurt_2.json'\r\nconst blood_spurt_3 = './spritesheet-assets/FX/blood_fx/blood_spurt_3/blood_spurt_3.json'\r\n\r\n// landmine\r\nconst landmine_sheet = './spritesheet-assets/landmine/landmine.json'\r\nconst clustermine_sheet = './spritesheet-assets/clustermine/clustermine.json'\r\nconst remote_mine_sheet = './spritesheet-assets/remote-mine/remote-mine.json'\r\n\r\n// turret\r\nconst turret_scan_sheet = './spritesheet-assets/turret/sheets/turret_scan.json'\r\nconst turret_shoot_sheet = './spritesheet-assets/turret/sheets/turret_shoot.json'\r\n\r\n// explosion assts\r\nconst explosion_assets_sheet = './spritesheet-assets/FX/explosion_fx/explosion_assets.json'\r\nconst wood_planks_sheet = './spritesheet-assets/FX/wood_planks/wood_planks.json'\r\n\r\n// ground spatters \r\nconst ground_effects_sheet = './spritesheet-assets/FX/ground_fx/ground_fx.json'\r\n\r\n// FX\r\nconst explosion3d1_sheet = './spritesheet-assets/FX/explosion3d/explosion3d1.json'\r\nconst explosion3d2_sheet = './spritesheet-assets/FX/explosion3d/explosion3d2.json'\r\nconst sparks_sheet = './spritesheet-assets/FX/spark-particle/spark_particle.json'\r\nconst muzzle_sparks_sheet = './spritesheet-assets/FX/muzzle-sparks/muzzle_sparks.json'\r\n\r\nlet { dispatch, getState } = store\r\n\r\nlet { TweenLite: { to } } = window\r\n\r\nconst { world, render, engine, width, height, worldWidth } = setUpMatter('app-container', true)\r\n\r\nconst { app, loader } = setUpPixi('app-container')\r\n\r\nconst addGround = () => {\r\n\tlet ground = Bodies.rectangle(worldWidth/2, height, worldWidth, height/2, { \r\n    isStatic: true,\r\n    collisionFilter: {\r\n      mask: 3\r\n    }\r\n  })\r\n\tground.label = 'ground'\r\n\tWorld.add(world, ground)\r\n\t// dispatch(setGroundId(ground.id))\r\n\treturn ground\r\n}\r\n\r\nexport default function buildGame() {\r\n\r\n\tloader\r\n\t.add(gradientAlpha)\r\n\t.add(wallTile)\r\n\t.add(char_reload_shotgun_sheet)\r\n\t.add(arms_fire_shotgun)\r\n\t.add(sparks_sheet)\r\n\t.add(muzzle_sparks_sheet)\r\n\t.add(explosion3d1_sheet)\r\n\t.add(explosion3d2_sheet)\r\n  .add(turret_scan_sheet)\r\n  .add(turret_shoot_sheet)\r\n\t.add(remote_mine_sheet)\r\n\t.add(clustermine_sheet)\r\n\t.add(landmine_sheet)\r\n\t.add(explosiveBarrel)\r\n  .add(barriers_sheet)\r\n\t.add(groundTexture)\r\n\t.add(zombieWalkcycleTest)\r\n\t.add(z_walk_spritesheet)\r\n\t.add(z_attack_spritesheet)\r\n\t.add(z_parts_spritesheet)\r\n\t.add(zomb_idle_sheet)\r\n\t.add(zomb_walk_sheet)\r\n\t.add(zomb_attack1_sheet)\r\n\t.add(zomb_attack2_sheet)\r\n\t.add(zomb_parts_sheet)\r\n\t.add(zomb_parts_gored_sheet)\r\n\t.add(zomb_slash_fx_sheet)\r\n\t.add(muzzle_flashes_spritesheet)\r\n\t.add(blood_spurt_1)\r\n\t.add(blood_spurt_2)\r\n  .add(blood_spurt_3)\r\n\t.add(explosion_assets_sheet)\r\n\t.add(wood_planks_sheet)\r\n\t.add(ground_effects_sheet)\r\n\t.add(char_parts)\r\n  .add(char_idle_sheet)\r\n  .add(char_run_sheet)\r\n  .add(char_jump_sheet)\r\n  .add(char_reload_pistol_sheet)\r\n  .add(char_reload_smg_sheet)\r\n  .add(melee_pistol_sheet)\r\n\t.add(melee_ump_sheet)\r\n\t.add(melee_shotgun_sheet)\r\n  .add(grenade_pistol_sheet)\r\n  .add(grenade_ump_sheet)\r\n  .add(grenade_shotgun_sheet)\r\n  .add(left_arm_pistol_fire_sheet)\r\n  .add(right_arm_pistol_fire_sheet)\r\n  .add(left_arm_smg_fire_sheet)\r\n  .add(right_arm_smg_fire_sheet)\r\n  .add(charHead)\r\n\t.add(weaponUI_pistolIcon)\r\n\t.add(weaponUI_smgIcon)\r\n\t.add(weaponUI_shotgunIcon)\r\n\t.load(setUp)\r\n\r\n\tfunction setUp () {\r\n\r\n\t\twindow.gameObjects = createGameObjects()\r\n\t\tlet { gameObjects } = window\r\n\r\n\t\t// images\r\n\t\tdispatch(setTexturePath('game-cover', coverArt))\r\n\t\tdispatch(setTexturePath('char-head', charHead))\r\n\t\tdispatch(setTexturePath('gradient-alpha', gradientAlpha))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-pistol', weaponUI_pistolIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-smg', weaponUI_smgIcon))\r\n\t\tdispatch(setTexturePath('weapon-ui-icon-shotgun', weaponUI_shotgunIcon))\r\n\t\tdispatch(setTexturePath('ground-texture', groundTexture))\r\n\t\tdispatch(setTexturePath('explosive-barrel', explosiveBarrel))\r\n\t\t// env textures\r\n    let groundTex = makePixiSprite('ground-texture')\r\n    groundTex.pivot.x = groundTex.width * .5\r\n\t\tgroundTex.pivot.y = groundTex.height * .425\r\n\t\tlet gradientAlphaImg = makePixiSprite('gradient-alpha')\r\n\t\tgradientAlphaImg.width = width\r\n\t\tgradientAlphaImg.height = height\r\n\t\tgameObjects.setKeyValue('gradient-alpha', gradientAlphaImg)\r\n\t\tlet gameCover = makePixiSprite('game-cover')\r\n\t\tgameObjects.setKeyValue('game-cover-art', gameCover)\r\n\t\t// set sound fx\r\n\t\tgameObjects.setKeyValue('9mm-sound1', _9mm1)\r\n\t\tgameObjects.setKeyValue('9mm-sound2', _9mm2)\r\n\t\tgameObjects.setKeyValue('explosion1', explosion1)\r\n\t\tgameObjects.setKeyValue('distant-explosion', distant_explosion)\r\n\t\tgameObjects.setKeyValue('pistol-reload-sound', pistolReloadSnd)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body', bulletImpact_body)\r\n\t\tgameObjects.setKeyValue('bullet-impact-body-sound', new Howl({src:[bulletImpact_body]}))\r\n\t\tgameObjects.setKeyValue('grenade-clink-sound', new Howl({ src: [grenadeClink] }))\r\n\t\tgameObjects.setKeyValue('throw-sound', new Howl({ src: [throwSound] }))\r\n\t\tgameObjects.setKeyValue('confirm-sound', new Howl({ src: [ confirmSound ] }))\r\n\t\tgameObjects.setKeyValue('coin-collect-sound', new Howl({ src: [ coinCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('ammo-collect-sound', new Howl({ src: [ ammoCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('item-collect-sound', new Howl({ src: [ itemCollectSound ] }))\r\n\t\tgameObjects.setKeyValue('blood-squish-sound', new Howl({ src: [ bloodSquish ] }))\r\n\t\tgameObjects.setKeyValue('blood-squash-sound', new Howl({ src: [ bloodSquash ] }))\r\n\t\tgameObjects.setKeyValue('blood-smack-sound', new Howl({ src: [ bloodSmack ] }))\r\n\t\tgameObjects.setKeyValue('death-rip-sound', new Howl({ src: [ deathRipSound ] }))\r\n\t\tgameObjects.setKeyValue('jump-landing-sound', new Howl({ src: [ jumpLandingSound ] }))\r\n\t\tgameObjects.setKeyValue('dirt-impact-sound', new Howl({ src: [ dirtImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-hurt-sound', new Howl({ src: [ zombieHurtSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('zombie-death-sound', new Howl({ src: [ zombieDeathSound ], volume: 0.5 }))\r\n\t\tgameObjects.setKeyValue('pain1-sound', new Howl({ src: [ pain1Sound ] }))\r\n\t\tgameObjects.setKeyValue('pain2-sound', new Howl({ src: [ pain2Sound ] }))\r\n\t\tgameObjects.setKeyValue('player-death-sound', new Howl({ src: [ playerDeathSound ] }))\r\n\t\tgameObjects.setKeyValue('button-add-sound', new Howl({ src: [ buttonAddSound ] }))\r\n\t\tgameObjects.setKeyValue('button-subtract-sound', new Howl({ src: [ buttonSubtractSound ] }))\r\n\t\tgameObjects.setKeyValue('button-hover-sound', new Howl({ src: [ buttonHoverSound ] }))\r\n\t\tgameObjects.setKeyValue('button-click-sound', new Howl({ src: [ buttonClickSound ] }))\r\n\t\tgameObjects.setKeyValue('place-object-sound', new Howl({ src: [ placeObjectSound ] }))\r\n\t\tgameObjects.setKeyValue('button-cancel-sound', new Howl({ src: [ buttonCancelSound ] }))\r\n\t\tgameObjects.setKeyValue('purchase-sound', new Howl({ src: [ purchaseSound ] }))\r\n\t\tgameObjects.setKeyValue('shell-impact-sound', new Howl({ src: [ shellImpactSound ] }))\r\n\t\tgameObjects.setKeyValue('health-pickup-sound', new Howl({ src: [ healthPickupSound ] }))\r\n\t\tgameObjects.setKeyValue('zombie-growl-sound', new Howl({ src: [ zombieGrowl ] }))\r\n\t\tgameObjects.setKeyValue('smg-fire-sound', new Howl({ src: [ smgFire ] }))\r\n\t\tgameObjects.setKeyValue('mag-drop-sound', new Howl({ src: [ magDrop ] }))\r\n\t\tgameObjects.setKeyValue('shot-shell-sound', new Howl({ src: [ shotShell ] }))\r\n\t\tgameObjects.setKeyValue('shotgun-blast-sound', new Howl({ src: [ shotgunBlast ] }))\r\n\t\t// updated zombie sprites\r\n\t\tgameObjects.setKeyValue('zombie-idle-sheet', loader.resources[zomb_idle_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-walk-sheet', loader.resources[zomb_walk_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack1-sheet', loader.resources[zomb_attack1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-attack2-sheet', loader.resources[zomb_attack2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-sheet', loader.resources[zomb_parts_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-parts-gored-sheet', loader.resources[zomb_parts_gored_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('zombie-slash-fx-sheet', loader.resources[zomb_slash_fx_sheet].spritesheet)\r\n    gameObjects.setKeyValue('muzzle-flashes', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('sparks-sheet', loader.resources[sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('muzzle-sparks-sheet', loader.resources[muzzle_sparks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d1-sheet', loader.resources[explosion3d1_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('explosion3d2-sheet', loader.resources[explosion3d2_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-1', loader.resources[blood_spurt_1].spritesheet)\r\n\t\tgameObjects.setKeyValue('blood-spurt-2', loader.resources[blood_spurt_2].spritesheet)\r\n    gameObjects.setKeyValue('blood-spurt-3', loader.resources[blood_spurt_3].spritesheet)\r\n    gameObjects.setKeyValue('explosion-assets-sheet', loader.resources[explosion_assets_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('wood-planks-sheet', loader.resources[wood_planks_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('remote-mine-sheet', loader.resources[remote_mine_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('landmine-sheet', loader.resources[landmine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('clustermine-sheet', loader.resources[clustermine_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-scan-sheet', loader.resources[turret_scan_sheet].spritesheet)\r\n    gameObjects.setKeyValue('turret-shoot-sheet', loader.resources[turret_shoot_sheet].spritesheet)\r\n    gameObjects.setKeyValue('barriers-sheet', loader.resources[barriers_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('ground-fx-sheet', loader.resources[ground_effects_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('player-parts-sheet', loader.resources[char_parts].spritesheet)\r\n    gameObjects.setKeyValue('char-idle-sheet', loader.resources[char_idle_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-run-sheet', loader.resources[char_run_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-jump-sheet', loader.resources[char_jump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-pistol-sheet', loader.resources[char_reload_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-smg-sheet', loader.resources[char_reload_smg_sheet].spritesheet)\r\n    gameObjects.setKeyValue('char-reload-shotgun-sheet', loader.resources[char_reload_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('left-arm-pistol-fire-sheet', loader.resources[left_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-pistol-fire-sheet', loader.resources[right_arm_pistol_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('left-arm-smg-fire-sheet', loader.resources[left_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('right-arm-smg-fire-sheet', loader.resources[right_arm_smg_fire_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-pistol-sheet', loader.resources[melee_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-ump-sheet', loader.resources[melee_ump_sheet].spritesheet)\r\n    gameObjects.setKeyValue('melee-shotgun-sheet', loader.resources[melee_shotgun_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-pistol-sheet', loader.resources[grenade_pistol_sheet].spritesheet)\r\n    gameObjects.setKeyValue('grenade-ump-sheet', loader.resources[grenade_ump_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('grenade-shotgun-sheet', loader.resources[grenade_shotgun_sheet].spritesheet)\r\n\t\tgameObjects.setKeyValue('arms-fire-shotgun-sheet', loader.resources[arms_fire_shotgun].spritesheet)\r\n\t\t\r\n\t\t\r\n    let container = new PIXI.Container()\r\n\t\tcontainer.interactive = true\r\n\t\tcontainer.width = width\r\n\t\tcontainer.height = height\r\n\t\t\r\n    // make dedicated muzzle flashes for re-use instead of making a new image each time\r\n\t\tgameObjects.setKeyValue('muzzle-flashes-sheet', loader.resources[muzzle_flashes_spritesheet].spritesheet)\r\n    \r\n\t\tlet ground = addGround()\r\n\t\tapp.stage.interactive = true\r\n\t\tapp.stage.addChild(container)\r\n\t\tcontainer.addChild(groundTex)\r\n    \r\n\t\tgameObjects.setKeyValue('pixi-app', app)\r\n\t\tgameObjects.setKeyValue('game-pixi-container', container)\r\n\t\t\r\n    gameObjects.setKeyValue('ammo-drops-by-type', {\r\n\t\t\t'pistol weapon': [],\r\n      'smg weapon': [],\r\n      'shotgun weapon': [],\r\n    })\r\n    gameObjects.setKeyValue('text-messages', [])\r\n    gameObjects.setKeyValue('reload-text-messages', [])\r\n\t\tgameObjects.setKeyValue('gibs', [])\r\n    gameObjects.setKeyValue('grenades', [])\r\n    gameObjects.setKeyValue('explosions', [])\r\n    gameObjects.setKeyValue('rocks', [])\r\n    gameObjects.setKeyValue('currency-drops', [])\r\n\t\tgameObjects.setKeyValue('pistol-shells', [])\r\n\t\tgameObjects.setKeyValue('pistol-bullets', [])\r\n\t\tgameObjects.setKeyValue('build-objects', [])\r\n\t\tgameObjects.setKeyValue('bullet-impacts', [])\r\n\t\tgameObjects.setKeyValue('wood-planks', [])\r\n\t\tgameObjects.setKeyValue('spark-sprites', [])\r\n\t\tgameObjects.setKeyValue('explosion-sprites', [])\r\n\t\tgameObjects.setKeyValue('remote-mines', {})\r\n\t\tgameObjects.setKeyValue('remote-mines-array', [])\r\n\t\tgameObjects.setKeyValue('static-ground-effects', [])\r\n\t\tgameObjects.setKeyValue('zombie-ragdolls', [])\r\n\t\tgameObjects.setKeyValue('zombies', [])\r\n\t\tgameObjects.setKeyValue('health-drops', [])\r\n\t\t\r\n\t\tgameObjects.setKeyValue('wall-tile', wallTile)\r\n\t\tgameObjects.setKeyValue('ground', ground)\r\n\t\tgameObjects.setKeyValue('ground-texture', groundTex)\r\n\t\tgameObjects.setKeyValue('game-width', width)\r\n\t\tgameObjects.setKeyValue('game-height', height)\r\n\t\tgameObjects.setKeyValue('world-width', worldWidth)\r\n\t\tgameObjects.setKeyValue('world', world)\r\n\t\tgameObjects.setKeyValue('render', render)\r\n\t\tgameObjects.setKeyValue('engine', engine)\r\n\t\tlet screenUI = new ScreenUI()\r\n\t\tgameObjects.setKeyValue('screen-ui', screenUI)\r\n\t\tgameObjects.setKeyValue('weapons-ui', new WeaponsUI())\r\n\t\tlet player = new Player()\r\n\t\tgameObjects.setKeyValue('player', player)\r\n\t\t\r\n\t\tfunction buildMenu () {\r\n\t\t\t// create a PIXI menu\r\n\t\t\tlet menu = new PIXI.Container()\r\n\t\t\t// let menuBG = new PIXI.Graphics()\r\n\t\t\t// menuBG.beginFill(0x222222)\r\n\t\t\t// menuBG.drawRect(0, 0, width, height)\r\n\t\t\t// gameCover.width = gameCover.width * .5\r\n\t\t\t// gameCover.height = gameCover.height * .5\r\n\t\t\tgameCover.pivot.x = gameCover.width *  .5\r\n\t\t\tgameCover.pivot.y = gameCover.height *  .5\r\n\t\t\tgameCover.scale.x = .51\r\n\t\t\tgameCover.scale.y = .51\r\n\t\t\tcontainer.alpha = 0\r\n\t\t\tmenu.addChild(\r\n\t\t\t\tgameCover\r\n\t\t\t)\r\n\t\t\t// gameCover.on('added', () => {\r\n\t\t\t// })\r\n\t\t\tcontainer.alpha = 1\r\n\t\t\tmenu.interactive = true\r\n\t\t\tlet playBtn = new PIXI.Container()\r\n\t\t\tlet playBtnGfc = new PIXI.Graphics()\r\n\t\t\tplayBtnGfc.beginFill(0x555555)\r\n\t\t\tplayBtnGfc.drawRect(0, 0, 250, 80)\r\n\t\t\tlet playBtnTxt = new PIXI.Text('Play', {\r\n\t\t\t\tfontFamily: 'Arial',\r\n\t\t\t\tfontSize: 36,\r\n\t\t\t\tfill: 0xFFFFFF\r\n\t\t\t})\r\n\t\t\tplayBtn.addChild(playBtnGfc, playBtnTxt)\r\n\t\t\tfunction positionPlayButton() {\r\n\t\t\t\tplayBtn.position.x = width/2 - playBtn.width/2\r\n\t\t\t\tplayBtn.position.y = height/2 - playBtn.height/2\r\n\t\t\t}\r\n\t\t\tpositionPlayButton()\r\n\t\t\tplayBtnTxt.position.x = playBtn.width/2 - playBtnTxt.width/2\r\n\t\t\tplayBtnTxt.position.y = playBtn.height/2 - playBtnTxt.height/2\r\n\t\t\tplayBtn.interactive = true\r\n\t\t\tplayBtn.on('click', () => {\r\n\t\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\tdispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n\t\t\t\tdispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseover', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.05, y: 1.05, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\tplayBtn.on('mouseout', () => {\r\n\t\t\t\tto(playBtn.scale, .35, { x: 1.00, y: 1.00, onUpdate: positionPlayButton })\r\n\t\t\t})\r\n\t\t\t// menu.addChild(playBtn) -- remove pixi main menu button \r\n\t\t\tapp.stage.addChild(menu)\r\n\t\t\tgameObjects.setKeyValue('main-menu', menu)\r\n\r\n\t\t\treturn {\r\n\t\t\t\tmenu\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet { menu: mainMenu } = buildMenu()\r\n\r\n\t\tEvents.on(engine, 'tick', e => {\r\n\t\t\tlet { game: { gameState, gameSubState } } = getState()\r\n\t\t\t\r\n\t\t\tif (mainMenu.visible === true) {\r\n\t\t\t\tmainMenu.visible = false\r\n\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t// app.view.style.opacity = .75\r\n\t\t\t}\r\n\t\t\tif (gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW) {\r\n        if (mainMenu.visible === false) {\r\n          mainMenu.visible = true\r\n\t\t\t\t\tdocument.body.style.cursor = 'auto'\r\n\t\t\t\t\t// app.view.style.opacity = .85\r\n\t\t\t\t}\r\n      }\r\n      if (gameState === GameStates.MAIN_MENU || gameState === GameStates.SCORES_VIEW || gameState === GameStates.PAUSE || gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameState === GameStates.SHOP_MENU || gameState === GameStates.BUILD_MENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n        document.body.style.cursor = 'auto'\r\n        document.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n      } else {\r\n        document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n      }\r\n      if (gameState === GameStates.GAMEPLAY) {\r\n        if (gameSubState === SubStates.SHOP_QUERY_SUBMENU || gameSubState === SubStates.PLAYER_DEATH) {\r\n          document.body.style.cursor = 'auto'\r\n        } else {\r\n          document.body.style.cursor = 'none'\r\n        }\r\n\t\t\t}\r\n      \r\n      gameTickHandler(e, gameObjects)\r\n\r\n\t\t})\r\n\r\n\t\tEvents.on(engine, 'collisionStart', e => {\r\n\t\t\tlet { game: { gameState } } = getState()\r\n\t\t\tif (gameState === GameStates.GAMEPLAY) {\r\n\t\t\t\tfor (let i = 0; i < e.pairs.length; ++i) {\r\n\t\t\t\t\tcheckCollisionStart(e, i, gameObjects)\r\n\t\t\t\t}\r\n\t\t\t}\r\n    })\r\n    \r\n\t}\r\n\r\n}\r\n","// anything that we can't manage with redux will go here,\r\n// meaning full objects and functions with methods for\r\n// manipulating Matter objects\r\nexport default function createGameObjects() {\r\n\tlet state = new State()\r\n\tfunction State() {\r\n\t\tthis.state = {}\r\n\t\tthis.getKeyValue = key => {\r\n      if (this.state[key]) {\r\n        return this.state[key]\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n\t\tthis.setKeyValue = (key, value) => {\r\n      this.state[key] = value\r\n      return this.state[key]\r\n    }\r\n\t\tthis.getFullState = () => { return this.state }\r\n\t\tthis.setFullState = (obj) => { this.state = obj }\r\n\t}\r\n\treturn state\r\n}\r\n","import { batch } from 'react-redux'\r\nimport store from '../../../app/store'\r\nimport { incrementWave, setWaveCountToDefeat, decrementZombieAttackTimeLimit, incrementZombieHealth, updateZombieWalkSpeed, updateZombieAttackDmg } from '../gameSlice'\r\nimport { createWaveMessage } from '../createMessages'\r\nimport { GenerateRandomAmmoDrops, GenerateRandomCreditDrops, GenerateZombies } from '../items/ItemGenerators'\r\nimport GameStates from '../constants/GameStates'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\n\r\nconst { getState, dispatch } = store\r\n\r\nlet cases\r\n\r\nconst calcZombiesToSpawn = (i) => (\r\n  i <= 3 ? 2\r\n    : i <= 6 ? 2\r\n    : i % 3 <= 0 ? \r\n      Math.floor(i/3) : Math.floor((i-1)/3)\r\n)\r\n\r\nexport const startWave = () => {\r\n\r\n  // init cases\r\n  if (!cases) {\r\n    cases = {}\r\n    for (let i = 0; i < 40; ++i) {\r\n      cases[i.toString()] = () => {\r\n        batch(() => {\r\n          dispatch( updateZombieWalkSpeed(i) )\r\n          dispatch( updateZombieAttackDmg(i) )\r\n          dispatch( decrementZombieAttackTimeLimit(i) )\r\n          dispatch( incrementZombieHealth(i) )\r\n        })\r\n        let toSpawn = calcZombiesToSpawn(i)\r\n        GenerateZombies( toSpawn )\r\n        GenerateRandomAmmoDrops()\r\n        GenerateRandomCreditDrops()\r\n        dispatch( setWaveCountToDefeat( toSpawn ) )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (getState().game.gameState === GameStates.PAUSE) {\r\n    console.log( 'waiting for player to unpause game...' )\r\n    setTimeout(startWave, 2000)\r\n  } else {\r\n    if (getState().game.waveNum === 0) {\r\n      dispatch(incrementWave())\r\n    }\r\n\r\n    // try dynamic switch case in form of js object dictionary\r\n    let waveNum = getState().game.waveNum\r\n    if (cases[waveNum]) {\r\n      cases[waveNum]()\r\n    }\r\n\r\n  }\r\n}\r\n\r\nconst clearGameObjects = () => {\r\n  // destroy current renderable objects \r\n  let { gameObjects } = window\r\n  let credits = gameObjects.getKeyValue('currency-drops')\r\n  let healthdrops = gameObjects.getKeyValue('health-drops')\r\n  let pistolAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_PISTOL]\r\n  let smgAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SMG]\r\n  let shotgunAmmoDrops = gameObjects.getKeyValue('ammo-drops-by-type')[WEAPON_TYPE_SHOTGUN]\r\n  let zombies = gameObjects.getKeyValue('zombies')\r\n  credits.forEach(credit => { credit.destroy() })\r\n  pistolAmmoDrops\r\n    .concat(smgAmmoDrops)\r\n    .concat(shotgunAmmoDrops)\r\n    .forEach(ammo => { ammo.destroy() })\r\n  healthdrops.forEach(health => { health.destroy() })  \r\n  // zombies.forEach(z => { z.destroy() })\r\n  // set emtpy arrays for everthing \r\n  // gameObjects.setKeyValue('ammo-drops-by-type', {\r\n  //   'pistol weapon': [],\r\n  //   'smg weapon': [],\r\n  //   'shotgun weapon': [],\r\n  // })\r\n  // gameObjects.setKeyValue('text-messages', [])\r\n  // gameObjects.setKeyValue('reload-text-messages', [])\r\n  // gameObjects.setKeyValue('gibs', [])\r\n  // gameObjects.setKeyValue('grenades', [])\r\n  // gameObjects.setKeyValue('explosions', [])\r\n  // gameObjects.setKeyValue('rocks', [])\r\n  // gameObjects.setKeyValue('currency-drops', [])\r\n  // gameObjects.setKeyValue('pistol-shells', [])\r\n  // gameObjects.setKeyValue('pistol-bullets', [])\r\n  // gameObjects.setKeyValue('build-objects', [])\r\n  // gameObjects.setKeyValue('bullet-impacts', [])\r\n  // gameObjects.setKeyValue('wood-planks', [])\r\n  // gameObjects.setKeyValue('spark-sprites', [])\r\n  // gameObjects.setKeyValue('explosion-sprites', [])\r\n  // gameObjects.setKeyValue('remote-mines', {})\r\n  // gameObjects.setKeyValue('remote-mines-array', [])\r\n  // gameObjects.setKeyValue('static-ground-effects', [])\r\n  // gameObjects.setKeyValue('zombie-ragdolls', [])\r\n  // gameObjects.setKeyValue('zombies', [])\r\n}\r\n\r\nexport const waveDefeated = () => {\r\n\tdispatch(setWaveCountToDefeat(null))\r\n  createWaveMessage('Wave Defeated!')\r\n  window.TweenLite.delayedCall(30, clearGameObjects)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbottom: 0;\r\nmargin: auto;\r\ndisplay: block;\r\nposition: absolute;\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : 'none' };\r\n`\r\n\r\nconst Backing = styled.div`\r\nheight: ${ props => props.height }px;\r\nwidth: ${ props => props.width }px;\r\nopacity: ${ props => props.opacity ? props.opacity : .5 };\r\nbackground-color: ${ props => props.bgcolor ? props.bgcolor : '#222' };\r\n`\r\n\r\nconst MenuTitle = styled.div`\r\nleft: 0;\r\nright: 0;\r\ntop: 20px;\r\nwidth: 300px;\r\nmargin: auto;\r\ndisplay: block;\r\nfont-size: 2em;\r\ntext-align: center;\r\nposition: absolute;\r\n`\r\n\r\nconst MenuButtonContainer = styled.div`\r\ntop: ${ props => props['space-top'] ? props['space-top'] : 80 }px;\r\nfont-size: 1.5em;\r\ntext-align: center;\r\nposition: absolute;\r\nwidth: 100%;\r\n`\r\n\r\nconst MenuButton = styled.div`\r\ncolor: #fff;\r\nposition: relative;\r\nwidth: ${ props => props['width'] ? props['width'] : 200}px;\r\nheight: ${ props => props['height'] ? props['height'] : 60 }px;\r\nline-height: ${ props => props['height'] ? props['height'] : 60 }px;\r\nbackground-color: ${ props => props['bgcolor'] ? props['bgcolor'] : '#00589b' };\r\nleft: 0; right: 0;\r\ncursor: pointer;\r\nmargin: auto;\r\nborder: 2px solid ${ props => props['bordercolor'] ? props['bordercolor'] : 'rgba(0,0,0,0)' };\r\ntransform: scale(1.00);\r\n&:hover {\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transition: all .35s' };\r\n  ${ props => props && props.cancelTransition === true ? '' : 'transform: scale(1.05)' };\r\n  background-color: ${ props => props['hovercolor'] };\r\n  border: 2px solid ${ props => props['hoverborder'] ? props['hoverborder'] : 'rgba(0,0,0,0)' };\r\n}\r\n`\r\n\r\nconst MenuButtonSpacer = styled.div`\r\npadding: ${ props => props['padding'] ? props['padding'] : 10 }px;\r\n`\r\n\r\nexport default {\r\n  Container,\r\n  Backing, \r\n  MenuTitle,\r\n  MenuButtonContainer,\r\n  MenuButton,\r\n  MenuButtonSpacer\r\n}\r\n","import React, { Children } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector, useDispatch, batch } from 'react-redux'\r\nimport { showLaserSight, gameStateTransition, incrementWave, subtractFromTotalCredits, addPurchase, addToTotalAmmo,\r\n  upgradeRunSpeed, upgradeReloadSpeed, upgradeJumpForce, upgradeDefense, upgradeMelee, attachMod, setWeaponEquipped,\r\n  updateWeaponsList, setPlayerMagnetism, setPlayerMagDamage, setPlayerLastBullet, setPlayerCreditDropper,\r\n  setPlayerAmmoDropper, \r\n  setPlayerHealthDropper,\r\n  setPlayerQuickTurret,\r\n  setPlayerBarrierPlus,\r\n  setPlayerFusterCluck} from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SMG, WEAPON_TYPE_GRENADE, WEAPON_TYPE_SHOTGUN } from '../constants/weapons'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButton, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const Inline = styled.div`\r\ndisplay: inline-block;\r\nvertical-align: top;\r\nmargin-right: 4px;\r\n`\r\n\r\nconst IncrementDecrement = styled.div`\r\ntop: 0;\r\nwidth: 30px;\r\nheight: 30px;\r\ncolor: darkgreen;\r\nline-height: 30px;\r\ntext-align: center;\r\nposition: absolute;\r\nbackground-color: #ccc;\r\nleft: ${ props => props['left'] ? 0 : 'auto' };\r\nright: ${ props => props['right'] ? 0 : 'auto' };\r\ntransform: scale(1.0);\r\n&:hover {\r\n  transition: all;\r\n  transform: scale(1.05);\r\n  background-color: #fff;\r\n}\r\n`\r\n\r\nconst AmmoCount = styled.div`\r\ncolor: #FFF;\r\ntext-align: center;\r\n`\r\n\r\nconst UPGRADE_SUB_MENU = ' upgrade sub menu'\r\nconst PERKS_MENU = 'perks menu'\r\nconst STANDARD_MENU = 'standard menu'\r\nconst AMMO_MENU = 'ammo menu'\r\nconst HEALTHKIT_MENU = 'healthkit menu'\r\nconst BUY_NEW_WEAPONS_MENU = 'buy weapons menu'\r\nconst WEAPON_MODS_MENU = 'weapon mods menu'\r\nconst PISTOL_MODS_SUBMENU = 'pistol mods submenu'\r\nconst SMG_MODS_SUBMENU = 'smg mods submenu'\r\nconst SHOTGUN_MODS_SUBMENU = 'shotgun mods submenu'\r\nconst PLAYER_ATTRIBUTES_MENU = 'player attributes menu'\r\nconst DEFAULT_SUBMENU = 'none - default'\r\nconst PISTOL_AMMO_SUBMENU = 'pistol ammunition submenu'\r\nconst SMG_AMMO_SUBMENU = 'smg ammunition submenu'\r\nconst SHOTGUN_AMMO_SUBMENU = 'shotgun ammunition submenu'\r\nconst GRENADES_AMMO_SUBMENU = 'grenades submenu'\r\nconst ATTR_RUN_SPEED = 'run'\r\nconst ATTR_RELOAD_SPEED = 'reload'\r\nconst ATTR_JUMP_FORCE = 'jump'\r\nconst ATTR_DEFENSE = 'defense'\r\nconst ATTR_MELEE = 'melee'\r\n\r\nexport const CustomMenuButton = (props) => (\r\n  <MenuButton\r\n  bgcolor={ props && props.bgcolor ? props.bgcolor : '#222' }\r\n  bordercolor={ props && props.bordercolor ? props.bordercolor : '#333' }\r\n  hovercolor={ props && props.hovercolor ? props.hovercolor : '#333' }\r\n  hoverborder={ props && props.hoverborder ? props.hoverborder : '#fff' }\r\n  width={ props.width }\r\n  height={ props.height }\r\n  style={ props.style }\r\n  cancelTransition={ props && props.cancelTransition ? props.cancelTransition : false }\r\n  onClick={ () => {\r\n    if (props.onClick) {\r\n      props.onClick()\r\n      let snd = window.gameObjects.getKeyValue('button-click-sound')\r\n      snd.play()\r\n    }\r\n  }}\r\n  onMouseOver={() => {\r\n    if (!props.cancelTransition) {\r\n      // let snd = window.gameObjects.getKeyValue('button-hover-sound')\r\n      // snd.play()\r\n    }\r\n  }}\r\n  >\r\n    { props.children }\r\n  </MenuButton>\r\n)\r\n\r\nexport const BackButton = props => (\r\n  <CustomMenuButton\r\n  width={ props.width ? props.width : 120 }\r\n  height={ 40 }\r\n  style={{ borderRadius: '10px' }}\r\n  bgcolor={ '#444' }\r\n  hovercolor={ '#189969' }\r\n  onClick={ props.onClick }\r\n  >\r\n    {\r\n      props.arrowOnly ?\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0;\r\n        </span>\r\n      :\r\n        <span style={{ fontSize: '18px' }}>\r\n        &#x21d0; Back\r\n        </span>\r\n    }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport const CornerBackButton = (props) => (\r\n  <div\r\n  style={{\r\n    top: 0,\r\n    right: props.right ? props.right : '20px',\r\n    marginTop: props.marginTop ? props.marginTop : '-40px',\r\n    position: 'absolute'\r\n  }}>\r\n      <BackButton\r\n      onClick={ props.onClick }\r\n      width={ props.width ? props.width : 120 }\r\n      arrowOnly={ props.arrowOnly ? props.arrowOnly : false }\r\n      />\r\n  </div>\r\n)\r\n\r\nfunction Modal ({ label, labelClr, width, height, clickConfirmHandler, clickCancelHandler }) {\r\n\r\n  return (\r\n    <>\r\n      <Container style={{ top: '150px' }} width={ width ? width : 500 } height={ height ? height : 300 }>\r\n        <Backing\r\n        width={ width ? width : 500 }\r\n        height={ height ? height : 300 }\r\n        bgcolor={ '#222' }\r\n        opacity={ 1.0 }\r\n        style={{\r\n          borderRadius: '2px',\r\n          boxShadow: '5px 5px rgba(0, 0, 0, 0.2)'\r\n        }}\r\n        />\r\n        <MenuTitle style={{ fontSize: '1.2em' }}>\r\n          <span\r\n          style={{\r\n            color: labelClr\r\n          }}>\r\n          {\r\n            label\r\n          }\r\n          </span>\r\n        </MenuTitle>\r\n        <MenuButtonContainer space-top={ 200 }>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ 'red' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              marginRight: '12px',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickCancelHandler}>\r\n            Nope.\r\n          </MenuButton>\r\n          <MenuButton\r\n            bgcolor={ '#222' }\r\n            bordercolor={ '#333' }\r\n            hovercolor={ '#333' }\r\n            hoverborder={ '#189969' }\r\n            style={{\r\n              display: 'inline-block',\r\n              fontSize: '.8em',\r\n              borderRadius: '2px'\r\n            }}\r\n            onClick={clickConfirmHandler}>\r\n            Confirm\r\n          </MenuButton>\r\n        </MenuButtonContainer>\r\n      </Container>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction AmmoSubMenu ({ type, toDefaultSubMenu, toAmmoSubMenu, toStandardMenu }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const ammoCostPerBox = useSelector(state => state.game.player.weapons.ammoCostPerBox)\r\n  const ammoCap = useSelector(state => state.game.player.weapons.ammoCapacity)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const ammoReducer = (ammo, action) => {\r\n    switch (action.type) {\r\n      case 'INCREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] + action.amount\r\n        }\r\n      case 'DECREASE':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: ammo[action.wepType] - action.amount\r\n        }\r\n      case 'SET':\r\n        return {\r\n          ...ammo,\r\n          [action.wepType]: action.amount\r\n        }\r\n      default:\r\n        return ammo\r\n    }\r\n  }\r\n  const [ammoInCart, dispatchAmmoInCart] = React.useReducer(ammoReducer, {\r\n    'pistol weapon': 0,\r\n    'smg weapon': 0,\r\n    'grenades': 0,\r\n    'shotgun weapon': 0\r\n  })\r\n  const [dollarCost, setDollarCost] = React.useState(0)\r\n\r\n  return (\r\n    <>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={ '#28934C' }\r\n        width={100}\r\n        height={30}\r\n        style={{\r\n          borderRadius: '4px',\r\n          fontWeight: 'bold',\r\n        }}\r\n      >\r\n        { `$${ dollarCost }` }\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        width={150}\r\n        height={ 30 }\r\n        bgcolor={ '#444' }\r\n      >\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] - ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (ammoInCart[type] > 0) {\r\n              dispatchAmmoInCart({ type: 'DECREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-subtract-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          left={true}>\r\n            <span style={{ fontWeight: 'bold' }}>-</span>\r\n        </IncrementDecrement>\r\n        <AmmoCount>{ ammoInCart[type] }</AmmoCount>\r\n        <IncrementDecrement\r\n          onClick={ () => {\r\n            let cost = ((ammoInCart[type] + ammoCap[type])/ammoCap[type]) * ammoCostPerBox[type]\r\n            if (credits >= cost) {\r\n              dispatchAmmoInCart({ type: 'INCREASE', wepType: type, amount: ammoCap[type] })\r\n              setDollarCost( cost )\r\n              let snd = window.gameObjects.getKeyValue('button-add-sound')\r\n              snd.play()\r\n            } else {\r\n              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n              snd.play()\r\n            }\r\n          }}\r\n          right={true}>\r\n            <span style={{ fontWeight: 'bold' }}>+</span>\r\n         </IncrementDecrement>\r\n      </MenuButton>\r\n      <MenuButton\r\n        cancelTransition={ true }\r\n        bgcolor={'rgba(0,0,0,0)'}\r\n        height={30}\r\n        >\r\n          <div style={{ display: 'inline-block', marginRight: '4px' }}>\r\n            <CustomMenuButton\r\n              onClick={ () => {\r\n                toDefaultSubMenu()\r\n                dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                setDollarCost(0)\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }}\r\n              width={80}\r\n              height={30}\r\n              hoverborder={'#B00000'}\r\n              >\r\n              Cancel\r\n            </CustomMenuButton>\r\n          </div>\r\n          <div style={{ display: 'inline-block' }}>\r\n            {\r\n              dollarCost > 0 ?\r\n              <CustomMenuButton\r\n                onClick={ () => {\r\n                  let weaponsUI = gameObjects.getKeyValue('weapons-ui')\r\n                  dispatch( subtractFromTotalCredits( dollarCost ) )\r\n                  dispatch( addPurchase(type !== WEAPON_TYPE_GRENADE ? `${type} ammo` : dollarCost > ammoCostPerBox[type] ? type : 'a grenade', dollarCost) )\r\n                  dispatch( addToTotalAmmo( type, ammoInCart[type] ) )\r\n                  dispatchAmmoInCart({ type: 'SET', wepType: type, amount: 0 })\r\n                  if (type === WEAPON_TYPE_GRENADE) {\r\n                    weaponsUI.updateGrenadeIcons()\r\n                  } else {\r\n                    weaponsUI.select(type)\r\n                    dispatch( setWeaponEquipped(type) )\r\n                    weaponsUI.reload(true)\r\n                  }\r\n                  setDollarCost(0)\r\n                  toDefaultSubMenu()\r\n                }}\r\n                width={100}\r\n                height={30}\r\n                hoverborder={'#189969'}\r\n                >\r\n                Buy\r\n              </CustomMenuButton>\r\n              : null\r\n            }\r\n          </div>\r\n      </MenuButton>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PlayerAttributesMenuButton = ({ type, toDefaultSubMenu, subMenuType, setSubMenuType, toStandardMenu }) => {\r\n\r\n  const upgradeTiers = useSelector(state => state.game.player.upgradeTiers)\r\n  const upgradeCosts = useSelector(state => state.game.player.upgradeCosts)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const dispatch = useDispatch()\r\n  const upgradeTypes = {\r\n    'run': upgradeRunSpeed,\r\n    'jump': upgradeJumpForce,\r\n    'reload': upgradeReloadSpeed,\r\n    'defense': upgradeDefense,\r\n    'melee': upgradeMelee\r\n  }\r\n  const getAttrName = type => {\r\n    switch (type) {\r\n      case 'run':\r\n        return 'Run Speed'\r\n        break;\r\n      case 'jump':\r\n        return 'Jump Height'\r\n        break;\r\n      case 'reload':\r\n        return 'Reload Speed'\r\n        break;\r\n      case 'defense':\r\n        return 'Defense'\r\n        break;\r\n      case 'melee':\r\n        return 'Melee Attack Power'\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n      {\r\n        subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1\r\n        ?\r\n          subMenuType === type + UPGRADE_SUB_MENU\r\n          ?\r\n            <Modal\r\n              label={`Upgrade ${ getAttrName(type) } to lvl. ${ upgradeTiers[type].current + 1 }?`}\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( upgradeCosts[type] ) )\r\n                dispatch( addPurchase(`${getAttrName(type)} Boost`, upgradeCosts[type]) )\r\n                dispatch( upgradeTypes[type]() )\r\n                toDefaultSubMenu()\r\n              }}\r\n              clickCancelHandler={() => {\r\n                toDefaultSubMenu()\r\n              }}\r\n              />\r\n          : null\r\n        :\r\n        <>\r\n          <CustomMenuButton\r\n            width={getAttrName(type).length > 14 ? 340 : 240 }\r\n            onClick={() => {\r\n              if (credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max) {\r\n                setSubMenuType( type + UPGRADE_SUB_MENU )\r\n              } else {\r\n                let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                snd.play()\r\n              }\r\n            }}>\r\n            { getAttrName(type) } { upgradeTiers[type].current !== upgradeTiers[type].max ? 'Lvl.' : '' }{ upgradeTiers[type].current !== upgradeTiers[type].max ? upgradeTiers[type].current + 1 : '' } - <span style={{ color: credits > upgradeCosts[type] && upgradeTiers[type].current < upgradeTiers[type].max ? '#189969' : 'red' }}>\r\n            {\r\n              upgradeTiers[type].current < upgradeTiers[type].max\r\n              ? `$${upgradeCosts[type]}`\r\n              : 'MAXED'\r\n            }</span>\r\n          </CustomMenuButton>\r\n          <br/>\r\n        </>\r\n      }\r\n  </>\r\n  )\r\n}\r\n\r\nfunction ModSubMenu ({ type, setSubMenuType }) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const modTiers = useSelector(state => state.game.player.modTiers)\r\n  const modCosts = useSelector(state => state.game.player.modCosts)\r\n  const getWepText = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        return 'Pistol'\r\n      case WEAPON_TYPE_SMG:\r\n        return 'SMG'\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        return 'SHOTGUN'\r\n      default:\r\n    }\r\n  }\r\n  let wepTxt = getWepText(type)\r\n  const getModDescription = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'RATE OF FIRE MAXED!' : 'Upgrade Rate-of-Fire'\r\n      case 'powder':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'FIREPOWER MAXED!' : 'Increase Firepower'\r\n      case 'sight':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'ACCURACY MAXED!' : 'Upgrade Accuracy'\r\n      case 'mag':\r\n        return modTiers[mod][type].current === modTiers[mod][type].max ? 'AMMO CAP MAXED!' : 'Increase Ammo Capacity'\r\n      default:\r\n    }\r\n  }\r\n  const mods = ['rof', 'powder', 'sight', 'mag']\r\n  const [selectedMod, setSelectedMod] = React.useState(null)\r\n  const [selectedType, setSelectedType] = React.useState(null)\r\n  const modPurchaseName = (mod, type) => {\r\n    switch (mod) {\r\n      case 'rof':\r\n        return `Rate of fire boost for the ${type}`\r\n      case 'powder':\r\n        return `Firepower boost for the ${type}`\r\n      case 'sight':\r\n        return `Accuracy boost for the ${type}`\r\n      case 'mag':\r\n        return `Magazine ammo capacity boost for the ${type}`\r\n      default:\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Inline style={{ marginLeft: '40px' }}>\r\n        {\r\n          selectedMod && selectedType ?\r\n          <>\r\n            <Modal\r\n              label={`${getWepText(selectedType)} ${ getModDescription(selectedMod, selectedType) } lvl.${ modTiers[selectedMod][selectedType].current + 1 }?`}\r\n              labelClr={ modTiers[selectedMod][selectedType].current === modTiers[selectedMod][selectedType].max ? 'red' : 'white' }\r\n              clickConfirmHandler={() => {\r\n                dispatch( subtractFromTotalCredits( modCosts[selectedMod][selectedType] ) )\r\n                dispatch( addPurchase(modPurchaseName(selectedMod, selectedType), modCosts[selectedMod][selectedType]) )\r\n                dispatch( attachMod(selectedMod, selectedType) )\r\n                if (selectedMod === 'mag') {\r\n                  let wepUI = gameObjects.getKeyValue('weapons-ui')\r\n                  wepUI.updateWeaponMagazines(selectedType)\r\n                }\r\n                if (selectedMod === 'sight') {\r\n                  dispatch( showLaserSight(selectedType) )\r\n                }\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n              clickCancelHandler={() => {\r\n                setSelectedMod(null)\r\n                setSelectedType(null)\r\n                setSubMenuType( DEFAULT_SUBMENU )\r\n              }}\r\n            />\r\n          </>\r\n          :\r\n          mods.map((mod, i) => (\r\n            <React.Fragment key={i}>\r\n              <CustomMenuButton onClick={() => {\r\n                if (credits >= modCosts[mod][type] && modTiers[mod][type].current < modTiers[mod][type].max) {\r\n                  setSelectedMod(mod)\r\n                  setSelectedType(type)\r\n                } else {\r\n                  let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                  snd.play()\r\n                }\r\n              }} width={520}>{wepTxt}: {getModDescription(mod, type)} { modTiers[mod][type].current === modTiers[mod][type].max ? '' : ' - lvl.' } { modTiers[mod][type].current < modTiers[mod][type].max ? modTiers[mod][type].current + 1 : null } - <span style={{ color: credits >= modCosts[mod][type] && modTiers[mod][type].current !== modTiers[mod][type].max ? '#189969' : 'red' }}>\r\n                {`\r\n                  ${\r\n                    modTiers[mod][type].current === modTiers[mod][type].max ?\r\n                    null : `$${ modCosts[mod][type] }`\r\n                  }`\r\n                }\r\n                </span>\r\n              </CustomMenuButton>\r\n              <br/>\r\n            </React.Fragment>\r\n          ))\r\n        }\r\n      </Inline>\r\n      {\r\n        !selectedMod && !selectedType ?\r\n        <Inline>\r\n          <CustomMenuButton\r\n          onClick={ () => { setSubMenuType(DEFAULT_SUBMENU) }}\r\n          width={80}\r\n          height={30}\r\n          hoverborder={'red'}\r\n          style={{\r\n            marginLeft: '10px'\r\n          }}\r\n          >\r\n            close\r\n          </CustomMenuButton>\r\n        </Inline>\r\n        : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function ShopMenu () {\r\n\r\n  const [menuType, setMenuType] = React.useState(STANDARD_MENU)\r\n  const [subMenuType, setSubMenuType] = React.useState(DEFAULT_SUBMENU)\r\n\r\n  const dispatch = useDispatch()\r\n  const game = useSelector(state => state.game)\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const { gameObjects } = window\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const player = gameObjects.getKeyValue('player')\r\n\r\n  const continueToNextWave = () => {\r\n    screenUI.unpause()\r\n    dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  }\r\n\r\n  const toDefaultSubMenu = () => {\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const toAmmoMenu = () => {\r\n    setMenuType( AMMO_MENU )\r\n  }\r\n  \r\n  const toHealthkitMenu = () => {\r\n    setMenuType( HEALTHKIT_MENU )\r\n  }\r\n\r\n  const toPlayerAttrMenu = () => {\r\n    setMenuType( PLAYER_ATTRIBUTES_MENU )\r\n  }\r\n\r\n  const backToStandardMenu = () => {\r\n    setMenuType( STANDARD_MENU )\r\n    setSubMenuType( DEFAULT_SUBMENU )\r\n  }\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const openAmmoSubMenu = type => {\r\n    switch (type) {\r\n      case WEAPON_TYPE_PISTOL:\r\n        setSubMenuType( PISTOL_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SMG:\r\n        setSubMenuType( SMG_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_SHOTGUN:\r\n        setSubMenuType( SHOTGUN_AMMO_SUBMENU )\r\n        break;\r\n      case WEAPON_TYPE_GRENADE:\r\n        setSubMenuType( GRENADES_AMMO_SUBMENU )\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n  const toWeaponModsMenu = () => {\r\n    setMenuType( WEAPON_MODS_MENU )\r\n  }\r\n\r\n  const toNewWeaponsMenu = () => {\r\n    setMenuType( BUY_NEW_WEAPONS_MENU )\r\n  }\r\n\r\n  const getHealthkitCostStyle = (kitType) => {\r\n    let condition = (\r\n      game.player.credits > game.consumables.healthkit[kitType].cost &&\r\n      game.player.health < 100\r\n    )\r\n    return {\r\n      color: condition ? '#189969' : 'red',\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n    if (menuType === BUY_NEW_WEAPONS_MENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1) {\r\n      backToStandardMenu()\r\n    }\r\n\r\n  }, [ game.player.weapons.list, menuType ])\r\n\r\n  return (\r\n    <>\r\n      <Container width={ w * .75 } height={ h * .75 }>\r\n          <Backing width={ w * .75 } height={ h * .75 }/>\r\n          <MenuTitle>Shop</MenuTitle>\r\n          <MenuButtonContainer width={ w }>\r\n            {\r\n              menuType === STANDARD_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton width={350} onClick={ () => { toAmmoMenu() } }>Buy Ammo &amp; Grenades</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toHealthkitMenu() } }>Buy Health Kits</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { setMenuType(PERKS_MENU) } }>Perks</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toPlayerAttrMenu() } }>Upgrade Player</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton onClick={ () => { toWeaponModsMenu() } }>Weapon Mods</CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    null\r\n                    :\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={ () => { toNewWeaponsMenu() } }>Buy New Weapons</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ backToShopQuery }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === AMMO_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === PISTOL_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_PISTOL }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_PISTOL) } }>\r\n                          Buy Pistol Ammo\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SMG_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SMG }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SMG) } }>\r\n                            Buy SMG Ammo\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      {\r\n                        subMenuType === GRENADES_AMMO_SUBMENU\r\n                        ? <AmmoSubMenu\r\n                        type={ WEAPON_TYPE_GRENADE }\r\n                        toDefaultSubMenu={toDefaultSubMenu}\r\n                        toAmmoSubMenu={toAmmoMenu}\r\n                        toStandardMenu={backToStandardMenu}\r\n                        />\r\n                        : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_GRENADE) } }>\r\n                          Buy Grenades\r\n                          </CustomMenuButton>\r\n                      }\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer>\r\n                        {\r\n                          subMenuType === SHOTGUN_AMMO_SUBMENU && game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1\r\n                          ? <AmmoSubMenu\r\n                          type={ WEAPON_TYPE_SHOTGUN }\r\n                          toDefaultSubMenu={toDefaultSubMenu}\r\n                          toAmmoSubMenu={toAmmoMenu}\r\n                          toStandardMenu={backToStandardMenu}\r\n                          />\r\n                          : <CustomMenuButton onClick={ () => { openAmmoSubMenu(WEAPON_TYPE_SHOTGUN) } }>\r\n                            Buy Shotgun Shells\r\n                            </CustomMenuButton>\r\n                        }\r\n                      </MenuButtonSpacer>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton\r\n                    onClick={ () => { backToStandardMenu() } }>\r\n                  </BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === HEALTHKIT_MENU ?\r\n              <>\r\n              <MenuButtonSpacer>\r\n                <Inline>\r\n                  <MenuButtonSpacer>\r\n                    <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={() => {\r\n                        let amount\r\n                        if (game.player.health < 100) {\r\n                          if (game.player.health + 20 > 100) { amount = 100 }\r\n                          else { amount = game.player.health + 20 }\r\n                          player.acceptHealth( amount )\r\n                          dispatch( subtractFromTotalCredits(game.consumables.healthkit['20'].cost) )\r\n                          dispatch( addPurchase('+20 Healthkit', game.consumables.healthkit['20'].cost) )\r\n                          let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                          snd.play()\r\n                        } else {\r\n                          let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                          snd.play()\r\n                        }\r\n                      }}>+20 Healthkit - <span\r\n                      style={ getHealthkitCostStyle('20') }\r\n                      >\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['20'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                        width={ 300 }\r\n                        onClick={() => {\r\n                          let amount\r\n                          if (game.player.health < 100) {\r\n                            if (game.player.health + 50 > 100) { amount = 100 }\r\n                            else { amount = game.player.health + 50 }\r\n                            player.acceptHealth( amount )\r\n                            dispatch( subtractFromTotalCredits(game.consumables.healthkit['50'].cost) )\r\n                            dispatch( addPurchase('+50 Healthkit', game.consumables.healthkit['50'].cost) )\r\n                            let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                            snd.play()\r\n                          } else {\r\n                            let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>+50 Healthkit - <span\r\n                        style={ getHealthkitCostStyle('50') }>\r\n                        { game.player.health < 100 ? `${game.consumables.healthkit['50'].cost}` : 'Health Full' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <CustomMenuButton\r\n                    width={ 300 }\r\n                    onClick={() => {\r\n                      if (game.player.health < 100) {\r\n                        player.acceptHealth( 100 )\r\n                        dispatch( subtractFromTotalCredits(game.consumables.healthkit['full'].cost) )\r\n                        dispatch( addPurchase('Full Healthkit', game.consumables.healthkit['full'].cost) )\r\n                      let snd = gameObjects.getKeyValue('health-pickup-sound')\r\n                        snd.play()\r\n                      } else {\r\n                        let snd = gameObjects.getKeyValue('button-cancel-sound')\r\n                        snd.play()\r\n                      }\r\n                    }}>Full Healthkit - <span\r\n                    style={ getHealthkitCostStyle('full') }>\r\n                    { game.player.health < 100 ? `${game.consumables.healthkit['full'].cost}` : 'Health Full' }\r\n                    </span>\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={ () => { backToStandardMenu() } }>Back</BackButton>\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PLAYER_ATTRIBUTES_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RUN_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_JUMP_FORCE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_RELOAD_SPEED }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_DEFENSE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <PlayerAttributesMenuButton\r\n                      type={ ATTR_MELEE }\r\n                      toDefaultSubMenu={ toDefaultSubMenu }\r\n                      toStandardMenu={ backToStandardMenu }\r\n                      subMenuType={ subMenuType }\r\n                      setSubMenuType={ setSubMenuType }\r\n                      />\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  {\r\n                    subMenuType.indexOf( UPGRADE_SUB_MENU ) > -1 ? null                  \r\n                    :\r\n                    <MenuButtonSpacer>\r\n                      <BackButton\r\n                        onClick={ () => {\r\n                          backToStandardMenu()\r\n                        }}>\r\n                          Back\r\n                      </BackButton>\r\n                    </MenuButtonSpacer>\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === PERKS_MENU ?\r\n              <>\r\n                <div\r\n                onClick={() => {\r\n                  setMenuType(STANDARD_MENU)\r\n                }}\r\n                style={{\r\n                  top: 0,\r\n                  right: '20px',\r\n                  marginTop: '-40px',\r\n                  position: 'absolute'\r\n                }}>\r\n                  <BackButton\r\n                  width={50}\r\n                  arrowOnly={true}\r\n                  />\r\n                </div>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['magnetism'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='increase-magnetism'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magnetism'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magnetism'].cost) )\r\n                            dispatch( setPlayerMagnetism(1200, 4) )\r\n                            dispatch( addPurchase('Magnetism perk', game.player.perks['magnetism'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Increase Magnetism\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magnetism'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magnetism'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='increase-magnetism' type='dark'>\r\n                        <span>\r\n                          Will increase the effect of items being drawn to you for easy pick up\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['magDmg'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='mag-damage'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['magDmg'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['magDmg'].cost) )\r\n                            dispatch( setPlayerMagDamage() )\r\n                            dispatch( addPurchase('Mag Damage perk', game.player.perks['magDmg'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Magazine Damage\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['magDmg'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['magDmg'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='mag-damage' type='dark'>\r\n                        <span>\r\n                          Ejected magazines will damage enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['lastBullet'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='last-bullet'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['lastBullet'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['lastBullet'].cost) )\r\n                            dispatch( setPlayerLastBullet() )\r\n                            dispatch( addPurchase('Last Bullet Extra Damage perk', game.player.perks['lastBullet'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Last Round\r\n                          <span\r\n                          style={{\r\n                            color: (\r\n                              credits >= game.player.perks['lastBullet'].cost ? 'green' : 'red'\r\n                            )\r\n                          }}>\r\n                            &nbsp;${game.player.perks['lastBullet'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='last-bullet' type='dark'>\r\n                        <span>\r\n                          Last bullet fired will cause greater damage to enemies \r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['creditDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='credit-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['creditDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['creditDropper'].cost) )\r\n                            dispatch( setPlayerCreditDropper() )\r\n                            dispatch( addPurchase('Credit Dropper perk', game.player.perks['creditDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Credit Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['creditDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['creditDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='credit-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will drop more credits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['ammoDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='ammo-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['ammoDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['ammoDropper'].cost) )\r\n                            dispatch( setPlayerAmmoDropper() )\r\n                            dispatch( addPurchase('Ammo Dropper perk', game.player.perks['ammoDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Ammo Dropper\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['ammoDropper'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['ammoDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='ammo-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop ammunition\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['healthDropper'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='health-dropper'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['healthDropper'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['healthDropper'].cost) )\r\n                            dispatch( setPlayerHealthDropper() )\r\n                            dispatch( addPurchase('Health Dropper perk', game.player.perks['healthDropper'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Health Dropper\r\n                          <span\r\n                              style={{\r\n                                color: (\r\n                                  credits >= game.player.perks['healthDropper'].cost ? 'green' : 'red'\r\n                                )\r\n                              }}>\r\n                                &nbsp;${game.player.perks['healthDropper'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='health-dropper' type='dark'>\r\n                        <span>\r\n                          Enemies will now drop small health kits\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  {\r\n                    !game.player.perks['quickTurret'].owned ?\r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='quick-turret'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['quickTurret'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['quickTurret'].cost) )\r\n                            dispatch( setPlayerQuickTurret() )\r\n                            dispatch( addPurchase('Turret Upgrade perk', game.player.perks['quickTurret'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Quick Turrets\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['quickTurret'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['quickTurret'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='quick-turret' type='dark'>\r\n                        <span>\r\n                          Any placed machine gun turrets will now have less delay between fired shots and slightly more range\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['barrierPlus'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='barrier-plus'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['barrierPlus'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['barrierPlus'].cost) )\r\n                            dispatch( setPlayerBarrierPlus() )\r\n                            dispatch( addPurchase('Barrier Plus+ perk', game.player.perks['barrierPlus'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Barrier Plus\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['barrierPlus'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['barrierPlus'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='barrier-plus' type='dark'>\r\n                        <span>\r\n                          Placed barriers will now have increased strength to ward of oncoming enemies\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    !game.player.perks['cluck'].owned ? \r\n                    <Inline>\r\n                      <MenuButtonSpacer data-tip data-for='big-cluster'>\r\n                        <CustomMenuButton\r\n                        width={260}\r\n                        onClick={() => {\r\n                          if (credits >= game.player.perks['cluck'].cost) {\r\n                            dispatch( subtractFromTotalCredits(game.player.perks['cluck'].cost) )\r\n                            dispatch( setPlayerFusterCluck() )\r\n                            dispatch( addPurchase('Fuster Cluck perk', game.player.perks['cluck'].cost) )\r\n                          } else {\r\n                            let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                            snd.play()\r\n                          }\r\n                        }}>\r\n                          Fuster Cluck\r\n                          <span\r\n                            style={{\r\n                              color: (\r\n                                credits >= game.player.perks['cluck'].cost ? 'green' : 'red'\r\n                              )\r\n                            }}>\r\n                              &nbsp;${game.player.perks['cluck'].cost}\r\n                          </span>\r\n                        </CustomMenuButton>\r\n                      </MenuButtonSpacer>\r\n                      <ReactTooltip id='big-cluster' type='dark'>\r\n                        <span>\r\n                          Cluster bombs will now expel more explosives\r\n                        </span>\r\n                      </ReactTooltip>\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === BUY_NEW_WEAPONS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer>\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                            if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) {\r\n                              batch(() => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SMG]) )\r\n                                dispatch(\r\n                                  addPurchase('Submachine Gun', game.player.weapons.buyWeapons[WEAPON_TYPE_SMG])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SMG) )\r\n                              })\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                         Buy Submachine Gun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SMG] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                {\r\n                  game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) < 0 ?\r\n                  <Inline>\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      width={ 300 }\r\n                      onClick={\r\n                        () => {\r\n                          if (credits >= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) {\r\n                            batch(\r\n                              () => {\r\n                                dispatch( subtractFromTotalCredits(game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN]) )\r\n                                dispatch(\r\n                                  addPurchase('Shotgun', game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN])\r\n                                )\r\n                                dispatch( updateWeaponsList(WEAPON_TYPE_SHOTGUN) )\r\n                              }\r\n                              )\r\n                            } else {\r\n                              let snd = window.gameObjects.getKeyValue('button-cancel-sound')\r\n                              snd.play()\r\n                            }\r\n                          }}\r\n                          >\r\n                        Buy Shotgun: <span style={{ color: credits <= game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] ? 'red' : 'green' }}>${ game.player.weapons.buyWeapons[WEAPON_TYPE_SHOTGUN] }</span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  : null\r\n                }\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <BackButton onClick={() => { backToStandardMenu() }} />\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n            {\r\n              menuType === WEAPON_MODS_MENU ?\r\n              <>\r\n                <MenuButtonSpacer style={{ marginTop: '-15px' }}>\r\n                  {\r\n                    subMenuType === PISTOL_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_PISTOL} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SMG_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SMG} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === SHOTGUN_MODS_SUBMENU ?\r\n                    <Inline>\r\n                      <ModSubMenu type={WEAPON_TYPE_SHOTGUN} setSubMenuType={setSubMenuType} />\r\n                    </Inline>\r\n                    : null\r\n                  }\r\n                  {\r\n                    subMenuType === DEFAULT_SUBMENU ?\r\n                    <>\r\n                      <Inline>\r\n                        <MenuButtonSpacer>\r\n                          <CustomMenuButton onClick={() => { setSubMenuType(PISTOL_MODS_SUBMENU) }}>Pistol Mods</CustomMenuButton>\r\n                        </MenuButtonSpacer>\r\n                      </Inline>\r\n                      {\r\n                         game.player.weapons.list.indexOf(WEAPON_TYPE_SMG) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SMG_MODS_SUBMENU) }}>SMG Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null \r\n                      }\r\n                      {\r\n                        game.player.weapons.list.indexOf(WEAPON_TYPE_SHOTGUN) > -1 ?\r\n                        <Inline>\r\n                          <MenuButtonSpacer>\r\n                            <CustomMenuButton onClick={() => { setSubMenuType(SHOTGUN_MODS_SUBMENU) }}>Shotgun Mods</CustomMenuButton>\r\n                          </MenuButtonSpacer>\r\n                        </Inline>\r\n                        : null\r\n                      }\r\n                      <MenuButtonSpacer style={{ marginTop: '40px' }}>\r\n                        <BackButton onClick={ backToStandardMenu }>Back</BackButton>\r\n                      </MenuButtonSpacer>\r\n                    </>\r\n                    : null\r\n                  }\r\n                </MenuButtonSpacer>\r\n              </>\r\n              : null\r\n            }\r\n          </MenuButtonContainer>\r\n        </Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { decrementWave, gameStateTransition, setWaveCountToDefeat, toggleZombieHealthDisplay, toggleFilterEffects, setZombiesOnStage } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport MenuComponents from './MenuComponents'\r\nimport store from '../../../app/store'\r\nimport { CornerBackButton, CustomMenuButton, Inline } from './ShopMenu'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { Children } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { WEAPON_TYPE_PISTOL, WEAPON_TYPE_SHOTGUN, WEAPON_TYPE_SMG } from '../constants/weapons'\r\n\r\nconst { Container, Backing, MenuTitle, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nexport const gotoMainMenu = () => {\r\n  const { gameObjects } = window\r\n  // const dispatch = useDispatch()\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const zombies = gameObjects.getKeyValue('zombies')\r\n  const player = gameObjects.getKeyValue('player')\r\n  const dispatch = store.dispatch\r\n  while(zombies.length > 0) {\r\n    zombies.forEach(zombie => {\r\n      zombie.kill(null, true)\r\n    })\r\n  }\r\n  screenUI.unpause()\r\n  if (player.dead) {\r\n    screenUI.respawn()\r\n  }\r\n  dispatch( setZombiesOnStage(0) )\r\n  dispatch( setWaveCountToDefeat(null) )\r\n  dispatch(gameStateTransition('sub', store.getState().game.gameSubState, SubStates.NEUTRAL))\r\n  dispatch( gameStateTransition('main', store.getState().game.gameState, GameStates.MAIN_MENU))\r\n}\r\n\r\nexport const NoTransitionButton = ({ width, children }) => (\r\n  <CustomMenuButton\r\n  onMouseOver={ null }\r\n  width={ width ? width : '200px' }\r\n  hovercolor={'#222'}\r\n  hoverborder={'#333'}\r\n  cancelTransition={true}>\r\n    { children }\r\n  </CustomMenuButton>\r\n)\r\n\r\nexport default function PauseMenu (props) {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const w = gameObjects.getKeyValue('game-width')\r\n  const h = gameObjects.getKeyValue('game-height')\r\n  const pauseMenuStates = {\r\n    DEFAULT: 'Default',\r\n    CONTROLS: 'Controls',\r\n    OPTIONS: 'Options',\r\n  }\r\n\r\n  const showControls = () => {\r\n    setPauseMenuState(pauseMenuStates.CONTROLS)\r\n  }\r\n\r\n  const showOptions = () => {\r\n    setPauseMenuState(pauseMenuStates.OPTIONS)\r\n  }\r\n\r\n  const showDefault = () => {\r\n    setPauseMenuState(pauseMenuStates.DEFAULT)\r\n  }\r\n\r\n  const seeScoreboard = () => {\r\n    dispatch(\r\n      gameStateTransition('main', GameStates.MAIN_MENU, GameStates.SCORES_VIEW)\r\n    )\r\n  }\r\n\r\n  const [pauseMenuState, setPauseMenuState] = React.useState(pauseMenuStates.DEFAULT)\r\n\r\n  const resumeGame = () => { window.gameObjects.getKeyValue('screen-ui').togglePause() }\r\n\r\n  const playGame = () => {\r\n    dispatch(gameStateTransition('main', gameState, GameStates.GAMEPLAY))\r\n    dispatch(gameStateTransition('sub', gameSubState, SubStates.WAITING))\r\n  }\r\n\r\n  const effectFilters = useSelector(state => state.game.filterEffects)\r\n\r\n  const toggleFilters = () => {\r\n    dispatch( toggleFilterEffects(!effectFilters) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => zombie.checkFilters())\r\n    let ammos = window.gameObjects.getKeyValue('ammo-drops-by-type')\r\n    ammos[WEAPON_TYPE_SMG]\r\n    .concat(ammos[WEAPON_TYPE_PISTOL])\r\n    .concat(ammos[WEAPON_TYPE_SHOTGUN])\r\n    .forEach(ammo => ammo.checkFilters())\r\n    let credits = window.gameObjects.getKeyValue('currency-drops')\r\n    credits.forEach(credit => credit.checkFilters())\r\n    let healths = window.gameObjects.getKeyValue('health-drops')\r\n    healths.forEach(health => health.checkFilters())\r\n    let player = window.gameObjects.getKeyValue('player')\r\n    player.checkFilters()\r\n    let weaponsUI = window.gameObjects.getKeyValue('weapons-ui')\r\n    weaponsUI.checkFilters()\r\n  }\r\n\r\n  const displayZombieHealth = useSelector(state => state.game.displayZombieHealth)\r\n\r\n  const toggleZombieHealth = () => {\r\n    dispatch( toggleZombieHealthDisplay(!displayZombieHealth) )\r\n    let zombies = window.gameObjects.getKeyValue('zombies')\r\n    zombies.forEach(zombie => {\r\n      zombie.displayHealth(!displayZombieHealth)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {\r\n      gameObjects ?\r\n        <Container style={{ top: props.margintop ? '100px' : 0 }} width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }>\r\n          { \r\n            props.hidebg ? null :\r\n            <>\r\n              <Backing bgcolor={ '#222' } opacity={ gameState === GameStates.MAIN_MENU ? .35 : .5 } width={ w * .75 } height={ props['shop-query-visibility'] ? h * .5 : h * .75 }/>\r\n            </>\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.DEFAULT ?\r\n            <>\r\n              {\r\n                props.hidetitle ? null\r\n                : <MenuTitle>Pause Menu</MenuTitle>\r\n              }\r\n              <MenuButtonContainer width={ w ? w : 0 }>\r\n                <MenuButtonSpacer padding={4}>\r\n                  {\r\n                    props.playbtn ?\r\n                      <CustomMenuButton\r\n                      onClick={ playGame }>\r\n                        Play Game\r\n                      </CustomMenuButton>\r\n                    :\r\n                      <CustomMenuButton\r\n                      onClick={ resumeGame }>\r\n                        Resume Game\r\n                      </CustomMenuButton>\r\n                  }\r\n                </MenuButtonSpacer>\r\n                {\r\n                  gameState !== GameStates.MAIN_MENU ?\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <CustomMenuButton\r\n                      onClick={ gotoMainMenu }>\r\n                        Main Menu\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                  :\r\n                    <MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ seeScoreboard }>\r\n                        Scoreboard\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                }\r\n                <MenuButtonSpacer padding={4}>\r\n                  <CustomMenuButton\r\n                  onClick={ showControls }>\r\n                    View Controls\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer padding={4}>\r\n                  <CustomMenuButton\r\n                  onClick={ showOptions }>\r\n                    Options\r\n                  </CustomMenuButton>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.CONTROLS ?\r\n            <>\r\n              <MenuTitle>Controls</MenuTitle>\r\n              <MenuButtonContainer width={ w }>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Jump: W</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Left: A</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Run Right: D</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Melee Weapon Bash: F</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Aim: Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Shoot: Left Mouse</CustomMenuButton>\r\n                </Inline>\r\n                <Inline>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Charge Grenade Throw: Hold G / Right Mouse</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Change Weapon: Space / Mouse Wheel</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Turn Turret: L/R Arrow (while placing)</CustomMenuButton>\r\n                  <CustomMenuButton hovercolor={'#222'} hoverborder={'#333'} cancelTransition={true} height={50} width={360}>Detonate remote mines: Numpad  1 - 9</CustomMenuButton>\r\n                </Inline>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n          {\r\n            pauseMenuState === pauseMenuStates.OPTIONS ?\r\n            <>\r\n              <MenuTitle>Options</MenuTitle>\r\n              <MenuButtonContainer>\r\n                <CornerBackButton marginTop={'-60px'} onClick={ showDefault } />\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      >Effect Filters?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='effects-filter'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ effectFilters ? 'white' : 'red' }\r\n                      onClick={ toggleFilters }>\r\n                        <span\r\n                        style={{ color: effectFilters ? 'white' : 'red' }}>\r\n                        { effectFilters ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='effects-filter'>\r\n                      <span >\r\n                        Adds filter effects like glow and motion blur to animations. Turning off could improve performance.\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n                <MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4}>\r\n                      <NoTransitionButton\r\n                      width={ 240 }\r\n                      >Display Zombie Health?</NoTransitionButton>\r\n                    </MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuButtonSpacer padding={4} data-tip data-for='display-zombie-health'>\r\n                      <CustomMenuButton\r\n                      width={ 100 }\r\n                      hoverborder={ displayZombieHealth ? 'white' : 'red' }\r\n                      onClick={ toggleZombieHealth }>\r\n                        <span\r\n                        style={{ color: displayZombieHealth ? 'white' : 'red' }}>\r\n                        { displayZombieHealth ? 'On' : 'Off' }\r\n                        </span>\r\n                      </CustomMenuButton>\r\n                    </MenuButtonSpacer>\r\n                    <ReactTooltip id='display-zombie-health'>\r\n                      <span >\r\n                        Displays a yellow text box above each enemy zombie\r\n                      </span>\r\n                    </ReactTooltip>\r\n                  </Inline>\r\n                </MenuButtonSpacer>\r\n              </MenuButtonContainer>\r\n            </>\r\n            : null\r\n          }\r\n        </Container>\r\n      : null\r\n    }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { CustomMenuButton, Inline } from './ShopMenu'\r\nimport { gameStateTransition, incrementWave } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nposition: absolute;\r\nmargin: auto;\r\ntop: 40px;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 140px;\r\nwidth: 100%;\r\nbackground-color: #333;\r\nopacity: .8;\r\n`\r\n\r\nexport default function ShopQuery () {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n\r\n  const nextWave = () => {\r\n    let screenUI = gameObjects.getKeyValue('screen-ui')\r\n    screenUI.unpause()\r\n    dispatch(incrementWave())\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.GAMEPLAY ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.WAITING ) )\r\n  }\r\n  \r\n  const gotoShop = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.SHOP_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n  \r\n  const gotoBuildMenu = () => {\r\n    dispatch( gameStateTransition( 'main', gameState, GameStates.BUILD_MENU ) )\r\n    dispatch( gameStateTransition( 'sub', gameSubState, SubStates.NEUTRAL ) )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoShop }>Shop</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <CustomMenuButton width={400} height={40} onClick={ gotoBuildMenu }>Build Barriers/Traps</CustomMenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n          <MenuButtonSpacer padding={2}>\r\n            <CustomMenuButton width={400} height={40} onClick={ nextWave }>Next Wave</CustomMenuButton>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { SubStates } from '../constants/GameStates'\r\nimport { addPurchase, decrementWave, gameStateTransition, setWaveCountToDefeat, subtractFromTotalCredits } from '../gameSlice'\r\nimport MenuComponents from './MenuComponents'\r\nimport { gotoMainMenu } from './PauseMenu'\r\nimport { CustomMenuButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n  \r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const lastGameSubState = useSelector(state => state.game.lastGameSubState)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n  const respawnCost = useSelector(state => state.game.respawnCost)\r\n  const respawnToShopCost = useSelector(state => state.game.respawnToShopCost)\r\n  const waveNum = useSelector(state => state.game.waveNum)\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        <MenuComponents.MenuTitle>\r\n          {\r\n            credits >= respawnToShopCost ? 'Respawn Menu'\r\n            : 'Game Over'\r\n          }\r\n        </MenuComponents.MenuTitle>\r\n        <MenuComponents.MenuButtonContainer>\r\n          {\r\n            credits >= respawnCost || lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={240}\r\n              onClick={() => {\r\n                screenUI.respawn()\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU && lastGameSubState !== SubStates.PLAYER_RESPAWN && lastGameSubState !== SubStates.WAVE_STARTED) {\r\n                  dispatch( gameStateTransition('sub', gameSubState, SubStates.WAITING) )\r\n                }\r\n                if (lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n                  dispatch( subtractFromTotalCredits(respawnCost) )\r\n                }\r\n                dispatch( addPurchase('Respawn', respawnCost) )\r\n              }}>\r\n                Respawn? { lastGameSubState === SubStates.SHOP_QUERY_SUBMENU ? '' : `$${respawnCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          {\r\n            credits >= respawnToShopCost && waveNum > 0 && lastGameSubState !== SubStates.SHOP_QUERY_SUBMENU ?\r\n            <MenuComponents.MenuButtonSpacer>\r\n              <CustomMenuButton\r\n              width={360}\r\n              onClick={() => {\r\n                const zombies = gameObjects.getKeyValue('zombies')\r\n                zombies.forEach(zombie => { zombie.removeZombieFromMatterWorld() })\r\n                zombies.forEach(zombie => { zombie.removeZombieFromZombiesArray() })\r\n                screenUI.respawn()\r\n                dispatch( decrementWave() )\r\n                dispatch( setWaveCountToDefeat(null) )\r\n                dispatch( gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU) )\r\n                dispatch( subtractFromTotalCredits(respawnToShopCost) )\r\n                dispatch( addPurchase('Shop Respawn', respawnToShopCost) )\r\n              }}>\r\n                Restart Current Wave from Shop? { `$${respawnToShopCost}` }\r\n              </CustomMenuButton>\r\n            </MenuComponents.MenuButtonSpacer>\r\n            : null\r\n          }\r\n          <MenuComponents.MenuButtonSpacer>\r\n            <CustomMenuButton\r\n            onClick={gotoMainMenu}>\r\n              Go to Main Menu\r\n            </CustomMenuButton>\r\n          </MenuComponents.MenuButtonSpacer>\r\n        </MenuComponents.MenuButtonContainer>\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\nimport { gameStateTransition, setSelectedBarrierToBuild, setSelectedTrapToBuild } from '../gameSlice'\r\nimport GameStates, { SubStates } from '../constants/GameStates'\r\nimport { barrierTypes, trapTypes } from '../constants/buildTypes'\r\nimport { CustomMenuButton, BackButton } from './ShopMenu'\r\n\r\nexport default () => {\r\n\r\n  const { gameObjects } = window\r\n  const dispatch = useDispatch()\r\n  const width = gameObjects.getKeyValue('game-width')\r\n  const height = gameObjects.getKeyValue('game-height')\r\n  const screenUI = gameObjects.getKeyValue('screen-ui')\r\n  const gameState = useSelector(state => state.game.gameState)\r\n  const gameSubState = useSelector(state => state.game.gameSubState)\r\n  const BuildMenuStates = {\r\n    MAIN: 'main',\r\n    BARRIERS: 'barriers',\r\n    TRAPS: 'traps'\r\n  }\r\n  const [buildMenuState, setBuildMenuState] = React.useState(BuildMenuStates.MAIN)\r\n  const barrierCosts = useSelector(state => state.game.barriers.costToBuild)\r\n  const trapCosts = useSelector(state => state.game.traps.costToBuild)\r\n  const credits = useSelector(state => state.game.player.credits)\r\n\r\n  const backToShopQuery = () => {\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.SHOP_QUERY_SUBMENU)\r\n    )\r\n  }\r\n\r\n  const showBarriersSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.BARRIERS\r\n    )\r\n  }\r\n\r\n  const showTrapsSubMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.TRAPS\r\n    )\r\n  }\r\n\r\n  const backToBuildMenu = () => {\r\n    setBuildMenuState(\r\n      BuildMenuStates.MAIN\r\n    )\r\n  }\r\n\r\n  const gotoPlacementMode = () => {\r\n    let screenUI = gameObjects.getKeyValue('screen-ui')\r\n    screenUI.unpause()\r\n    dispatch(\r\n      gameStateTransition('main', gameState, GameStates.GAMEPLAY)\r\n    )\r\n    dispatch(\r\n      gameStateTransition('sub', gameSubState, SubStates.BUILD_PLACEMENT_MODE)\r\n    )\r\n  }\r\n\r\n  const replaceCursorWithObjectToPlace = () => {\r\n    let crosshair = gameObjects.getKeyValue('crosshair')\r\n    crosshair.buildArrow(0xFFFFFF)\r\n  }\r\n  \r\n  const chooseBarrier = filteredType => {\r\n    if (credits >= barrierCosts[filteredType]) {\r\n      dispatch( setSelectedBarrierToBuild(filteredType) )\r\n      dispatch( setSelectedTrapToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n  \r\n  const chooseTrap = filteredType => {\r\n    if (credits >= trapCosts[filteredType]) {\r\n      dispatch( setSelectedTrapToBuild(filteredType) )\r\n      dispatch( setSelectedBarrierToBuild(null) )\r\n      replaceCursorWithObjectToPlace()\r\n      setTimeout(() => { gotoPlacementMode() }, 50)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuComponents.Container width={width * .75} height={height * .75}>\r\n        <MenuComponents.Backing width={width * .75} height={height * .75}></MenuComponents.Backing>\r\n        {\r\n          buildMenuState === BuildMenuStates.TRAPS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Traps</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(trapTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ trapTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseTrap( trapTypes[type] ) }>\r\n                          { trapTypes[type] } <span style={{\r\n                            color: credits >= trapCosts[trapTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ trapCosts[trapTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.BARRIERS ?\r\n          <>\r\n            <MenuComponents.MenuTitle>Build Barriers</MenuComponents.MenuTitle>\r\n            <MenuComponents.MenuButtonContainer>\r\n              <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 1 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                {\r\n                  Object.keys(barrierTypes).filter((trap, i) => i % 2 == 0 ).map((type, i) => (\r\n                    <Inline key={i}>\r\n                      <MenuComponents.MenuButtonSpacer>\r\n                        <CustomMenuButton\r\n                        width={ barrierTypes[type].length > 14 ? 300 : 200 }\r\n                        onClick={ () => chooseBarrier( barrierTypes[type] ) }>\r\n                          { barrierTypes[type] } <span style={{\r\n                            color: credits >= barrierCosts[barrierTypes[type]] ? '#ffffff' : '#ff0000'\r\n                          }}>${ barrierCosts[barrierTypes[type]] }</span>\r\n                        </CustomMenuButton>\r\n                      </MenuComponents.MenuButtonSpacer>\r\n                    </Inline>\r\n                  ))\r\n                }\r\n                <MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToBuildMenu }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n\r\n              </MenuComponents.MenuButtonSpacer>\r\n            </MenuComponents.MenuButtonContainer>\r\n          </>\r\n          : null\r\n        }\r\n        {\r\n          buildMenuState === BuildMenuStates.MAIN ?\r\n            <>\r\n              <MenuComponents.MenuTitle>Build Menu</MenuComponents.MenuTitle>\r\n              <MenuComponents.MenuButtonContainer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showBarriersSubMenu }>\r\n                        Barriers\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                  <Inline>\r\n                    <MenuComponents.MenuButtonSpacer>\r\n                      <CustomMenuButton\r\n                      onClick={ showTrapsSubMenu }>\r\n                        Traps\r\n                      </CustomMenuButton>\r\n                    </MenuComponents.MenuButtonSpacer>\r\n                  </Inline>\r\n                </MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer padding={20}></MenuComponents.MenuButtonSpacer>\r\n                <MenuComponents.MenuButtonSpacer>\r\n                  <BackButton\r\n                  onClick={ backToShopQuery }>\r\n                    Back\r\n                  </BackButton>\r\n                </MenuComponents.MenuButtonSpacer>\r\n              </MenuComponents.MenuButtonContainer>\r\n            </>\r\n          : null\r\n        }\r\n      </MenuComponents.Container>\r\n    </>\r\n  )\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MenuComponents from './MenuComponents'\r\nimport { Inline } from './ShopMenu'\r\n\r\nconst { MenuButton, MenuButtonContainer, MenuButtonSpacer } = MenuComponents\r\n\r\nconst BottomBanner = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nposition: absolute;\r\nbottom: 0;\r\n`\r\n\r\nconst Back = styled.div`\r\nheight: 120px;\r\nwidth: 100%;\r\nbackground-color: #333;\r\nopacity: .8;\r\n`\r\n\r\nexport default () => {\r\n\r\n  return (\r\n    <>\r\n      <BottomBanner className='shop-query-menu'>\r\n        <Back />\r\n        <MenuButtonContainer space-top={2}>\r\n          <MenuButtonSpacer>\r\n            <Inline>\r\n              <MenuButtonSpacer padding={4}>\r\n                <MenuButton bgcolor={'#555'} width={500} height={40}>Done Placing Barriers/Traps: Press [ B ]</MenuButton>\r\n              </MenuButtonSpacer>\r\n            </Inline>\r\n          </MenuButtonSpacer>\r\n        </MenuButtonContainer>\r\n      </BottomBanner>\r\n    </>\r\n  )\r\n\r\n}","// React\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport buildGame from './buildGame'\r\nimport GameStates, { SubStates } from './constants/GameStates'\r\nimport { startWave, waveDefeated } from './waves/waveManager'\r\nimport { updateWeaponsUI } from './ui/WeaponsUI'\r\nimport { createGenericMessage } from './createMessages'\r\nimport { gameStateTransition, setWeaponEquipped } from './gameSlice'\r\nimport PauseMenu, { gotoMainMenu } from './ReactComponents/PauseMenu'\r\nimport ShopMenu, { BackButton, CornerBackButton, CustomMenuButton, Inline } from './ReactComponents/ShopMenu'\r\nimport ShopQuery from './ReactComponents/ShopQuery'\r\nimport RespawnMenu from './ReactComponents/RespawnMenu'\r\nimport BuildMenu from './ReactComponents/BuildMenu'\r\nimport DoneBarrierPlacementBanner from './ReactComponents/DoneBarrierPlacementBanner'\r\nimport MenuComponents from './ReactComponents/MenuComponents'\r\nimport { NoTransitionButton } from './ReactComponents/PauseMenu'\r\nimport Axios from 'axios'\r\n\r\nconst useScores = (initial) => {\r\n\r\n  const [scores, setScores] = React.useState(initial)\r\n\r\n  return [\r\n    scores,\r\n    setScores\r\n  ]\r\n\r\n}\r\n\r\nexport const ScoresView = (scores) => {\r\n\r\n  return (\r\n    <MenuComponents.Container>\r\n      <MenuComponents.MenuTitle>Scoreboard</MenuComponents.MenuTitle>\r\n      <MenuComponents.MenuButtonContainer>\r\n        {\r\n          scores && scores.scores && scores.scores.map(score => (\r\n            <>\r\n              <NoTransitionButton>\r\n                <Inline>\r\n                  <div>{ score.name }</div>\r\n                </Inline>\r\n                <Inline>\r\n                  <div>{ score.score }</div>\r\n                </Inline>\r\n              </NoTransitionButton>            \r\n            </>\r\n          ))\r\n        }\r\n        <CornerBackButton\r\n        onClick={ gotoMainMenu } />\r\n      </MenuComponents.MenuButtonContainer>\r\n    </MenuComponents.Container>\r\n  )\r\n\r\n }\r\n\r\nexport default function Game () {\r\n\r\n\tconst { gameObjects, TweenLite: { delayedCall } } = window\r\n\tconst dispatch = useDispatch()\r\n\tconst game = useSelector(state => state.game)\r\n  const weaponEquipped = useSelector(state => state.game.player.weapons.equipped)\r\n  const waitInterval = React.useRef(null)\r\n  const cancelWaveStart = React.useRef(false)\r\n  const [scores, setScores] = useScores([])\r\n  // const [scores, setScores] = useState([])\r\n\r\n\t// one-time methods and non-react code will go here\r\n\tReact.useEffect(() => {\r\n\r\n\t\tbuildGame()\r\n\r\n\t}, []) // do once\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\t// on weapon toggle change..\r\n\t\tupdateWeaponsUI()\r\n\r\n\t}, [weaponEquipped])\r\n\r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_STARTED) {\r\n\t\t\tconsole.log('wave starting..')\r\n      startWave()\r\n\t\t}\r\n\r\n\t\tif (game.gameSubState === SubStates.WAVE_DEFEATED) {\r\n\t\t\tconsole.log('wave defeated')\r\n\t\t\twaveDefeated()\r\n    }\r\n    \r\n    if (game.gameSubState === SubStates.WAITING) {\r\n      let delay = 4, countdown = 3\r\n      cancelWaveStart.current = false\r\n      waitInterval.current = setInterval(() => {\r\n        createGenericMessage(`${countdown}`, '#FFFFFF', .25, .5)\r\n        countdown -= 1\r\n      }, 1000)\r\n      delayedCall(delay, () => {\r\n        if (!cancelWaveStart.current) {\r\n          clearInterval(waitInterval.current)\r\n          dispatch(gameStateTransition('sub', game.gameSubState, SubStates.WAVE_STARTED))\r\n        }\r\n      })\r\n    }\r\n\r\n    if (game.gameSubState === SubStates.PLAYER_DEATH) {\r\n      clearInterval(waitInterval.current)\r\n      cancelWaveStart.current = true\r\n\t\t\tcreateGenericMessage('You died.', '#FF0000', .75, 3)\r\n    }\r\n    \r\n  }, [game.gameSubState, delayedCall, dispatch])\r\n  \r\n\tReact.useEffect(() => {\r\n\r\n\t\tif (game.waveCountToDefeat === 0 && game.gameSubState !== SubStates.SHOP_QUERY_SUBMENU) {\r\n\t\t\twaveDefeated()\r\n\t\t}\r\n\r\n\t}, [game.waveCountToDefeat, game.lastGameSubState, game.gameSubState, dispatch])\r\n\t\r\n\tReact.useEffect(() => {\r\n\r\n    console.log('Game state has changed')\r\n\r\n    if (game.gameState === GameStates.SHOP_MENU || game.gameState === GameStates.BUILD_MENU) {\r\n      let screenUI = gameObjects.getKeyValue('screen-ui')\r\n      screenUI.pause()\r\n    }\r\n    \r\n    if (game.gameState === GameStates.MAIN_MENU || game.gameState === GameStates.GAMEPLAY) {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'none'\r\n    } else {\r\n      document.getElementsByClassName('App')[0].style.pointerEvents = 'all'\r\n    }\r\n\r\n\t\tif (game.gameState === GameStates.GAMEPLAY) {\r\n\t\t\tif (game.player.weapons.equipped === null) {\r\n\t\t\t\tdispatch(setWeaponEquipped('pistol weapon'))\r\n\t\t\t}\r\n    }\r\n\r\n  }, [game.gameState, game.player.weapons.equipped, gameObjects, dispatch])\r\n\r\n  React.useEffect(() => {\r\n    if (game.purchases !== null && game.lastPurchase && game.lastPurchase.item !== null && game.lastPurchase.amount > 0) {\r\n      let snd = window.gameObjects.getKeyValue('purchase-sound')\r\n      snd.play()\r\n      let confirm = window.gameObjects.getKeyValue('confirm-sound')\r\n      confirm.play()\r\n      toast.dark(`You bought ${game.lastPurchase.item} for $${game.lastPurchase.amount}`, {\r\n        // position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      })\r\n    }\r\n    console.log(game.lastPurchase)\r\n  }, [game.purchases, game.lastPurchase])\r\n\r\n  React.useEffect(() => {\r\n\r\n    let isErr\r\n    if (game.gameState === GameStates.SCORES_VIEW) {\r\n      Axios.get('http://localhost:8080/scores')\r\n      .catch(err => {\r\n        console.log(err)\r\n        isErr = true\r\n      })\r\n      .then(scores => {\r\n        if (isErr) {\r\n          console.log('api is on a different port, use yarn build to view working scores')\r\n        } else {\r\n          setScores( scores.data )\r\n        }\r\n      })\r\n    }\r\n\r\n  }, [ game.gameState ])\r\n\r\n\treturn (\r\n\t\t<>\r\n      <ToastContainer />\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SCORES_VIEW ?\r\n          <ScoresView scores={ scores } />\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.MAIN_MENU && window.gameObjects ?\r\n          <>\r\n            <PauseMenu\r\n            margintop={ true }\r\n            hidetitle={ true }\r\n            hidebg={ false }\r\n            bgcolor={ '#222' }\r\n            playbtn={ true }\r\n            />\r\n          </>\r\n          : null\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.BUILD_PLACEMENT_MODE && game.gameState === GameStates.GAMEPLAY\r\n          ?\r\n            <>\r\n              <DoneBarrierPlacementBanner />\r\n            </>\r\n          : null \r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          gameObjects && game.gameState === GameStates.PAUSE\r\n          ? <PauseMenu shop-query-visibility={ game.gameSubState === SubStates.SHOP_QUERY_SUBMENU } />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.SHOP_MENU\r\n          ? <ShopMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameState === GameStates.BUILD_MENU\r\n          ? <BuildMenu />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.SHOP_QUERY_SUBMENU\r\n          ? <ShopQuery />\r\n          : <></>\r\n        }\r\n      </>\r\n      <>\r\n        {\r\n          game.gameSubState === SubStates.PLAYER_DEATH\r\n          ? <RespawnMenu />\r\n          : null\r\n        }\r\n      </>\r\n      \r\n      <>\r\n        {\r\n          /* Wave count and zombies to defeat */\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU && game.gameState !== GameStates.SCORES_VIEW ?\r\n          <div\r\n          style={{\r\n            backgroundColor: '#333',\r\n            position: 'absolute',\r\n            margin: 'auto',\r\n            width: '50%',\r\n            height: '30px',\r\n            lineHeight: '30px',\r\n            top: '4px',\r\n            left: 0, right: 0,\r\n            textAlign: 'center',\r\n            borderRadius: '2px'\r\n          }}>\r\n            <div style={{ display: 'inline-block' }} className='debug-ui'>\r\n              wave no: {game.waveNum}\r\n            </div>\r\n            <div style={{ marginLeft: '100px', display: 'inline-block' }} className='debug-ui'>\r\n              enemies to defeat: {game.waveCountToDefeat}\r\n            </div>\r\n          </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU ?\r\n            <div className='total-ammo-count-ui'>\r\n              {\r\n                game.player.weapons.totalAmmo[\r\n                  game.player.weapons.equipped\r\n                ]\r\n              }\r\n            </div>\r\n          : null\r\n        }\r\n        {\r\n          game.gameState !== GameStates.MAIN_MENU ?\r\n          <div className='total-credits-ui'>\r\n            credits: <span style={{ color: '#71DD4D' }}>${ game.player.credits }</span>\r\n          </div>\r\n          : null\r\n        }\r\n      </>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n","import React from 'react';\r\nimport Game from './features/game/Game'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n\t\t\t\t<Game />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}